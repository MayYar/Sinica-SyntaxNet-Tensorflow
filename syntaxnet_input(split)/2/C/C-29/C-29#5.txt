Input: 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba , the Toyohashi University of Technology and the National Institute of Advanced Industrial Science and Technology .
Parse:
constructed VBN ROOT
 +-- Testbed NNP nsubjpass
 |   +-- 4.1 CD num
 |   +-- Grid NNP nn
 |   +-- testbed VBN rcmod
 |       +-- grid NN nsubj
 |           +-- The DT det
 +-- was VBD auxpass
 +-- by IN prep
 |   +-- computing VBG pcomp
 |       +-- resources NNS dobj
 |       +-- at IN prep
 |           +-- University NNP pobj
 |               +-- the DT det
 |               +-- of IN prep
 |               |   +-- Tsukuba NNP pobj
 |               +-- , , punct
 |               +-- University NNP conj
 |               |   +-- the DT det
 |               |   +-- Toyohashi NNP nn
 |               |   +-- of IN prep
 |               |       +-- Technology NNP pobj
 |               +-- and CC cc
 |               +-- Institute NNP conj
 |                   +-- the DT det
 |                   +-- National NNP nn
 |                   +-- of IN prep
 |                       +-- Science NNP pobj
 |                           +-- Advanced NNP nn
 |                           +-- Industrial NNP nn
 |                           +-- and CC cc
 |                           +-- Technology NNP conj
 +-- . . punct
Input: Table 1 shows the computing resources used for the grid of the present study .
Parse:
shows VBZ ROOT
 +-- Table JJ nsubj
 |   +-- 1 CD num
 +-- resources NNS dobj
 |   +-- the DT det
 |   +-- computing NN nn
 |   +-- used VBN partmod
 |       +-- for IN prep
 |           +-- grid NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- study NN pobj
 |                       +-- the DT det
 |                       +-- present JJ amod
 +-- . . punct
Input: The University of Tsukuba and AIST are connected by a 1 Gbps Tsukuba WAN , and the other PC clusters are connected by SINET , which is wide area network dedicated to academic research in Japan .
Parse:
connected VBN ROOT
 +-- University NNP nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- Tsukuba NNP pobj
 |           +-- and CC cc
 |           +-- AIST NNP conj
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- WAN NNP pobj
 |       +-- a DT det
 |       +-- Gbps NN nn
 |       |   +-- 1 CD num
 |       +-- Tsukuba NNP nn
 +-- , , punct
 +-- and CC cc
 +-- connected VBN conj
 |   +-- clusters NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- other JJ amod
 |   |   +-- PC NN nn
 |   +-- are VBP auxpass
 |   +-- by IN prep
 |       +-- SINET NNP pobj
 |           +-- , , punct
 |           +-- network NN rcmod
 |               +-- which WDT nsubj
 |               +-- is VBZ cop
 |               +-- wide JJ amod
 |               +-- area NN nn
 |               +-- dedicated VBN partmod
 |                   +-- to IN prep
 |                       +-- research NN pobj
 |                           +-- academic JJ amod
 |                           +-- in IN prep
 |                               +-- Japan NNP pobj
 +-- . . punct
Input: Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed .
Parse:
shows VBZ ROOT
 +-- Table JJ nsubj
 |   +-- 2 CD num
 +-- performance NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- network NN pobj
 |   |       +-- the DT det
 |   |       +-- measured VBN amod
 |   +-- between IN prep
 |       +-- node NN pobj
 |           +-- the DT det
 |           +-- master NN nn
 |           +-- of IN prep
 |           |   +-- cluster NN pobj
 |           |       +-- the DT det
 |           |       +-- Dennis NNP nn
 |           +-- and CC cc
 |           +-- node NN conj
 |               +-- the DT det
 |               +-- master NN nn
 |               +-- of IN prep
 |                   +-- cluster NN pobj
 |                       +-- each DT det
 |                       +-- PC NN nn
 |                       +-- in IN prep
 |                           +-- testbed VBN pobj
 |                               +-- the DT det
 |                               +-- grid NN nn
 +-- . . punct
Input: The communication throughput was measured using netperf , and the round trip time was measured by ping .
Parse:
measured VBN ROOT
 +-- throughput NN nsubjpass
 |   +-- The DT det
 |   +-- communication NN nn
 +-- was VBD auxpass
 +-- using VBG xcomp
 |   +-- netperf NN dobj
 +-- , , punct
 +-- and CC cc
 +-- measured VBN conj
 |   +-- time NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- round JJ amod
 |   |   +-- trip NN nn
 |   +-- was VBD auxpass
 |   +-- by IN prep
 |       +-- ping VBG pobj
 +-- . . punct
Input: 4.2 Performance of CONFLEX G In all of the CONFLEX G experiments , the client program was executed on the master node of the Dennis cluster at the University of Tsukuba .
Parse:
executed VBN ROOT
 +-- Performance NN nsubjpass
 |   +-- 4.2 CD num
 |   +-- of IN prep
 |       +-- G NNP pobj
 |           +-- CONFLEX NNP nn
 +-- In IN prep
 |   +-- all DT pobj
 |       +-- of IN prep
 |           +-- experiments NNS pobj
 |               +-- the DT det
 |               +-- G NNP nn
 |                   +-- CONFLEX NNP nn
 +-- , , punct
 +-- program NN nsubjpass
 |   +-- the DT det
 |   +-- client NN nn
 +-- was VBD auxpass
 +-- on IN prep
 |   +-- node NN pobj
 |       +-- the DT det
 |       +-- master NN nn
 |       +-- of IN prep
 |           +-- cluster NN pobj
 |               +-- the DT det
 |               +-- Dennis NNP nn
 |               +-- at IN prep
 |                   +-- University NNP pobj
 |                       +-- the DT det
 |                       +-- of IN prep
 |                           +-- Tsukuba NNP pobj
 +-- . . punct
Input: The built in Round Robin scheduler of OmniRPC was used as a job scheduler .
Parse:
used VBN ROOT
 +-- scheduler NN nsubjpass
 |   +-- The DT det
 |   +-- built VBN amod
 |   |   +-- in IN prep
 |   |       +-- Round NNP pobj
 |   +-- Robin NNP nn
 |   +-- of IN prep
 |       +-- OmniRPC NNP pobj
 +-- was VBD auxpass
 +-- as IN prep
 |   +-- scheduler NN pobj
 |       +-- a DT det
 |       +-- job NN nn
 +-- . . punct
Input: SSH was used for an authentication system , the OminRPC '' s MXIO , which relays the I O communication between client program and worker programs by port forwarding of SSH was , not used .
Parse:
used VBN ROOT
 +-- SSH NNP nsubjpass
 +-- was VBD auxpass
 +-- used VBN advcl
 |   +-- for IN mark
 |   +-- system NN nsubjpass
 |   |   +-- an DT det
 |   |   +-- authentication NN nn
 |   |   +-- , , punct
 |   |   +-- MXIO NNP appos
 |   |   |   +-- OminRPC NNP poss
 |   |   |       +-- the DT det
 |   |   |       +-- '' '' punct
 |   |   |       +-- s POS possessive
 |   |   +-- relays VBZ rcmod
 |   |       +-- which WDT nsubj
 |   |       +-- communication NN dobj
 |   |       |   +-- the DT det
 |   |       |   +-- O VBP nn
 |   |       |   |   +-- I PRP nsubj
 |   |       |   +-- between IN prep
 |   |       |       +-- program NN pobj
 |   |       |           +-- client NN nn
 |   |       |           +-- and CC cc
 |   |       |           +-- programs NNS conj
 |   |       |               +-- worker NN nn
 |   |       +-- by IN prep
 |   |           +-- forwarding NN pobj
 |   |               +-- port NN nn
 |   |               +-- of IN prep
 |   |                   +-- SSH NNP pobj
 |   +-- was VBD auxpass
 |   +-- , , punct
 |   +-- not RB neg
 +-- . . punct
Input: Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster .
Parse:
Note VB ROOT
 +-- assigned VBN ccomp
 |   +-- that IN mark
 |   +-- program NN nsubjpass
 |   |   +-- one CD num
 |   |   +-- worker NN nn
 |   +-- is VBZ auxpass
 |   +-- and CC cc
 |   +-- performed VBN conj
 |       +-- on IN prep
 |       |   +-- CPU NN pobj
 |       |       +-- one CD num
 |       |       +-- of IN prep
 |       |           +-- node NN pobj
 |       |               +-- the DT det
 |       |               +-- calculation NN nn
 |       +-- in IN prep
 |           +-- cluster NN pobj
 |               +-- a DT det
 |               +-- PC NN nn
 +-- . . punct
Input: That is , the number of workers is equal to the number of CPUs .
Parse:
equal JJ ROOT
 +-- That DT nsubj
 +-- is VBZ cop
 +-- , , punct
 +-- number NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- workers NNS pobj
 +-- to IN prep
 |   +-- number NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- CPUs NNS pobj
 +-- . . punct
Input: These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95 .
Parse:
compiled VBN ROOT
 +-- programs NNS nsubjpass
 |   +-- These DT det
 +-- were VBD auxpass
 +-- by IN prep
 |   +-- 7.0 CD pobj
 |       +-- the DT det
 |       +-- Intel NNP nn
 |       +-- Fortran NNP nn
 |       +-- Compiler NNP nn
 |       +-- and CC cc
 |       +-- 2.95 CD conj
 |           +-- gcc NN nn
 +-- . . punct
Input: MPICH , Version 1.2.5 , was used to compare the performance between CONFLEX MPI and CONFLEX G .
Parse:
used VBN ROOT
 +-- MPICH NNP nsubjpass
 |   +-- , , punct
 |   +-- Version NNP appos
 |       +-- 1.2.5 CD num
 +-- was VBD auxpass
 +-- compare VB xcomp
 |   +-- to TO aux
 |   +-- performance NN dobj
 |       +-- the DT det
 |       +-- between IN prep
 |           +-- MPI NNP pobj
 |               +-- CONFLEX NNP nn
 |               +-- and CC cc
 |               +-- G NNP conj
 |                   +-- CONFLEX NNP nn
 +-- . . punct
Input: In order to demonstrate the usability of the OmniRPC facility of the AIM , we implemented another version of CONFLEX G which did not utilize the OmniRPC facility .
Parse:
implemented VBD ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- demonstrate VB infmod
 |           +-- to TO aux
 |           +-- usability NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- facility NN pobj
 |                       +-- the DT det
 |                       +-- OmniRPC NNP nn
 |                       +-- of IN prep
 |                           +-- AIM NNP pobj
 |                               +-- the DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- version NN dobj
 |   +-- another DT det
 |   +-- of IN prep
 |   |   +-- G NNP pobj
 |   |       +-- CONFLEX NNP nn
 |   +-- utilize VB rcmod
 |       +-- which WDT nsubj
 |       +-- did VBD aux
 |       +-- not RB neg
 |       +-- facility NN dobj
 |           +-- the DT det
 |           +-- OmniRPC NNP nn
 +-- . . punct
Input: The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set .
Parse:
initialized VBN ROOT
 +-- program NN nsubjpass
 |   +-- The DT det
 |   +-- worker NN nn
 |   +-- in IN prep
 |       +-- version NN pobj
 |           +-- this DT det
 |           +-- of IN prep
 |               +-- CONFLEXG NNP pobj
 +-- must MD aux
 +-- be VB auxpass
 +-- at IN prep
 |   +-- RPC NN pobj
 |       +-- each DT det
 +-- hold VB advcl
 |   +-- because IN mark
 |   +-- worker NN nsubj
 |   |   +-- the DT det
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- data NNS dobj
 |       +-- the DT det
 |       +-- previous JJ amod
 |       +-- set VBN partmod
 +-- . . punct
Input: In order to examine the performance of CONFLEX G , we selected two peptides and two small protein as test molecules
Parse:
selected VBD ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- examine VB infmod
 |           +-- to TO aux
 |           +-- performance NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- G NNP pobj
 |                       +-- CONFLEX NNP nn
 +-- , , punct
 +-- we PRP nsubj
 +-- peptides NNS dobj
 |   +-- two CD num
 |   +-- and CC cc
 |   +-- protein NN conj
 |       +-- two CD num
 |       +-- small JJ amod
 +-- as IN prep
     +-- molecules NNS pobj
         +-- test NN nn
Input: The column trial structure loops in this table shows the Figure 7
Parse:
shows VBZ ROOT
 +-- loops NNS nsubj
 |   +-- The DT det
 |   +-- structure NN nn
 |   |   +-- column NN nn
 |   |   +-- trial NN nn
 |   +-- in IN prep
 |       +-- table NN pobj
 |           +-- this DT det
 +-- Figure NN dobj
     +-- the DT det
     +-- 7 CD num
Input: Figure 8
Parse:
Figure NN ROOT
 +-- 8 CD num
Input: Figure 9
Parse:
Figure NN ROOT
 +-- 9 CD num
Input: 159 Table 3
Parse:
Table JJ ROOT
 +-- 159 CD num
 +-- 3 CD num
Input: Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures loop initialize a worker trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4
Parse:
initialize VBP ROOT
 +-- # NN nsubj
 |   +-- Molecular JJ amod
 |   +-- of IN prep
 |       +-- loop VBP pobj
 |           +-- # $ nn
 |               +-- of IN prep
 |                   +-- transfer NN pobj
 |                       +-- total JJ amod
 |                       +-- structure NN nn
 |                       |   +-- trial NN nn
 |                       +-- Data NNP nn
 |                       +-- to IN prep
 |                           +-- structures NNS pobj
 |                               +-- transfer NN nn
 |                               |   +-- Data NNP nn
 |                               +-- atoms NNS nn
 |                                   +-- code NN nn
 +-- structure NN dobj
     +-- a DT det
     +-- trial NN nn
     |   +-- worker NN nn
     +-- AlaX04 NNP dep
         +-- 4 CD num
             +-- 45 CD number
             |   +-- 181 CD number
             |   +-- 360 CD number
             +-- 2033KB CD number
             +-- 17.00KB CD number
             +-- AlaX16 NNP dep
             +-- 160 CD number
             |   +-- 191 CD number
             |   +-- 480 CD number
             +-- 2063KB CD number
             +-- 18.14KB CD number
             +-- 1L2Y CD number
             +-- 331 CD number
             |   +-- 315 CD number
             |   +-- 331 CD number
             +-- 2099KB CD number
             +-- 29.58KB CD number
             +-- 1BL1 CD number
             +-- 519 CD num
             |   +-- 519 CD number
             +-- 2150KB CD num
             +-- 48.67KB CD num
             +-- Table JJ amod
Input: Total Total Optimization Cluster # of Structures optimization time Elapsed Speed -LRB- # of workers -RRB- workers worker time -LRB- s -RRB- structure -LRB- s -RRB- time -LRB- s -RRB- up Dennis -LRB- sequential -RRB- 1 320.0 1786.21 4.96 1786.21 1.00 Toyo -LRB- 16 -RRB- 16 20.0 1497.08 4.16 196.32 9.10 Dennis -LRB- 28 -RRB- 28 11.4 1905.51 5.29 97.00 18.41 Alice -LRB- 36 -RRB- 36 8.9 2055.25 5.71 87.09 20.51 Ume -LRB- 56 -RRB- 56 5.7 2196.77 6.10 120.69 14.80 Dennis -LRB- 28 -RRB- + Toyo -LRB- 16 -RRB- 44 7.3 1630.09 4.53 162.35 11.00 Alice -LRB- 36 -RRB- + Toyo -LRB- 16 -RRB- 52 6.2 1774.53 4.93 178.24 10.02 Dennis -LRB- 28 -RRB- + Alice -LRB- 36 -RRB- 64 5.0 1999.02 5.55 81.52 21.91 Dennis -LRB- 28 -RRB- + Ume -LRB- 56 -RRB- 84 3.8 2085.84 5.79 92.22 19.37 Alice -LRB- 36 -RRB- + Ume -LRB- 56 -RRB- 92 3.5 2120.87 5.89 101.25 17.64 Table 5
Parse:
Speed NNP ROOT
 +-- # NN nn
 |   +-- Total JJ amod
 |   +-- Cluster NNP nn
 |   |   +-- Optimization NNP nn
 |   +-- of IN prep
 |       +-- time NN pobj
 |           +-- Structures NNPS nn
 |           +-- optimization NN nn
 +-- Elapsed NNP nn
 +-- -LRB- -LRB- punct
 +-- # NN dep
 |   +-- of IN prep
 |       +-- workers NNS pobj
 +-- -RRB- -RRB- punct
 +-- time NN dep
 +-- structure NN dep
 |   +-- -LRB- -LRB- punct
 |   +-- s VBZ cop
 |   +-- -RRB- -RRB- punct
 |   +-- s NNS dep
 +-- s VB dep
 +-- up IN dep
 +-- Dennis NNP dep
 |   +-- 21.91 CD num
 |   +-- 28 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- 1 CD dep
 +-- 320.0 CD dep
 +-- 1786.21 CD dep
 +-- 4.96 CD dep
 +-- 1.00 CD dep
 +-- Toyo NNP dep
 +-- 16 CD dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- 20.0 CD dep
 +-- 1497.08 CD dep
 +-- 4.16 CD dep
 +-- 196.32 CD dep
 +-- 9.10 CD dep
 +-- 28 CD dep
 +-- 11.4 CD dep
 +-- 1905.51 CD dep
 +-- 97.00 CD dep
 |   +-- 5.29 CD num
 +-- 18.41 CD dep
 +-- Alice NNP dep
 |   +-- 36 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- 36 CD dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- 8.9 CD dep
 +-- 2055.25 CD dep
 +-- 5.71 CD dep
 +-- 87.09 CD dep
 +-- 20.51 CD dep
 +-- Ume NNP dep
 |   +-- 56 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- 56 CD dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- 5.7 CD dep
 +-- 2196.77 CD dep
 +-- 120.69 CD dep
 |   +-- 6.10 CD num
 +-- 14.80 CD dep
 +-- + SYM dep
 +-- 44 CD dep
 +-- 7.3 CD dep
 +-- 1630.09 CD dep
 +-- 4.53 CD dep
 +-- 162.35 CD dep
 +-- 11.00 CD dep
 +-- 52 CD dep
 +-- 6.2 CD dep
 +-- 1774.53 CD dep
 +-- 178.24 CD dep
 |   +-- 4.93 CD num
 +-- 10.02 CD dep
 +-- Alice NN dep
 +-- 64 CD dep
 +-- 5.0 CD dep
 +-- 1999.02 CD dep
 +-- 5.55 CD dep
 +-- 81.52 CD dep
 +-- 84 CD dep
 +-- 3.8 CD dep
 +-- 2085.84 CD dep
 +-- 92.22 CD dep
 |   +-- 5.79 CD num
 +-- 19.37 CD dep
 +-- 2120.87 CD dep
     +-- 92 CD number
     +-- 3.5 CD number
     +-- 5.89 CD prep
         +-- 17.64 CD dep
             +-- 101.25 CD number
             +-- Table NNP ROOT
                 +-- 5 CD num
Input: Cluster Total # of Structures Optimization time Elapsed Elapsed Speed -LRB- # of workers -RRB- workers worker structure -LRB- s -RRB- time -LRB- s -RRB- time up Toyo MPI -LRB- 1 -RRB- 1 331.0 867 286 , 967 79.71 1.00 Toyo MPI -LRB- 16 -RRB- 16 20.7 867 18 , 696 5.19 15.34 Dennis -LRB- 28 -RRB- 28 11.8 803 14 , 101 3.91 20.35 Dennis -LRB- 28 -RRB- + Ume -LRB- 56 -RRB- 84 3.9 1 , 064 8 , 316 2.31 34.50 Table 7
Parse:
Cluster NNP ROOT
 +-- # NN dobj
 |   +-- Total JJ amod
 |   +-- of IN prep
 |       +-- structure NN pobj
 |           +-- Speed NNP nn
 |           |   +-- time NN nn
 |           |   |   +-- Structures NNPS nn
 |           |   |   +-- Optimization NN amod
 |           |   +-- Elapsed NNP nn
 |           |   +-- Elapsed VBD nn
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- # NN dep
 |           |   |   +-- of IN prep
 |           |   |       +-- workers NNS pobj
 |           |   +-- -RRB- -RRB- punct
 |           +-- worker NN nn
 |               +-- workers NNS nn
 +-- time NN dep
     +-- -LRB- -LRB- punct
     +-- s VBZ cop
     +-- -RRB- -RRB- punct
     +-- time NN dep
     |   +-- -LRB- -LRB- punct
     |   +-- s VBZ dep
     |   +-- -RRB- -RRB- punct
     |   +-- up RP dep
     +-- MPI NNP dep
         +-- Toyo NNP nn
         +-- 331.0 CD dep
             +-- -LRB- -LRB- punct
             +-- 1 CD num
             +-- -RRB- -RRB- punct
             +-- 1 CD number
             +-- 867 CD dep
             +-- 286 CD dep
             +-- , , punct
             +-- 967 CD dep
                 +-- 79.71 CD dobj
                     +-- MPI NNP dep
                         +-- 1.00 CD num
                         +-- Toyo NNP nn
                         +-- 16 CD appos
                         |   +-- -LRB- -LRB- punct
                         |   +-- -RRB- -RRB- punct
                         +-- 867 CD dep
                             +-- 20.7 CD num
                             |   +-- 16 CD number
                             +-- 18 CD num
                             +-- , , punct
                             +-- Dennis NNP appos
                             |   +-- 3.91 CD num
                             |   |   +-- 101 CD number
                             |   +-- 20.35 CD num
                             |   +-- 28 CD appos
                             |   |   +-- -LRB- -LRB- punct
                             |   |   +-- -RRB- -RRB- punct
                             |   +-- + SYM cc
                             |   +-- 3.9 CD conj
                             |       +-- Ume NNP nn
                             |       +-- -LRB- -LRB- punct
                             |       +-- 56 CD number
                             |       +-- -RRB- -RRB- punct
                             |       +-- 84 CD number
                             |       +-- 1 CD num
                             |       +-- , , punct
                             |       +-- 8 CD num
                             |       |   +-- 064 CD number
                             |       +-- 34.50 CD appos
                             |           +-- 2.31 CD num
                             |           |   +-- 316 CD number
                             |           +-- Table NNP ROOT
                             |               +-- 7 CD num
                             +-- 803 CD dep
                                 +-- 11.8 CD num
                                 |   +-- 28 CD number
                                 +-- 14 CD dep
Input: Cluster Total # of Structures Optimization time Elapsed Elapsed Speed -LRB- # of workers -RRB- workers worker structure -LRB- s -RRB- time -LRB- s -RRB- time up Toyo MPI -LRB- 1 -RRB- 1 519.0 3 , 646 1892 , 210 525.61 1.00 Toyo MPI -LRB- 16 -RRB- 16 32.4 3 , 646 120 , 028 33.34 15.76 Dennis -LRB- 28 -RRB- 28 18.5 3 , 154 61 , 803 17.16 30.61 Dennis -LRB- 28 -RRB- + Ume -LRB- 56 -RRB- 84 6.1 4 , 497 33 , 502 9.30 56.48 160 number of trial structures generated in each iteration , indicating the degree of parallelism .
Parse:
Cluster NNP ROOT
 +-- # NN dobj
 |   +-- Total JJ amod
 |   +-- of IN prep
 |       +-- structure NN pobj
 |           +-- Speed NNP nn
 |           |   +-- time NN nn
 |           |   |   +-- Structures NNPS nn
 |           |   |   +-- Optimization NN amod
 |           |   +-- Elapsed NNP nn
 |           |   +-- Elapsed VBD nn
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- # NN dep
 |           |   |   +-- of IN prep
 |           |   |       +-- workers NNS pobj
 |           |   +-- -RRB- -RRB- punct
 |           +-- worker NN nn
 |               +-- workers NNS nn
 +-- time NN dep
     +-- -LRB- -LRB- punct
     +-- s VBZ cop
     +-- -RRB- -RRB- punct
     +-- time NN dep
         +-- -LRB- -LRB- punct
         +-- s VBZ dep
         +-- -RRB- -RRB- punct
         +-- up RP prt
         +-- MPI NNP dep
             +-- Toyo NNP nn
             +-- 519.0 CD dep
             |   +-- -LRB- -LRB- punct
             |   +-- 1 CD num
             |   +-- -RRB- -RRB- punct
             |   +-- 1 CD number
             |   +-- 3 CD num
             +-- , , punct
             +-- 1892 CD conj
             |   +-- 646 CD num
             |   +-- , , punct
             |   +-- MPI NNP appos
             |   |   +-- 525.61 CD num
             |   |   |   +-- 210 CD number
             |   |   +-- 1.00 CD nn
             |   |   +-- Toyo NNP nn
             |   |   +-- 32.4 CD dep
             |   |       +-- -LRB- -LRB- punct
             |   |       +-- 16 CD num
             |   |       +-- -RRB- -RRB- punct
             |   |       +-- 16 CD number
             |   |       +-- 3 CD num
             |   +-- 646 CD appos
             |       +-- 120 CD num
             +-- 028 CD appos
                 +-- 33.34 CD dep
                     +-- 18.5 CD dep
                         +-- 15.76 CD num
                         +-- Dennis NNP nn
                         +-- -LRB- -LRB- punct
                         +-- 28 CD number
                         +-- -RRB- -RRB- punct
                         +-- 3 CD num
                         +-- , , punct
                         +-- 61 CD num
                         |   +-- 154 CD number
                         +-- 803 CD appos
                             +-- 17.16 CD dep
                                 +-- 30.61 CD dep
                                     +-- Dennis NNP appos
                                         +-- 28 CD appos
                                         |   +-- -LRB- -LRB- punct
                                         |   +-- -RRB- -RRB- punct
                                         +-- + SYM prep
                                         |   +-- Ume NNP pobj
                                         +-- 6.1 CD dep
                                         |   +-- -LRB- -LRB- punct
                                         |   +-- 56 CD num
                                         |   +-- -RRB- -RRB- punct
                                         |   +-- 84 CD number
                                         |   +-- 4 CD num
                                         +-- , , punct
                                         +-- 497 CD dep
                                         +-- 33 CD dep
                                         +-- number NN appos
                                         |   +-- 9.30 CD num
                                         |   |   +-- 502 CD number
                                         |   +-- 56.48 CD nn
                                         |   +-- 160 CD num
                                         |   +-- of IN prep
                                         |       +-- structures NNS pobj
                                         |           +-- trial NN nn
                                         |           +-- generated VBN partmod
                                         |               +-- in IN prep
                                         |                   +-- iteration NN pobj
                                         |                       +-- each DT det
                                         +-- indicating VBG partmod
                                         |   +-- degree NN dobj
                                         |       +-- the DT det
                                         |       +-- of IN prep
                                         |           +-- parallelism NN pobj
                                         +-- . . punct
Input: Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure .
Parse:
summarizes VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 3 CD num
 +-- also RB advmod
 +-- amount NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- transmission NN pobj
 |   |       +-- data NNS nn
 |   +-- required VBN partmod
 |       +-- for IN prep
 |           +-- initialization NN pobj
 |           |   +-- of IN prep
 |           |       +-- program NN pobj
 |           |           +-- a DT det
 |           |           +-- worker NN nn
 |           +-- and CC cc
 |           +-- for IN conj
 |               +-- optimization NN pobj
 |                   +-- of IN prep
 |                       +-- structure NN pobj
 |                           +-- each DT det
 |                           +-- trial NN nn
 +-- . . punct
Input: Note that the amount of data transmission , which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX , is equal to that of CONFLEX G .
Parse:
Note VB ROOT
 +-- equal JJ ccomp
 |   +-- that IN mark
 |   +-- amount NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |   |   +-- transmission NN pobj
 |   |   |       +-- data NNS nn
 |   |   +-- , , punct
 |   |   +-- required VBN rcmod
 |   |       +-- which WDT nsubjpass
 |   |       +-- is VBZ auxpass
 |   |       +-- in IN prep
 |   |           +-- order NN pobj
 |   |               +-- initialize VB infmod
 |   |                   +-- to TO aux
 |   |                   +-- program NN dobj
 |   |                   |   +-- a DT det
 |   |                   |   +-- worker NN nn
 |   |                   +-- and CC cc
 |   |                   +-- optimize VB conj
 |   |                       +-- structure NN dobj
 |   |                       |   +-- a DT det
 |   |                       |   +-- trial NN nn
 |   |                       +-- in IN prep
 |   |                           +-- version NN pobj
 |   |                               +-- the DT det
 |   |                               +-- MPI NNP nn
 |   |                               +-- of IN prep
 |   |                                   +-- CONFLEX NNP pobj
 |   +-- is VBZ cop
 |   +-- to IN prep
 |       +-- that DT pobj
 |           +-- of IN prep
 |               +-- G NNP pobj
 |                   +-- CONFLEX NNP nn
 +-- . . punct
Input: We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms .
Parse:
used VBD ROOT
 +-- We PRP nsubj
 +-- version NN dobj
 |   +-- an DT det
 |   +-- improvement NN nn
 |   +-- of IN prep
 |       +-- field NN pobj
 |           +-- MM2 CD num
 |           +-- force NN nn
 +-- assign VB xcomp
 |   +-- to TO aux
 |   +-- function NN dobj
 |   |   +-- a DT det
 |   |   +-- potential JJ amod
 |   |   +-- energy NN nn
 |   +-- to IN prep
 |       +-- properties NNS pobj
 |           +-- various JJ amod
 |           +-- geometric JJ amod
 |           +-- of IN prep
 |               +-- group NN pobj
 |                   +-- a DT det
 |                   +-- of IN prep
 |                       +-- atoms NNS pobj
 +-- . . punct
Input: 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX G , the MPI version of CONFLEX , and the original sequential version of CONFLEX G using a local cluster .
Parse:
Performance NN ROOT
 +-- 4.2.1 CD num
 +-- in IN prep
 |   +-- Cluster NN pobj
 |       +-- a DT det
 |       +-- Local JJ amod
 +-- compared VBD rcmod
 |   +-- We PRP nsubj
 |   +-- first RB advmod
 |   +-- performance NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- G NNP pobj
 |       |       +-- CONFLEX NNP nn
 |       +-- , , punct
 |       +-- version NN conj
 |       |   +-- the DT det
 |       |   +-- original JJ amod
 |       |   +-- sequential JJ amod
 |       |   +-- of IN prep
 |       |   |   +-- G NNP pobj
 |       |   |       +-- CONFLEX NNP nn
 |       |   +-- using VBG partmod
 |       |       +-- cluster NN dobj
 |       |           +-- a DT det
 |       |           +-- local JJ amod
 |       +-- and CC cc
 +-- . . punct
Input: We investigated performance by varying the number of workers using the Dennis cluster .
Parse:
investigated VBD ROOT
 +-- We PRP nsubj
 +-- performance NN dobj
 +-- by IN prep
 |   +-- varying VBG pcomp
 |       +-- number NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- workers NNS pobj
 |                   +-- using VBG partmod
 |                       +-- cluster NN dobj
 |                           +-- the DT det
 |                           +-- Dennis NNP nn
 +-- . . punct
Input: We chose AlaX04 as a test molecule for this experiment .
Parse:
chose VBD ROOT
 +-- We PRP nsubj
 +-- AlaX04 NNP dobj
 +-- as IN prep
 |   +-- molecule NN pobj
 |       +-- a DT det
 |       +-- test NN nn
 |       +-- for IN prep
 |           +-- experiment NN pobj
 |               +-- this DT det
 +-- . . punct
Input: Figure 7 compares the results for the CONFLEX MPI and CONFLEX G in a local PC cluster .
Parse:
compares VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 7 CD num
 +-- results NNS dobj
 |   +-- the DT det
 |   +-- for IN prep
 |       +-- MPI NNP pobj
 |           +-- the DT det
 |           +-- CONFLEX NNP nn
 |           +-- and CC cc
 |           +-- G NNP conj
 |               +-- CONFLEX NNP nn
 +-- in IN prep
 |   +-- cluster NN pobj
 |       +-- a DT det
 |       +-- local JJ amod
 |       +-- PC NN nn
 +-- . . punct
Input: The result of this experiment shows that CONFLEX G can reduce the execution time as the number of workers increases , as in the MPI version of CONFLEX .
Parse:
shows VBZ ROOT
 +-- result NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- experiment NN pobj
 |           +-- this DT det
 +-- reduce VB ccomp
 |   +-- that IN mark
 |   +-- G NNP nsubj
 |   |   +-- CONFLEX DT det
 |   +-- can MD aux
 |   +-- time NN dobj
 |   |   +-- the DT det
 |   |   +-- execution NN nn
 |   +-- as IN prep
 |       +-- number NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- increases NNS pobj
 |           |       +-- workers NNS nn
 |           +-- , , punct
 |           +-- as IN prep
 |               +-- in IN pcomp
 |                   +-- version NN pobj
 |                       +-- the DT det
 |                       +-- MPI NNP nn
 |                       +-- of IN prep
 |                           +-- CONFLEX NNP pobj
 +-- . . punct
Input: We found that CONFLEX G achieved efficiencies comparable to the MPI version .
Parse:
found VBD ROOT
 +-- We PRP nsubj
 +-- achieved VBN ccomp
 |   +-- that IN mark
 |   +-- G NNP nsubj
 |   |   +-- CONFLEX NNP nn
 |   +-- efficiencies NNS dobj
 |       +-- comparable JJ amod
 |           +-- to IN prep
 |               +-- version NN pobj
 |                   +-- the DT det
 |                   +-- MPI NNP nn
 +-- . . punct
Input: With 28 workers , CONFLEX G achieved an 18.00 times speedup compared to the CONFLEX sequential version .
Parse:
achieved VBD ROOT
 +-- With IN prep
 |   +-- workers NNS pobj
 |       +-- 28 CD num
 +-- , , punct
 +-- G NNP nsubj
 |   +-- CONFLEX NNP nn
 +-- speedup NN dobj
 |   +-- an DT det
 |   +-- times NNS nn
 |       +-- 18.00 CD num
 +-- compared VBN prep
 |   +-- to IN pcomp
 |       +-- version NN pobj
 |           +-- the DT det
 |           +-- CONFLEX NNP nn
 |           +-- sequential JJ amod
 +-- . . punct
Input: The performance of CONFLEX G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility , based on the increase in the number of workers .
Parse:
worse JJR ROOT
 +-- performance NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |   |   +-- G NNP pobj
 |   |       +-- CONFLEX NNP nn
 |   +-- without IN prep
 |       +-- facility NN pobj
 |           +-- the DT det
 |           +-- OmniRPC NNP nn
 |           +-- AIM NNP nn
 +-- is VBZ cop
 +-- than IN prep
 |   +-- that DT pobj
 |       +-- of IN prep
 |           +-- CONFLEXG NNP pobj
 |               +-- using VBG partmod
 |                   +-- facility NN dobj
 |                       +-- the DT det
 |                       +-- , , punct
 |                       +-- based VBN prep
 |                           +-- on IN pcomp
 |                               +-- increase NN pobj
 |                                   +-- the DT det
 |                                   +-- in IN prep
 |                                       +-- number NN pobj
 |                                           +-- the DT det
 |                                           +-- of IN prep
 |                                               +-- workers NNS pobj
 +-- . . punct
Input: This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations , such initialization or invocation of worker programs .
Parse:
indicates VBZ ROOT
 +-- This DT nsubj
 +-- enables VBZ ccomp
 |   +-- that IN mark
 |   +-- AIM NNP nsubj
 |   |   +-- the DT det
 |   |   +-- OmniRPC NNP nn
 |   +-- worker NN dobj
 |   |   +-- the DT det
 |   +-- calculate VB xcomp
 |       +-- to TO aux
 |       +-- efficiently RB advmod
 |       +-- without IN prep
 |           +-- calculations NNS pobj
 |               +-- other JJ amod
 |               +-- , , punct
 |               +-- initialization NN conj
 |               |   +-- such JJ amod
 |               +-- or CC cc
 |               +-- invocation NN conj
 |               +-- of IN prep
 |                   +-- programs NNS pobj
 |                       +-- worker NN nn
 +-- . . punct
Input: As the number of workers is increased , the performance of CONFLEX G is a slightly lower than that of the MPI version .
Parse:
lower JJR ROOT
 +-- increased VBN advcl
 |   +-- As IN mark
 |   +-- number NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- workers NNS pobj
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- performance NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- G NNP pobj
 |           +-- CONFLEX NNP nn
 +-- is VBZ cop
 +-- a DT det
 +-- slightly RB advmod
 +-- than IN prep
 |   +-- that DT pobj
 |       +-- of IN prep
 |           +-- version NN pobj
 |               +-- the DT det
 |               +-- MPI NNP nn
 +-- . . punct
Input: This performance degradation is caused by differences in the worker initialization processes of CONFLEX G and CONFLEX MPI .
Parse:
caused VBN ROOT
 +-- degradation NN nsubjpass
 |   +-- This DT det
 |   +-- performance NN nn
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- differences NNS pobj
 |       +-- in IN prep
 |           +-- processes NNS pobj
 |               +-- the DT det
 |               +-- worker NN nn
 |               +-- initialization NN nn
 |               +-- of IN prep
 |                   +-- G NNP pobj
 |                       +-- CONFLEX NNP nn
 |                       +-- and CC cc
 |                       +-- MPI NNP conj
 |                           +-- CONFLEX NNP nn
 +-- . . punct
Input: In the case of CONFLEX MPI , all workers are initialized in advance of the optimization phase .
Parse:
initialized VBN ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- MPI NNP pobj
 |               +-- CONFLEX NNP nn
 +-- , , punct
 +-- workers NNS nsubjpass
 |   +-- all DT det
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- advance NN pobj
 |       +-- of IN prep
 |           +-- phase NN pobj
 |               +-- the DT det
 |               +-- optimization NN nn
 +-- . . punct
Input: In the case of OminRPC , the worker is invoked on demand when the RPC call is actually issued .
Parse:
invoked VBN ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- OminRPC NNP pobj
 +-- , , punct
 +-- worker NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- on IN prep
 |   +-- demand NN pobj
 +-- issued VBN advcl
 |   +-- when WRB advmod
 |   +-- call NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- RPC NN nn
 |   +-- is VBZ auxpass
 |   +-- actually RB advmod
 +-- . . punct
Input: Therefore , the initialization incurs this overhead .
Parse:
incurs VBZ ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- initialization NN nsubj
 |   +-- the DT det
 +-- overhead NN dobj
 |   +-- this DT det
 +-- . . punct
Input: Since the objective of CONFLEX G is to explore the conformations of large bio molecules , the number of trial structures and the time to optimize the trial structure might be large .
Parse:
large JJ ROOT
 +-- is VBZ advcl
 |   +-- Since IN mark
 |   +-- objective NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- G NNP pobj
 |   |           +-- CONFLEX NNP nn
 |   +-- explore VB xcomp
 |       +-- to TO aux
 |       +-- conformations NNS dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- molecules NNS pobj
 |                   +-- large JJ amod
 |                   +-- bio NN nn
 +-- , , punct
 +-- number NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- structures NNS pobj
 |   |       +-- trial NN nn
 |   +-- and CC cc
 |   +-- time NN conj
 |       +-- the DT det
 |       +-- optimize VB infmod
 |           +-- to TO aux
 |           +-- structure NN dobj
 |               +-- the DT det
 |               +-- trial NN nn
 +-- might MD aux
 +-- be VB cop
 +-- . . punct
Input: In such cases , the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time .
Parse:
small JJ ROOT
 +-- In IN prep
 |   +-- cases NNS pobj
 |       +-- such JJ amod
 +-- , , punct
 +-- overhead NN nsubj
 |   +-- the DT det
 |   +-- invoke VB infmod
 |       +-- to TO aux
 |       +-- and CC cc
 |       +-- initialize VB conj
 |       +-- program NN dobj
 |           +-- the DT det
 |           +-- worker NN nn
 +-- can MD aux
 +-- be VB cop
 +-- compared VBN prep
 |   +-- to IN pcomp
 |       +-- time NN pobj
 |           +-- the DT det
 |           +-- entire JJ amod
 |           +-- elapsed VBN amod
 +-- . . punct
Input: 4.2.2 Performance for Peptides in The Grid Testbed First , the sample molecules -LRB- AlaX04 and AlaX16 -RRB- were used to examine the CONFLEX G performance in a grid environment .
Parse:
used VBN ROOT
 +-- Performance NN nsubjpass
 |   +-- 4.2.2 CD num
 |   +-- for IN prep
 |       +-- Peptides NNPS pobj
 |           +-- in IN prep
 |               +-- Testbed NNP pobj
 |                   +-- The DT det
 |                   +-- Grid NNP nn
 +-- First RB advmod
 +-- , , punct
 +-- molecules NNS nsubjpass
 |   +-- the DT det
 |   +-- sample NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- AlaX04 CD dep
 |   |   +-- and CC cc
 |   |   +-- AlaX16 NNP conj
 |   +-- -RRB- -RRB- punct
 +-- were VBD auxpass
 +-- examine VB xcomp
 |   +-- to TO aux
 |   +-- performance NN dobj
 |       +-- the DT det
 |       +-- G NNP nn
 |       |   +-- CONFLEX NNP nn
 |       +-- in IN prep
 |           +-- environment NN pobj
 |               +-- a DT det
 |               +-- grid NN nn
 +-- . . punct
Input: Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 8 CD num
 +-- speedup NN dobj
 |   +-- the DT det
 |   +-- achieved VBN partmod
 |       +-- by IN prep
 |           +-- using VBG pcomp
 |               +-- clusters NNS dobj
 |               |   +-- multiple JJ amod
 |               +-- compared VBN prep
 |                   +-- to IN pcomp
 |                       +-- using VBG pcomp
 |                           +-- worker NN dobj
 |                           |   +-- one CD num
 |                           +-- in IN prep
 |                               +-- cluster NN pobj
 |                                   +-- the DT det
 |                                   +-- Dennis NNP nn
 +-- . . punct
Input: Detailed results are shown in Table 4 and Table 5 .
Parse:
shown VBN ROOT
 +-- results NNS nsubjpass
 |   +-- Detailed VBN amod
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- Table NNP pobj
 |       +-- 4 CD num
 |       +-- and CC cc
 |       +-- Table JJ conj
 |           +-- 5 CD num
 +-- . . punct
Input: In both cases , the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters .
Parse:
obtained VBN ROOT
 +-- In IN prep
 |   +-- cases NNS pobj
 |       +-- both DT det
 +-- , , punct
 +-- performance NN nsubjpass
 |   +-- the DT det
 |   +-- best JJS amod
 +-- was VBD auxpass
 +-- using VBG xcomp
 |   +-- workers NNS dobj
 |       +-- 64 CD num
 |       +-- of IN prep
 |           +-- combination NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- clusters NNS pobj
 |                       +-- the DT det
 |                       +-- Dennis NNP nn
 |                           +-- and CC cc
 |                           +-- Alice NNP conj
 +-- . . punct
Input: CONFLEX G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16 .
Parse:
achieved VBD ROOT
 +-- G NNP nsubj
 |   +-- CONFLEX NNP nn
 +-- speedup NN dobj
 |   +-- a DT det
 |   +-- maximum JJ amod
 |   +-- of IN prep
 |   |   +-- times NNS pobj
 |   |       +-- 36.08 CD num
 |   +-- for IN prep
 |   |   +-- AlaX04 NNP pobj
 |   +-- and CC cc
 |   +-- speedup NN conj
 |       +-- a DT det
 |       +-- maximum JJ amod
 |       +-- of IN prep
 |           +-- times NNS pobj
 |               +-- 21.91 CD num
 |               +-- for IN prep
 |                   +-- AlaX16 NNP pobj
 +-- . . punct
Input: In the case of AlaX04 , the performance is improved only when the network performance between clusters is high .
Parse:
improved VBN ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- AlaX04 NNP pobj
 +-- , , punct
 +-- performance NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- high JJ advcl
 |   +-- when WRB advmod
 |   |   +-- only RB advmod
 |   +-- performance NN nsubj
 |   |   +-- the DT det
 |   |   +-- network NN nn
 |   |   +-- between IN prep
 |   |       +-- clusters NNS pobj
 |   +-- is VBZ cop
 +-- . . punct
Input: However , even if two or more clusters are used in a wide area network environment , the performance improvement was slight because the optimization time of one trial structure generated from AlaX04 , a small molecule , is short .
Parse:
slight JJ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- used VBN advcl
 |   +-- even RB advmod
 |   +-- if IN mark
 |   +-- clusters NNS nsubjpass
 |   |   +-- two CD num
 |   |       +-- or CC cc
 |   |       +-- more JJR conj
 |   +-- are VBP auxpass
 |   +-- in IN prep
 |       +-- environment NN pobj
 |           +-- a DT det
 |           +-- area NN nn
 |           |   +-- wide JJ amod
 |           +-- network NN nn
 +-- improvement NN nsubj
 |   +-- the DT det
 |   +-- performance NN nn
 +-- was VBD cop
 +-- short JJ advcl
 |   +-- because IN mark
 |   +-- time NN nsubj
 |   |   +-- the DT det
 |   |   +-- optimization NN nn
 |   |   +-- of IN prep
 |   |       +-- structure NN pobj
 |   |           +-- one CD num
 |   |           +-- trial NN nn
 |   |           +-- generated VBN partmod
 |   |               +-- from IN prep
 |   |                   +-- AlaX04 NNP pobj
 |   |                       +-- , , punct
 |   |                       +-- molecule NN appos
 |   |                           +-- a DT det
 |   |                           +-- small JJ amod
 |   +-- is VBZ cop
 +-- . . punct
Input: In addition , the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time .
Parse:
consume VBP ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- overhead NN nsubj
 |   +-- the DT det
 |   +-- required VBN partmod
 |       +-- for IN prep
 |           +-- invocation NN pobj
 |               +-- of IN prep
 |                   +-- program NN pobj
 |                       +-- a DT det
 |                       +-- worker NN nn
 |                       +-- and CC cc
 |                       +-- transmission NN conj
 |                           +-- network NN nn
 |                           +-- data NNS nn
 +-- portion NN dobj
 |   +-- a DT det
 |   +-- large JJ amod
 |   +-- of IN prep
 |       +-- time NN pobj
 |           +-- the DT det
 |           +-- remaining VBG amod
 |           +-- processing NN nn
 +-- . . punct
Input: In particular , the data transmission required for the initialization of a worker program is 2 MB .
Parse:
MB NN ROOT
 +-- In IN prep
 |   +-- particular JJ pobj
 +-- , , punct
 +-- transmission NN nsubj
 |   +-- the DT det
 |   +-- data NNS nn
 |   +-- required VBN partmod
 |       +-- for IN prep
 |           +-- initialization NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- program NN pobj
 |                       +-- a DT det
 |                       +-- worker NN nn
 +-- is VBZ cop
 +-- 2 CD num
 +-- . . punct
Input: In the case of Toyo cluster , where the network performance between the client program and the worker programs is poor , the time of data transmission to the worker program required approximately 6.7 seconds .
Parse:
required VBN ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- cluster NN pobj
 |               +-- Toyo NNP nn
 |               +-- , , punct
 |               +-- poor JJ rcmod
 |                   +-- where WRB advmod
 |                   +-- performance NN nsubj
 |                   |   +-- the DT det
 |                   |   +-- network NN nn
 |                   |   +-- between IN prep
 |                   |       +-- program NN pobj
 |                   |           +-- the DT det
 |                   |           +-- client NN nn
 |                   |           +-- and CC cc
 |                   |           +-- programs NNS conj
 |                   |               +-- the DT det
 |                   |               +-- worker NN nn
 |                   +-- is VBZ cop
 +-- , , punct
 +-- time NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- transmission NN pobj
 |   |       +-- data NNS nn
 |   +-- to IN prep
 |       +-- program NN pobj
 |           +-- the DT det
 |           +-- worker NN nn
 +-- seconds NNS dobj
 |   +-- 6.7 CD num
 |       +-- approximately RB quantmod
 +-- . . punct
Input: Since this transmission time was longer than the processing time of one structure optimization in CONFLEX G , most of the time was spent for this data transmission .
Parse:
spent VBN ROOT
 +-- longer JJR advcl
 |   +-- Since IN mark
 |   +-- time NN nsubj
 |   |   +-- this DT det
 |   |   +-- transmission NN nn
 |   +-- was VBD cop
 |   +-- than IN prep
 |       +-- time NN pobj
 |           +-- the DT det
 |           +-- processing NN nn
 |           +-- of IN prep
 |               +-- optimization NN pobj
 |                   +-- one CD num
 |                   +-- structure NN nn
 |                   +-- in IN prep
 |                       +-- G NNP pobj
 |                           +-- CONFLEX NNP nn
 +-- , , punct
 +-- most JJS nsubjpass
 |   +-- of IN prep
 |       +-- time NN pobj
 |           +-- the DT det
 +-- was VBD auxpass
 +-- for IN prep
 |   +-- transmission NN pobj
 |       +-- this DT det
 |       +-- data NN nn
 +-- . . punct
Input: Therefore , even if CONFLEX G uses a large number of calculation nodes in a wide area network environment , the benefit of using a grid resource is not obtained .
Parse:
obtained VBN ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- uses VBZ advcl
 |   +-- even RB advmod
 |   +-- if IN mark
 |   +-- G NNP nsubj
 |   |   +-- CONFLEX NNP nn
 |   +-- number NN dobj
 |   |   +-- a DT det
 |   |   +-- large JJ amod
 |   |   +-- of IN prep
 |   |       +-- nodes NNS pobj
 |   |           +-- calculation NN nn
 |   +-- in IN prep
 |       +-- environment NN pobj
 |           +-- a DT det
 |           +-- area NN nn
 |           |   +-- wide JJ amod
 |           +-- network NN nn
 +-- benefit NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- using VBG pcomp
 |           +-- resource NN dobj
 |               +-- a DT det
 |               +-- grid NN nn
 +-- is VBZ auxpass
 +-- not RB neg
 +-- . . punct
Input: In the case of AlaX16 , CONFLEX G achieved a speedup by using two or more PC clusters in our grid testbed .
Parse:
achieved VBD ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- AlaX16 NNP pobj
 +-- , , punct
 +-- G NNP nsubj
 |   +-- CONFLEX NNP nn
 +-- speedup NN dobj
 |   +-- a DT det
 +-- by IN prep
 |   +-- using VBG pcomp
 |       +-- clusters NNS dobj
 |           +-- two CD num
 |           |   +-- or CC cc
 |           |   +-- more JJR conj
 |           +-- PC JJ nn
 |           +-- in IN prep
 |               +-- testbed VBN pobj
 |                   +-- our PRP$ poss
 |                   +-- grid NN nn
 +-- . . punct
Input: This was because the calculation time on the worker program was long and the overhead , such as network latency and the invoking of worker programs , became relatively small and could be hidden .
Parse:
was VBD ROOT
 +-- This DT nsubj
 +-- long JJ advcl
 |   +-- because IN mark
 |   +-- time NN nsubj
 |   |   +-- the DT det
 |   |   +-- calculation NN nn
 |   |   +-- on IN prep
 |   |       +-- program NN pobj
 |   |           +-- the DT det
 |   |           +-- worker NN nn
 |   +-- was VBD cop
 |   +-- and CC cc
 |   +-- small JJ conj
 |       +-- overhead NN nsubj
 |       |   +-- the DT det
 |       |   +-- , , punct
 |       |   +-- as IN prep
 |       |       +-- such JJ mwe
 |       |       +-- latency NN pobj
 |       |           +-- network NN nn
 |       |           +-- and CC cc
 |       |           +-- invoking NN conj
 |       |               +-- the DT det
 |       |               +-- of IN prep
 |       |                   +-- programs NNS pobj
 |       |                       +-- worker NN nn
 |       +-- became VBD cop
 |       +-- relatively RB advmod
 |       +-- and CC cc
 |       +-- hidden VBN conj
 |           +-- could MD aux
 |           +-- be VB auxpass
 +-- . . punct
Input: The best performance was obtained using 64 workers in the Dennis and Alice clusters .
Parse:
obtained VBN ROOT
 +-- performance NN nsubjpass
 |   +-- The DT det
 |   +-- best JJS amod
 +-- was VBD auxpass
 +-- using VBG xcomp
 |   +-- workers NNS dobj
 |   |   +-- 64 CD num
 |   +-- in IN prep
 |       +-- clusters NNS pobj
 |           +-- the DT det
 |           +-- Dennis NNP nn
 |               +-- and CC cc
 |               +-- Alice NNP conj
 +-- . . punct
Input: In the case of AaX16 , the achieved performance was a speedup of 36.08 times .
Parse:
speedup NN ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- AaX16 CD pobj
 +-- , , punct
 +-- performance NN nsubj
 |   +-- the DT det
 |   +-- achieved VBN amod
 +-- was VBD cop
 +-- a DT det
 +-- of IN prep
 |   +-- times NNS pobj
 |       +-- 36.08 CD num
 +-- . . punct
Input: Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX G performance .
Parse:
reveals VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 9 CD num
 +-- effect NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- using VBG pcomp
 |           +-- facility NN dobj
 |           |   +-- the DT det
 |           |   +-- of IN prep
 |           |       +-- AIM NNP pobj
 |           |           +-- the DT det
 |           |           +-- OmniRPC NNP nn
 |           +-- on IN prep
 |               +-- performance NN pobj
 |                   +-- G NNP nn
 |                       +-- CONFLEX NNP nn
 +-- . . punct
Input: In most cases , CONFLEX G with the OmniRPC AIM facility archived better performance than CONFLEX G without the facility .
Parse:
archived VBN ROOT
 +-- In IN prep
 |   +-- cases NNS pobj
 |       +-- most JJS amod
 +-- , , punct
 +-- G NNP nsubj
 |   +-- CONFLEX NNP nn
 |   +-- with IN prep
 |       +-- facility NN pobj
 |           +-- the DT det
 |           +-- AIM NNP nn
 |               +-- OmniRPC NNP nn
 +-- performance NN dobj
 |   +-- better JJR amod
 |   +-- than IN prep
 |       +-- G NNP pobj
 |           +-- CONFLEX NNP nn
 +-- without IN prep
 |   +-- facility NN pobj
 |       +-- the DT det
 +-- . . punct
Input: In particular , the OmniRPC AIM facility was advantageous when using two clusters connected by a low performance network .
Parse:
advantageous JJ ROOT
 +-- In IN prep
 |   +-- particular JJ pobj
 +-- , , punct
 +-- facility NN nsubj
 |   +-- the DT det
 |   +-- OmniRPC NNP nn
 |   +-- AIM NNP nn
 +-- was VBD cop
 +-- using VBG advcl
 |   +-- when WRB advmod
 |   +-- clusters NNS dobj
 |       +-- two CD num
 |       +-- connected VBN partmod
 |           +-- by IN prep
 |               +-- network NN pobj
 |                   +-- a DT det
 |                   +-- performance NN nn
 |                       +-- low JJ amod
 +-- . . punct
Input: The results indicate that the OmniRPC AIM facility can improve performance in the grid environment .
Parse:
indicate VBP ROOT
 +-- results NNS nsubj
 |   +-- The DT det
 +-- improve VB ccomp
 |   +-- that IN mark
 |   +-- facility NN nsubj
 |   |   +-- the DT det
 |   |   +-- OmniRPC NNP nn
 |   |   +-- AIM NNP nn
 |   +-- can MD aux
 |   +-- performance NN dobj
 |       +-- in IN prep
 |           +-- environment NN pobj
 |               +-- the DT det
 |               +-- grid NN nn
 +-- . . punct
Input: 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally , we explored the molecular conformation using CONFLEX G for large molecules .
Parse:
explored VBD ROOT
 +-- PerformanceforSmallProteininTheGridTestbed NNP nsubj
 |   +-- 4.2.3 LS nn
 +-- Finally RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- conformation NN dobj
 |   +-- the DT det
 |   +-- molecular JJ amod
 |   +-- using VBG partmod
 |       +-- G NNP dobj
 |       |   +-- CONFLEX NNP nn
 |       +-- for IN prep
 |           +-- molecules NNS pobj
 |               +-- large JJ amod
 +-- . . punct
Input: In a grid environment , this experiment was conducted using the Dennis and Ume clusters .
Parse:
conducted VBN ROOT
 +-- In IN prep
 |   +-- environment NN pobj
 |       +-- a DT det
 |       +-- grid NN nn
 +-- , , punct
 +-- experiment NN nsubjpass
 |   +-- this DT det
 +-- was VBD auxpass
 +-- using VBG xcomp
 |   +-- clusters NNS dobj
 |       +-- the DT det
 |       +-- Dennis NNP nn
 |           +-- and CC cc
 |           +-- Ume NNP conj
 +-- . . punct
Input: In this experiment , we used two proteins , 1L2Y and 1BL1 .
Parse:
used VBD ROOT
 +-- In IN prep
 |   +-- experiment NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- proteins NNS dobj
 |   +-- two CD num
 |   +-- , , punct
 |   +-- 1L2Y CD appos
 |       +-- and CC cc
 |       +-- 1BL1 CD conj
 +-- . . punct
Input: Table 6 and Table 7 show the performance of CONFLEX G in the grid environment and that of CONFLEX MPI in the Toyo cluster , respectively .
Parse:
show VB ROOT
 +-- 7 CD nsubj
 |   +-- Table JJ amod
 |       +-- 6 CD num
 |       +-- and CC cc
 |       +-- Table JJ conj
 +-- performance NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- G NNP pobj
 |   |       +-- CONFLEX NNP nn
 |   +-- in IN prep
 |   |   +-- environment NN pobj
 |   |       +-- the DT det
 |   |       +-- grid NN nn
 |   +-- and CC cc
 |   +-- that DT conj
 |       +-- of IN prep
 |           +-- MPI NNP pobj
 |               +-- CONFLEX NNP nn
 |               +-- in IN prep
 |                   +-- cluster NN pobj
 |                       +-- the DT det
 |                       +-- Toyo NNP nn
 +-- , , punct
 +-- respectively RB advmod
 +-- . . punct
Input: The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI .
Parse:
computed VBN ROOT
 +-- speedups NNS nsubjpass
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- tables NNS pobj
 |           +-- these DT det
 +-- were VBD auxpass
 +-- respectively RB advmod
 +-- based VBN prep
 |   +-- on IN pcomp
 |       +-- performance NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- worker NN pobj
 |                   +-- one CD num
 |                   +-- and CC cc
 |                   +-- workers NNS conj
 |                   |   +-- 16 CD num
 |                   +-- of IN prep
 |                       +-- cluster NN pobj
 |                           +-- the DT det
 |                           +-- Toyo NNP nn
 |                           +-- using VBG partmod
 |                               +-- MPI NNP dobj
 |                                   +-- CONFLEX NNP nn
 +-- . . punct
Input: CONFLEX G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y .
Parse:
obtained VBD ROOT
 +-- G NNP nsubj
 |   +-- CONFLEX NNP nn
 |   +-- with IN prep
 |       +-- workers NNS pobj
 |           +-- 84 CD num
 |           +-- in IN prep
 |               +-- clusters NNS pobj
 |                   +-- Dennis NNP nn
 |                       +-- and CC cc
 |                       +-- Ume NNP conj
 +-- maximum NN dobj
 |   +-- speedups NNS dobj
 |   |   +-- of IN prep
 |   |       +-- times NNS pobj
 |   |           +-- 56.5 CD num
 |   +-- for IN prep
 |   |   +-- 1L2Y CD pobj
 |   +-- and CC cc
 |   +-- times NNS conj
 |       +-- 34.5 CD num
 |       +-- for IN prep
 |           +-- 1L2Y CD pobj
 +-- . . punct
Input: Since the calculation time for structure optimization required a great deal of time , the ratio of overhead , including tasks such as the invocation of a worker program and data transmission for initialization , became very small , so that the performance of CONFLEX G was improved .
Parse:
small JJ ROOT
 +-- required VBD advcl
 |   +-- Since IN mark
 |   +-- time NN nsubj
 |   |   +-- the DT det
 |   |   +-- calculation NN nn
 |   |   +-- for IN prep
 |   |       +-- optimization NN pobj
 |   |           +-- structure NN nn
 |   +-- deal NN dobj
 |       +-- a DT det
 |       +-- great JJ amod
 |       +-- of IN prep
 |           +-- time NN pobj
 +-- , , punct
 +-- ratio NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- overhead NN pobj
 |   +-- , , punct
 |   +-- including VBG prep
 |       +-- tasks NNS pobj
 |           +-- as IN prep
 |               +-- such JJ mwe
 |               +-- invocation NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                   |   +-- program NN pobj
 |                   |       +-- a DT det
 |                   |       +-- worker NN nn
 |                   +-- and CC cc
 |                   +-- transmission NN conj
 |                       +-- data NNS nn
 |                       +-- for IN prep
 |                           +-- initialization NN pobj
 +-- became VBD cop
 +-- very RB advmod
 +-- improved VBN advcl
 |   +-- so IN mark
 |   +-- that IN mark
 |   +-- performance NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- G NNP pobj
 |   |           +-- CONFLEX NNP nn
 |   +-- was VBD auxpass
 +-- . . punct
Input: We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation .
Parse:
found VBD ROOT
 +-- We PRP nsubj
 +-- caused VBD ccomp
 |   +-- that IN mark
 |   +-- imbalance NN nsubj
 |   |   +-- the DT det
 |   |   +-- load NN nn
 |   |   +-- in IN prep
 |   |       +-- time NN pobj
 |   |           +-- the DT det
 |   |           +-- processing NN nn
 |   |           +-- of IN prep
 |   |               +-- optimization NN pobj
 |   |                   +-- for IN prep
 |   |                       +-- structure NN pobj
 |   |                           +-- each DT det
 |   |                           +-- trial NN nn
 |   +-- degradation NN dobj
 |       +-- performance NN nn
 +-- . . punct
Input: When we obtained the best performance for 1L2Y using the Dennis and Ume clusters , the time for each structure optimization varied from 190 to 27 , 887 seconds , and the ratio between the longest and shortest times was 13.4 .
Parse:
varied VBN ROOT
 +-- obtained VBD advcl
 |   +-- When WRB advmod
 |   +-- we PRP nsubj
 |   +-- performance NN dobj
 |   |   +-- the DT det
 |   |   +-- best JJS amod
 |   |   +-- for IN prep
 |   |       +-- 1L2Y CD pobj
 |   +-- using VBG xcomp
 |       +-- clusters NNS dobj
 |           +-- the DT det
 |           +-- Dennis NNP nn
 |               +-- and CC cc
 |               +-- Ume NNP conj
 +-- , , punct
 +-- time NN nsubj
 |   +-- the DT det
 |   +-- for IN prep
 |       +-- optimization NN pobj
 |           +-- each DT det
 |           +-- structure NN nn
 +-- from IN prep
 |   +-- 190 CD pobj
 +-- to IN prep
 |   +-- 27 CD pobj
 |       +-- , , punct
 |       +-- seconds NNS appos
 |           +-- 887 CD num
 +-- and CC cc
 +-- 13.4 CD conj
 |   +-- ratio NN nsubj
 |   |   +-- the DT det
 |   |   +-- between IN prep
 |   |       +-- longest JJS pobj
 |   |           +-- the DT det
 |   |           +-- and CC cc
 |   |           +-- times NNS conj
 |   |               +-- shortest JJS amod
 |   +-- was VBD cop
 +-- . . punct
Input: For 1BL1 , the ratio of minimum time over maximum time was 190 .
Parse:
190 CD ROOT
 +-- For IN prep
 |   +-- 1BL1 CD pobj
 +-- , , punct
 +-- ratio NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- time NN pobj
 |           +-- minimum JJ amod
 |           +-- over IN prep
 |               +-- time NN pobj
 |                   +-- maximum JJ amod
 +-- was VBD cop
 +-- . . punct
Input: In addition , in order that the worker program wait until the completion of optimization of all trial structures , all worker programs were found to wait in an idle state for approximately 6 hours .
Parse:
found VBN ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- in IN prep
 |   +-- order NN pobj
 |       +-- wait VB ccomp
 |           +-- that IN mark
 |           +-- program NN nsubj
 |           |   +-- the DT det
 |           |   +-- worker NN nn
 |           +-- until IN prep
 |               +-- completion NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- optimization NN pobj
 |                           +-- of IN prep
 |                               +-- structures NNS pobj
 |                                   +-- all DT det
 |                                   +-- trial NN nn
 +-- programs NNS nsubjpass
 |   +-- all DT det
 |   +-- worker NN nn
 +-- were VBD auxpass
 +-- wait VB xcomp
 |   +-- to TO aux
 |   +-- in IN prep
 |   |   +-- state NN pobj
 |   |       +-- an DT det
 |   |       +-- idle JJ amod
 |   +-- for IN prep
 |       +-- hours NNS pobj
 |           +-- 6 CD num
 |               +-- approximately RB quantmod
 +-- . . punct
Input: This has caused the performance degradation of CONFLEX G .
Parse:
caused VBN ROOT
 +-- This DT nsubj
 +-- has VBZ aux
 +-- degradation NN dobj
 |   +-- the DT det
 |   +-- performance NN nn
 |   +-- of IN prep
 |       +-- G NNP pobj
 |           +-- CONFLEX NNP nn
 +-- . . punct
Input: 161 4.3 Discussion In this subsection , we discuss the improvement of the performance reflected in our experiments .
Parse:
discuss VBP ROOT
 +-- Discussion NN nsubj
 |   +-- 161 CD num
 |   +-- 4.3 LS amod
 |   +-- In IN prep
 |       +-- subsection NN pobj
 |           +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- improvement NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- performance NN pobj
 |           +-- the DT det
 |           +-- reflected VBN partmod
 |               +-- in IN prep
 |                   +-- experiments NNS pobj
 |                       +-- our PRP$ poss
 +-- . . punct
Input: Exploiting parallelism In order to exploit more computational resources , it is necessary to increase the degree of parallelism .
Parse:
necessary JJ ROOT
 +-- Exploiting VBG partmod
 |   +-- parallelism NN dobj
 |   +-- In IN prep
 |       +-- order NN pobj
 |           +-- exploit VB infmod
 |               +-- to TO aux
 |               +-- resources NNS dobj
 |                   +-- more JJR amod
 |                   +-- computational JJ amod
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- increase VB xcomp
 |   +-- to TO aux
 |   +-- degree NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- parallelism NN pobj
 +-- . . punct
Input: In this experiment , the degree of parallelism was not so large in the case of the sample molecules .
Parse:
large JJ ROOT
 +-- In IN prep
 |   +-- experiment NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- degree NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- parallelism NN pobj
 +-- was VBD cop
 +-- not RB neg
 +-- so RB advmod
 +-- in IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- molecules NNS pobj
 |               +-- the DT det
 |               +-- sample NN nn
 +-- . . punct
Input: When using a set of over 500 computing nodes for 1BL1 , the number of one trial structures assigned to each worker will be only one or two .
Parse:
one CD ROOT
 +-- using VBG advcl
 |   +-- When WRB advmod
 |   +-- set NN dobj
 |   |   +-- a DT det
 |   |   +-- of IN prep
 |   |       +-- nodes NNS pobj
 |   |           +-- 500 CD num
 |   |           |   +-- over IN quantmod
 |   |           +-- computing NN amod
 |   +-- for IN prep
 |       +-- 1BL1 CD pobj
 +-- , , punct
 +-- number NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- structures NNS pobj
 |           +-- one CD num
 |           +-- trial NN nn
 |           +-- assigned VBN partmod
 |               +-- to IN prep
 |                   +-- worker NN pobj
 |                       +-- each DT det
 +-- will MD aux
 +-- be VB cop
 +-- only RB advmod
 +-- or CC cc
 +-- two CD conj
 +-- . . punct
Input: If over 100 trial structures are assigned to each worker program , calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM .
Parse:
performed VBN ROOT
 +-- assigned VBN advcl
 |   +-- If IN mark
 |   +-- structures NNS nsubjpass
 |   |   +-- 100 CD num
 |   |   |   +-- over IN quantmod
 |   |   +-- trial NN nn
 |   +-- are VBP auxpass
 |   +-- to IN prep
 |       +-- program NN pobj
 |           +-- each DT det
 |           +-- worker NN nn
 +-- , , punct
 +-- calculation NN nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- efficiently RB advmod
 |   +-- more RBR advmod
 +-- to IN prep
 |   +-- due IN mwe
 |   +-- reduction NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- overhead NN pobj
 |       |       +-- the DT det
 |       +-- for IN prep
 |           +-- invocation NN pobj
 |               +-- worker NN nn
 |               +-- and CC cc
 |               +-- initialization NN conj
 |               +-- via IN prep
 |                   +-- facility NN pobj
 |                       +-- the DT det
 |                       +-- of IN prep
 |                           +-- AIM NNP pobj
 |                               +-- the DT det
 |                               +-- OmniRPC NNP nn
 +-- . . punct
Input: One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures .
Parse:
is VBZ ROOT
 +-- idea NN nsubj
 |   +-- One CD num
 |   +-- for IN prep
 |       +-- increasing VBG pcomp
 |           +-- parallelism NN dobj
 +-- overlap VB xcomp
 |   +-- to TO aux
 |   +-- execution NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- sets NNS pobj
 |               +-- two CD num
 |               |   +-- or CC cc
 |               |   +-- more JJR conj
 |               +-- of IN prep
 |                   +-- structures NNS pobj
 |                       +-- trial NN nn
 +-- . . punct
Input: In the current algorithm , a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated .
Parse:
generated VBN ROOT
 +-- In IN prep
 |   +-- algorithm NN pobj
 |       +-- the DT det
 |       +-- current JJ amod
 +-- , , punct
 +-- set NN nsubjpass
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- structures NNS pobj
 |           +-- trial NN nn
 +-- is VBZ auxpass
 +-- from IN prep
 |   +-- structure NN pobj
 |       +-- one CD num
 |       +-- initial JJ amod
 |       +-- and CC cc
 |       +-- computed VBN conj
 +-- calculated VBN advcl
 |   +-- until IN mark
 |   +-- optimizations NNS nsubjpass
 |   |   +-- for IN prep
 |   |       +-- structures NNS pobj
 |   |           +-- all DT det
 |   |           +-- in IN prep
 |   |               +-- set NN pobj
 |   |                   +-- this DT det
 |   +-- are VBP auxpass
 +-- . . punct
Input: Furthermore , this will help to improve load imbalance .
Parse:
help VB ROOT
 +-- Furthermore RB advmod
 +-- , , punct
 +-- this DT nsubj
 +-- will MD aux
 +-- improve VB xcomp
 |   +-- to TO aux
 |   +-- imbalance NN dobj
 |       +-- load NN nn
 +-- . . punct
Input: By having other sets of trial structures overlap , even if some optimizations require a long time , the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations .
Parse:
executed VBN ROOT
 +-- By IN prep
 |   +-- having VBG pcomp
 |       +-- overlap VBP ccomp
 |           +-- sets NNS nsubj
 |               +-- other JJ amod
 |               +-- of IN prep
 |                   +-- structures NNS pobj
 |                       +-- trial NN nn
 +-- , , punct
 +-- require VBP advcl
 |   +-- even RB advmod
 |   +-- if IN mark
 |   +-- optimizations NNS nsubj
 |   |   +-- some DT det
 |   +-- time NN dobj
 |       +-- a DT det
 |       +-- long JJ amod
 +-- optimization NN nsubjpass
 |   +-- the DT det
 |   +-- for IN prep
 |       +-- structures NNS pobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- sets NNS pobj
 |                   +-- other JJ amod
 +-- can MD aux
 +-- be VB auxpass
 +-- compensate VB xcomp
 |   +-- to TO aux
 |   +-- for IN prep
 |       +-- workers NNS pobj
 |           +-- the DT det
 |           +-- idle JJ amod
 |           +-- for IN prep
 |               +-- optimizations NNS pobj
 |                   +-- other JJ amod
 +-- . . punct
Input: It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search .
Parse:
unclear JJ ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- however RB advmod
 +-- affect VB ccomp
 |   +-- how WRB advmod
 |   +-- modification NN nsubj
 |   |   +-- such JJ amod
 |   |   +-- of IN prep
 |   |       +-- algorithm NNP pobj
 |   |           +-- the DT det
 |   +-- might MD aux
 |   +-- quality NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- results NNS pobj
 |               +-- the DT det
 |               +-- final JJ amod
 |               +-- in IN prep
 |                   +-- terms NNS pobj
 |                       +-- of IN prep
 |                           +-- search NN pobj
 |                               +-- a DT det
 |                               +-- conformation NN nn
 +-- . . punct
Input: Improvement in load imbalance when optimizing each trial structure Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster .
Parse:
lists VBZ ROOT
 +-- Improvement NN advmod
 |   +-- in IN prep
 |       +-- imbalance NN pobj
 |           +-- load NN nn
 +-- optimizing VBG advcl
 |   +-- when WRB advmod
 |   +-- structure NN dobj
 |       +-- each DT det
 |       +-- trial NN nn
 +-- Table NNP nsubj
 |   +-- 8 CD num
 +-- statistics NNS dobj
 |   +-- the DT det
 +-- for IN prep
 |   +-- times NNS pobj
 |       +-- optimization NN nn
 |       +-- of IN prep
 |           +-- structures NNS pobj
 |               +-- trial NN nn
 |               +-- generated VBN partmod
 |                   +-- for IN prep
 |                       +-- molecule NN pobj
 |                           +-- each DT det
 |                           +-- sample NN nn
 |                           +-- measured VBN partmod
 |                               +-- using VBG xcomp
 |                                   +-- workers NNS dobj
 |                                       +-- 28 CD num
 |                                       +-- in IN prep
 |                                           +-- cluster NN pobj
 |                                               +-- the DT det
 |                                               +-- Dennis NNP nn
 +-- . . punct
Input: When two or more sets of PC clusters are used , the speedup in performance is hampered by the load imbalance of the optimization of the trial structures .
Parse:
hampered VBN ROOT
 +-- used VBN advcl
 |   +-- When WRB advmod
 |   +-- sets NNS nsubjpass
 |   |   +-- two CD num
 |   |   |   +-- or CC cc
 |   |   |   +-- more JJR conj
 |   |   +-- of IN prep
 |   |       +-- clusters NNS pobj
 |   |           +-- PC NN nn
 |   +-- are VBP auxpass
 +-- , , punct
 +-- speedup NN nsubjpass
 |   +-- the DT det
 |   +-- in IN prep
 |       +-- performance NN pobj
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- imbalance NN pobj
 |       +-- the DT det
 |       +-- load NN nn
 |       +-- of IN prep
 |           +-- optimization NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- structures NNS pobj
 |                       +-- the DT det
 |                       +-- trial NN nn
 +-- . . punct
Input: The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time .
Parse:
longer RBR ROOT
 +-- time NN nsubj
 |   +-- The DT det
 |   +-- longest JJS amod
 |   +-- for IN prep
 |       +-- optimizing VBG pcomp
 |           +-- structure NN dobj
 |               +-- a DT det
 |               +-- trial NN nn
 +-- was VBD cop
 +-- times NNS num
 |   +-- nearly RB quantmod
 |   +-- 24 CD number
 +-- than IN prep
 |   +-- time NN pobj
 |       +-- the DT det
 |       +-- shortest JJS amod
 +-- . . punct
Input: Furthermore , other workers must wait until the longest job has Finished , so that the entire execution time can not be reduced .
Parse:
wait VB ROOT
 +-- Furthermore RB advmod
 +-- , , punct
 +-- workers NNS nsubj
 |   +-- other JJ amod
 +-- must MD aux
 +-- Finished VBN advcl
 |   +-- until IN mark
 |   +-- job NN nsubj
 |   |   +-- the DT det
 |   |   +-- longest JJS amod
 |   +-- has VBZ aux
 |   +-- , , punct
 |   +-- reduced VBN advcl
 |       +-- so IN mark
 |       +-- that IN mark
 |       +-- time NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- entire JJ amod
 |       |   +-- execution NN nn
 |       +-- can MD aux
 |       +-- not RB neg
 |       +-- be VB auxpass
 +-- . . punct
Input: When CONFLEX G searched the conformers of 1BL1 by the Dennis cluster , the longest calculation time of the trial structure optimization made up approximately 80 % of the elapsed time .
Parse:
made VBN ROOT
 +-- searched VBD advcl
 |   +-- When WRB advmod
 |   +-- G NNP nsubj
 |   |   +-- CONFLEX NNP nn
 |   +-- conformers NNS dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- 1BL1 CD pobj
 |   +-- by IN prep
 |       +-- cluster NN pobj
 |           +-- the DT det
 |           +-- Dennis NNP nn
 +-- , , punct
 +-- time NN nsubj
 |   +-- the DT det
 |   +-- longest JJS amod
 |   +-- calculation NN nn
 |   +-- of IN prep
 |       +-- optimization NN pobj
 |           +-- the DT det
 |           +-- structure NN nn
 |               +-- trial NN nn
 +-- up RP prt
 +-- % NN dobj
 |   +-- 80 CD num
 |   |   +-- approximately RB quantmod
 |   +-- of IN prep
 |       +-- time NN pobj
 |           +-- the DT det
 |           +-- elapsed JJ amod
 +-- . . punct
Input: Therefore , there are two possible solutions for the load Imbalance .
Parse:
are VBP ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- there EX expl
 +-- solutions NNS nsubj
 |   +-- two CD num
 |   +-- possible JJ amod
 |   +-- for IN prep
 |       +-- Imbalance NN pobj
 |           +-- the DT det
 |           +-- load NN nn
 +-- . . punct
Input: ? It is necessary to refine the algorithm used to generate the trial structure , which suppresses the time variation for optimizing a trial structure in CONFLEX .
Parse:
necessary JJ ROOT
 +-- ? , punct
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- refine VB xcomp
 |   +-- to TO aux
 |   +-- algorithm NN dobj
 |       +-- the DT det
 |       +-- used VBN partmod
 |           +-- generate VB xcomp
 |               +-- to TO aux
 |               +-- structure NN dobj
 |                   +-- the DT det
 |                   +-- trial NN nn
 |                   +-- , , punct
 |                   +-- suppresses VBZ rcmod
 |                       +-- which WDT nsubj
 |                       +-- variation NN dobj
 |                           +-- the DT det
 |                           +-- time NN nn
 |                           +-- for IN prep
 |                               +-- optimizing VBG pcomp
 |                                   +-- structure NN dobj
 |                                       +-- a DT det
 |                                       +-- trial NN nn
 |                                       +-- in IN prep
 |                                           +-- CONFLEX NNP pobj
 +-- . . punct
Input: This enables CONFLEX G to achieve high throughput by using many computer resources .
Parse:
enables VBZ ROOT
 +-- This DT nsubj
 +-- G NNP dobj
 |   +-- CONFLEX NNP nn
 +-- achieve VB xcomp
 |   +-- to TO aux
 |   +-- throughput NN dobj
 |   |   +-- high JJ amod
 |   +-- by IN prep
 |       +-- using VBG pcomp
 |           +-- resources NNS dobj
 |               +-- many JJ amod
 |               +-- computer NN nn
 +-- . . punct
Input: ? One of the solutions is to overlap the executions for two or more sets of trial structures .
Parse:
is VBZ ROOT
 +-- ? , punct
 +-- One CD nsubj
 |   +-- of IN prep
 |       +-- solutions NNS pobj
 |           +-- the DT det
 +-- overlap VB xcomp
 |   +-- to TO aux
 |   +-- executions NNS dobj
 |   |   +-- the DT det
 |   +-- for IN prep
 |       +-- sets NNS pobj
 |           +-- two CD num
 |           |   +-- or CC cc
 |           |   +-- more JJR conj
 |           +-- of IN prep
 |               +-- structures NNS pobj
 |                   +-- trial NN nn
 +-- . . punct
Input: In the current algorithms , a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated .
Parse:
generated VBN ROOT
 +-- In IN prep
 |   +-- algorithms NNS pobj
 |       +-- the DT det
 |       +-- current JJ amod
 +-- , , punct
 +-- set NN nsubjpass
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- structures NNS pobj
 |           +-- trial NN nn
 +-- is VBZ auxpass
 +-- from IN prep
 |   +-- structure NN pobj
 |       +-- one CD num
 |       +-- initial JJ amod
 +-- and CC cc
 +-- continues VBZ conj
 |   +-- calculation NN nsubj
 |   +-- calculated VBN advcl
 |       +-- until IN mark
 |       +-- structures NNS nsubjpass
 |       |   +-- all DT det
 |       |   +-- in IN prep
 |       |       +-- set NN pobj
 |       |           +-- this DT det
 |       +-- are VBP auxpass
 +-- . . punct
Input: By having other sets of trial structures , even if a structure search takes a long time , a job can be executed in order to compensate the load imbalance by other jobs .
Parse:
executed VBN ROOT
 +-- By IN prep
 |   +-- having VBG pcomp
 |       +-- sets NNS dobj
 |           +-- other JJ amod
 |           +-- of IN prep
 |               +-- structures NNS pobj
 |                   +-- trial NN nn
 +-- , , punct
 +-- takes VBZ advcl
 |   +-- even RB advmod
 |   +-- if IN mark
 |   +-- search NN nsubj
 |   |   +-- a DT det
 |   |   +-- structure NN nn
 |   +-- time NN dobj
 |       +-- a DT det
 |       +-- long JJ amod
 +-- job NN nsubjpass
 |   +-- a DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- order NN pobj
 |       +-- compensate VB infmod
 |           +-- to TO aux
 |           +-- imbalance NN dobj
 |           |   +-- the DT det
 |           |   +-- load NN nn
 |           +-- by IN prep
 |               +-- jobs NNS pobj
 |                   +-- other JJ amod
 +-- . . punct
Input: However , how such modification of the algorithms might affect the efficiency is not clear .
Parse:
clear JJ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- affect VB csubj
 |   +-- how WRB advmod
 |   +-- modification NN nsubj
 |   |   +-- such JJ amod
 |   |   +-- of IN prep
 |   |       +-- algorithms NNS pobj
 |   |           +-- the DT det
 |   +-- might MD aux
 |   +-- efficiency NN dobj
 |       +-- the DT det
 +-- is VBZ cop
 +-- not RB neg
 +-- . . punct
Input: ? In this experiment , we used a simple build in roundrobbin scheduler of OmniRPC , which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high performance Table 8
Parse:
used VBD ROOT
 +-- ? . punct
 +-- In IN prep
 |   +-- experiment NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- build NN dobj
 |   +-- a DT det
 |   +-- simple JJ amod
 +-- in IN prep
     +-- scheduler NN pobj
         +-- roundrobbin NN nn
         +-- of IN prep
         |   +-- OmniRPC NNP pobj
         +-- , , punct
         +-- necessary JJ rcmod
             +-- which WDT nsubj
             +-- is VBZ cop
             +-- in IN prep
                 +-- order NN pobj
                     +-- apply VB infmod
                         +-- to TO aux
                         +-- scheduler NN dobj
                             +-- the DT det
                             +-- allocates VBZ rcmod
                                 +-- that WDT nsubj
                                 +-- structures NNS dobj
                                 +-- with IN prep
                                 |   +-- times NNS pobj
                                 |       +-- optimization NN nn
                                 |           +-- long JJ amod
                                 +-- to IN prep
                                     +-- performance NN pobj
                                         +-- a DT det
                                         +-- high JJ amod
                                         +-- Table NNP dep
                                             +-- 8 CD num
Input: Molecular Min Max Average Variance code -LRB- s -RRB- -LRB- s -RRB- -LRB- s -RRB- AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low performance nodes .
Parse:
AlaX04 CD ROOT
 +-- code NN nsubj
 |   +-- Molecular NNP nn
 |   +-- Min NNP nn
 |   +-- Average NNP nn
 |   |   +-- Max NNP nn
 |   +-- Variance NNP nn
 +-- -LRB- -LRB- punct
 +-- s VBZ cop
 +-- -RRB- -RRB- punct
 +-- s VBZ parataxis
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- 2.0 CD dobj
     +-- 11.3 CD prep
         +-- 3 CD dep
             +-- 5.3 CD num
             +-- AlaX16 NNP prep
                 +-- 920.0 CD dep
                     +-- 47.6 CD number
                     +-- 154.2 CD ROOT
                         +-- 5404 CD prep
                             +-- 1L2Y CD dep
                                 +-- 114.2 CD prep
                                     +-- 13331.4 CD dep
                                         +-- 803.2 CD prep
                                             +-- 636782 CD dep
                                                 +-- 1BL1 CD prep
                                                     +-- 121.0 CD dep
                                                         +-- 29641.8 CD prep
                                                             +-- 3153.5 CD dep
                                                                 +-- node NN dep
                                                                     +-- 2734811 CD num
                                                                     +-- and CC cc
                                                                     +-- structures NNS conj
                                                                     +-- with IN prep
                                                                     |   +-- times NNS pobj
                                                                     |       +-- short JJ amod
                                                                     |       +-- optimization NN nn
                                                                     |       +-- to IN prep
                                                                     |           +-- nodes NNS pobj
                                                                     |               +-- performance NN nn
                                                                     |                   +-- low JJ amod
                                                                     +-- . . punct
Input: In general , however , it might be difficult to predict the time required for trial structure optimization .
Parse:
difficult JJ ROOT
 +-- In IN prep
 |   +-- general JJ pobj
 +-- , , punct
 +-- however RB advmod
 +-- it PRP nsubj
 +-- might MD aux
 +-- be VB cop
 +-- predict VB xcomp
 |   +-- to TO aux
 |   +-- time NN dobj
 |       +-- the DT det
 |       +-- required VBN partmod
 |           +-- for IN prep
 |               +-- optimization NN pobj
 |                   +-- structure NN nn
 |                       +-- trial NN nn
 +-- . . punct
Input: Parallelization of the worker program for speedup to optimize a trial structure In the current implementation , we do not parallelize the worker program .
Parse:
parallelize VB ROOT
 +-- Parallelization NN nsubj
 |   +-- of IN prep
 |   |   +-- program NN pobj
 |   |       +-- the DT det
 |   |       +-- worker NN nn
 |   |       +-- for IN prep
 |   |           +-- speedup NN pobj
 |   +-- optimize VB infmod
 |       +-- to TO aux
 |       +-- structure NN dobj
 |       |   +-- a DT det
 |       |   +-- trial NN nn
 |       +-- In IN prep
 |           +-- implementation NN pobj
 |               +-- the DT det
 |               +-- current JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- do VBP aux
 +-- not RB neg
 +-- program NN dobj
 |   +-- the DT det
 |   +-- worker NN nn
 +-- . . punct
Input: In order to speed up trial structures , hybrid programming using OmniRPC and OpenMP in an SMP -LRB- Symmetric Multiple Processor -RRB- machine may be one of the alternative methods by which to improve overall performance. .
Parse:
one CD ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- speed VB infmod
 |           +-- to TO aux
 |           +-- up RP prt
 |           +-- structures NNS dobj
 |               +-- trial NN nn
 +-- , , punct
 +-- programming NN nsubj
 |   +-- hybrid NN nn
 |   +-- using VBG partmod
 |       +-- OmniRPC NNP dobj
 |       |   +-- and CC cc
 |       |   +-- OpenMP NNP conj
 |       +-- in IN prep
 |           +-- machine NN pobj
 |               +-- an DT det
 |               +-- Processor NNP nn
 |                   +-- SMP NNP nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- Symmetric NNP nn
 |                   +-- Multiple NNP nn
 |                   +-- -RRB- -RRB- punct
 +-- may MD aux
 +-- be VB cop
 +-- of IN prep
 |   +-- methods NNS pobj
 |       +-- the DT det
 |       +-- alternative JJ amod
 |       +-- improve VB infmod
 |           +-- by IN prep
 |           |   +-- which WDT pobj
 |           +-- to TO aux
 |           +-- performance. NN dobj
 |               +-- overall JJ amod
 +-- . . punct
