Input: CONFLEX -LRB- 1 -RRB- is an efficient conformational space search program , which can predominately and exhaustively search the conformers in the lower energy region .
Parse:
program NN ROOT
 +-- CONFLEX NNP nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- 1 LS dep
 |   +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- an DT det
 +-- efficient JJ amod
 +-- conformational JJ amod
 +-- search NN nn
 |   +-- space NN nn
 +-- , , punct
 +-- search VB rcmod
 |   +-- which WDT nsubj
 |   +-- can MD aux
 |   +-- predominately RB advmod
 |   |   +-- and CC cc
 |   |   +-- exhaustively RB conj
 |   +-- conformers NNS dobj
 |   |   +-- the DT det
 |   +-- in IN prep
 |       +-- region NN pobj
 |           +-- the DT det
 |           +-- lower JJR amod
 |           +-- energy NN nn
 +-- . . punct
Input: Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility .
Parse:
include VBP ROOT
 +-- Applications NNS nsubj
 |   +-- of IN prep
 |       +-- CONFLEX NNP pobj
 +-- elucidation NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- reactivity NN pobj
 |   |       +-- the DT det
 |   |       +-- and CC cc
 |   |       +-- selectivity NN conj
 |   |       +-- of IN prep
 |   |           +-- drugs NNS pobj
 |   +-- and CC cc
 |   +-- materials NNS conj
 |       +-- possible JJ amod
 |       +-- drug NN nn
 |       +-- with IN prep
 |           +-- regard NN pobj
 |               +-- to IN prep
 |                   +-- flexibility NN pobj
 |                       +-- their PRP$ poss
 |                       +-- conformational JJ amod
 +-- . . punct
Input: 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low energy regions .
Parse:
Algorithm NNP ROOT
 +-- 2.1 CD num
 +-- of IN prep
 |   +-- ConformationalSpaceSearch NNP pobj
 +-- search NN dep
 |   +-- strategy NN nsubj
 |   |   +-- The DT det
 |   |   +-- basic JJ amod
 |   |   +-- of IN prep
 |   |       +-- CONFLEX NNP pobj
 |   +-- is VBZ cop
 |   +-- an DT det
 |   +-- exhaustive JJ amod
 |   +-- of IN prep
 |       +-- regions NNS pobj
 |           +-- only RB advmod
 |           +-- the DT det
 |           +-- low JJ amod
 |           +-- energy NN nn
 +-- . . punct
Input: The original CONFLEX performs the following four major steps
Parse:
performs VBZ ROOT
 +-- CONFLEX NNP nsubj
 |   +-- The DT det
 |   +-- original JJ amod
 +-- steps NNS dobj
     +-- the DT det
     +-- following VBG amod
     +-- four CD num
     +-- major JJ amod
Input: -LRB- An input structure is used as the first initial structure at the beginning of a search execution only. -RRB- to the selected initial structure .
Parse:
used VBN ROOT
 +-- -LRB- -LRB- punct
 +-- structure NN nsubjpass
 |   +-- An DT det
 |   +-- input NN nn
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- structure NN pobj
 |       +-- the DT det
 |       +-- first JJ amod
 |       +-- initial JJ amod
 |       +-- at IN prep
 |           +-- beginning NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- only. NN pobj
 |                       +-- a DT det
 |                       +-- execution NN nn
 |                           +-- search NN nn
 +-- -RRB- -RRB- punct
 +-- to IN prep
 |   +-- structure NN pobj
 |       +-- the DT det
 |       +-- selected VBN amod
 |       +-- initial JJ amod
 +-- . . punct
Input: structures .
Parse:
structures NNS ROOT
 +-- . . punct
Input: structures with the other conformers stored in a conformation database , and preservation of newly discovered unique conformers in the database .
Parse:
structures NNS ROOT
 +-- with IN prep
 |   +-- conformers NNS pobj
 |       +-- the DT det
 |       +-- other JJ amod
 |       +-- stored VBN partmod
 |       |   +-- in IN prep
 |       |       +-- database NN pobj
 |       |           +-- a DT det
 |       |           +-- conformation NN nn
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- preservation NN conj
 |           +-- of IN prep
 |               +-- conformers NNS pobj
 |                   +-- discovered VBN amod
 |                   |   +-- newly RB advmod
 |                   +-- unique JJ amod
 |                   +-- in IN prep
 |                       +-- database NN pobj
 |                           +-- the DT det
 +-- . . punct
Input: Figure 1 shows the outline of CONFLEX , the original conformational space search algorithm .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 1 CD num
 +-- outline NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- CONFLEX NNP pobj
 |           +-- , , punct
 |           +-- algorithm NN appos
 |               +-- the DT det
 |               +-- original JJ amod
 |               +-- conformational JJ amod
 |               +-- search NN nn
 |                   +-- space NN nn
 +-- . . punct
Input: These procedures incorporate two unique strategies .
Parse:
incorporate VBP ROOT
 +-- procedures NNS nsubj
 |   +-- These DT det
 +-- strategies NNS dobj
 |   +-- two CD num
 |   +-- unique JJ amod
 +-- . . punct
Input: Figure 2 shows the strategies for generating local perturbations in CONFLEX .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 2 CD num
 +-- strategies NNS dobj
 |   +-- the DT det
 |   +-- for IN prep
 |       +-- generating VBG pcomp
 |           +-- perturbations NNS dobj
 |               +-- local JJ amod
 |               +-- in IN prep
 |                   +-- CONFLEX NNP pobj
 +-- . . punct
Input: The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side chains or backbone chains .
Parse:
involves VBZ ROOT
 +-- strategy NN nsubj
 |   +-- The DT det
 |   +-- first JJ amod
 +-- flapping VBG dobj
 |   +-- both DT preconj
 |   +-- corner NN nn
 |   +-- and CC cc
 |   +-- flipping VBG conj
 |       +-- edge NN nn
 +-- for IN prep
 |   +-- atoms NNS pobj
 |       +-- the DT det
 |       +-- ring NN nn
 |       +-- and CC cc
 |       +-- rotation NN conj
 |       |   +-- stepwise NN nn
 |       +-- for IN prep
 |           +-- chains NNS pobj
 |               +-- side NN nn
 |               +-- or CC cc
 |               +-- chains NNS conj
 |                   +-- backbone NN nn
 +-- . . punct
Input: These methods provide a highly efficient way to produce several good trial structures .
Parse:
provide VBP ROOT
 +-- methods NNS nsubj
 |   +-- These DT det
 +-- way NN dobj
 |   +-- a DT det
 |   +-- efficient JJ amod
 |   |   +-- highly RB advmod
 |   +-- produce VB infmod
 |       +-- to TO aux
 |       +-- structures NNS dobj
 |           +-- several JJ amod
 |           +-- good JJ amod
 |           +-- trial NN nn
 +-- . . punct
Input: These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2
Parse:
considered VBN ROOT
 +-- perturbations NNS nsubjpass
 |   +-- These DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- mimic VB xcomp
     +-- to TO aux
     +-- Figure NN dobj
         +-- 155 CD num
         +-- Flip NNP nn
         |   +-- Stepwise NNP nn
         |   +-- Rotation NNP nn
         |   +-- Corner NNP nn
         |   +-- Flap NNP nn
         |   +-- Edge NNP nn
         +-- 2 CD num
Input: a barrier crossing step in the elementary process of the thermal conformational inter conversion .
Parse:
step NN ROOT
 +-- a DT det
 +-- crossing VBG nn
 |   +-- barrier NN nn
 +-- in IN prep
 |   +-- process NN pobj
 |       +-- the DT det
 |       +-- elementary JJ amod
 |       +-- of IN prep
 |           +-- conversion NN pobj
 |               +-- the DT det
 |               +-- thermal JJ amod
 |               +-- conformational JJ amod
 |               +-- inter NN nn
 +-- . . punct
Input: Actually , the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation .
Parse:
correspond NN ROOT
 +-- Actually RB advmod
 +-- , , punct
 +-- perturbations NNS nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- structure NN pobj
 |           +-- an DT det
 |           +-- initial JJ amod
 +-- to IN prep
 |   +-- performance NN pobj
 |       +-- the DT det
 |       +-- precise JJ amod
 |       +-- around IN prep
 |           +-- space NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- structure NN pobj
 |                       +-- the DT det
 |                       +-- initial JJ amod
 +-- of IN prep
 |   +-- because IN mwe
 |   +-- localization NN pobj
 |       +-- and CC cc
 |       +-- weakness NN conj
 |       +-- of IN prep
 |           +-- perturbation NN pobj
 |               +-- the DT det
 +-- . . punct
Input: The selection rule of the initial structure , the LowestConformer First rule , is the second strategy for directing the conformation search expanded to the low energy regions .
Parse:
strategy NN ROOT
 +-- rule NN nsubj
 |   +-- The DT det
 |   +-- selection NN nn
 |   +-- of IN prep
 |       +-- structure NN pobj
 |           +-- the DT det
 |           +-- initial JJ amod
 |           +-- , , punct
 |           +-- rule NN appos
 |               +-- the DT det
 |               +-- First NNP nn
 |                   +-- LowestConformer NNP nn
 +-- is VBZ cop
 +-- the DT det
 +-- second JJ amod
 +-- for IN prep
 |   +-- directing VBG pcomp
 |       +-- expanded VBN ccomp
 |           +-- search NN nsubj
 |           |   +-- the DT det
 |           |   +-- conformation NN nn
 |           +-- to IN prep
 |               +-- regions NNS pobj
 |                   +-- the DT det
 |                   +-- low JJ amod
 |                   +-- energy NN nn
 +-- . . punct
Input: The initial structure is selected as the set of lowest energy conformers stored in the conformation database .
Parse:
selected VBN ROOT
 +-- structure NN nsubjpass
 |   +-- The DT det
 |   +-- initial JJ amod
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- set NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- conformers NNS pobj
 |               +-- lowest JJS amod
 |               +-- energy NN nn
 |               +-- stored VBN partmod
 |                   +-- in IN prep
 |                       +-- database NN pobj
 |                           +-- the DT det
 |                           +-- conformation NN nn
 +-- . . punct
Input: This rule is effective in moving down the search space toward lower energy regions , like water from a stream running into an empty reservoir , while filling local depressions along the way .
Parse:
effective JJ ROOT
 +-- rule NN nsubj
 |   +-- This DT det
 +-- is VBZ cop
 +-- in IN prep
 |   +-- moving VBG pcomp
 |       +-- down RP prt
 |       +-- space NN dobj
 |       |   +-- the DT det
 |       |   +-- search NN nn
 |       |   +-- toward IN prep
 |       |       +-- regions NNS pobj
 |       |           +-- lower JJR amod
 |       |           +-- energy NN nn
 |       +-- , , punct
 |       +-- like IN prep
 |       |   +-- water NN pobj
 |       |       +-- from IN prep
 |       |           +-- stream NN pobj
 |       |               +-- a DT det
 |       |               +-- running VBG partmod
 |       |                   +-- into IN prep
 |       |                       +-- reservoir NN pobj
 |       |                           +-- an DT det
 |       |                           +-- empty JJ amod
 |       +-- filling VBG advcl
 |           +-- while IN mark
 |           +-- depressions NNS dobj
 |           |   +-- local JJ amod
 |           +-- along IN prep
 |               +-- way NN pobj
 |                   +-- the DT det
 +-- . . punct
Input: Therefore , these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm .
Parse:
referred VBN ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- procedures NNS nsubjpass
 |   +-- these DT det
 |   +-- tactical JJ amod
 |   +-- of IN prep
 |       +-- search NN pobj
 |           +-- the DT det
 |           +-- CONFLEX NNP nn
 +-- are VBP auxpass
 +-- to IN prep
 +-- as IN prep
 |   +-- Algorithm NNP pobj
 |       +-- the DT det
 |       +-- Reservoir NNP nn
 |       +-- Filling NNP nn
 +-- . . punct
Input: In order to remain in the low energy region and perform an exhaustive search , the search limit -LRB- SEL -RRB- , which determines the maximum energy of the initial structures , is pre defined .
Parse:
defined VBN ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- remain VB infmod
 |           +-- to TO aux
 |           +-- in IN prep
 |           |   +-- region NN pobj
 |           |       +-- the DT det
 |           |       +-- low JJ amod
 |           |       +-- energy NN nn
 |           +-- and CC cc
 |           +-- perform VB conj
 |               +-- search NN dobj
 |                   +-- an DT det
 |                   +-- exhaustive JJ amod
 +-- , , punct
 +-- limit NN nsubjpass
 |   +-- the DT det
 |   +-- search NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- SEL NNP dep
 |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- determines VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- energy NN dobj
 |           +-- the DT det
 |           +-- maximum JJ amod
 |           +-- of IN prep
 |               +-- structures NNS pobj
 |                   +-- the DT det
 |                   +-- initial JJ amod
 +-- is VBZ auxpass
 +-- pre RB advmod
 +-- . . punct
Input: Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high energy regions .
Parse:
allows VBZ ROOT
 +-- SEL NNP nsubj
 |   +-- increasing VBG amod
 |       +-- Gradually RB advmod
 +-- searched VBN xcomp
 |   +-- conformers NNS nsubjpass
 |   |   +-- only RB advmod
 |   |   +-- the DT det
 |   |   +-- lowenergy NN nn
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- and CC cc
 |   +-- avoids VBZ conj
 |       +-- straying VBG xcomp
 |           +-- into IN prep
 |               +-- regions NNS pobj
 |                   +-- high JJ amod
 |                   |   +-- unnecessarily RB advmod
 |                   +-- energy NN nn
 +-- . . punct
Input: 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms , CONFLEX was improved using high performance parallel computing techniques .
Parse:
improved VBN ROOT
 +-- Parallelization NNP nsubj
 |   +-- 2.2 CD num
 |   +-- of IN prep
 |       +-- CONFLEX NNP pobj
 +-- for IN prep
 |   +-- Cluster NNP pobj
 +-- For IN prep
 |   +-- application NN pobj
 |       +-- to IN prep
 |           +-- atoms NNS pobj
 |               +-- 100 CD num
 |                   +-- over IN quantmod
 +-- , , punct
 +-- CONFLEX NNP nsubjpass
 +-- was VBD auxpass
 +-- using VBG xcomp
 |   +-- techniques NNS dobj
 |       +-- performance NN nn
 |       |   +-- high JJ amod
 |       +-- parallel NN nn
 |       +-- computing NN nn
 +-- . . punct
Input: In the CONFLEX search algorithm , the geometry optimization procedures always take 95 % of the elapsed time of the search execution .
Parse:
take VBP ROOT
 +-- In IN prep
 |   +-- algorithm NN pobj
 |       +-- the DT det
 |       +-- CONFLEX NNP nn
 |       +-- search NN nn
 +-- , , punct
 +-- procedures NNS nsubj
 |   +-- the DT det
 |   +-- optimization NN nn
 |       +-- geometry NN nn
 +-- always RB advmod
 +-- % NN dobj
 |   +-- 95 CD num
 |   +-- of IN prep
 |       +-- time NN pobj
 |           +-- the DT det
 |           +-- elapsed VBN amod
 |           +-- of IN prep
 |               +-- execution NN pobj
 |                   +-- the DT det
 |                   +-- search NN nn
 +-- . . punct
Input: Therefore , we parallelized this optimization using the Master Worker parallelization technique .
Parse:
parallelized VBD ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- optimization NN dobj
 |   +-- this DT det
 +-- using VBG xcomp
 |   +-- technique NN dobj
 |       +-- the DT det
 |       +-- Worker NNP nn
 |       |   +-- Master NNP nn
 |       +-- parallelization NN nn
 +-- . . punct
Input: We modified the search procedures as follows .
Parse:
modified VBD ROOT
 +-- We PRP nsubj
 +-- procedures NNS dobj
 |   +-- the DT det
 |   +-- search NN nn
 +-- follows VBZ advcl
 |   +-- as IN mark
 +-- . . punct
Input: After trial structures are generated -LRB- step 2 -RRB- , they are temporarily stored in a task pool on the master node .
Parse:
stored VBN ROOT
 +-- generated VBN advcl
 |   +-- After IN mark
 |   +-- structures NNS nsubjpass
 |   |   +-- trial NN nn
 |   +-- are VBP auxpass
 |   +-- step VB dobj
 |       +-- -LRB- -LRB- punct
 |       +-- 2 CD dobj
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- they PRP nsubjpass
 +-- are VBP auxpass
 +-- temporarily RB advmod
 +-- in IN prep
 |   +-- pool NN pobj
 |       +-- a DT det
 |       +-- task NN nn
 |       +-- on IN prep
 |           +-- node NN pobj
 |               +-- the DT det
 |               +-- master NN nn
 +-- . . punct
Input: Then , each worker node is dynamically supplied with one trial structure from the master node .
Parse:
supplied VBN ROOT
 +-- Then RB advmod
 +-- , , punct
 +-- node NN nsubjpass
 |   +-- each DT det
 |   +-- worker NN nn
 +-- is VBZ auxpass
 +-- dynamically RB advmod
 +-- with IN prep
 |   +-- structure NN pobj
 |       +-- one CD num
 |       +-- trial NN nn
 |       +-- from IN prep
 |           +-- node NN pobj
 |               +-- the DT det
 |               +-- master NN nn
 +-- . . punct
Input: After an optimization on a worker node is finished , the worker is immediately supplied with another trial structure .
Parse:
supplied VBN ROOT
 +-- finished VBN advcl
 |   +-- After IN mark
 |   +-- optimization NN nsubjpass
 |   |   +-- an DT det
 |   |   +-- on IN prep
 |   |       +-- node NN pobj
 |   |           +-- a DT det
 |   |           +-- worker NN nn
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- worker NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- immediately RB advmod
 +-- with IN prep
 |   +-- structure NN pobj
 |       +-- another DT det
 |       +-- trial NN nn
 +-- . . punct
Input: When all of the trial structures related to a given initial structure are optimized , only the master procedure is used in comparison .
Parse:
used VBN ROOT
 +-- optimized VBN advcl
 |   +-- When WRB advmod
 |   +-- all DT nsubjpass
 |   |   +-- of IN prep
 |   |       +-- structures NNS pobj
 |   |           +-- the DT det
 |   |           +-- trial NN nn
 |   |           +-- related VBN partmod
 |   |               +-- to IN prep
 |   |                   +-- structure NN pobj
 |   |                       +-- a DT det
 |   |                       +-- given VBN amod
 |   |                       +-- initial JJ amod
 |   +-- are VBP auxpass
 +-- , , punct
 +-- procedure NN nsubjpass
 |   +-- only RB advmod
 |   +-- the DT det
 |   +-- master NN nn
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- comparison NN pobj
 +-- . . punct
Input: By parallelizing CONFLEX , the speedup of searching molecular conformers obtained is as reported in -LRB- 11 -RRB- . .
Parse:
is VBZ ROOT
 +-- By IN prep
 |   +-- parallelizing VBG pcomp
 |       +-- CONFLEX NNP dobj
 +-- , , punct
 +-- speedup NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- searching VBG pcomp
 |           +-- conformers NNS dobj
 |               +-- molecular JJ amod
 |               +-- obtained VBN partmod
 +-- reported VBN advcl
 |   +-- as IN mark
 |   +-- in IN prep
 |       +-- -LRB- -LRB- punct
 |       +-- 11 CD pobj
 |       +-- -RRB- -RRB- punct
 +-- . . punct
