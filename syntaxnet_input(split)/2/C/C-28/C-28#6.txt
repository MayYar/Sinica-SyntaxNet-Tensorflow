Input: We propose an adaptive task allocation framework which is a grid service to perform BLAST searches against sequence database segments .
Parse:
propose VBP ROOT
 +-- We PRP nsubj
 +-- framework NN dobj
 |   +-- an DT det
 |   +-- adaptive JJ amod
 |   +-- allocation NN nn
 |   |   +-- task NN nn
 |   +-- service NN rcmod
 |       +-- which WDT nsubj
 |       +-- is VBZ cop
 |       +-- a DT det
 |       +-- grid NN nn
 |       +-- perform VB infmod
 |           +-- to TO aux
 |           +-- searches NNS dobj
 |               +-- BLAST JJ amod
 |               +-- against IN prep
 |                   +-- segments NNS pobj
 |                       +-- sequence NN nn
 |                       +-- database NN nn
 +-- . . punct
Input: The framework , called PackageBLAST , provides an infrastructure to choose or incorporate allocation strategies in a master slave application .
Parse:
provides VBZ ROOT
 +-- framework NN nsubj
 |   +-- The DT det
 |   +-- , , punct
 |   +-- called VBN partmod
 |       +-- PackageBLAST NNP dep
 +-- infrastructure NN dobj
 |   +-- an DT det
 |   +-- choose VB infmod
 |       +-- to TO aux
 |       +-- or CC cc
 |       +-- incorporate VB conj
 |       +-- strategies NNS dobj
 |       |   +-- allocation NN nn
 |       +-- in IN prep
 |           +-- application NN pobj
 |               +-- a DT det
 |               +-- master NN nn
 |               +-- slave NN nn
 +-- . . punct
Input: We also propose a strategy to compute grid nodes execution weight which distributes work units -LRB- database segments -RRB- to grid nodes according to their current computational power .
Parse:
propose VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- strategy NN dobj
 |   +-- a DT det
 |   +-- compute VB infmod
 |       +-- to TO aux
 |       +-- weight NN dobj
 |           +-- nodes NNS nn
 |           |   +-- grid NN nn
 |           +-- execution NN nn
 |           +-- distributes VBZ rcmod
 |               +-- which WDT nsubj
 |               +-- units NNS dobj
 |               |   +-- work NN nn
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- segments NNS dep
 |               |   |   +-- database NN nn
 |               |   +-- -RRB- -RRB- punct
 |               +-- grid VB xcomp
 |                   +-- to TO aux
 |                   +-- nodes NNS dobj
 |                   +-- according VBG prep
 |                       +-- to IN pcomp
 |                           +-- power NN pobj
 |                               +-- their PRP$ poss
 |                               +-- current JJ amod
 |                               +-- computational JJ amod
 +-- . . punct
Input: 5.1 Database Segmentation and Replication Segmentation consists in the division of a database archive in many portions of smaller size , called segments , that can be processed independently .
Parse:
consists VBZ ROOT
 +-- Segmentation NNP nsubj
 |   +-- 5.1 CD num
 |   +-- Database NNP nn
 |   +-- and CC cc
 |   +-- Segmentation NNP conj
 |       +-- Replication NNP nn
 +-- in IN prep
 |   +-- portions NNS pobj
 |       +-- many JJ amod
 |       +-- of IN prep
 |           +-- size NN pobj
 |               +-- smaller JJR amod
 |               +-- , , punct
 |               +-- called VBN partmod
 |               |   +-- segments NNS dep
 |               +-- processed VBN rcmod
 |                   +-- that WDT nsubjpass
 |                   +-- can MD aux
 |                   +-- be VB auxpass
 |                   +-- independently RB advmod
 +-- . . punct
Input: It enables grid nodes to search smaller parts of a sequence database , reducing the number of disk accesses and hence improving BLAST performance .
Parse:
enables VBZ ROOT
 +-- It PRP nsubj
 +-- nodes NNS dobj
 |   +-- grid NN nn
 +-- search VB xcomp
 |   +-- to TO aux
 |   +-- parts NNS dobj
 |   |   +-- smaller JJR amod
 |   |   +-- of IN prep
 |   |       +-- database NN pobj
 |   |           +-- a DT det
 |   |           +-- sequence NN nn
 |   +-- , , punct
 |   +-- reducing VBG dep
 |       +-- number NN dobj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- accesses NNS pobj
 |       |           +-- disk NN nn
 |       +-- and CC cc
 |       +-- improving VBG conj
 |           +-- hence RB advmod
 |           +-- performance NN dobj
 |               +-- BLAST JJ amod
 +-- . . punct
Input: Also , a single query sequence can be compared against all segments in parallel .
Parse:
be VB ROOT
 +-- Also RB advmod
 +-- , , punct
 +-- sequence NN nsubj
 |   +-- a DT det
 |   +-- single JJ amod
 |   +-- query NN nn
 +-- can MD aux
 +-- compared VBN prep
 |   +-- against IN pcomp
 |       +-- segments NNS pobj
 |           +-- all DT det
 |           +-- in IN prep
 |               +-- parallel NN pobj
 +-- . . punct
Input: Just as in mpiBLAST -LRB- section 4 -RRB- , we decided to use database segmentation in PackageBLAST with an NCBI tool called formatdb , which was modified to generate more database segments of smaller size .
Parse:
decided VBD ROOT
 +-- as IN prep
 |   +-- Just RB advmod
 |   +-- in IN pcomp
 |       +-- mpiBLAST DT pobj
 |           +-- -LRB- -LRB- punct
 |           +-- section NN dep
 |           |   +-- 4 CD num
 |           +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- use VB xcomp
 |   +-- to TO aux
 |   +-- segmentation NN dobj
 |   |   +-- database NN nn
 |   |   +-- in IN prep
 |   |       +-- PackageBLAST NNP pobj
 |   +-- with IN prep
 |       +-- tool NN pobj
 |           +-- an DT det
 |           +-- NCBI NNP nn
 |           +-- called VBN partmod
 |           |   +-- formatdb NN dep
 |           +-- , , punct
 |           +-- modified VBN rcmod
 |               +-- which WDT nsubjpass
 |               +-- was VBD auxpass
 |               +-- generate VB xcomp
 |                   +-- to TO aux
 |                   +-- segments NNS dobj
 |                       +-- more JJR amod
 |                       +-- database NN nn
 |                       +-- of IN prep
 |                           +-- size NN pobj
 |                               +-- smaller JJR amod
 +-- . . punct
Input: We opted to replicate the segmented database in every slave grid node to improve data accesses times and to provide a potential for fault tolerance .
Parse:
opted VBD ROOT
 +-- We PRP nsubj
 +-- replicate VB xcomp
 |   +-- to TO aux
 |   +-- database NN dobj
 |   |   +-- the DT det
 |   |   +-- segmented VBN amod
 |   +-- in IN prep
 |   |   +-- node NN pobj
 |   |       +-- every DT det
 |   |       +-- grid NN nn
 |   |           +-- slave NN nn
 |   +-- improve VB xcomp
 |       +-- to TO aux
 |       +-- times NNS dobj
 |       |   +-- accesses NNS nn
 |       |       +-- data NNS nn
 |       +-- and CC cc
 |       +-- provide VB conj
 |           +-- to TO aux
 |           +-- potential NN dobj
 |               +-- a DT det
 |               +-- for IN prep
 |                   +-- tolerance NN pobj
 |                       +-- fault NN nn
 +-- . . punct
Input: Figure 2 illustrates this .
Parse:
illustrates VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 2 CD num
 +-- this DT dobj
 +-- . . punct
Input: 5.2 Task Allocation As -LRB- 13 -RRB- , we think that no allocation policy will produce the best results for every situation .
Parse:
think VBP ROOT
 +-- Allocation NNP nsubj
 |   +-- 5.2 LS num
 |   +-- Task NNP nn
 +-- As IN prep
 |   +-- 13 CD pobj
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- produce VB ccomp
 |   +-- that IN mark
 |   +-- policy NN nsubj
 |   |   +-- no DT det
 |   |   +-- allocation NN nn
 |   +-- will MD aux
 |   +-- results NNS dobj
 |       +-- the DT det
 |       +-- best JJS amod
 |       +-- for IN prep
 |           +-- situation NN pobj
 |               +-- every DT det
 +-- . . punct
Input: Thus , we propose the use of a framework where many allocation policies can be incorporated .
Parse:
propose VBP ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- use NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- framework NN pobj
 |           +-- a DT det
 |           +-- incorporated VBN rcmod
 |               +-- where WRB advmod
 |               +-- policies NNS nsubjpass
 |               |   +-- many JJ amod
 |               |   +-- allocation NN nn
 |               +-- can MD aux
 |               +-- be VB auxpass
 +-- . . punct
Input: By now , our framework contains five allocation policies
Parse:
contains VBZ ROOT
 +-- By IN prep
 |   +-- now RB pcomp
 +-- , , punct
 +-- framework NN nsubj
 |   +-- our PRP$ poss
 +-- policies NNS dobj
     +-- five CD num
     +-- allocation NN nn
Input: So , the user can choose or even create the allocation policy which is the most appropriate to his her environment and his her BLAST parameters .
Parse:
choose VB ROOT
 +-- So RB advmod
 +-- , , punct
 +-- user NN nsubj
 |   +-- the DT det
 +-- can MD aux
 +-- or CC cc
 +-- create VB conj
 |   +-- even RB advmod
 +-- policy NN dobj
 |   +-- the DT det
 |   +-- allocation NN nn
 |   +-- appropriate JJ rcmod
 |       +-- which WDT nsubj
 |       +-- is VBZ cop
 |       +-- the DT det
 |       +-- most RBS advmod
 |       +-- to IN prep
 |           +-- environment NN pobj
 |               +-- his PRP$ poss
 |               +-- her PRP$ poss
 |               +-- and CC cc
 |               +-- parameters NNS conj
 |                   +-- his PRP$ poss
 |                   +-- her PRP$ poss
 |                   +-- BLAST JJ amod
 +-- . . punct
Input: Besides that , we propose PSS -LRB- Package Weighted Adaptive Self Scheduling -RRB- , a new strategy that adapts the chosen allocation policy to a grid with local workload .
Parse:
propose VBP ROOT
 +-- Besides IN prep
 |   +-- that DT pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- PSS NNP dobj
 |   +-- -LRB- -LRB- punct
 |   +-- Scheduling NNP dep
 |   |   +-- Package NNP nn
 |   |   +-- Weighted NNP nn
 |   |   +-- Adaptive NNP nn
 |   |   +-- Self NNP nn
 |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- strategy NN appos
 |       +-- a DT det
 |       +-- new JJ amod
 |       +-- adapts VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- policy NN dobj
 |           |   +-- the DT det
 |           |   +-- chosen NN amod
 |           |   +-- allocation NN nn
 |           +-- to IN prep
 |               +-- grid NN pobj
 |                   +-- a DT det
 |                   +-- with IN prep
 |                       +-- workload NN pobj
 |                           +-- local JJ amod
 +-- . . punct
Input: Considering the heterogeneity and dynamic characteristics of the grid , PSS is able to modify the length of the work units during execution , based on average processing time of each node .
Parse:
able JJ ROOT
 +-- Considering VBG partmod
 |   +-- heterogeneity NN dobj
 |       +-- the DT det
 |       +-- and CC cc
 |       +-- characteristics NNS conj
 |       |   +-- dynamic JJ amod
 |       +-- of IN prep
 |           +-- grid NN pobj
 |               +-- the DT det
 +-- , , punct
 +-- PSS NNP nsubj
 +-- is VBZ cop
 +-- modify VB xcomp
 |   +-- to TO aux
 |   +-- length NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- units NNS pobj
 |   |           +-- the DT det
 |   |           +-- work NN nn
 |   +-- during IN prep
 |       +-- execution NN pobj
 |           +-- , , punct
 |           +-- based VBN partmod
 |               +-- on IN prep
 |                   +-- time NN pobj
 |                       +-- average JJ amod
 |                       +-- processing NN nn
 |                       +-- of IN prep
 |                           +-- node NN pobj
 |                               +-- each DT det
 +-- . . punct
