Input: Apocrita uses a distributed index for all the documents that are available on the Intranet .
Parse:
uses VBZ ROOT
 +-- Apocrita NNP nsubj
 +-- index NN dobj
 |   +-- a DT det
 |   +-- distributed VBN amod
 +-- for IN prep
 |   +-- documents NNS pobj
 |       +-- all PDT predet
 |       +-- the DT det
 |       +-- available JJ rcmod
 |           +-- that WDT nsubj
 |           +-- are VBP cop
 |           +-- on IN prep
 |               +-- Intranet NNP pobj
 |                   +-- the DT det
 +-- . . punct
Input: Each node will contain part of the full index , and be aware of what part of the index each other node has .
Parse:
contain VB ROOT
 +-- node NN nsubj
 |   +-- Each DT det
 +-- will MD aux
 +-- part NN dobj
 |   +-- of IN prep
 |       +-- index NN pobj
 |           +-- the DT det
 |           +-- full JJ amod
 +-- , , punct
 +-- and CC cc
 +-- aware JJ conj
 |   +-- be VB cop
 |   +-- of IN prep
 |       +-- has VBZ pcomp
 |           +-- part NN dobj
 |           |   +-- what WDT det
 |           |   +-- of IN prep
 |           |       +-- index NN pobj
 |           |           +-- the DT det
 |           +-- node NN nsubj
 |               +-- each DT det
 |               +-- other JJ amod
 +-- . . punct
Input: A node will be able to contact each node that contains a unique portion of the index .
Parse:
able JJ ROOT
 +-- node NN nsubj
 |   +-- A DT det
 +-- will MD aux
 +-- be VB cop
 +-- contact VB xcomp
 |   +-- to TO aux
 |   +-- node NN dobj
 |       +-- each DT det
 |       +-- contains VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- portion NN dobj
 |               +-- a DT det
 |               +-- unique JJ amod
 |               +-- of IN prep
 |                   +-- index NN pobj
 |                       +-- the DT det
 +-- . . punct
Input: In addition , each node has a separate local index of its own documents .
Parse:
has VBZ ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- node NN nsubj
 |   +-- each DT det
 +-- index NN dobj
 |   +-- a DT det
 |   +-- separate JJ amod
 |   +-- local JJ amod
 |   +-- of IN prep
 |       +-- documents NNS pobj
 |           +-- its PRP$ poss
 |           +-- own JJ amod
 +-- . . punct
Input: But as discussed later , in the current implementation , each node has a copy of the entire index .
Parse:
has VBZ ROOT
 +-- But CC cc
 +-- discussed VBN advcl
 |   +-- as IN mark
 |   +-- later RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- implementation NN pobj
 |       +-- the DT det
 |       +-- current JJ amod
 +-- node NN nsubj
 |   +-- each DT det
 +-- copy NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- index NN pobj
 |           +-- the DT det
 |           +-- entire JJ amod
 +-- . . punct
Input: Indexing of the documents is distributed .
Parse:
distributed VBN ROOT
 +-- Indexing NN nsubjpass
 |   +-- of IN prep
 |       +-- documents NNS pobj
 |           +-- the DT det
 +-- is VBZ auxpass
 +-- . . punct
Input: Therefore , if a node is in the process of indexing many documents , it will break up the work over the nodes .
Parse:
break VB ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- is VBZ advcl
 |   +-- if IN mark
 |   +-- node NN nsubj
 |   |   +-- a DT det
 |   +-- in IN prep
 |       +-- process NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- indexing VBG pcomp
 |                   +-- documents NNS dobj
 |                       +-- many JJ amod
 +-- it PRP nsubj
 +-- will MD aux
 +-- up RP prt
 +-- work NN dobj
 |   +-- the DT det
 |   +-- over IN prep
 |       +-- nodes NNS pobj
 |           +-- the DT det
 +-- . . punct
Input: Once a node '' s local index is updated with the new documents , the distributed index will then be updated .
Parse:
updated VBN ROOT
 +-- updated VBN advcl
 |   +-- Once IN mark
 |   +-- index NN nsubjpass
 |   |   +-- node NN poss
 |   |   |   +-- a DT det
 |   |   |   +-- '' '' punct
 |   |   |   +-- s POS possessive
 |   |   +-- local JJ amod
 |   +-- is VBZ auxpass
 |   +-- with IN prep
 |       +-- documents NNS pobj
 |           +-- the DT det
 |           +-- new JJ amod
 +-- , , punct
 +-- index NN nsubjpass
 |   +-- the DT det
 |   +-- distributed VBN amod
 +-- will MD aux
 +-- then RB advmod
 +-- be VB auxpass
 +-- . . punct
Input: The current distributed indexing system consists of three separate modules
Parse:
consists VBZ ROOT
 +-- system NN nsubj
 |   +-- The DT det
 |   +-- current JJ amod
 |   +-- distributed VBN amod
 |   +-- indexing NN nn
 +-- of IN prep
     +-- modules NNS pobj
         +-- three CD num
         +-- separate JJ amod
Input: The responsibility of each module is discussed later in this section .
Parse:
discussed VBN ROOT
 +-- responsibility NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- module NN pobj
 |           +-- each DT det
 +-- is VBZ auxpass
 +-- later RB advmod
 +-- in IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- . . punct
Input: 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1 .
Parse:
depicted VBN ROOT
 +-- Protocol NNP nsubjpass
 |   +-- 3.1 CD num
 |   +-- Indexing VBG nn
 |   +-- protocol NN dep
 |   |   +-- The DT det
 |   +-- designed VBN rcmod
 |       +-- we PRP nsubj
 |       +-- have VBP aux
 |       +-- for IN prep
 |           +-- indexing NN pobj
 |               +-- the DT det
 |               +-- distributed VBN amod
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- Figure NNP pobj
 |       +-- 1 CD num
 +-- . . punct
Input: Figure 1 .
Parse:
Figure NN ROOT
 +-- 1 CD num
 +-- . . punct
Input: Apocrita distributed indexing protocol .
Parse:
distributed VBN ROOT
 +-- Apocrita NNP nsubj
 +-- protocol NN dobj
 |   +-- indexing NN nn
 +-- . . punct
Input: IDLE QUERY
Parse:
IDLE UH ROOT
 +-- QUERY ADD dep
Input: There are no parameters sent with the command .
Parse:
are VBP ROOT
 +-- There EX expl
 +-- parameters NNS nsubj
 |   +-- no DT det
 |   +-- sent VBN partmod
 |       +-- with IN prep
 |           +-- command NN pobj
 |               +-- the DT det
 +-- . . punct
Input: The receiving node will respond with either a BUSY or IDLE command .
Parse:
respond VB ROOT
 +-- node NN nsubj
 |   +-- The DT det
 |   +-- receiving VBG nn
 +-- will MD aux
 +-- with IN prep
 |   +-- BUSY NN pobj
 |       +-- either CC preconj
 |       +-- a DT det
 |       +-- or CC cc
 |       +-- command NN conj
 |           +-- IDLE NNP nn
 +-- . . punct
Input: If the IDLE command is received , the initiating node will add the responding node to a list of available distributed indexing helpers .
Parse:
add VB ROOT
 +-- received VBN advcl
 |   +-- If IN mark
 |   +-- command NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- IDLE NN nn
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- node NN nsubj
 |   +-- the DT det
 |   +-- initiating VBG amod
 +-- will MD aux
 +-- node NN dobj
 |   +-- the DT det
 |   +-- responding VBG amod
 +-- to IN prep
 |   +-- list NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- helpers NNS pobj
 |               +-- available JJ amod
 |               +-- distributed JJ amod
 |               +-- indexing NN nn
 +-- . . punct
Input: In the case of a BUSY command being received , the responding node is ignored .
Parse:
ignored VBN ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- received VBN pcomp
 |               +-- command NN nsubjpass
 |               |   +-- a DT det
 |               |   +-- BUSY JJ amod
 |               +-- being VBG auxpass
 +-- , , punct
 +-- node NN nsubjpass
 |   +-- the DT det
 |   +-- responding VBG amod
 +-- is VBZ auxpass
 +-- . . punct
Input: BUSY
Parse:
BUSY NNP ROOT
Input: This determination is based on the overall CPU usage of the node .
Parse:
based VBN ROOT
 +-- determination NN nsubjpass
 |   +-- This DT det
 +-- is VBZ auxpass
 +-- on IN prep
 |   +-- usage NN pobj
 |       +-- the DT det
 |       +-- overall JJ amod
 |       +-- CPU NN nn
 |       +-- of IN prep
 |           +-- node NN pobj
 |               +-- the DT det
 +-- . . punct
Input: If the node is using most of its CPU for other processes , the node will respond to the IDLE QUERY with a BUSY command .
Parse:
respond VB ROOT
 +-- using VBG advcl
 |   +-- If IN mark
 |   +-- node NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ aux
 |   +-- most JJS dobj
 |   |   +-- of IN prep
 |   |       +-- CPU NN pobj
 |   |           +-- its PRP$ poss
 |   +-- for IN prep
 |       +-- processes NNS pobj
 |           +-- other JJ amod
 +-- , , punct
 +-- node NN nsubj
 |   +-- the DT det
 +-- will MD aux
 +-- to IN prep
 |   +-- QUERY NN pobj
 |       +-- the DT det
 |       +-- IDLE NNP nn
 +-- with IN prep
 |   +-- command NN pobj
 |       +-- a DT det
 |       +-- BUSY JJ amod
 +-- . . punct
Input: IDLE
Parse:
IDLE UH ROOT
Input: To be considered a candidate for distributed indexing , the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents .
Parse:
be VB ROOT
 +-- considered VBN advcl
 |   +-- To TO aux
 |   +-- be VB auxpass
 |   +-- candidate NN xcomp
 |       +-- a DT det
 |       +-- for IN prep
 |           +-- indexing NN pobj
 |               +-- distributed VBN amod
 +-- , , punct
 +-- usage NN nsubj
 |   +-- the DT det
 |   +-- overall JJ amod
 |   +-- CPU NN nn
 +-- must MD aux
 +-- at IN prep
 |   +-- minimum NN pobj
 |       +-- a DT det
 |       +-- to IN prep
 |           +-- all DT pobj
 +-- for IN prep
 |   +-- indexing NN pobj
 |       +-- dedicated JJ amod
 |       +-- of IN prep
 |           +-- documents NNS pobj
 |               +-- the DT det
 |               +-- distributed VBN amod
 +-- . . punct
Input: If this is the case , the node will respond with an IDLE command .
Parse:
respond VB ROOT
 +-- case NN advcl
 |   +-- If IN mark
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- the DT det
 +-- , , punct
 +-- node NN nsubj
 |   +-- the DT det
 +-- will MD aux
 +-- with IN prep
 |   +-- command NN pobj
 |       +-- an DT det
 |       +-- IDLE NNP nn
 +-- . . punct
Input: INCOMING FILE
Parse:
INCOMING VBG ROOT
 +-- FILE . punct
Input: To do this , it sends an INCOMING FILE message , which contains the name of the file as well as the size in bytes .
Parse:
sends VBZ ROOT
 +-- do VB advcl
 |   +-- To TO aux
 |   +-- this DT dobj
 +-- , , punct
 +-- it PRP nsubj
 +-- message NN dobj
 |   +-- an DT det
 |   +-- INCOMING NN amod
 |   +-- FILE NNP nn
 |   +-- , , punct
 |   +-- contains VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- name NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- file NN pobj
 |           |       +-- the DT det
 |           +-- well RB cc
 |           |   +-- as RB advmod
 |           |   +-- as IN mwe
 |           +-- size NN conj
 |               +-- the DT det
 |               +-- in IN prep
 |                   +-- bytes NNS pobj
 +-- . . punct
Input: After the INCOMING FILE command has been sent , the initiating node will begin to stream the file to the other node .
Parse:
begin VB ROOT
 +-- sent VBN advcl
 |   +-- After IN mark
 |   +-- command NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- INCOMING NNP nn
 |   |   +-- FILE NNP nn
 |   +-- has VBZ aux
 |   +-- been VBN auxpass
 +-- , , punct
 +-- node NN nsubj
 |   +-- the DT det
 |   +-- initiating VBG amod
 +-- will MD aux
 +-- stream VB xcomp
 |   +-- to TO aux
 |   +-- file NN dobj
 |   |   +-- the DT det
 |   +-- to IN prep
 |       +-- node NN pobj
 |           +-- the DT det
 |           +-- other JJ amod
 +-- . . punct
Input: The initiating node will loop through the files that are to be sent to the other node ; each file stream being preceded by the INCOMING FILE command with the appropriate parameters .
Parse:
loop VB ROOT
 +-- node NN nsubj
 |   +-- The DT det
 |   +-- initiating VBG amod
 +-- will MD aux
 +-- through IN prep
 |   +-- files NNS pobj
 |       +-- the DT det
 |       +-- are VBP rcmod
 |           +-- that WDT nsubj
 |           +-- sent VBN xcomp
 |               +-- to TO aux
 |               +-- be VB auxpass
 |               +-- to IN prep
 |                   +-- node NN pobj
 |                       +-- the DT det
 |                       +-- other JJ amod
 +-- ; : punct
 +-- stream NN parataxis
 |   +-- file NN nsubj
 |   |   +-- each DT det
 |   +-- preceded VBN partmod
 |       +-- being VBG auxpass
 |       +-- by IN prep
 |       |   +-- command NN pobj
 |       |       +-- the DT det
 |       |       +-- INCOMING NNP nn
 |       |       +-- FILE NNP nn
 |       +-- with IN prep
 |           +-- parameters NNS pobj
 |               +-- the DT det
 |               +-- appropriate JJ amod
 +-- . . punct
Input: INDEX FILE
Parse:
INDEX NNP ROOT
 +-- FILE . punct
Input: The index is comprised of multiple files , which exist on the file system of the indexing node .
Parse:
comprised VBN ROOT
 +-- index NN nsubjpass
 |   +-- The DT det
 +-- is VBZ auxpass
 +-- of IN prep
 |   +-- files NNS pobj
 |       +-- multiple JJ amod
 |       +-- , , punct
 |       +-- exist VBP rcmod
 |           +-- which WDT nsubj
 |           +-- on IN prep
 |               +-- system NN pobj
 |                   +-- the DT det
 |                   +-- file NN nn
 |                   +-- of IN prep
 |                       +-- node NN pobj
 |                           +-- the DT det
 |                           +-- indexing NN nn
 +-- . . punct
Input: As with the INCOMING FILE command , the indexing node streams each index file after sending an INDEX FILE command .
Parse:
streams VBZ ROOT
 +-- As IN prep
 |   +-- with IN pcomp
 |       +-- command NN pobj
 |           +-- the DT det
 |           +-- INCOMING NN nn
 |           +-- FILE NNP nn
 +-- , , punct
 +-- node NN nsubj
 |   +-- the DT det
 |   +-- indexing NN nn
 +-- file NN dobj
 |   +-- each DT det
 |   +-- index NN nn
 +-- after IN prep
 |   +-- sending VBG pcomp
 |       +-- command NN dobj
 |           +-- an DT det
 |           +-- INDEX NNP nn
 |           +-- FILE NNP nn
 +-- . . punct
Input: The INDEX FILE command has two parameters
Parse:
has VBZ ROOT
 +-- command NN nsubj
 |   +-- The DT det
 |   +-- INDEX NNP nn
 |   +-- FILE NNP nn
 +-- parameters NNS dobj
     +-- two CD num
Input: SEND COMPLETE
Parse:
COMPLETE NNP ROOT
 +-- SEND NNP nn
Input: Once the initiating node is finished sending the set of documents to be indexed , it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files .
Parse:
send VB ROOT
 +-- finished VBN advcl
 |   +-- Once IN mark
 |   +-- node NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- initiating NN amod
 |   +-- is VBZ auxpass
 |   +-- sending VBG xcomp
 |       +-- set NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- documents NNS pobj
 |                   +-- indexed VBN infmod
 |                       +-- to TO aux
 |                       +-- be VB auxpass
 +-- , , punct
 +-- it PRP nsubj
 +-- will MD aux
 +-- then RB advmod
 +-- command NN dobj
 |   +-- a DT det
 |   +-- COMPLETE NNP nn
 |       +-- SEND NNP nn
 +-- indicating VBG xcomp
 |   +-- to IN prep
 |   |   +-- node NN pobj
 |   |       +-- the DT det
 |   |       +-- indexing NN nn
 |   +-- are VBP ccomp
 |       +-- that IN mark
 |       +-- there EX expl
 |       +-- files NNS nsubj
 |       |   +-- no DT det
 |       |   +-- more JJR amod
 |       +-- and CC cc
 |       +-- proceed VB conj
 |           +-- node NN nsubj
 |           |   +-- the DT det
 |           +-- can MD aux
 |           +-- with IN prep
 |               +-- indexing VBG pcomp
 |                   +-- files NNS dobj
 |                       +-- the DT det
 +-- . . punct
Input: In the case of the initiating node sending the index files , the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index .
Parse:
complete VB ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- node NN pobj
 |               +-- the DT det
 |               +-- initiating VBG amod
 |               +-- sending VBG partmod
 |                   +-- files NNS dobj
 |                       +-- the DT det
 |                       +-- index NN nn
 +-- , , punct
 +-- node NN nsubj
 |   +-- the DT det
 |   +-- indexing NN nn
 +-- will MD aux
 +-- transfer NN dobj
 |   +-- the DT det
 |   +-- with IN prep
 |   |   +-- command NN pobj
 |   |       +-- the DT det
 |   |       +-- COMPLETE NNP nn
 |   |           +-- SEND NNP nn
 |   +-- indicating VBG partmod
 |       +-- to IN prep
 |           +-- node NN pobj
 |               +-- the DT det
 |               +-- initiating NN amod
 |               +-- are VBP ccomp
 |                   +-- that IN mark
 |                   +-- there EX expl
 |                   +-- files NNS nsubj
 |                       +-- no DT det
 |                       +-- more JJR amod
 |                       +-- index NN nn
 |                       +-- sent VBN infmod
 |                       |   +-- to TO aux
 |                       |   +-- be VB auxpass
 |                       +-- and CC cc
 |                       +-- assemble VB conj
 |                           +-- node NN nsubj
 |                           |   +-- the DT det
 |                           |   +-- initiating NN nn
 |                           +-- can MD aux
 |                           +-- then RB advmod
 |                           +-- files NNS dobj
 |                           |   +-- those DT det
 |                           |   +-- index NN nn
 |                           +-- into IN prep
 |                               +-- index NN pobj
 |                                   +-- the DT det
 |                                   +-- main JJ amod
 +-- . . punct
Input: The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process .
Parse:
responsible JJ ROOT
 +-- NodeController NNP nsubj
 |   +-- The DT det
 +-- is VBZ cop
 +-- for IN prep
 |   +-- setting VBG pcomp
 |       +-- up RP prt
 |       +-- connections NNS dobj
 |           +-- with IN prep
 |           |   +-- nodes NNS pobj
 |           |       +-- in IN prep
 |           |           +-- state NN pobj
 |           |               +-- the DT det
 |           |               +-- idle JJ amod
 |           +-- distribute VB infmod
 |               +-- to TO aux
 |               +-- process NN dobj
 |                   +-- the DT det
 |                   +-- indexing NN nn
 +-- . . punct
Input: Using JXTA -LRB- 5 -RRB- , the node controller will obtain a set of nodes .
Parse:
obtain VB ROOT
 +-- Using VBG partmod
 |   +-- JXTA NNP dobj
 |       +-- -LRB- -LRB- punct
 |       +-- 5 CD dep
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- controller NN nsubj
 |   +-- the DT det
 |   +-- node NN nn
 +-- will MD aux
 +-- set NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- nodes NNS pobj
 +-- . . punct
Input: This set of nodes is iterated and each one is sent the IDLE QUERY command .
Parse:
iterated VBN ROOT
 +-- set NN nsubjpass
 |   +-- This DT det
 |   +-- of IN prep
 |       +-- nodes NNS pobj
 +-- is VBZ auxpass
 +-- and CC cc
 +-- sent VBN conj
 |   +-- one CD nsubjpass
 |   |   +-- each DT det
 |   +-- is VBZ auxpass
 |   +-- command NN dobj
 |       +-- the DT det
 |       +-- IDLE NN nn
 |       +-- QUERY NNP nn
 +-- . . punct
Input: The nodes that respond with idle are then collected .
Parse:
collected VBN ROOT
 +-- nodes NNS nsubjpass
 |   +-- The DT det
 |   +-- respond VBP rcmod
 |       +-- that WDT nsubj
 |       +-- with IN prep
 |           +-- idle NN pobj
 +-- are VBP auxpass
 +-- then RB advmod
 +-- . . punct
Input: The set of idle nodes includes the node initiating the distributed indexing process , referred to as the local node .
Parse:
includes VBZ ROOT
 +-- set NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- nodes NNS pobj
 |           +-- idle JJ amod
 +-- node NN dobj
 |   +-- the DT det
 |   +-- initiating VBG partmod
 |   |   +-- process NN dobj
 |   |       +-- the DT det
 |   |       +-- distributed JJ amod
 |   |       +-- indexing NN nn
 |   +-- , , punct
 |   +-- referred VBD partmod
 |       +-- to IN prep
 |       +-- as IN prep
 |           +-- node NN pobj
 |               +-- the DT det
 |               +-- local JJ amod
 +-- . . punct
Input: Once the collection of idle nodes is obtained , the node updates the set of controllers and evenly divides the set of documents that are to be indexed .
Parse:
updates VBZ ROOT
 +-- obtained VBN advcl
 |   +-- Once IN mark
 |   +-- collection NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- nodes NNS pobj
 |   |           +-- idle JJ amod
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- node NN nsubj
 |   +-- the DT det
 +-- set NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- controllers NNS pobj
 +-- and CC cc
 +-- evenly RB advmod
 +-- divides VBZ conj
 |   +-- set NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- documents NNS pobj
 |               +-- are VBP rcmod
 |                   +-- that WDT nsubj
 |                   +-- indexed VBN xcomp
 |                       +-- to TO aux
 |                       +-- be VB auxpass
 +-- . . punct
Input: For example , if there are 100 documents and 10 nodes -LRB- including the local node -RRB- then each node will have 10 documents to index .
Parse:
have VB ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- are VBP advcl
 |   +-- if IN mark
 |   +-- there EX expl
 |   +-- documents NNS nsubj
 |       +-- 100 CD num
 |       +-- and CC cc
 |       +-- nodes NNS conj
 |       |   +-- 10 CD num
 |       +-- including VBG prep
 |           +-- -LRB- -LRB- punct
 |           +-- node NN pobj
 |           |   +-- the DT det
 |           |   +-- local JJ amod
 |           +-- -RRB- -RRB- punct
 +-- then RB advmod
 +-- node NN nsubj
 |   +-- each DT det
 +-- will MD aux
 +-- documents NNS dobj
 |   +-- 10 CD num
 |   +-- to IN prep
 |       +-- index NN pobj
 +-- . . punct
Input: For each indexing node an instance of the FileSender object is created .
Parse:
created VBN ROOT
 +-- For IN prep
 |   +-- node NN pobj
 |       +-- each DT det
 |       +-- indexing NN nn
 +-- instance NN nsubjpass
 |   +-- an DT det
 |   +-- of IN prep
 |       +-- object NN pobj
 |           +-- the DT det
 |           +-- FileSender NNP nn
 +-- is VBZ auxpass
 +-- . . punct
Input: The FileSender is aware of the set of documents that node is responsible for .
Parse:
aware JJ ROOT
 +-- FileSender NNP nsubj
 |   +-- The DT det
 +-- is VBZ cop
 +-- of IN prep
 |   +-- set NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- documents NNS pobj
 |               +-- responsible JJ rcmod
 |                   +-- that WDT pobj
 |                   +-- node NN nsubj
 |                   +-- is VBZ cop
 |                   +-- for IN prep
 +-- . . punct
Input: Once a FileSender object has been created for each node , the NodeController waits for each FileSender to complete .
Parse:
waits VBZ ROOT
 +-- created VBN advcl
 |   +-- Once IN mark
 |   +-- object NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- FileSender NNP nn
 |   +-- has VBZ aux
 |   +-- been VBN auxpass
 |   +-- for IN prep
 |       +-- node NN pobj
 |           +-- each DT det
 +-- , , punct
 +-- NodeController NNP nsubj
 |   +-- the DT det
 +-- complete VB advcl
 |   +-- for IN mark
 |   +-- FileSender NNP nsubj
 |   |   +-- each DT det
 |   +-- to TO aux
 +-- . . punct
Input: When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler , which maintains the index and the list of FileSenders .
Parse:
take VB ROOT
 +-- completed VBN advcl
 |   +-- When WRB advmod
 |   +-- objects NNS nsubj
 |   |   +-- the DT det
 |   |   +-- FileSender NNP nn
 |   +-- have VBP aux
 +-- NodeController NNP nsubj
 |   +-- the DT det
 +-- will MD aux
 +-- indexes NNS dobj
 |   +-- the DT det
 |   +-- resultant JJ amod
 +-- from IN prep
 |   +-- node NN pobj
 |       +-- 175 CD num
 |       +-- each DT det
 +-- and CC cc
 +-- pass VB conj
 |   +-- them PRP dobj
 |   +-- to IN prep
 |       +-- instance NN pobj
 |           +-- an DT det
 |           +-- of IN prep
 |               +-- IndexCompiler NNP pobj
 |                   +-- the DT det
 |                   +-- , , punct
 |                   +-- maintains VBZ rcmod
 |                       +-- which WDT nsubj
 |                       +-- index NN dobj
 |                           +-- the DT det
 |                           +-- and CC cc
 |                           +-- list NN conj
 |                               +-- the DT det
 |                               +-- of IN prep
 |                                   +-- FileSenders NNPS pobj
 +-- . . punct
Input: Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing .
Parse:
return VB ROOT
 +-- completed VBN advcl
 |   +-- Once IN mark
 |   +-- IndexCompiler NNP nsubj
 |   |   +-- the DT det
 |   +-- has VBZ aux
 +-- it PRP nsubj
 +-- will MD aux
 +-- to IN prep
 |   +-- state NN pobj
 |       +-- the DT det
 |       +-- idle JJ amod
 +-- and CC cc
 +-- activate VB conj
 |   +-- scanner NN dobj
 |   |   +-- the DT det
 |   |   +-- directory NN nn
 |   +-- monitor VB xcomp
 |       +-- to TO aux
 |       +-- set NN dobj
 |           +-- the DT det
 |           +-- owned VBN amod
 |           |   +-- locally RB advmod
 |           +-- of IN prep
 |               +-- documents NNS pobj
 |                   +-- for IN prep
 |                       +-- changes NNS pobj
 |                           +-- require VB rcmod
 |                               +-- that WDT nsubj
 |                               +-- may MD aux
 |                               +-- reindexing VBG dobj
 +-- . . punct
Input: The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine -LRB- 7 -RRB- .
Parse:
responsible JJ ROOT
 +-- NodeIndexer NNP nsubj
 |   +-- The DT det
 +-- is VBZ cop
 +-- for IN prep
 |   +-- receiving VBG pcomp
 |       +-- documents NNS dobj
 |       |   +-- sent VBN partmod
 |       |       +-- to IN prep
 |       |       |   +-- it PRP pobj
 |       |       +-- by IN prep
 |       |           +-- node NN pobj
 |       |               +-- the DT det
 |       |               +-- initiating NN nn
 |       +-- and CC cc
 |       +-- then RB advmod
 |       +-- indexing VBG conj
 |           +-- them PRP dobj
 |           +-- using VBG partmod
 |               +-- engine NN dobj
 |                   +-- the DT det
 |                   +-- Lucene NNP nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- 7 CD dep
 |                   +-- -RRB- -RRB- punct
 +-- . . punct
Input: Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index .
Parse:
streamed VBN ROOT
 +-- complete JJ advcl
 |   +-- Once IN mark
 |   +-- indexing NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ cop
 +-- index NN nsubjpass
 |   +-- the DT det
 |   +-- resulting VBG amod
 +-- is VBZ auxpass
 +-- back RB advmod
 |   +-- to IN prep
 |       +-- node NN pobj
 |           +-- the DT det
 |           +-- initiating NN nn
 +-- well RB cc
 |   +-- as RB advmod
 |   +-- as IN mwe
 +-- compiled VBN conj
 |   +-- in IN prep
 |       +-- index NN pobj
 |           +-- the DT det
 |           +-- nodes NNS nn
 |           |   +-- indexer NN nn
 |           +-- own JJ amod
 |           +-- local JJ amod
 +-- . . punct
Input: Before initiating the indexing process it must be sent an IDLE QUERY message .
Parse:
sent VBN ROOT
 +-- Before IN prep
 |   +-- initiating VBG pcomp
 |       +-- process NN dobj
 |           +-- the DT det
 |           +-- indexing NN nn
 +-- it PRP nsubjpass
 +-- must MD aux
 +-- be VB auxpass
 +-- message NN dobj
 |   +-- an DT det
 |   +-- IDLE NN amod
 |   +-- QUERY JJ amod
 +-- . . punct
Input: This is the first command that sets off the indexing process .
Parse:
command NN ROOT
 +-- This DT nsubj
 +-- is VBZ cop
 +-- the DT det
 +-- first JJ amod
 +-- sets VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- off RP prt
 |   +-- process NN dobj
 |       +-- the DT det
 |       +-- indexing NN nn
 +-- . . punct
Input: The indexer node will determine whether it is considered idle based on the current CPU usage .
Parse:
determine VB ROOT
 +-- node NN nsubj
 |   +-- The DT det
 |   +-- indexer NN nn
 +-- will MD aux
 +-- considered VBN ccomp
 |   +-- whether IN mark
 |   +-- it PRP nsubjpass
 |   +-- is VBZ auxpass
 |   +-- idle NN xcomp
 |       +-- based VBN partmod
 |           +-- on IN prep
 |               +-- usage NN pobj
 |                   +-- the DT det
 |                   +-- current JJ amod
 |                   +-- CPU NN nn
 +-- . . punct
Input: As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command .
Parse:
used VBN ROOT
 +-- outlined VBN advcl
 |   +-- As IN mark
 |   +-- in IN prep
 |       +-- section NN pobj
 |           +-- the DT det
 |           +-- protocol NN nn
 +-- if IN mark
 +-- node NN nsubjpass
 |   +-- the DT det
 +-- is VBZ aux
 +-- not RB neg
 +-- being VBG auxpass
 +-- and CC cc
 +-- has VBZ conj
 |   +-- percentage NN dobj
 |       +-- a DT det
 |       +-- low JJ amod
 |       +-- overall JJ amod
 |       +-- usage NN nn
 |       |   +-- CPU NN nn
 |       +-- return VB rcmod
 |           +-- it PRP nsubj
 |           +-- will MD aux
 |           +-- IDLE PRP dobj
 |           +-- to IN prep
 |               +-- command NN pobj
 |                   +-- the DT det
 |                   +-- IDLE NN nn
 |                   +-- QUERY NN nn
 +-- . . punct
Input: If the indexer nodes CPU usage is above 50 % for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY .
Parse:
considered VBN ROOT
 +-- nodes VBZ advcl
 |   +-- If IN mark
 |   +-- indexer NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ ccomp
 |   |   +-- usage NN nsubj
 |   |   |   +-- CPU , nn
 |   |   +-- above IN prep
 |   |       +-- % NN pobj
 |   |           +-- 50 CD num
 |   +-- for IN prep
 |       +-- amount NN pobj
 |           +-- a DT det
 |           +-- specified JJ amod
 |           +-- of IN prep
 |               +-- time NN pobj
 +-- it PRP nsubjpass
 +-- is VBZ auxpass
 +-- then RB advmod
 +-- busy JJ xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 +-- and CC cc
 +-- respond VB conj
 |   +-- will MD aux
 |   +-- to IN prep
 |   |   +-- command NN pobj
 |   |       +-- the DT det
 |   |       +-- QUERY NNP nn
 |   |           +-- IDLE NNP nn
 |   +-- with IN prep
 |       +-- BUSY NNP pobj
 +-- . . punct
Input: If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node .
Parse:
returns VBZ ROOT
 +-- determined VBN advcl
 |   +-- If IN mark
 |   +-- node NN nsubjpass
 |   |   +-- a DT det
 |   +-- is VBZ auxpass
 |   +-- busy JJ acomp
 +-- it PRP nsubj
 +-- to IN prep
 |   +-- state NN pobj
 |       +-- its PRP$ poss
 |       +-- listening NN nn
 +-- waiting VBG xcomp
 |   +-- for IN prep
 |   |   +-- QUERY NNP pobj
 |   |       +-- another DT det
 |   |       +-- IDLE NN nn
 |   +-- from IN prep
 |       +-- node NN pobj
 |           +-- another DT det
 |           +-- initiating VBG amod
 +-- . . punct
Input: If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing .
Parse:
enter VB ROOT
 +-- determined VBN advcl
 |   +-- If IN mark
 |   +-- node NN nsubjpass
 |   |   +-- the DT det
 |   +-- is VBZ auxpass
 |   +-- idle JJ xcomp
 |       +-- to TO aux
 |       +-- be VB cop
 +-- it PRP nsubj
 +-- will MD aux
 +-- state NN dobj
 |   +-- the DT det
 |   +-- receive VB rcmod
 |       +-- where WRB advmod
 |       +-- it PRP nsubj
 |       +-- will MD aux
 |       +-- files NNS dobj
 |       +-- from IN prep
 |       |   +-- node NN pobj
 |       |       +-- the DT det
 |       |       +-- initiating VBG amod
 |       +-- responsible JJ ccomp
 |           +-- that IN mark
 |           +-- it PRP nsubj
 |           +-- is VBZ cop
 |           +-- for IN prep
 |               +-- indexing NN pobj
 +-- . . punct
Input: Once all of the files are received by the initiating node , indicated by a SEND COMPLETE message , it starts an instance of the Lucene indexing engine .
Parse:
starts VBZ ROOT
 +-- received VBN advcl
 |   +-- Once IN mark
 |   +-- all DT nsubjpass
 |   |   +-- of IN prep
 |   |       +-- files NNS pobj
 |   |           +-- the DT det
 |   +-- are VBP auxpass
 |   +-- by IN prep
 |       +-- node NN pobj
 |           +-- the DT det
 |           +-- initiating VBG amod
 |           +-- , , punct
 |           +-- indicated VBN partmod
 |               +-- by IN prep
 |                   +-- message NN pobj
 |                       +-- a DT det
 |                       +-- COMPLETE NNP nn
 |                           +-- SEND NNP nn
 +-- , , punct
 +-- it PRP nsubj
 +-- instance NN dobj
 |   +-- an DT det
 |   +-- of IN prep
 |       +-- engine NN pobj
 |           +-- the DT det
 |           +-- Lucene NNP nn
 |           +-- indexing NN nn
 +-- . . punct
Input: The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of .
Parse:
stored VBN ROOT
 +-- files NNS nsubjpass
 |   +-- The DT det
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- directory NN pobj
 |       +-- a DT det
 |       +-- temporary JJ amod
 |       +-- separate JJ amod
 |           +-- from IN prep
 |               +-- documents NNS pobj
 |                   +-- the DT det
 |                   +-- nodes NNS nn
 |                   +-- local JJ amod
 |                   +-- responsible JJ rcmod
 |                       +-- that WDT dobj
 |                       +-- it PRP nsubj
 |                       +-- is VBZ cop
 |                       +-- for IN prep
 |                           +-- maintaining VBG pcomp
 |                               +-- index NN dobj
 |                                   +-- an DT det
 |                                   +-- of IN prep
 +-- . . punct
Input: The Lucene index writer then indexes all of the transferred files .
Parse:
indexes VBZ ROOT
 +-- writer NN nsubj
 |   +-- The DT det
 |   +-- index NN nn
 |       +-- Lucene NNP nn
 +-- then RB advmod
 +-- all DT dobj
 |   +-- of IN prep
 |       +-- files NNS pobj
 |           +-- the DT det
 |           +-- transferred VBN amod
 +-- . . punct
Input: The index is stored on the drive within a temporary directory separate from the current index .
Parse:
stored VBN ROOT
 +-- index NN nsubjpass
 |   +-- The DT det
 +-- is VBZ auxpass
 +-- on IN prep
 |   +-- drive NN pobj
 |       +-- the DT det
 |       +-- within IN prep
 |           +-- directory NN pobj
 |               +-- a DT det
 |               +-- temporary JJ amod
 |               +-- separate JJ amod
 |                   +-- from IN prep
 |                       +-- index NN pobj
 |                           +-- the DT det
 |                           +-- current JJ amod
 +-- . . punct
Input: After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node .
Parse:
enters VBZ ROOT
 +-- completes VBZ advcl
 |   +-- After IN mark
 |   +-- indexing NN nsubj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- files NNS pobj
 |               +-- the DT det
 +-- node NN nsubj
 |   +-- the DT det
 |   +-- indexer NN nn
 +-- state NN dobj
 |   +-- the DT det
 |   +-- sent VBN rcmod
 |       +-- where WRB advmod
 |       +-- files NNS nsubjpass
 |       |   +-- the DT det
 |       |   +-- index NN nn
 |       +-- are VBP auxpass
 |       +-- back RB advmod
 |           +-- to IN prep
 |               +-- node NN pobj
 |                   +-- the DT det
 |                   +-- initiating VBG amod
 +-- . . punct
Input: The indexer node loops through all of the files created by Lucene '' s IndexWriter and streams them to the initiating node .
Parse:
loops VBZ ROOT
 +-- node NN nsubj
 |   +-- The DT det
 |   +-- indexer NN nn
 +-- through IN prep
 |   +-- all DT pobj
 |       +-- of IN prep
 |           +-- files NNS pobj
 |               +-- the DT det
 |               +-- created VBN partmod
 |                   +-- by IN prep
 |                       +-- IndexWriter NNP pobj
 |                           +-- Lucene NNP poss
 |                               +-- '' '' punct
 |                               +-- s POS possessive
 +-- and CC cc
 +-- streams VBZ conj
 |   +-- them PRP dobj
 |   +-- to IN prep
 |       +-- node NN pobj
 |           +-- the DT det
 |           +-- initiating VBG amod
 +-- . . punct
Input: Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files .
Parse:
merged VBN ROOT
 +-- sent VBN advcl
 |   +-- Once IN mark
 |   +-- files NNS nsubjpass
 |   |   +-- these DT det
 |   +-- are VBP auxpass
 |   +-- back RB advmod
 +-- index NN nsubjpass
 |   +-- that DT det
 +-- is VBZ auxpass
 +-- then RB advmod
 +-- into IN prep
 |   +-- nodes NNS pobj
 |       +-- the DT det
 |       +-- indexer NN nn
 +-- index NN dobj
 |   +-- own JJ amod
 |   +-- full JJ amod
 |   +-- of IN prep
 |       +-- files NNS pobj
 |           +-- the DT det
 |           +-- existing VBG amod
 +-- . . punct
Input: It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process .
Parse:
enters VBZ ROOT
 +-- It PRP nsubj
 +-- then RB advmod
 +-- state NN dobj
 |   +-- the DT det
 |   +-- idle JJ amod
 |   +-- listen VB rcmod
 |       +-- where WRB advmod
 |       +-- it PRP nsubj
 |       +-- will MD aux
 |       +-- then RB advmod
 |       +-- for IN prep
 |           +-- nodes NNS pobj
 |               +-- any DT det
 |               +-- other JJ amod
 |               +-- required VBD rcmod
 |                   +-- that WDT nsubj
 |                   +-- distributing VBG xcomp
 |                       +-- process NN dobj
 |                           +-- the DT det
 |                           +-- indexing NN nn
 +-- . . punct
Input: The FileSender object is the initiating node equivalent of the indexer node .
Parse:
equivalent NN ROOT
 +-- object NN nsubj
 |   +-- The DT det
 |   +-- FileSender NNP nn
 +-- is VBZ cop
 +-- the DT det
 +-- initiating JJ amod
 +-- node NN nn
 +-- of IN prep
 |   +-- node NN pobj
 |       +-- the DT det
 |       +-- indexer NN nn
 +-- . . punct
Input: It initiates the communication between the initiating node and the node that will assist in the distributed indexing .
Parse:
initiates VBZ ROOT
 +-- It PRP nsubj
 +-- communication NN dobj
 |   +-- the DT det
 |   +-- between IN prep
 |       +-- node NN pobj
 |           +-- the DT det
 |           +-- initiating NN nn
 |           +-- and CC cc
 |           +-- node NN conj
 |               +-- the DT det
 |               +-- assist VB rcmod
 |                   +-- that WDT nsubj
 |                   +-- will MD aux
 |                   +-- in IN prep
 |                       +-- indexing NN pobj
 |                           +-- the DT det
 |                           +-- distributed JJ amod
 +-- . . punct
Input: The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle .
Parse:
runs VBZ ROOT
 +-- node NN nsubj
 |   +-- The DT det
 |   +-- initiating VBG amod
 +-- instances NNS dobj
 |   +-- many JJ amod
 |   +-- of IN prep
 |   |   +-- node NN pobj
 |   |       +-- the DT det
 |   |       +-- FileSender NNP nn
 |   |       +-- one CD num
 |   +-- for IN prep
 |       +-- node NN pobj
 |           +-- each DT det
 |           +-- other JJ amod
 |           +-- determined VBN rcmod
 |               +-- it PRP nsubj
 |               +-- has VBZ aux
 |               +-- idle JJ xcomp
 |                   +-- to TO aux
 |                   +-- be VB cop
 +-- . . punct
Input: Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent .
Parse:
passed VBN ROOT
 +-- Upon IN prep
 |   +-- instantiation NN pobj
 |       +-- of IN prep
 |           +-- FileSender NNP pobj
 |               +-- the DT det
 +-- it PRP nsubjpass
 +-- is VBZ auxpass
 +-- node NN dobj
 |   +-- the DT det
 |   +-- responsible JJ rcmod
 |       +-- that IN dobj
 |       +-- it PRP nsubj
 |       +-- is VBZ cop
 |       +-- for IN prep
 |           +-- contacting VBG pobj
 |               +-- and CC cc
 |               +-- set NN conj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- files NNS pobj
 |                           +-- sent VBN rcmod
 |                               +-- that WDT nsubjpass
 |                               +-- must MD aux
 |                               +-- be VB auxpass
 +-- . . punct
Input: The FileSender '' s first job is to send the files that are to be indexed by the other idle node .
Parse:
is VBZ ROOT
 +-- job NN nsubj
 |   +-- FileSender NNP poss
 |   |   +-- The DT det
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- first JJ amod
 +-- send VB xcomp
 |   +-- to TO aux
 |   +-- files NNS dobj
 |       +-- the DT det
 |       +-- are VBP rcmod
 |           +-- that WDT nsubj
 |           +-- indexed VBN xcomp
 |               +-- to TO aux
 |               +-- be VB auxpass
 |               +-- by IN prep
 |                   +-- node NN pobj
 |                       +-- the DT det
 |                       +-- other JJ amod
 |                       +-- idle NN nn
 +-- . . punct
Input: The files are streamed one at a time to the other node .
Parse:
streamed VBN ROOT
 +-- files NNS nsubjpass
 |   +-- The DT det
 +-- are VBP auxpass
 +-- one CD dobj
 +-- at IN prep
 |   +-- time NN pobj
 |       +-- a DT det
 |       +-- to IN prep
 |           +-- node NN pobj
 |               +-- the DT det
 |               +-- other JJ amod
 +-- . . punct
Input: It sends each file using the INCOMING FILE command .
Parse:
sends VBZ ROOT
 +-- It PRP nsubj
 +-- file NN dobj
 |   +-- each DT det
 +-- using VBG xcomp
 |   +-- command NN dobj
 |       +-- the DT det
 |       +-- INCOMING NNP nn
 |       +-- FILE NNP nn
 +-- . . punct
Input: With that command it sends the name of the file being sent and the size in bytes .
Parse:
sends VBZ ROOT
 +-- With IN prep
 |   +-- command NN pobj
 |       +-- that DT det
 +-- it PRP nsubj
 +-- name NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- file NN pobj
 |           +-- the DT det
 |           +-- sent VBN partmod
 |           |   +-- being VBG auxpass
 |           +-- and CC cc
 |           +-- size NN conj
 |               +-- the DT det
 |               +-- in IN prep
 |                   +-- bytes NNS pobj
 +-- . . punct
Input: Once all files have been sent the FileSender sends the SEND COMPLETE command .
Parse:
sends VBZ ROOT
 +-- sent VBN advcl
 |   +-- Once IN mark
 |   +-- files NNS nsubjpass
 |   |   +-- all DT det
 |   +-- have VBP aux
 |   +-- been VBN auxpass
 +-- FileSender NNP nsubj
 |   +-- the DT det
 +-- command NN dobj
 |   +-- the DT det
 |   +-- SEND NNP nn
 |   +-- COMPLETE NNP nn
 +-- . . punct
Input: The FileSender creates an instance of Lucene '' s IndexWriter and prepares to create the index in a temporary directory on the file system .
Parse:
creates VBZ ROOT
 +-- FileSender NNP nsubj
 |   +-- The DT det
 +-- instance NN dobj
 |   +-- an DT det
 |   +-- of IN prep
 |       +-- IndexWriter NNP pobj
 |           +-- Lucene NNP poss
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- and CC cc
 +-- prepares VBZ conj
 |   +-- create VB xcomp
 |       +-- to TO aux
 |       +-- index NN dobj
 |       |   +-- the DT det
 |       +-- in IN prep
 |           +-- directory NN pobj
 |               +-- a DT det
 |               +-- temporary JJ amod
 |               +-- on IN prep
 |                   +-- system NN pobj
 |                       +-- the DT det
 |                       +-- file NN nn
 +-- . . punct
Input: The FileSender will begin to receive the files that are to be saved within the index .
Parse:
begin VB ROOT
 +-- FileSender NNP nsubj
 |   +-- The DT det
 +-- will MD aux
 +-- receive VB xcomp
 |   +-- to TO aux
 |   +-- files NNS dobj
 |       +-- the DT det
 |       +-- are VBP rcmod
 |           +-- that WDT nsubj
 |           +-- saved VBN xcomp
 |               +-- to TO aux
 |               +-- be VB auxpass
 |               +-- within IN prep
 |                   +-- index NN pobj
 |                       +-- the DT det
 +-- . . punct
Input: It receives an INDEX FILE command with the name of the files and the size in bytes .
Parse:
receives VBZ ROOT
 +-- It PRP nsubj
 +-- command NN dobj
 |   +-- an DT det
 |   +-- INDEX NNP nn
 |   +-- FILE NNP nn
 +-- with IN prep
 |   +-- name NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- files NNS pobj
 |       |       +-- the DT det
 |       +-- and CC cc
 |       +-- size NN conj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- bytes NNS pobj
 +-- . . punct
Input: This file is then streamed into the temporary index directory on the FileSender node .
Parse:
streamed VBN ROOT
 +-- file NN nsubjpass
 |   +-- This DT det
 +-- is VBZ auxpass
 +-- then RB advmod
 +-- into IN prep
 |   +-- directory NN pobj
 |       +-- the DT det
 |       +-- temporary JJ amod
 |       +-- index NN nn
 |       +-- on IN prep
 |           +-- node NN pobj
 |               +-- the DT det
 |               +-- FileSender NNP nn
 +-- . . punct
Input: After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index .
Parse:
notifies VBZ ROOT
 +-- completed VBN advcl
 |   +-- After IN mark
 |   +-- transfer NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- files NNS pobj
 |   |           +-- the DT det
 |   |           +-- index NN nn
 |   +-- has VBZ aux
 |   +-- been VBN auxpass
 +-- FileSender NNP nsubj
 |   +-- the DT det
 +-- instance NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- compiler NN pobj
 |           +-- the DT det
 |           +-- index NN nn
 +-- ready JJ ccomp
 |   +-- that IN mark
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- combine VB xcomp
 |       +-- to TO aux
 |       +-- index NN dobj
 |           +-- the DT det
 +-- . . punct
Input: Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node .
Parse:
has VBZ ROOT
 +-- instance NN nsubj
 |   +-- Each DT det
 |   +-- of IN prep
 |       +-- FileSender NNP pobj
 |           +-- the DT det
 +-- section NN dobj
 |   +-- its PRP$ poss
 |   +-- own JJ amod
 |   +-- unique JJ amod
 |   +-- of IN prep
 |   |   +-- space NN pobj
 |   |       +-- temporary JJ amod
 |   +-- store VB infmod
 |       +-- to TO aux
 |       +-- index NN dobj
 |           +-- the DT det
 |           +-- transferred VBN rcmod
 |               +-- that WDT nsubjpass
 |               +-- has VBZ aux
 |               +-- been VBN auxpass
 |               +-- back RB advmod
 |                   +-- from IN prep
 |                       +-- node NN pobj
 |                           +-- the DT det
 |                           +-- indexing NN nn
 +-- . . punct
Input: When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. .
Parse:
pass VB ROOT
 +-- notifying VBG advcl
 |   +-- When WRB advmod
 |   +-- IndexCompiler NNP dobj
 |       +-- the DT det
 +-- it PRP nsubj
 +-- will MD aux
 +-- also RB advmod
 +-- location NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- location NN pobj
 |           +-- the DT det
 |           +-- particular JJ amod
 |           +-- FileSenders NNPS nn
 |           +-- directory NN nn
 |           +-- of IN prep
 |               +-- index. NN pobj
 |                   +-- that DT det
 +-- . . punct
