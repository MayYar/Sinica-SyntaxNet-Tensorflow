Input: It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita .
Parse:
difficult JJ ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- benchmark VB xcomp
 |   +-- to TO aux
 |   +-- objectively RB advmod
 |   +-- results NNS dobj
 |       +-- the DT det
 |       +-- obtained VBN partmod
 |           +-- through IN prep
 |               +-- Apocrita NNP pobj
 +-- is VBZ advcl
 |   +-- because IN mark
 |   +-- there EX expl
 |   +-- system NN nsubj
 |       +-- no DT det
 |       +-- other JJ amod
 |       +-- available JJ amod
 |           +-- currently RB advmod
 |           +-- with IN prep
 |               +-- goals NNS pobj
 |                   +-- the DT det
 |                   +-- same JJ amod
 |                   +-- as IN prep
 |                       +-- Apocrita NNP pobj
 +-- . . punct
Input: We have , however , evaluated the performance of the critical sections of the system .
Parse:
evaluated VBD ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- , , punct
 +-- however RB advmod
 +-- performance NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- sections NNS pobj
 |           +-- the DT det
 |           +-- critical JJ amod
 |           +-- of IN prep
 |               +-- system NN pobj
 |                   +-- the DT det
 +-- . . punct
Input: The critical sections were determined to be the processes that are the most time intensive .
Parse:
determined VBN ROOT
 +-- sections NNS nsubjpass
 |   +-- The DT det
 |   +-- critical JJ amod
 +-- were VBD auxpass
 +-- processes NNS xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- time NN rcmod
 |       +-- that WDT nsubj
 |       +-- are VBP cop
 |       +-- the DT det
 |       +-- most JJS amod
 |       +-- intensive JJ amod
 +-- . . punct
Input: The evaluation was completed on standard lab computers on a 100Mb s Ethernet LAN ; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM .
Parse:
completed VBN ROOT
 +-- evaluation NN nsubjpass
 |   +-- The DT det
 +-- was VBD auxpass
 +-- on IN prep
 |   +-- computers NNS pobj
 |       +-- standard JJ amod
 |       +-- lab NN nn
 |       +-- on IN prep
 |           +-- LAN NNP pobj
 |               +-- a DT det
 |               +-- 100Mb CD poss
 |               |   +-- s POS possessive
 |               +-- Ethernet NNP nn
 +-- ; : punct
 +-- run VBP parataxis
 |   +-- machines NNS nsubj
 |   |   +-- the DT det
 |   +-- XP NNP dobj
 |   |   +-- Windows NNP nn
 |   +-- with IN prep
 |       +-- CPU NN pobj
 |           +-- a DT det
 |           +-- Pentium NNP nn
 |           |   +-- 4 CD num
 |           +-- running VBG partmod
 |               +-- at IN prep
 |               |   +-- 2.4GHz CD pobj
 |               +-- with IN prep
 |                   +-- MB NNP pobj
 |                       +-- 512 CD num
 |                       +-- of IN prep
 |                           +-- RAM NN pobj
 +-- . . punct
Input: The indexing time has been run against both
Parse:
run VBN ROOT
 +-- time NN nsubjpass
 |   +-- The DT det
 |   +-- indexing NN nn
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- against IN prep
     +-- both DT pobj
Input: Each document ranges in size between 4KB and 8KB .
Parse:
ranges VBZ ROOT
 +-- document NN nsubj
 |   +-- Each DT det
 +-- in IN prep
 |   +-- size NN pobj
 +-- between IN prep
 |   +-- 4KB CD pobj
 |       +-- and CC cc
 |       +-- 8KB CD conj
 +-- . . punct
Input: As Figure 4 demonstrates , the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically .
Parse:
affects VBZ ROOT
 +-- demonstrates VBZ advcl
 |   +-- As IN mark
 |   +-- Figure NN nsubj
 |       +-- 4 CD num
 +-- , , punct
 +-- number NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- nodes NNS pobj
 |           +-- involved VBN partmod
 |               +-- in IN prep
 |                   +-- process NN pobj
 |                       +-- the DT det
 |                       +-- indexing NN nn
 +-- time NN dobj
 |   +-- the DT det
 |   +-- taken VBN partmod
 |       +-- complete VB xcomp
 |           +-- to TO aux
 |           +-- processsometimes NNS dobj
 |           |   +-- the DT det
 |           |   +-- indexing NN nn
 |           +-- drastically RB advmod
 |               +-- even RB advmod
 +-- . . punct
Input: Figure 4 .
Parse:
Figure NN ROOT
 +-- 4 CD num
 +-- . . punct
Input: Node vs .
Parse:
Node NN ROOT
 +-- vs RB advmod
 +-- . . punct
Input: index time .
Parse:
time NN ROOT
 +-- index NN nn
 +-- . . punct
Input: The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37 % faster than a single indexing node .
Parse:
drastic JJ ROOT
 +-- difference NN nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- going VBG pcomp
 |           +-- from IN prep
 |           |   +-- node NN pobj
 |           |       +-- one CD num
 |           |       +-- indexing NN nn
 |           +-- to IN prep
 |               +-- nodes NNS pobj
 |                   +-- two CD num
 |                   +-- indexing NN nn
 +-- is VBZ cop
 +-- the DT det
 +-- most RBS advmod
 +-- and CC cc
 +-- equates NNS conj
 |   +-- to IN prep
 |   |   +-- time NN pobj
 |   |       +-- an DT det
 |   |       +-- indexing NN nn
 |   +-- faster RBR advmod
 |       +-- % NN npadvmod
 |       |   +-- 37 CD num
 |       +-- than IN prep
 |           +-- node NN pobj
 |               +-- a DT det
 |               +-- single JJ amod
 |               +-- indexing NN nn
 +-- . . punct
Input: The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16 % faster time than two indexing nodes .
Parse:
significant JJ ROOT
 +-- different JJ nsubj
 |   +-- The DT det
 |   +-- between IN prep
 |       +-- nodes NNS pobj
 |           +-- 177 CD num
 |           |   +-- two CD number
 |           +-- indexing NN nn
 |           +-- and CC cc
 |           +-- nodes NNS conj
 |               +-- three CD num
 |               +-- indexing NN nn
 +-- is VBZ cop
 +-- still RB advmod
 +-- and CC cc
 +-- represents VBZ conj
 |   +-- time NN dobj
 |       +-- a DT det
 |       +-- faster JJR amod
 |       |   +-- % NN npadvmod
 |       |       +-- 16 CD num
 |       +-- than IN prep
 |           +-- nodes NNS pobj
 |               +-- two CD num
 |               +-- indexing NN nn
 +-- . . punct
Input: As the number of indexing nodes increases the results are less dramatic .
Parse:
dramatic JJ ROOT
 +-- increases VBZ advcl
 |   +-- As IN mark
 |   +-- number NN nsubj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- nodes NNS pobj
 |               +-- indexing NN nn
 +-- results NNS nsubj
 |   +-- the DT det
 +-- are VBP cop
 +-- less RBR advmod
 +-- . . punct
Input: This can be attributed to the time overhead associated with having many nodes perform indexing .
Parse:
attributed VBN ROOT
 +-- This DT nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- to IN prep
 |   +-- overhead NN pobj
 |       +-- the DT det
 |       +-- time NN nn
 |       +-- associated VBN partmod
 |           +-- with IN prep
 |               +-- having VBG pcomp
 |                   +-- perform VB ccomp
 |                       +-- nodes NNS nsubj
 |                       |   +-- many JJ amod
 |                       +-- indexing NN dobj
 +-- . . punct
Input: The time needed to communicate with a node is constant , so as the number of nodes increases , this constant becomes more prevalent .
Parse:
constant JJ ROOT
 +-- time NN nsubj
 |   +-- The DT det
 |   +-- needed VBD partmod
 |       +-- communicate VB xcomp
 |           +-- to TO aux
 |           +-- with IN prep
 |               +-- node NN pobj
 |                   +-- a DT det
 +-- is VBZ cop
 +-- , , punct
 +-- prevalent JJ advcl
 |   +-- so IN mark
 |   +-- increases NNS advcl
 |   |   +-- as IN mark
 |   |   +-- number NN nsubj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- nodes NNS pobj
 |   +-- , , punct
 |   +-- constant JJ nsubj
 |   |   +-- this DT det
 |   +-- becomes VBZ cop
 |   +-- more RBR advmod
 +-- . . punct
Input: Also , the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases .
Parse:
operation NN ROOT
 +-- Also RB advmod
 +-- , , punct
 +-- complexity NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- joining VBG pcomp
 |           +-- results NNS dobj
 |               +-- the DT det
 |               +-- indexing NN nn
 +-- is VBZ cop
 +-- a DT det
 +-- complex JJ amod
 +-- and CC cc
 +-- complicated VBN conj
 |   +-- is VBZ auxpass
 |   +-- further RB advmod
 |   +-- as IN prep
 |       +-- number NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- increases NNS pobj
 |                   +-- indexing NN nn
 |                   +-- nodes NNS nn
 +-- . . punct
Input: Socket performance is also a very important part of Apocrita .
Parse:
part NN ROOT
 +-- performance NN nsubj
 |   +-- Socket NN nn
 +-- is VBZ cop
 +-- also RB advmod
 +-- a DT det
 +-- important JJ amod
 |   +-- very RB advmod
 +-- of IN prep
 |   +-- Apocrita NNP pobj
 +-- . . punct
Input: Benchmarks were performed using a 65MB file on a system with both the client and server running locally .
Parse:
performed VBN ROOT
 +-- Benchmarks NNS nsubjpass
 +-- were VBD auxpass
 +-- using VBG xcomp
 |   +-- file NN dobj
 |       +-- a DT det
 |       +-- 65MB CD num
 |       +-- on IN prep
 |           +-- system NN pobj
 |               +-- a DT det
 |               +-- with IN prep
 |                   +-- running VBG pcomp
 |                       +-- client NN nsubj
 |                       |   +-- both CC preconj
 |                       |   +-- the DT det
 |                       |   +-- and CC cc
 |                       |   +-- server NN conj
 |                       +-- locally RB advmod
 +-- . . punct
Input: This was done to isolate possible network issues .
Parse:
done VBN ROOT
 +-- This DT nsubjpass
 +-- was VBD auxpass
 +-- isolate VB xcomp
 |   +-- to TO aux
 |   +-- issues NNS dobj
 |       +-- possible JJ amod
 |       +-- network NN nn
 +-- . . punct
Input: Although less drastic , similar results were shown when the client and server run on independent hardware .
Parse:
shown VBN ROOT
 +-- drastic JJ advcl
 |   +-- Although IN mark
 |   +-- less RBR nsubj
 +-- , , punct
 +-- results NNS nsubjpass
 |   +-- similar JJ amod
 +-- were VBD auxpass
 +-- run VB advcl
 |   +-- when WRB advmod
 |   +-- client NN nsubj
 |   |   +-- the DT det
 |   |   +-- and CC cc
 |   |   +-- server NN conj
 |   +-- on IN prep
 |       +-- hardware NN pobj
 |           +-- independent JJ amod
 +-- . . punct
Input: In order to mitigate possible unexpected errors , each test was run 10 times .
Parse:
run VBN ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- mitigate VB infmod
 |           +-- to TO aux
 |           +-- errors NNS dobj
 |               +-- possible JJ amod
 |               +-- unexpected JJ amod
 +-- , , punct
 +-- test NN nsubjpass
 |   +-- each DT det
 +-- was VBD auxpass
 +-- times NNS dobj
 |   +-- 10 CD num
 +-- . . punct
Input: Figure 5 .
Parse:
Figure NN ROOT
 +-- 5 CD num
 +-- . . punct
Input: Java sockets vs .
Parse:
sockets NNS ROOT
 +-- Java JJ nsubj
 +-- vs RB advmod
 +-- . . punct
Input: JXTA sockets .
Parse:
sockets NNS ROOT
 +-- JXTA NNP nn
 +-- . . punct
Input: As Figure 5 demonstrates , the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets .
Parse:
abysmal JJ ROOT
 +-- demonstrates NNS advcl
 |   +-- As IN mark
 |   +-- Figure NN nsubj
 |       +-- 5 CD num
 +-- , , punct
 +-- performance NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- sockets NNS pobj
 |           +-- JXTA NNP nn
 +-- is VBZ cop
 +-- as IN prep
 |   +-- compared VBN pcomp
 |       +-- to IN pcomp
 |           +-- performance NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- sockets NNS pobj
 |                       +-- standard NN amod
 |                       +-- Java NNP nn
 +-- . . punct
Input: The minimum transfer rate obtained using Java sockets is 81 , 945KB s while the minimum transfer rater obtained using JXTA sockets is much lower at 3 , 805KB s .
Parse:
81 CD ROOT
 +-- rate NN nsubj
 |   +-- The DT det
 |   +-- transfer NN nn
 |   |   +-- minimum JJ amod
 |   +-- obtained VBN partmod
 |       +-- using VBG xcomp
 |           +-- sockets NNS dobj
 |               +-- Java NNP nn
 +-- is VBZ cop
 +-- , , punct
 +-- lower JJR advcl
 |   +-- while IN mark
 |   |   +-- 945KB CD poss
 |   |       +-- s POS possessive
 |   +-- rater NN nsubj
 |   |   +-- the DT det
 |   |   +-- transfer NN nn
 |   |   |   +-- minimum JJ amod
 |   |   +-- obtained VBN partmod
 |   |       +-- using VBG xcomp
 |   |           +-- sockets NNS dobj
 |   |               +-- JXTA NNP nn
 |   +-- is VBZ cop
 |   +-- much RB advmod
 |   +-- at IN prep
 |   |   +-- 3 CD pobj
 |   +-- , , punct
 |   +-- 805KB CD dobj
 |       +-- s POS possessive
 +-- . . punct
Input: The maximum transfer rater obtain using Java sockets is 97 , 412KB s while the maximum transfer rate obtained using JXTA sockets is 5 , 530KB s .
Parse:
412KB NNS ROOT
 +-- transfer NN nsubj
 |   +-- The DT det
 |   +-- maximum JJ amod
 |   +-- obtain VB rcmod
 |       +-- rater NN nsubj
 |       +-- using VBG xcomp
 |           +-- sockets NNS dobj
 |               +-- Java NNP nn
 +-- is VBZ cop
 +-- 97 CD num
 +-- , , punct
 +-- 530KB CD dep
 |   +-- s PRP dep
 |   +-- 5 CD advcl
 |   |   +-- while IN mark
 |   |   +-- rate NN nsubj
 |   |   |   +-- the DT det
 |   |   |   +-- maximum JJ amod
 |   |   |   +-- transfer NN nn
 |   |   |   +-- obtained VBN partmod
 |   |   |       +-- using VBG xcomp
 |   |   |           +-- sockets NNS dobj
 |   |   |               +-- JXTA JJ amod
 |   |   +-- is VBZ cop
 |   +-- , , punct
 |   +-- s POS possessive
 +-- . . punct
Input: Finally , the average transfer rate using Java sockets is 87 , 540KB s while the average transfer rate using JXTA sockets is 4 , 293KB s .
Parse:
87 CD ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- rate NN nsubj
 |   +-- the DT det
 |   +-- average JJ amod
 |   +-- transfer NN nn
 |   +-- using VBG partmod
 |       +-- sockets NNS dobj
 |           +-- Java NNP nn
 +-- is VBZ cop
 +-- 540KB CD dep
 |   +-- s POS possessive
 +-- 4 CD advcl
 |   +-- while IN mark
 |   +-- rate NN nsubj
 |   |   +-- the DT det
 |   |   +-- average JJ amod
 |   |   +-- transfer NN nn
 |   |   +-- using VBG partmod
 |   |       +-- sockets NNS dobj
 |   |           +-- JXTA NNP nn
 |   +-- is VBZ cop
 |   +-- , , punct
 |   +-- 293KB CD dep
 |       +-- s POS possessive
 +-- . . punct
Input: The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected .
Parse:
is VBZ ROOT
 +-- problem NN nsubj
 |   +-- The DT det
 |   +-- major JJ amod
 |   +-- found VBD partmod
 |       +-- in IN prep
 |           +-- benchmarks NNS pobj
 |               +-- these DT det
 +-- perform VB ccomp
 |   +-- that IN mark
 |   +-- mechanism NN nsubj
 |   |   +-- the DT det
 |   |   +-- underlying VBG amod
 |   |   +-- transport NN nn
 |   |       +-- network NN nn
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- quickly RB advmod
 |       +-- as RB dep
 |       +-- or CC cc
 |       +-- efficiently RB conj
 |       +-- expected VBN dep
 |           +-- as IN mark
 +-- . . punct
Input: In order to garner a performance increase , the JXTA framework needs to be substituted with a more traditional approach .
Parse:
needs VBZ ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- garner VB infmod
 |           +-- to TO aux
 |           +-- increase NN dobj
 |               +-- a DT det
 |               +-- performance NN nn
 +-- , , punct
 +-- framework NN nsubj
 |   +-- the DT det
 |   +-- JXTA JJ amod
 +-- substituted VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- with IN prep
 |       +-- approach NN pobj
 |           +-- a DT det
 |           +-- traditional JJ amod
 |               +-- more RBR advmod
 +-- . . punct
Input: The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. .
Parse:
bottleneck NN ROOT
 +-- time NN nsubj
 |   +-- The DT det
 |   +-- indexing NN nn
 +-- is VBZ cop
 +-- also RB advmod
 +-- a DT det
 +-- and CC cc
 +-- need VB conj
 |   +-- will MD aux
 |   +-- improved VBN xcomp
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- improved. JJ advcl
 |           +-- for IN mark
 |           +-- quality NN nsubj
 |           |   +-- the DT det
 |           |   +-- overall JJ amod
 |           |   +-- of IN prep
 |           |       +-- Apocrita NNP pobj
 |           +-- to TO aux
 |           +-- be VB cop
 +-- . . punct
