Input: In Section 4.1 we introduce our target application model .
Parse:
introduce VBP ROOT
 +-- In IN prep
 |   +-- Section NN pobj
 |       +-- 4.1 CD num
 +-- we PRP nsubj
 +-- model NN dobj
 |   +-- our PRP$ poss
 |   +-- application NN nn
 |       +-- target NN nn
 +-- . . punct
Input: Next , Section 4.2 presents an abstraction of our node and edge structures whose detailed indexing and cell evaluation methods are explained later in Sections 4.3 and 4.4 .
Parse:
presents VBZ ROOT
 +-- Next RB advmod
 +-- , , punct
 +-- Section NN nsubj
 |   +-- 4.2 CD num
 +-- abstraction NN dobj
 |   +-- an DT det
 |   +-- of IN prep
 |       +-- structures NNS pobj
 |           +-- our PRP$ poss
 |           +-- node NN nn
 |           |   +-- and CC cc
 |           |   +-- edge NN conj
 |           +-- explained VBN rcmod
 |               +-- methods NNS nsubjpass
 |               |   +-- whose WP$ poss
 |               |   +-- detailed JJ amod
 |               |   +-- indexing NN nn
 |               |   |   +-- and CC cc
 |               |   |   +-- cell NN conj
 |               |   +-- evaluation NN nn
 |               +-- are VBP auxpass
 |               +-- later RB advmod
 |                   +-- in IN prep
 |                       +-- 4.3 CD pobj
 |                           +-- Sections NNPS nn
 |                           +-- and CC cc
 |                           +-- 4.4 CD conj
 +-- . . punct
Input: Several optimization issues for edge indexing follow in Section 4.5 .
Parse:
follow NN ROOT
 +-- issues NNS nsubj
 |   +-- Several JJ amod
 |   +-- optimization NN nn
 |   +-- for IN prep
 |       +-- indexing NN pobj
 |           +-- edge NN nn
 +-- in IN prep
 |   +-- Section NN pobj
 |       +-- 4.5 CD num
 +-- . . punct
Input: 4.1 Target Application Our target application assumes both 3D object streaming and sub world hosting .
Parse:
assumes VBZ ROOT
 +-- application NN nsubj
 |   +-- 4.1 CD num
 |   +-- Application NNP nn
 |   |   +-- Target NNP nn
 |   +-- target NN nn
 |       +-- Our PRP$ poss
 +-- hosting VBG dobj
 |   +-- both DT det
 |   +-- 3D CD nn
 |   +-- streaming NN nn
 |   |   +-- object NN nn
 |   |   +-- and CC cc
 |   |   +-- sub NN conj
 |   +-- world NN nn
 +-- . . punct
Input: The sub world hosting is a collaborative virtual environment where every server hosts one sub world , thus constructing a single world .
Parse:
environment NN ROOT
 +-- world NN nsubj
 |   +-- The DT det
 |   +-- sub NN nn
 |   +-- hosting VBG partmod
 +-- is VBZ cop
 +-- a DT det
 +-- collaborative JJ amod
 +-- virtual JJ amod
 +-- hosts VBZ rcmod
 |   +-- where WRB advmod
 |   +-- server NN nsubj
 |   |   +-- every DT det
 |   +-- world NN dobj
 |   |   +-- one CD num
 |   |   +-- sub NN nn
 |   +-- , , punct
 |   +-- constructing VBG partmod
 |       +-- thus RB advmod
 |       +-- world NN dobj
 |           +-- a DT det
 |           +-- single JJ amod
 +-- . . punct
Input: Second Life is the classic example of such an approach .
Parse:
example NN ROOT
 +-- Life NNP nsubj
 |   +-- Second JJ amod
 +-- is VBZ cop
 +-- the DT det
 +-- classic JJ amod
 +-- of IN prep
 |   +-- approach NN pobj
 |       +-- such PDT predet
 |       +-- an DT det
 +-- . . punct
Input: A virtual space is partitioned into equal sized sub worlds .
Parse:
partitioned VBN ROOT
 +-- space NN nsubjpass
 |   +-- A DT det
 |   +-- virtual JJ amod
 +-- is VBZ auxpass
 +-- into IN prep
 |   +-- worlds NNS pobj
 |       +-- equal JJ amod
 |       +-- sized JJ amod
 |       +-- sub NN nn
 +-- . . punct
Input: The sample sub world separated with bold dashed lines in Figure 2 contains four virtual entities
Parse:
contains VBZ ROOT
 +-- world NN nsubj
 |   +-- The DT det
 |   +-- sample NN nn
 |   +-- sub NN nn
 |   +-- separated VBN partmod
 |       +-- with IN prep
 |           +-- lines NNS pobj
 |               +-- bold JJ amod
 |               +-- dashed VBN amod
 |               +-- in IN prep
 |                   +-- Figure NNP pobj
 |                       +-- 2 CD num
 +-- entities NNS dobj
     +-- four CD num
     +-- virtual JJ amod
Input: As mentioned in Section 3 , all object entities -LRB- E1 , E2 , A -RRB- have their own square shaped AOI .
Parse:
have VBP ROOT
 +-- mentioned VBN advcl
 |   +-- As IN mark
 |   +-- in IN prep
 |       +-- Section NN pobj
 |           +-- 3 CD num
 +-- , , punct
 +-- entities NNS nsubj
 |   +-- all DT det
 |   +-- object NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- E1 CD dep
 |   |   +-- , , punct
 |   |   +-- E2 CD amod
 |   |   +-- A DT appos
 |   +-- -RRB- -RRB- punct
 +-- shaped VBN ccomp
 |   +-- square NN nsubj
 |   |   +-- their PRP$ poss
 |   |   +-- own JJ amod
 |   +-- AOI NNP dobj
 +-- . . punct
Input: Two user entities -LRB- S , A -RRB- are associated with individual client machines , -LRB- client S and client A in the figure -RRB- .
Parse:
associated VBN ROOT
 +-- entities NNS nsubjpass
 |   +-- Two CD num
 |   +-- user NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- S NNP dep
 |   |   +-- , , punct
 |   |   +-- A NNP appos
 |   +-- -RRB- -RRB- punct
 +-- are VBP auxpass
 +-- with IN prep
 |   +-- machines NNS pobj
 |       +-- individual JJ amod
 |       +-- client NN nn
 |       +-- , , punct
 |       +-- -LRB- -LRB- punct
 |       +-- S NNP dep
 |       |   +-- client NN nn
 |       |   +-- and CC cc
 |       |   +-- A NNP conj
 |       |   |   +-- client NN nn
 |       |   +-- in IN prep
 |       |       +-- figure NN pobj
 |       |           +-- the DT det
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: The spatial condition that the point location of S resides inside the AOI of E2 can be symbolized as S.P ? E2.R .
Parse:
symbolized VBN ROOT
 +-- condition NN nsubjpass
 |   +-- The DT det
 |   +-- spatial JJ amod
 |   +-- resides VBZ ccomp
 |       +-- that IN mark
 |       +-- location NN nsubj
 |       |   +-- the DT det
 |       |   +-- point NN nn
 |       |   +-- of IN prep
 |       |       +-- S NNP pobj
 |       +-- inside IN prep
 |           +-- AOI NNP pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- E2 CD pobj
 +-- can MD aux
 +-- be VB auxpass
 +-- as IN prep
 |   +-- S.P NNP pobj
 |       +-- ? . punct
 |       +-- E2.R CD num
 +-- . . punct
Input: Every sub world is managed by its dedicated server machine .
Parse:
managed VBN ROOT
 +-- world NN nsubjpass
 |   +-- Every DT det
 |   +-- sub NN nn
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- machine NN pobj
 |       +-- its PRP$ poss
 |       +-- dedicated JJ amod
 |       +-- server NN nn
 +-- . . punct
Input: Each server indexes all the entities , delivers any new events -LRB- i.e. , a new user enters into the sub world or an object moves from one place to another -RRB- to clients , and resolves any inconsistencies among the entities .
Parse:
indexes VBZ ROOT
 +-- server NN nsubj
 |   +-- Each DT det
 +-- entities NNS dobj
 |   +-- all PDT predet
 |   +-- the DT det
 +-- , , punct
 +-- delivers VBZ conj
 |   +-- events NNS dobj
 |   |   +-- any DT det
 |   |   +-- new JJ amod
 |   |   +-- enters NNS appos
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- i.e. FW advmod
 |   |       +-- , , punct
 |   |       +-- user NN nsubj
 |   |       |   +-- a DT det
 |   |       |   +-- new JJ amod
 |   |       +-- into IN prep
 |   |       |   +-- world NN pobj
 |   |       |       +-- the DT det
 |   |       |       +-- sub NN nn
 |   |       +-- or CC cc
 |   |       +-- moves NNS conj
 |   |       |   +-- object NN nsubj
 |   |       |   |   +-- an DT det
 |   |       |   +-- from IN prep
 |   |       |       +-- place NN pobj
 |   |       |       |   +-- one CD num
 |   |       |       +-- to IN prep
 |   |       |           +-- another DT pobj
 |   |       +-- -RRB- -RRB- punct
 |   +-- to IN prep
 |       +-- clients NNS pobj
 +-- and CC cc
 +-- resolves VBZ conj
 |   +-- inconsistencies NNS dobj
 |       +-- any DT det
 |       +-- among IN prep
 |           +-- entities NNS pobj
 |               +-- the DT det
 +-- . . punct
Input: For efficient management of moving entities , a server further divides its sub world into smaller partitions , called grid cells .
Parse:
divides VBZ ROOT
 +-- For IN prep
 |   +-- management NN pobj
 |       +-- efficient JJ amod
 |       +-- of IN prep
 |           +-- entities NNS pobj
 |               +-- moving VBG amod
 +-- , , punct
 +-- server NN nsubj
 |   +-- a DT det
 +-- further JJ advmod
 +-- world NN dobj
 |   +-- its PRP$ poss
 |   +-- sub NN nn
 +-- into IN prep
 |   +-- partitions NNS pobj
 |       +-- smaller JJR amod
 |       +-- , , punct
 |       +-- called VBN partmod
 |           +-- cells NNS dep
 |               +-- grid NN nn
 +-- . . punct
