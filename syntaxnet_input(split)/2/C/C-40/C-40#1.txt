Input: Newly emerging game based application systems such as Second Life1 provide 3D virtual environments where multiple users interact with each other in real time .
Parse:
provide VBP ROOT
 +-- systems NNS nsubj
 |   +-- emerging VBG amod
 |   |   +-- Newly RB advmod
 |   +-- based VBN amod
 |   |   +-- game NN dep
 |   +-- application NN nn
 |   +-- as IN prep
 |       +-- such JJ mwe
 |       +-- Life1 NNP pobj
 |           +-- Second NNP nn
 +-- environments NNS dobj
 |   +-- 3D CD num
 |   +-- virtual JJ amod
 |   +-- interact VBP rcmod
 |       +-- where WRB advmod
 |       +-- users NNS nsubj
 |       |   +-- multiple JJ amod
 |       +-- with IN prep
 |       |   +-- other JJ pobj
 |       |       +-- each DT det
 |       +-- in IN prep
 |           +-- time NN pobj
 |               +-- real JJ amod
 +-- . . punct
Input: They are filled with autonomous , mutable virtual content which is continuously augmented by the users .
Parse:
filled VBN ROOT
 +-- They PRP nsubjpass
 +-- are VBP auxpass
 +-- with IN prep
 |   +-- content NN pobj
 |       +-- autonomous JJ amod
 |       +-- , , punct
 |       +-- mutable JJ amod
 |       +-- virtual JJ amod
 |       +-- augmented VBN rcmod
 |           +-- which WDT nsubjpass
 |           +-- is VBZ auxpass
 |           +-- continuously RB advmod
 |           +-- by IN prep
 |               +-- users NNS pobj
 |                   +-- the DT det
 +-- . . punct
Input: To make the systems highly scalable and dynamically extensible , they are usually built on a client server based grid subspace division where the virtual worlds are partitioned into manageable sub worlds .
Parse:
built VBN ROOT
 +-- make VB advcl
 |   +-- To TO aux
 |   +-- scalable JJ xcomp
 |       +-- systems NNS nsubj
 |       |   +-- the DT det
 |       +-- highly RB advmod
 |       +-- and CC cc
 |       +-- extensible JJ conj
 |           +-- dynamically RB advmod
 +-- , , punct
 +-- they PRP nsubjpass
 +-- are VBP auxpass
 +-- usually RB advmod
 +-- on IN prep
 |   +-- division NN pobj
 |       +-- a DT det
 |       +-- based VBN amod
 |       |   +-- server NN dep
 |       |       +-- client NN nn
 |       +-- subspace NN nn
 |       |   +-- grid NN nn
 |       +-- partitioned VBN rcmod
 |           +-- where WRB advmod
 |           +-- worlds NNS nsubj
 |           |   +-- the DT det
 |           |   +-- virtual JJ amod
 |           +-- are VBP cop
 |           +-- into IN prep
 |               +-- worlds NNS pobj
 |                   +-- manageable JJ amod
 |                   +-- sub NN nn
 +-- . . punct
Input: In each sub world , the user continuously receives relevant geometry updates of moving objects from remotely connected servers and renders them according to her viewpoint , rather than retrieving them from a local storage medium .
Parse:
receives VBZ ROOT
 +-- In IN prep
 |   +-- world NN pobj
 |       +-- each DT det
 |       +-- sub NN nn
 +-- , , punct
 +-- user NN nsubj
 |   +-- the DT det
 +-- continuously RB advmod
 +-- updates NNS dobj
 |   +-- relevant JJ amod
 |   +-- geometry NN nn
 |   +-- of IN prep
 |       +-- moving VBG pcomp
 |           +-- objects NNS dobj
 |           +-- from IN prep
 |               +-- servers NNS pobj
 |                   +-- connected VBN amod
 |                       +-- remotely RB advmod
 +-- and CC cc
 +-- renders VBZ conj
 |   +-- them PRP dobj
 |   +-- according VBG prep
 |   |   +-- to IN pcomp
 |   |       +-- viewpoint NN pobj
 |   |           +-- her PRP$ poss
 |   +-- , , punct
 |   +-- than IN prep
 |       +-- rather RB advmod
 |       +-- retrieving VBG pcomp
 |           +-- them PRP dobj
 |           +-- from IN prep
 |               +-- medium NN pobj
 |                   +-- a DT det
 |                   +-- local JJ amod
 |                   +-- storage NN nn
 +-- . . punct
Input: In such systems , the determination of the set of objects that are visible from a user '' s viewpoint is one of the primary factors that affect server throughput and scalability .
Parse:
one CD ROOT
 +-- In IN prep
 |   +-- systems NNS pobj
 |       +-- such JJ amod
 +-- , , punct
 +-- determination NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- set NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- objects NNS pobj
 |                   +-- visible JJ rcmod
 |                       +-- that WDT nsubj
 |                       +-- are VBP cop
 |                       +-- from IN prep
 |                           +-- viewpoint NN pobj
 |                               +-- user NN poss
 |                                   +-- a DT det
 |                                   +-- '' '' punct
 |                                   +-- s POS possessive
 +-- is VBZ cop
 +-- of IN prep
 |   +-- factors NNS pobj
 |       +-- the DT det
 |       +-- primary JJ amod
 |       +-- affect VBP rcmod
 |           +-- that WDT nsubj
 |           +-- throughput NN dobj
 |               +-- server NN nn
 |               +-- and CC cc
 |               +-- scalability NN conj
 +-- . . punct
Input: Specifically , performing real time visibility tests in extremely dynamic virtual environments is a very challenging task as millions of objects and sub millions of active users are moving and interacting .
Parse:
task NN ROOT
 +-- Specifically RB advmod
 +-- , , punct
 +-- performing VBG csubj
 |   +-- tests NNS dobj
 |       +-- time NN nn
 |       |   +-- real JJ amod
 |       +-- visibility NN nn
 |       +-- in IN prep
 |           +-- environments NNS pobj
 |               +-- dynamic JJ amod
 |               |   +-- extremely RB advmod
 |               +-- virtual JJ amod
 +-- is VBZ cop
 +-- a DT det
 +-- challenging JJ amod
 |   +-- very RB advmod
 +-- moving VBG advcl
 |   +-- as IN mark
 |   +-- millions NNS nsubj
 |   |   +-- of IN prep
 |   |   |   +-- objects NNS pobj
 |   |   +-- and CC cc
 |   |   +-- millions NNS conj
 |   |       +-- sub NN nn
 |   |       +-- of IN prep
 |   |           +-- users NNS pobj
 |   |               +-- active JJ amod
 |   +-- are VBP aux
 |   +-- and CC cc
 |   +-- interacting VBG conj
 +-- . . punct
Input: We recognize that the described challenges are closely related to a spatial database problem , and hence we map the moving geometry objects in the virtual space to a set of multi dimensional objects in a spatial database while modeling each avatar both as a spatial object and a moving query .
Parse:
recognize VBP ROOT
 +-- We PRP nsubj
 +-- related JJ ccomp
 |   +-- that IN mark
 |   +-- challenges NNS nsubj
 |   |   +-- the DT det
 |   |   +-- described VBN amod
 |   +-- are VBP cop
 |   +-- closely RB advmod
 |   +-- to IN prep
 |   |   +-- problem NN pobj
 |   |       +-- a DT det
 |   |       +-- spatial JJ amod
 |   |       +-- database NN nn
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- map VBP conj
 |       +-- hence RB advmod
 |       +-- we PRP nsubj
 |       +-- objects NNS dobj
 |       |   +-- the DT det
 |       |   +-- moving VBG amod
 |       |   +-- geometry NN amod
 |       |   +-- in IN prep
 |       |       +-- space NN pobj
 |       |           +-- the DT det
 |       |           +-- virtual JJ amod
 |       +-- to IN prep
 |       |   +-- set NN pobj
 |       |       +-- a DT det
 |       |       +-- of IN prep
 |       |           +-- objects NNS pobj
 |       |               +-- multi JJ amod
 |       |               +-- dimensional JJ amod
 |       +-- in IN prep
 |       |   +-- database NN pobj
 |       |       +-- a DT det
 |       |       +-- spatial JJ amod
 |       +-- modeling VBG advcl
 |           +-- while IN mark
 |           +-- avatar NN dobj
 |           |   +-- each DT det
 |           +-- as IN prep
 |               +-- both DT preconj
 |               +-- object NN pobj
 |                   +-- a DT det
 |                   +-- spatial JJ amod
 |                   +-- and CC cc
 |                   +-- query NN conj
 |                       +-- a DT det
 |                       +-- moving VBG amod
 +-- . . punct
Input: Unfortunately , existing spatial indexing methods are unsuitable for this kind of new environments .
Parse:
unsuitable JJ ROOT
 +-- Unfortunately RB advmod
 +-- , , punct
 +-- methods NNS nsubj
 |   +-- existing VBG amod
 |   +-- spatial JJ amod
 |   +-- indexing NN nn
 +-- are VBP cop
 +-- for IN prep
 |   +-- kind NN pobj
 |       +-- this DT det
 |       +-- of IN prep
 |           +-- environments NNS pobj
 |               +-- new JJ amod
 +-- . . punct
Input: The main goal of this paper is to present an efficient spatial index structure that minimizes unexpected object popping and supports highly scalable real time visibility determination .
Parse:
is VBZ ROOT
 +-- goal NN nsubj
 |   +-- The DT det
 |   +-- main JJ amod
 |   +-- of IN prep
 |       +-- paper NN pobj
 |           +-- this DT det
 +-- present VB xcomp
 |   +-- to TO aux
 |   +-- structure NN dobj
 |       +-- an DT det
 |       +-- efficient JJ amod
 |       +-- spatial JJ amod
 |       +-- index NN nn
 |       +-- minimizes VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- popping NN dobj
 |           |   +-- unexpected JJ amod
 |           |   +-- object NN nn
 |           +-- and CC cc
 |           +-- supports VBZ conj
 |               +-- determination NN dobj
 |                   +-- scalable JJ amod
 |                   |   +-- highly RB advmod
 |                   +-- time NN nn
 |                   |   +-- real JJ amod
 |                   +-- visibility NN nn
 +-- . . punct
Input: We then uncover many useful properties of this structure and compare the index structure with various spatial indexing methods in terms of query quality , system throughput , and resource utilization .
Parse:
uncover VBP ROOT
 +-- We PRP nsubj
 +-- then RB advmod
 +-- properties NNS dobj
 |   +-- many JJ amod
 |   +-- useful JJ amod
 |   +-- of IN prep
 |       +-- structure NN pobj
 |           +-- this DT det
 +-- and CC cc
 +-- compare VB conj
 |   +-- structure NN dobj
 |   |   +-- the DT det
 |   |   +-- index NN nn
 |   +-- with IN prep
 |   |   +-- methods NNS pobj
 |   |       +-- various JJ amod
 |   |       +-- spatial JJ amod
 |   |       +-- indexing NN nn
 |   +-- in IN prep
 |       +-- terms NNS pobj
 |           +-- of IN prep
 |               +-- quality NN pobj
 |                   +-- query NN nn
 |                   +-- , , punct
 |                   +-- throughput NN conj
 |                   |   +-- system NN nn
 |                   +-- and CC cc
 |                   +-- utilization NN conj
 |                       +-- resource NN nn
 +-- . . punct
Input: We expect our approach to lay the groundwork for next generation virtual frameworks that may merge into existing web based services in the near future .
Parse:
expect VBP ROOT
 +-- We PRP nsubj
 +-- lay VB xcomp
 |   +-- approach NN nsubj
 |   |   +-- our PRP$ poss
 |   +-- to TO aux
 |   +-- groundwork NN dobj
 |       +-- the DT det
 |       +-- for IN prep
 |           +-- frameworks NNS pobj
 |               +-- generation NN nn
 |               |   +-- next JJ amod
 |               +-- virtual JJ amod
 |               +-- merge VB rcmod
 |                   +-- that WDT nsubj
 |                   +-- may MD aux
 |                   +-- into IN prep
 |                   |   +-- services NNS pobj
 |                   |       +-- existing VBG amod
 |                   |       +-- based VBN amod
 |                   |           +-- web NN dep
 |                   +-- in IN prep
 |                       +-- future NN pobj
 |                           +-- the DT det
 |                           +-- near JJ amod
 +-- . . punct
Input: Categories and Subject Descriptors
Parse:
Categories NNS ROOT
 +-- and CC cc
 +-- Descriptors NNS conj
     +-- Subject NNP amod
Input: Many MMOG applications , however , still limit themselves to a traditional design approach where their 3D scene complexity is carefully controlled in advance to meet real time rendering constraints at the client console side .
Parse:
limit VBP ROOT
 +-- applications NNS nsubj
 |   +-- Many JJ amod
 |   +-- MMOG NNP nn
 +-- , , punct
 +-- however RB advmod
 +-- still RB advmod
 +-- themselves PRP dobj
 +-- to IN prep
 |   +-- approach NN pobj
 |       +-- a DT det
 |       +-- traditional JJ amod
 |       +-- design NN nn
 |       +-- controlled VBN rcmod
 |           +-- where WRB advmod
 |           +-- complexity NN nsubjpass
 |           |   +-- their PRP$ poss
 |           |   +-- scene NN nn
 |           |       +-- 3D NN nn
 |           +-- is VBZ auxpass
 |           +-- carefully RB advmod
 |           +-- in IN prep
 |           |   +-- advance NN pobj
 |           +-- meet VB xcomp
 |               +-- to TO aux
 |               +-- time NN dobj
 |               |   +-- real JJ amod
 |               +-- rendering VBG xcomp
 |                   +-- constraints NNS dobj
 |                   +-- at IN prep
 |                       +-- side NN pobj
 |                           +-- the DT det
 |                           +-- console NN nn
 |                               +-- client NN nn
 +-- . . punct
Input: To enable a virtual landscape in next generation environments that is seamless , endless , and limitless , Marshall et al .
Parse:
al NNP ROOT
 +-- enable VB dep
 |   +-- To TO aux
 |   +-- landscape NN dobj
 |       +-- a DT det
 |       +-- virtual JJ amod
 |       +-- in IN prep
 |       |   +-- environments NNS pobj
 |       |       +-- generation NN nn
 |       |           +-- next JJ amod
 |       +-- seamless JJ rcmod
 |           +-- that WDT nsubj
 |           +-- is VBZ cop
 |           +-- , , punct
 |           +-- endless JJ conj
 |           +-- and CC cc
 |           +-- limitless NN conj
 +-- , , punct
 +-- Marshall NNP nn
 +-- et NNP nn
 +-- . . punct
Input: -LRB- 1 -RRB- identified four new requirements2
Parse:
identified VBN ROOT
 +-- 1 CD dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- requirements2 NN dobj
     +-- four CD num
     +-- new JJ amod
Input: In this paper , we mainly focus on the first two requirements .
Parse:
focus VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- mainly RB advmod
 +-- on IN prep
 |   +-- requirements NNS pobj
 |       +-- the DT det
 |       +-- first JJ amod
 |       +-- two CD num
 +-- . . punct
Input: Dynamic extensibility allows regular game users to deploy their own created content .
Parse:
allows VBZ ROOT
 +-- extensibility NN nsubj
 |   +-- Dynamic JJ amod
 +-- deploy VB xcomp
 |   +-- users NNS nsubj
 |   |   +-- regular JJ amod
 |   |   +-- game NN nn
 |   +-- to TO aux
 |   +-- content NN dobj
 |       +-- their PRP$ poss
 |       +-- own JJ amod
 |       +-- created VBN amod
 +-- . . punct
Input: This is a powerful concept , but unfortunately , user created content tends to create imbalances among the existing scene complexity , causing system wide performance problems .
Parse:
concept NN ROOT
 +-- This DT nsubj
 +-- is VBZ cop
 +-- a DT det
 +-- powerful JJ amod
 +-- , , punct
 +-- but CC cc
 +-- tends VBZ conj
 |   +-- unfortunately RB advmod
 |   +-- , , punct
 |   +-- content NN nsubj
 |   |   +-- created VBD amod
 |   |       +-- user NN dep
 |   +-- create VB xcomp
 |       +-- to TO aux
 |       +-- imbalances NNS dobj
 |       +-- among IN prep
 |       |   +-- complexity NN pobj
 |       |       +-- the DT det
 |       |       +-- existing VBG amod
 |       |       +-- scene NN nn
 |       +-- , , punct
 |       +-- causing VBG partmod
 |           +-- problems NNS dobj
 |               +-- performance NN nn
 |                   +-- system NN nn
 |                   +-- wide JJ amod
 +-- . . punct
Input: Full support for dynamic extensibility will , thus , continue to be one of the biggest challenges for game developers .
Parse:
continue VB ROOT
 +-- support NN nsubj
 |   +-- Full JJ amod
 |   +-- for IN prep
 |       +-- extensibility NN pobj
 |           +-- dynamic JJ amod
 +-- will MD aux
 +-- , , punct
 +-- thus RB advmod
 +-- one CD xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- of IN prep
 |       +-- challenges NNS pobj
 |           +-- the DT det
 |           +-- biggest JJS amod
 |           +-- for IN prep
 |               +-- developers NNS pobj
 |                   +-- game NN nn
 +-- . . punct
Input: Another important requirement is scalability .
Parse:
scalability NN ROOT
 +-- requirement NN nsubj
 |   +-- Another DT det
 |   +-- important JJ amod
 +-- is VBZ cop
 +-- . . punct
Input: Although MMOG developers proclaim that their systems can support hundreds of thousands of concurrent users , it usually does not mean that all the users can interact with each other in the same world .
Parse:
mean VB ROOT
 +-- proclaim VBP advcl
 |   +-- Although IN mark
 |   +-- developers NNS nsubj
 |   |   +-- MMOG NNP nn
 |   +-- support VB ccomp
 |       +-- that IN mark
 |       +-- systems NNS nsubj
 |       |   +-- their PRP$ poss
 |       +-- can MD aux
 |       +-- hundreds NNS dobj
 |           +-- of IN prep
 |               +-- thousands NNS pobj
 |                   +-- of IN prep
 |                       +-- users NNS pobj
 |                           +-- concurrent JJ amod
 +-- , , punct
 +-- it PRP nsubj
 +-- usually RB advmod
 +-- does VBZ aux
 +-- not RB neg
 +-- interact VB ccomp
 |   +-- that IN mark
 |   +-- users NNS nsubj
 |   |   +-- all PDT predet
 |   |   +-- the DT det
 |   +-- can MD aux
 |   +-- with IN prep
 |   |   +-- other JJ pobj
 |   |       +-- each DT det
 |   +-- in IN prep
 |       +-- world NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 +-- . . punct
Input: By carefully partitioning the world into multiple sub worlds or replicating worlds at geographically dispersed locations , massive numbers of concurrent users can be supported .
Parse:
supported VBN ROOT
 +-- By IN prep
 |   +-- partitioning VBG pcomp
 |       +-- carefully RB advmod
 |       +-- world NN dobj
 |       |   +-- the DT det
 |       +-- into IN prep
 |       |   +-- worlds NNS pobj
 |       |       +-- multiple JJ amod
 |       |       +-- sub NN nn
 |       +-- or CC cc
 |       +-- replicating VBG conj
 |           +-- worlds NNS dobj
 |           +-- at IN prep
 |               +-- locations NNS pobj
 |                   +-- dispersed VBN amod
 |                       +-- geographically RB advmod
 +-- , , punct
 +-- numbers NNS nsubjpass
 |   +-- massive JJ amod
 |   +-- of IN prep
 |       +-- users NNS pobj
 |           +-- concurrent JJ amod
 +-- can MD aux
 +-- be VB auxpass
 +-- . . punct
Input: Typically , the maximum number of users in the same world managed by a single server or a server cluster is limited to several thousands , assuming a rather stationary world -LRB- 2 , 3 -RRB- .
Parse:
limited JJ ROOT
 +-- Typically RB advmod
 +-- , , punct
 +-- number NN nsubj
 |   +-- the DT det
 |   +-- maximum JJ amod
 |   +-- of IN prep
 |   |   +-- users NNS pobj
 |   +-- in IN prep
 |       +-- world NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- managed VBN partmod
 |               +-- by IN prep
 |                   +-- server NN pobj
 |                       +-- a DT det
 |                       +-- single JJ amod
 |                       +-- or CC cc
 |                       +-- cluster NN conj
 |                           +-- a DT det
 |                           +-- server NN nn
 +-- is VBZ cop
 +-- to IN prep
 |   +-- thousands NNS pobj
 |       +-- several JJ amod
 +-- assuming VBG xcomp
 |   +-- world NN dobj
 |       +-- a DT det
 |       +-- stationary JJ amod
 |       |   +-- rather RB advmod
 |       +-- -LRB- -LRB- punct
 |       +-- 3 CD dep
 |       |   +-- 2 CD num
 |       |   +-- , , punct
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: Second Life -LRB- 4 -RRB- is the first successfully deployed MMOG system that meets both requirements .
Parse:
system NN ROOT
 +-- Life NN nsubj
 |   +-- Second NNP nn
 |   +-- -LRB- -LRB- punct
 |   +-- 4 CD dep
 |   +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- the DT det
 +-- first JJ amod
 +-- deployed VBN amod
 |   +-- successfully RB advmod
 +-- MMOG NNP nn
 +-- meets VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- requirements NNS dobj
 |       +-- both DT det
 +-- . . punct
Input: To mitigate the dynamics of the game world , where a large number of autonomous objects are continuously moving , it partitions the space in a grid like manner and 2 Originally , these requirements were specified for their dedicated platform .
Parse:
partitions VBZ ROOT
 +-- mitigate VB advcl
 |   +-- To TO aux
 |   +-- dynamics NNS dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- world NN pobj
 |               +-- the DT det
 |               +-- game NN nn
 |               +-- , , punct
 |               +-- moving VBG rcmod
 |                   +-- where WRB advmod
 |                   +-- number NN nsubj
 |                   |   +-- a DT det
 |                   |   +-- large JJ amod
 |                   |   +-- of IN prep
 |                   |       +-- objects NNS pobj
 |                   |           +-- autonomous JJ amod
 |                   +-- are VBP aux
 |                   +-- continuously RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- space NN dobj
 |   +-- the DT det
 +-- in IN prep
 |   +-- grid NN pobj
 |       +-- a DT det
 |       +-- like IN prep
 |           +-- manner NN pobj
 |               +-- and CC cc
 |               +-- 2 CD conj
 +-- Originally RB advmod
 +-- specified VBN ccomp
 |   +-- requirements NNS nsubjpass
 |   |   +-- these DT det
 |   +-- were VBD auxpass
 |   +-- for IN prep
 |       +-- platform NN pobj
 |           +-- their PRP$ poss
 |           +-- dedicated VBN amod
 +-- . . punct
Input: But we acknowledge that these requirements are also valid for new virtual environments .
Parse:
acknowledge VBP ROOT
 +-- But CC cc
 +-- we PRP nsubj
 +-- valid JJ ccomp
 |   +-- that IN mark
 |   +-- requirements NNS nsubj
 |   |   +-- these DT det
 |   +-- are VBP cop
 |   +-- also RB advmod
 |   +-- for IN prep
 |       +-- environments NNS pobj
 |           +-- new JJ amod
 |           +-- virtual JJ amod
 +-- . . punct
