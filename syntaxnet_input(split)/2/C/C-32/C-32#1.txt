Input: Collaborative applications provide a shared work environment for groups of networked clients collaborating on a common task .
Parse:
provide VBP ROOT
 +-- applications NNS nsubj
 |   +-- Collaborative JJ amod
 +-- environment NN dobj
 |   +-- a DT det
 |   +-- shared VBN amod
 |   +-- work NN nn
 |   +-- for IN prep
 |       +-- groups NNS pobj
 |           +-- of IN prep
 |               +-- clients NNS pobj
 |                   +-- networked VBN amod
 |                   +-- collaborating VBG partmod
 |                       +-- on IN prep
 |                           +-- task NN pobj
 |                               +-- a DT det
 |                               +-- common JJ amod
 +-- . . punct
Input: They require strong consistency for shared persistent data and efficient access to fine grained objects .
Parse:
require VBP ROOT
 +-- They PRP nsubj
 +-- consistency NN dobj
 |   +-- strong JJ amod
 |   +-- for IN prep
 |       +-- access NN pobj
 |           +-- shared VBN amod
 |           +-- persistent JJ amod
 |           +-- data NNS nn
 |           |   +-- and CC cc
 |           |   +-- efficient JJ conj
 |           +-- to IN prep
 |               +-- objects NNS pobj
 |                   +-- fine JJ amod
 |                   +-- grained VBN amod
 +-- . . punct
Input: These properties are difficult to provide in wide area networks because of high network latency .
Parse:
difficult JJ ROOT
 +-- properties NNS nsubj
 |   +-- These DT det
 +-- are VBP cop
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- in IN prep
 |       +-- networks NNS pobj
 |           +-- wide JJ amod
 |           +-- area NN nn
 +-- of IN prep
 |   +-- because IN mwe
 |   +-- latency NN pobj
 |       +-- network NN nn
 |           +-- high JJ amod
 +-- . . punct
Input: BuddyCache is a new transactional caching approach that improves the latency of access to shared persistent objects for collaborative strong consistency applications in high latency network environments .
Parse:
approach NN ROOT
 +-- BuddyCache NNP nsubj
 +-- is VBZ cop
 +-- a DT det
 +-- new JJ amod
 +-- transactional JJ amod
 +-- caching NN nn
 +-- improves VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- latency NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- access NN pobj
 |               +-- to IN prep
 |               |   +-- objects NNS pobj
 |               |       +-- shared VBN amod
 |               |       +-- persistent JJ amod
 |               +-- for IN prep
 |                   +-- applications NNS pobj
 |                       +-- collaborative JJ amod
 |                       +-- strong JJ amod
 |                       +-- consistency NN nn
 |                       +-- in IN prep
 |                           +-- environments NNS pobj
 |                               +-- high JJ amod
 |                               +-- network NN nn
 |                                   +-- latency NN nn
 +-- . . punct
Input: The challenge is to improve performance while providing the correctness and availability properties of a transactional caching protocol in the presence of node failures and slow peers .
Parse:
is VBZ ROOT
 +-- challenge NN nsubj
 |   +-- The DT det
 +-- improve VB xcomp
 |   +-- to TO aux
 |   +-- performance NN dobj
 |   +-- providing VBG advcl
 |       +-- while IN mark
 |       +-- properties NNS dobj
 |       |   +-- the DT det
 |       |   +-- correctness NN nn
 |       |   |   +-- and CC cc
 |       |   |   +-- availability NN conj
 |       |   +-- of IN prep
 |       |       +-- protocol NN pobj
 |       |           +-- a DT det
 |       |           +-- transactional JJ amod
 |       |           +-- caching NN nn
 |       +-- in IN prep
 |           +-- presence NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- failures NNS pobj
 |                       +-- node NN nn
 |                       +-- and CC cc
 |                       +-- peers NNS conj
 |                           +-- slow JJ amod
 +-- . . punct
Input: We have implemented a BuddyCache prototype and evaluated its performance .
Parse:
implemented VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- prototype NN dobj
 |   +-- a DT det
 |   +-- BuddyCache NNP nn
 +-- and CC cc
 +-- evaluated VBD conj
 |   +-- performance NN dobj
 |       +-- its PRP$ poss
 +-- . . punct
Input: Analytical results , confirmed by measurements of the BuddyCache prototype using the multiuser 007 benchmark indicate that for typical Internet latencies , e.g .
Parse:
indicate VBP ROOT
 +-- results NNS nsubj
 |   +-- Analytical JJ amod
 |   +-- , , punct
 |   +-- confirmed VBN partmod
 |       +-- by IN prep
 |           +-- measurements NNS pobj
 |               +-- of IN prep
 |               |   +-- prototype NN pobj
 |               |       +-- the DT det
 |               |       +-- BuddyCache NNP nn
 |               +-- using VBG partmod
 |                   +-- benchmark NN dobj
 |                       +-- the DT det
 |                       +-- multiuser NN amod
 |                       +-- 007 CD num
 +-- that IN dobj
 |   +-- for IN prep
 |       +-- latencies NNS pobj
 |           +-- typical JJ amod
 |           +-- Internet NN nn
 |           +-- , , punct
 |           +-- e.g UH appos
 +-- . . punct
Input: ranging from 40 to 80 milliseconds round trip time to the storage server , peers using BuddyCache can reduce by up to 50 % the latency of access to shared objects compared to accessing the remote servers directly .
Parse:
reduce VB ROOT
 +-- ranging VBG partmod
 |   +-- from IN prep
 |       +-- 40 CD pobj
 |       +-- to IN prep
 |       |   +-- server NN pobj
 |       |       +-- the DT det
 |       |       +-- storage NN nn
 |       +-- time NN dep
 |           +-- round JJ amod
 |           +-- trip NN nn
 +-- , , punct
 +-- peers NNS nsubj
 |   +-- using VBG partmod
 |       +-- BuddyCache NNP dobj
 +-- can MD aux
 +-- by IN prep
 |   +-- % NN pobj
 |       +-- 50 CD num
 |           +-- to IN quantmod
 |               +-- up IN dep
 +-- latency NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- access NN pobj
 |           +-- to IN prep
 |               +-- objects NNS pobj
 |                   +-- shared VBN amod
 +-- compared VBN prep
 |   +-- to IN pcomp
 |       +-- accessing VBG pcomp
 |           +-- servers NNS dobj
 |           |   +-- the DT det
 |           |   +-- remote JJ amod
 |           +-- directly RB advmod
 +-- . . punct
Input: C.2.4 -LRB- Computer Systems Organization -RRB-
Parse:
C.2.4 CD ROOT
 +-- -LRB- -LRB- punct
 +-- Organization NNP dep
 |   +-- Computer NNP nn
 |   +-- Systems NNPS nn
 +-- -RRB- -RRB- punct
