Input: High network latency imposes performance penalty for transactional applications accessing shared persistent objects in wide area network environment .
Parse:
imposes VBZ ROOT
 +-- latency NN nsubj
 |   +-- network NN nn
 |       +-- High JJ amod
 +-- penalty NN dobj
 |   +-- performance NN nn
 |   +-- for IN prep
 |       +-- applications NNS pobj
 |           +-- transactional JJ amod
 |           +-- accessing VBG partmod
 |               +-- objects NNS dobj
 |                   +-- shared VBN amod
 |                   +-- persistent JJ amod
 |                   +-- in IN prep
 |                       +-- environment NN pobj
 |                           +-- area NN nn
 |                           |   +-- wide JJ amod
 |                           +-- network NN nn
 +-- . . punct
Input: This section describes the BuddyCache approach for reducing the network latency penalty in collaborative applications and explains the main design decisions .
Parse:
describes VBZ ROOT
 +-- section NN nsubj
 |   +-- This DT det
 +-- approach NN dobj
 |   +-- the DT det
 |   +-- BuddyCache NNP nn
 |   +-- for IN prep
 |       +-- reducing VBG pcomp
 |           +-- penalty NN dobj
 |           |   +-- the DT det
 |           |   +-- network NN nn
 |           |   +-- latency NN nn
 |           +-- in IN prep
 |               +-- applications NNS pobj
 |                   +-- collaborative JJ amod
 +-- and CC cc
 +-- explains VBZ conj
 |   +-- decisions NNS dobj
 |       +-- the DT det
 |       +-- main JJ amod
 |       +-- design NN nn
 +-- . . punct
Input: We consider a system in which a distributed transactional object repository stores objects in highly reliable servers , perhaps outsourced in data centers connected via high bandwidth reliable networks .
Parse:
consider VBP ROOT
 +-- We PRP nsubj
 +-- system NN dobj
 |   +-- a DT det
 |   +-- in IN prep
 |       +-- which WDT pobj
 |       +-- objects NNS ROOT
 |           +-- a DT det
 |           +-- distributed VBN amod
 |           +-- stores NNS nn
 |           |   +-- transactional JJ amod
 |           |   +-- object NN nn
 |           |   +-- repository NN nn
 |           +-- in IN prep
 |           |   +-- servers NNS pobj
 |           |       +-- reliable JJ amod
 |           |           +-- highly RB advmod
 |           +-- , , punct
 |           +-- outsourced VBN partmod
 |               +-- perhaps RB advmod
 |               +-- in IN prep
 |                   +-- centers NNS pobj
 |                       +-- data NNS nn
 |                       +-- connected VBN partmod
 |                           +-- via IN prep
 |                               +-- networks NNS pobj
 |                                   +-- bandwidth NN nn
 |                                   |   +-- high JJ amod
 |                                   +-- reliable JJ amod
 +-- . . punct
Input: Collaborating clients interconnected via a fast local network , connect via high latency , possibly satellite , links to the servers at the data centers to access shared persistent objects .
Parse:
interconnected VBD ROOT
 +-- clients NNS nsubj
 |   +-- Collaborating VBG nn
 +-- via IN prep
 |   +-- network NN pobj
 |       +-- a DT det
 |       +-- fast JJ amod
 |       +-- local JJ amod
 +-- , , punct
 +-- connect VB dep
 |   +-- via IN prep
 |   |   +-- latency NN pobj
 |   |       +-- high JJ amod
 |   |       +-- , , punct
 |   |       +-- satellite VB appos
 |   |       |   +-- possibly RB advmod
 |   |       +-- links NNS appos
 |   |           +-- to IN prep
 |   |               +-- servers NNS pobj
 |   |                   +-- the DT det
 |   |                   +-- at IN prep
 |   |                       +-- centers NNS pobj
 |   |                           +-- the DT det
 |   |                           +-- data NNS nn
 |   +-- access VB xcomp
 |       +-- to TO aux
 |       +-- objects NNS dobj
 |           +-- shared VBN amod
 |           +-- persistent JJ amod
 +-- . . punct
Input: The servers provide disk storage for the persistent objects .
Parse:
provide VBP ROOT
 +-- servers NNS nsubj
 |   +-- The DT det
 +-- storage NN dobj
 |   +-- disk NN nn
 |   +-- for IN prep
 |       +-- objects NNS pobj
 |           +-- the DT det
 |           +-- persistent JJ amod
 +-- . . punct
Input: A persistent object is owned by a single server .
Parse:
owned VBN ROOT
 +-- object NN nsubjpass
 |   +-- A DT det
 |   +-- persistent JJ amod
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- server NN pobj
 |       +-- a DT det
 |       +-- single JJ amod
 +-- . . punct
Input: Objects may be small -LRB- order of 100 bytes for programming language objects -LRB- 23 -RRB- -RRB- .
Parse:
order NN ROOT
 +-- Objects NNS nsubj
 +-- may MD aux
 +-- be VB cop
 +-- small JJ amod
 +-- -LRB- -LRB- punct
 +-- of IN prep
 |   +-- bytes NNS pobj
 |       +-- 100 CD num
 |       +-- for IN prep
 |       |   +-- objects NNS pobj
 |       |       +-- language NN nn
 |       |           +-- programming NN nn
 |       +-- 23 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: To amortize the cost of disk and network transfer objects are grouped into physical pages .
Parse:
grouped VBN ROOT
 +-- amortize VB advcl
 |   +-- To TO aux
 |   +-- cost NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- transfer NN pobj
 |               +-- disk NN nn
 |                   +-- and CC cc
 |                   +-- network NN conj
 +-- objects NNS nsubjpass
 +-- are VBP auxpass
 +-- into IN prep
 |   +-- pages NNS pobj
 |       +-- physical JJ amod
 +-- . . punct
Input: To improve object access latency , clients fetch the objects from the servers and cache and access them locally .
Parse:
fetch VBP ROOT
 +-- improve VB advcl
 |   +-- To TO aux
 |   +-- latency NN dobj
 |       +-- access NN nn
 |           +-- object NN nn
 +-- , , punct
 +-- clients NNS nsubj
 +-- objects NNS dobj
 |   +-- the DT det
 +-- from IN prep
 |   +-- servers NNS pobj
 |       +-- the DT det
 |       +-- and CC cc
 |       +-- cache NN conj
 +-- and CC cc
 +-- access VB conj
 |   +-- them PRP dobj
 |   +-- locally RB advmod
 +-- . . punct
Input: A transactional cache coherence protocol runs at clients and servers to ensure that client caches remain consistent when objects are modified .
Parse:
runs VBZ ROOT
 +-- protocol NN nsubj
 |   +-- A DT det
 |   +-- transactional JJ amod
 |   +-- coherence NN nn
 |       +-- cache NN nn
 +-- at IN prep
 |   +-- clients NNS pobj
 |       +-- and CC cc
 |       +-- servers NNS conj
 +-- ensure VB xcomp
 |   +-- to TO aux
 |   +-- consistent JJ ccomp
 |       +-- that IN mark
 |       +-- caches NNS nsubj
 |       |   +-- client NN nn
 |       +-- remain VBP cop
 |       +-- modified VBN advcl
 |           +-- when WRB advmod
 |           +-- objects NNS nsubjpass
 |           +-- are VBP auxpass
 +-- . . punct
Input: The performance problem facing the collaborating client group is the high latency of coordinating consistent access to the shared objects .
Parse:
latency NN ROOT
 +-- problem NN nsubj
 |   +-- The DT det
 |   +-- performance NN nn
 |   +-- facing VBG partmod
 |       +-- group NN dobj
 |           +-- the DT det
 |           +-- collaborating VBG amod
 |           +-- client NN nn
 +-- is VBZ cop
 +-- the DT det
 +-- high JJ amod
 +-- of IN prep
 |   +-- coordinating VBG pcomp
 |       +-- access NN dobj
 |           +-- consistent JJ amod
 |           +-- to IN prep
 |               +-- objects NNS pobj
 |                   +-- the DT det
 |                   +-- shared VBN amod
 +-- . . punct
Input: BuddyCache architecture is based on a request redirection server , interposed between the clients and the remote servers .
Parse:
based VBN ROOT
 +-- architecture NN nsubjpass
 |   +-- BuddyCache NN nn
 +-- is VBZ auxpass
 +-- on IN prep
 |   +-- server NN pobj
 |       +-- a DT det
 |       +-- request NN nn
 |       +-- redirection NN nn
 |       +-- , , punct
 |       +-- interposed VBN partmod
 |           +-- between IN prep
 |               +-- clients NNS pobj
 |                   +-- the DT det
 |                   +-- and CC cc
 |                   +-- servers NNS conj
 |                       +-- the DT det
 |                       +-- remote JJ amod
 +-- . . punct
Input: The interposed server -LRB- the redirector -RRB- runs on the same network as the collaborative group and , when possible , replaces the function of the remote servers .
Parse:
runs VBZ ROOT
 +-- server NN nsubj
 |   +-- The DT det
 |   +-- interposed VBN amod
 |   +-- -LRB- -LRB- punct
 |   +-- redirector NN dep
 |   |   +-- the DT det
 |   +-- -RRB- -RRB- punct
 +-- on IN prep
 |   +-- network NN pobj
 |       +-- the DT det
 |       +-- same JJ amod
 |       +-- as IN prep
 |           +-- group NN pobj
 |               +-- the DT det
 |               +-- collaborative JJ amod
 +-- and CC cc
 +-- , , punct
 +-- replaces VBZ conj
 |   +-- possible JJ advcl
 |   |   +-- when WRB advmod
 |   +-- , , punct
 |   +-- function NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- servers NNS pobj
 |               +-- the DT det
 |               +-- remote JJ amod
 +-- . . punct
Input: If the client request can be served locally , the interaction with the server is avoided .
Parse:
avoided VBN ROOT
 +-- served VBN advcl
 |   +-- If IN mark
 |   +-- request NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- client NN nn
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- locally RB advmod
 +-- , , punct
 +-- interaction NN nsubjpass
 |   +-- the DT det
 |   +-- with IN prep
 |       +-- server NN pobj
 |           +-- the DT det
 +-- is VBZ auxpass
 +-- . . punct
Input: If the client request can not be served locally , redirector forwards it to a remote server .
Parse:
forwards VBZ ROOT
 +-- served VBN advcl
 |   +-- If IN mark
 |   +-- request NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- client NN nn
 |   +-- can MD aux
 |   +-- not RB neg
 |   +-- be VB auxpass
 |   +-- locally RB advmod
 +-- , , punct
 +-- redirector NN nsubj
 +-- it PRP dobj
 +-- to IN prep
 |   +-- server NN pobj
 |       +-- a DT det
 |       +-- remote JJ amod
 +-- . . punct
Input: Redirection approach has been used to improve the performance of web caching protocols .
Parse:
used VBN ROOT
 +-- approach NN nsubjpass
 |   +-- Redirection NN nn
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- improve VB xcomp
 |   +-- to TO aux
 |   +-- performance NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- protocols NNS pobj
 |               +-- web NN nn
 |               +-- caching NN nn
 +-- . . punct
Input: BuddyCache redirector supports the correctness , availability and fault tolerance properties of transactional caching protocol -LRB- 19 -RRB- .
Parse:
supports VBZ ROOT
 +-- redirector NN nsubj
 |   +-- BuddyCache NN nn
 +-- properties NNS dobj
 |   +-- the DT det
 |   +-- correctness NN nn
 |   |   +-- , , punct
 |   |   +-- availability NN conj
 |   |   +-- and CC cc
 |   |   +-- fault NN conj
 |   +-- tolerance NN nn
 |   +-- of IN prep
 |       +-- protocol NN pobj
 |           +-- transactional JJ amod
 |           +-- caching NN nn
 |           +-- 19 CD appos
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: The correctness property ensures onecopy serializability of the objects committed by the client transactions .
Parse:
ensures VBZ ROOT
 +-- property NN nsubj
 |   +-- The DT det
 |   +-- correctness NN nn
 +-- serializability NN dobj
 |   +-- onecopy JJ amod
 |   +-- of IN prep
 |       +-- objects NNS pobj
 |           +-- the DT det
 |           +-- committed VBN partmod
 |               +-- by IN prep
 |                   +-- transactions NNS pobj
 |                       +-- the DT det
 |                       +-- client NN nn
 +-- . . punct
Input: The availability and fault tolerance properties ensure that a crashed or slow client does not disrupt any other client '' s access to persistent objects .
Parse:
ensure VBP ROOT
 +-- properties NNS nsubj
 |   +-- The DT det
 |   +-- availability NN nn
 |   |   +-- and CC cc
 |   |   +-- fault NN conj
 |   +-- tolerance NN nn
 +-- disrupt VB ccomp
 |   +-- that IN mark
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   |   +-- crashed VBN amod
 |   |       +-- or CC cc
 |   |       +-- slow JJ conj
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- access NN dobj
 |       +-- client NN poss
 |       |   +-- any DT det
 |       |   +-- other JJ amod
 |       |   +-- '' '' punct
 |       |   +-- s POS possessive
 |       +-- to IN prep
 |           +-- objects NNS pobj
 |               +-- persistent JJ amod
 +-- . . punct
Input: The three types of client server interactions in a transactional caching protocol are the commit of a transaction , the fetch of an object missing in a client cache , and the exchange of cache coherence information .
Parse:
commit NN ROOT
 +-- types NNS nsubj
 |   +-- The DT det
 |   +-- three CD num
 |   +-- of IN prep
 |       +-- interactions NNS pobj
 |           +-- server NN nn
 |           |   +-- client NN nn
 |           +-- in IN prep
 |               +-- protocol NN pobj
 |                   +-- a DT det
 |                   +-- transactional JJ amod
 |                   +-- caching NN nn
 +-- are VBP cop
 +-- the DT det
 +-- of IN prep
 |   +-- transaction NN pobj
 |       +-- a DT det
 |       +-- , , punct
 |       +-- fetch NN conj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- object NN pobj
 |       |           +-- an DT det
 |       |           +-- missing VBG partmod
 |       |               +-- in IN prep
 |       |                   +-- cache NN pobj
 |       |                       +-- a DT det
 |       |                       +-- client NN nn
 |       +-- and CC cc
 |       +-- exchange NN conj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- information NN pobj
 |                   +-- cache NN nn
 |                   +-- coherence NN amod
 +-- . . punct
Input: BuddyCache avoids interactions with the server when a missing object , or cache coherence information needed by a client is available within the collaborating group .
Parse:
avoids VBZ ROOT
 +-- BuddyCache NN nsubj
 +-- interactions NNS dobj
 |   +-- with IN prep
 |       +-- server NN pobj
 |           +-- the DT det
 +-- available JJ advcl
 |   +-- when WRB advmod
 |   +-- object NN nsubj
 |   |   +-- a DT det
 |   |   +-- missing VBG amod
 |   |   +-- , , punct
 |   |   +-- or CC cc
 |   |   +-- information NN conj
 |   |   |   +-- cache NN nn
 |   |   |   +-- coherence NN amod
 |   |   +-- needed VBN partmod
 |   |       +-- by IN prep
 |   |           +-- client NN pobj
 |   |               +-- a DT det
 |   +-- is VBZ cop
 |   +-- within IN prep
 |       +-- group NN pobj
 |           +-- the DT det
 |           +-- collaborating NN amod
 +-- . . punct
Input: The redirector always interacts with the servers at commit time because only storage servers provide transaction durability in a way that ensures committed Client Redirector Client Client Buddy Group Client Redirector Client Client Buddy Group Servers Figure 1
Parse:
interacts VBZ ROOT
 +-- redirector NN nsubj
 |   +-- The DT det
 +-- always RB advmod
 +-- with IN prep
 |   +-- servers NNS pobj
 |       +-- the DT det
 +-- at IN prep
 |   +-- time NN pobj
 |       +-- commit NN nn
 +-- provide VBP advcl
     +-- because IN mark
     +-- servers NNS nsubj
     |   +-- only RB advmod
     |   +-- storage NN nn
     +-- durability NN dobj
     |   +-- transaction NN nn
     +-- in IN prep
         +-- way NN pobj
             +-- a DT det
             +-- ensures VBZ rcmod
                 +-- that WDT nsubj
                 +-- Figure NNP dobj
                     +-- committed VBN amod
                     +-- Group NNP nn
                     |   +-- Group NNP nn
                     |   |   +-- Client NNP nn
                     |   |   +-- Redirector NNP nn
                     |   |   +-- Buddy NNP nn
                     |   +-- Client NNP nn
                     |   +-- Redirector NNP nn
                     |   +-- Buddy NNP nn
                     +-- Servers NNPS nn
                     +-- 1 CD num
Input: data remains available in the presence of client or redirector failures .
Parse:
available JJ ROOT
 +-- data NNS nsubj
 +-- remains VBZ cop
 +-- in IN prep
 |   +-- presence NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- failures NNS pobj
 |               +-- client NN nn
 |                   +-- or CC cc
 |                   +-- redirector NN conj
 +-- . . punct
Input: Figure 1 shows the overall BuddyCache architecture .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 1 CD num
 +-- architecture NN dobj
 |   +-- the DT det
 |   +-- overall JJ amod
 |   +-- BuddyCache NNP nn
 +-- . . punct
Input: 3.1 Cache Coherence The redirector maintains a directory of pages cached at each client to provide cooperative caching -LRB- 20 , 16 , 13 , 2 , 28 -RRB- , redirecting a client fetch request to another client that caches the requested object .
Parse:
Coherence NNP ROOT
 +-- 3.1 CD num
 +-- Cache NNP nn
 +-- maintains VBZ dep
 |   +-- redirector NN nsubj
 |   |   +-- The DT det
 |   +-- directory NN dobj
 |   |   +-- a DT det
 |   |   +-- of IN prep
 |   |       +-- pages NNS pobj
 |   |           +-- cached VBN partmod
 |   |               +-- at IN prep
 |   |                   +-- client NN pobj
 |   |                       +-- each DT det
 |   +-- provide VB xcomp
 |   |   +-- to TO aux
 |   |   +-- caching NN dobj
 |   |       +-- cooperative JJ amod
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- 20 CD dep
 |   |       |   +-- , , punct
 |   |       |   +-- 16 CD num
 |   |       |   +-- 13 CD num
 |   |       |   +-- 2 CD num
 |   |       |   +-- 28 CD num
 |   |       +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- redirecting VBG xcomp
 |       +-- request NN dobj
 |           +-- a DT det
 |           +-- fetch NN nn
 |           |   +-- client NN nn
 |           +-- to IN prep
 |               +-- client NN pobj
 |                   +-- another DT det
 |                   +-- caches VBZ rcmod
 |                       +-- that WDT nsubj
 |                       +-- object NN dobj
 |                           +-- the DT det
 |                           +-- requested VBN amod
 +-- . . punct
Input: In addition , redirector manages cache coherence .
Parse:
manages VBZ ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- redirector NN nsubj
 +-- coherence NN dobj
 |   +-- cache NN nn
 +-- . . punct
Input: Several efficient transactional cache coherence protocols -LRB- 19 -RRB- exist for persistent object storage systems .
Parse:
exist VBP ROOT
 +-- protocols NNS nsubj
 |   +-- Several JJ amod
 |   +-- efficient JJ amod
 |   +-- cache NN nn
 |   |   +-- transactional JJ amod
 |   +-- coherence NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- 19 CD dep
 |   +-- -RRB- -RRB- punct
 +-- for IN prep
 |   +-- systems NNS pobj
 |       +-- persistent JJ amod
 |       +-- storage NN nn
 |           +-- object NN nn
 +-- . . punct
Input: Protocols make different choices in granularity of data transfers and granularity of cache consistency .
Parse:
make VBP ROOT
 +-- Protocols NNS nsubj
 +-- choices NNS dobj
 |   +-- different JJ amod
 +-- in IN prep
 |   +-- granularity NN pobj
 |       +-- of IN prep
 |           +-- transfers NNS pobj
 |               +-- data NNS nn
 |               +-- and CC cc
 |               +-- granularity NN conj
 |                   +-- of IN prep
 |                       +-- consistency NN pobj
 |                           +-- cache NN nn
 +-- . . punct
Input: The current best performing protocols use page granularity transfers when clients fetch missing objects from a server and object granularity coherence to avoid false -LRB- page level -RRB- conflicts .
Parse:
use VBP ROOT
 +-- protocols NNS nsubj
 |   +-- The DT det
 |   +-- current JJ amod
 |   +-- performing VBG amod
 |       +-- best JJS dep
 +-- transfers NNS dobj
 |   +-- page NN nn
 |   +-- granularity NN nn
 +-- fetch VBP advcl
 |   +-- when WRB advmod
 |   +-- clients NNS nsubj
 |   +-- objects NNS dobj
 |   |   +-- missing VBG amod
 |   +-- from IN prep
 |   |   +-- coherence NN pobj
 |   |       +-- a DT det
 |   |       +-- server NN nn
 |   |       |   +-- and CC cc
 |   |       |   +-- object NN conj
 |   |       +-- granularity NN nn
 |   +-- avoid VB xcomp
 |       +-- to TO aux
 |       +-- conflicts NNS dobj
 |           +-- false JJ amod
 |               +-- -LRB- -LRB- punct
 |               +-- level NN dep
 |               |   +-- page NN nn
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: The transactional caching taxonomy -LRB- 19 -RRB- proposed by Carey , Franklin and Livny classifies the coherence protocols into two main categories according to whether a protocol avoids or detects access to stale objects in the client cache .
Parse:
classifies VBZ ROOT
 +-- taxonomy NN nsubj
 |   +-- The DT det
 |   +-- transactional JJ amod
 |   +-- caching VBG amod
 |   +-- 19 CD appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- proposed VBN partmod
 |       +-- by IN prep
 |           +-- Carey NNP pobj
 |               +-- , , punct
 |               +-- Franklin NNP conj
 |               +-- and CC cc
 |               +-- Livny NNP conj
 +-- protocols NNS dobj
 |   +-- the DT det
 |   +-- coherence NN amod
 +-- into IN prep
 |   +-- categories NNS pobj
 |       +-- two CD num
 |       +-- main JJ amod
 +-- according VBG prep
 |   +-- to IN pcomp
 |       +-- avoids NNS pcomp
 |           +-- whether IN mark
 |           +-- protocol NN nsubj
 |           |   +-- a DT det
 |           +-- or CC cc
 |           +-- detects NNS conj
 |           +-- access NN dobj
 |               +-- to IN prep
 |                   +-- objects NNS pobj
 |                       +-- stale JJ amod
 |                       +-- in IN prep
 |                           +-- cache NN pobj
 |                               +-- the DT det
 |                               +-- client NN nn
 +-- . . punct
Input: The BuddyCache approach could be applied to both categories with different performance costs and benefits in each category .
Parse:
applied VBN ROOT
 +-- approach NN nsubjpass
 |   +-- The DT det
 |   +-- BuddyCache NNP nn
 +-- could MD aux
 +-- be VB auxpass
 +-- to IN prep
 |   +-- categories NNS pobj
 |       +-- both DT det
 |       +-- with IN prep
 |           +-- costs NNS pobj
 |               +-- different JJ amod
 |               +-- performance NN nn
 |               +-- and CC cc
 |               +-- benefits NNS conj
 |               +-- in IN prep
 |                   +-- category NN pobj
 |                       +-- each DT det
 +-- . . punct
Input: We chose to investigate BuddyCache in the context of OCC -LRB- 3 -RRB- , the current best performing detection based protocol .
Parse:
chose VBD ROOT
 +-- We PRP nsubj
 +-- investigate VB xcomp
 |   +-- to TO aux
 |   +-- BuddyCache NNP dobj
 |   +-- in IN prep
 |       +-- context NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- OCC NNP pobj
 |                   +-- 3 CD appos
 |                   |   +-- -LRB- -LRB- punct
 |                   |   +-- -RRB- -RRB- punct
 |                   +-- , , punct
 |                   +-- protocol NN appos
 |                       +-- the DT det
 |                       +-- based VBN amod
 |                           +-- detection NN dep
 |                               +-- current JJ amod
 |                               +-- performing VBG amod
 |                                   +-- best JJS advmod
 +-- . . punct
Input: We chose OCC because it is simple , performs well in high latency networks , has been implemented and we had access to the implementation .
Parse:
chose VBD ROOT
 +-- We PRP nsubj
 +-- OCC NNP dobj
 +-- simple JJ advcl
 |   +-- because IN mark
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 +-- , , punct
 +-- performs VBZ conj
 |   +-- well RB advmod
 |   +-- in IN prep
 |       +-- networks NNS pobj
 |           +-- high JJ amod
 |           +-- latency NN nn
 +-- implemented VBN conj
 |   +-- has VBZ aux
 |   +-- been VBN auxpass
 +-- and CC cc
 +-- had VBD conj
 |   +-- we PRP nsubj
 |   +-- access NN dobj
 |       +-- to IN prep
 |           +-- implementation NN pobj
 |               +-- the DT det
 +-- . . punct
Input: We are investigating BuddyCache with PSAA -LRB- 33 -RRB- , the best performing avoidancebased protocol .
Parse:
investigating VBG ROOT
 +-- We PRP nsubj
 +-- are VBP aux
 +-- BuddyCache NNP dobj
 |   +-- with IN prep
 |       +-- PSAA NNP pobj
 |           +-- -LRB- -LRB- punct
 |           +-- 33 CD dep
 |           +-- -RRB- -RRB- punct
 |           +-- , , punct
 |           +-- protocol NN appos
 |               +-- the DT det
 |               +-- performing VBG amod
 |               |   +-- best JJS advmod
 |               +-- avoidancebased VBN amod
 +-- . . punct
Input: Below we outline the OCC protocol -LRB- 3 -RRB- .
Parse:
outline VBP ROOT
 +-- Below RB advmod
 +-- we PRP nsubj
 +-- protocol NN dobj
 |   +-- the DT det
 |   +-- OCC NNP nn
 |   +-- 3 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: The OCC protocol uses object level coherence .
Parse:
uses VBZ ROOT
 +-- protocol NN nsubj
 |   +-- The DT det
 |   +-- OCC NNP nn
 +-- coherence NN dobj
 |   +-- level NN nn
 |       +-- object NN nn
 +-- . . punct
Input: When a client requests a missing object , the server transfers the containing page .
Parse:
transfers VBZ ROOT
 +-- requests VBZ advcl
 |   +-- When WRB advmod
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   +-- object NN dobj
 |       +-- a DT det
 |       +-- missing VBG amod
 +-- , , punct
 +-- server NN nsubj
 |   +-- the DT det
 +-- page NN dobj
 |   +-- the DT det
 |   +-- containing VBG amod
 +-- . . punct
Input: Transaction can read and update locally cached objects without server intervention .
Parse:
read VB ROOT
 +-- Transaction NN nsubj
 +-- can MD aux
 +-- and CC cc
 +-- update VB conj
 +-- objects NNS dobj
 |   +-- cached VBN amod
 |       +-- locally RB advmod
 +-- without IN prep
 |   +-- intervention NN pobj
 |       +-- server NN nn
 +-- . . punct
Input: However , before a transaction commits it must be validated ; the server must make sure the validating transaction has not read a stale version of some object that was updated by a successfully committed or validated transaction .
Parse:
validated VBN ROOT
 +-- However RB advmod
 +-- , , punct
 +-- commits VBZ advcl
 |   +-- before IN mark
 |   +-- transaction NN nsubj
 |       +-- a DT det
 +-- it PRP nsubjpass
 +-- must MD aux
 +-- be VB auxpass
 +-- ; : punct
 +-- make VB parataxis
 |   +-- server NN nsubj
 |   |   +-- the DT det
 |   +-- must MD aux
 |   +-- read VBN acomp
 |       +-- sure RB advmod
 |       +-- transaction NN nsubj
 |       |   +-- the DT det
 |       |   +-- validating VBG amod
 |       +-- has VBZ aux
 |       +-- not RB neg
 |       +-- version NN dobj
 |           +-- a DT det
 |           +-- stale JJ amod
 |           +-- of IN prep
 |               +-- object NN pobj
 |                   +-- some DT det
 |                   +-- updated VBN rcmod
 |                       +-- that WDT nsubjpass
 |                       +-- was VBD auxpass
 |                       +-- by IN prep
 |                           +-- transaction NN pobj
 |                               +-- a DT det
 |                               +-- committed VBN amod
 |                                   +-- successfully RB advmod
 |                                   +-- or CC cc
 |                                   +-- validated VBN conj
 +-- . . punct
Input: If validation fails , the transaction is aborted .
Parse:
aborted VBN ROOT
 +-- fails VBZ advcl
 |   +-- If IN mark
 |   +-- validation NN nsubj
 +-- , , punct
 +-- transaction NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- . . punct
Input: To reduce the number and cost of aborts , 28 Helper Requester A
Parse:
A DT ROOT
 +-- reduce VB dep
 |   +-- To TO aux
 |   +-- number NN dobj
 |       +-- the DT det
 |       +-- and CC cc
 |       +-- cost NN conj
 |       +-- of IN prep
 |           +-- aborts NNS pobj
 +-- , , punct
 +-- 28 CD num
 +-- Helper NNP nn
 +-- Requester NNP nn
Input: When clients receive invalidations they remove stale objects from the cache and send background acknowledgments to let server know about this .
Parse:
remove VBP ROOT
 +-- receive VBP advcl
 |   +-- When WRB advmod
 |   +-- clients NNS nsubj
 |   +-- invalidations NNS dobj
 +-- they PRP nsubj
 +-- objects NNS dobj
 |   +-- stale JJ amod
 +-- from IN prep
 |   +-- cache NN pobj
 |       +-- the DT det
 +-- and CC cc
 +-- send VB conj
 |   +-- acknowledgments NNS dobj
 |   |   +-- background NN nn
 |   +-- let VB xcomp
 |       +-- to TO aux
 |       +-- know VB ccomp
 |           +-- server NN nsubj
 |           +-- about IN prep
 |               +-- this DT pobj
 +-- . . punct
Input: Since invalidations remove stale objects from the client cache , invalidation acknowledgment indicates to the server that a client with no outstanding invalidations has read upto date objects .
Parse:
indicates VBZ ROOT
 +-- remove VBP advcl
 |   +-- Since IN mark
 |   +-- invalidations NNS nsubj
 |   +-- objects NNS dobj
 |   |   +-- stale JJ amod
 |   +-- from IN prep
 |       +-- cache NN pobj
 |           +-- the DT det
 |           +-- client NN nn
 +-- , , punct
 +-- acknowledgment NN nsubj
 |   +-- invalidation NN nn
 +-- to IN prep
 |   +-- server NN pobj
 |       +-- the DT det
 +-- read VBN ccomp
 |   +-- that IN mark
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   |   +-- with IN prep
 |   |       +-- invalidations NNS pobj
 |   |           +-- no DT det
 |   |           +-- outstanding JJ amod
 |   +-- has VBZ aux
 |   +-- objects NNS dobj
 |       +-- date NN nn
 |           +-- upto CD num
 +-- . . punct
Input: An unacknowledged invalidation indicates a stale object may have been accessed in the client cache .
Parse:
indicates VBZ ROOT
 +-- invalidation NN nsubj
 |   +-- An DT det
 |   +-- unacknowledged JJ amod
 +-- accessed VBN ccomp
 |   +-- object NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- stale JJ amod
 |   +-- may MD aux
 |   +-- have VB aux
 |   +-- been VBN auxpass
 |   +-- in IN prep
 |       +-- cache NN pobj
 |           +-- the DT det
 |           +-- client NN nn
 +-- . . punct
Input: The validation procedure at the server aborts a client transaction if a client reads an object while an invalidation is outstanding .
Parse:
aborts NNS ROOT
 +-- procedure NN nsubj
 |   +-- The DT det
 |   +-- validation NN nn
 |   +-- at IN prep
 |       +-- server NN pobj
 |           +-- the DT det
 +-- transaction NN dobj
 |   +-- a DT det
 |   +-- client NN nn
 +-- reads VBZ advcl
 |   +-- if IN mark
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   +-- object NN dobj
 |   |   +-- an DT det
 |   +-- outstanding JJ advcl
 |       +-- while IN mark
 |       +-- invalidation NN nsubj
 |       |   +-- an DT det
 |       +-- is VBZ cop
 +-- . . punct
Input: The acknowledged invalidation mechanism supports object level cache coherence without object based directories or per object version numbers .
Parse:
supports VBZ ROOT
 +-- mechanism NN nsubj
 |   +-- The DT det
 |   +-- acknowledged VBN amod
 |   +-- invalidation NN nn
 +-- coherence NN dobj
 |   +-- level NN nn
 |   |   +-- object JJ amod
 |   +-- cache NN nn
 |   +-- without IN prep
 |       +-- directories NNS pobj
 |       |   +-- based VBN amod
 |       |       +-- object NN dep
 |       +-- or CC cc
 |       +-- per IN conj
 |           +-- numbers NNS pobj
 |               +-- version NN nn
 |                   +-- object NN nn
 +-- . . punct
Input: Avoiding per object overheads is very important to reduce performance penalties -LRB- 3 -RRB- of managing many small objects , since typical objects are small .
Parse:
important JJ ROOT
 +-- Avoiding VBG csubj
 |   +-- per IN prep
 |   |   +-- object NN pobj
 |   +-- overheads NNS dobj
 +-- is VBZ cop
 +-- very RB advmod
 +-- reduce VB xcomp
 |   +-- to TO aux
 |   +-- penalties NNS dobj
 |       +-- performance NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- 3 CD dep
 |       +-- -RRB- -RRB- punct
 |       +-- of IN prep
 |           +-- managing VBG pcomp
 |               +-- objects NNS dobj
 |                   +-- many JJ amod
 |                   +-- small JJ amod
 +-- , , punct
 +-- small JJ advcl
 |   +-- since IN mark
 |   +-- objects NNS nsubj
 |   |   +-- typical JJ amod
 |   +-- are VBP cop
 +-- . . punct
Input: An important BuddyCache design goal is to maintain this benefit .
Parse:
is VBZ ROOT
 +-- goal NN nsubj
 |   +-- An DT det
 |   +-- important JJ amod
 |   +-- BuddyCache NN nn
 |   +-- design NN nn
 +-- maintain VB xcomp
 |   +-- to TO aux
 |   +-- benefit NN dobj
 |       +-- this DT det
 +-- . . punct
Input: Since in BuddyCache a page can be fetched into a client cache without server intervention -LRB- as illustrated in figure 2 -RRB- , cache directories at the servers keep track of pages cached in each collaborating group rather than each client .
Parse:
keep VBP ROOT
 +-- fetched VBN advcl
 |   +-- Since IN prep
 |   |   +-- in IN pcomp
 |   |       +-- BuddyCache NNP pobj
 |   +-- page NN nsubjpass
 |   |   +-- a DT det
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- into IN prep
 |   |   +-- cache NN pobj
 |   |       +-- a DT det
 |   |       +-- client NN nn
 |   +-- without IN prep
 |       +-- intervention NN pobj
 |           +-- server NN nn
 |           +-- illustrated VBN dep
 |               +-- -LRB- -LRB- punct
 |               +-- as IN mark
 |               +-- in IN prep
 |               |   +-- figure NN pobj
 |               |       +-- 2 CD num
 |               +-- -RRB- -RRB- punct
 +-- , , punct
 +-- directories NNS nsubj
 |   +-- cache NN nn
 |   +-- at IN prep
 |       +-- servers NNS pobj
 |           +-- the DT det
 +-- track NN dobj
 |   +-- of IN prep
 |       +-- pages NNS pobj
 |           +-- cached VBN partmod
 |               +-- in IN prep
 |                   +-- group NN pobj
 |                   |   +-- each DT det
 |                   |   +-- collaborating VBG amod
 |                   +-- than IN prep
 |                       +-- rather RB advmod
 |                       +-- client NN pobj
 |                           +-- each DT det
 +-- . . punct
Input: Redirector keeps track of pages cached in each client in a group .
Parse:
keeps VBZ ROOT
 +-- Redirector NN nsubj
 +-- track NN dobj
 |   +-- of IN prep
 |       +-- pages NNS pobj
 |           +-- cached VBN partmod
 |               +-- in IN prep
 |                   +-- group NN pobj
 |                       +-- a DT det
 +-- . . punct
Input: Servers send to the redirector invalidations for pages cached in the entire group .
Parse:
send VBP ROOT
 +-- Servers NNS nsubj
 +-- to IN prep
 |   +-- invalidations NNS pobj
 |       +-- the DT det
 |       +-- redirector NN nn
 +-- for IN prep
 |   +-- pages NNS pobj
 |       +-- cached VBN partmod
 |           +-- in IN prep
 |               +-- group NN pobj
 |                   +-- the DT det
 |                   +-- entire JJ amod
 +-- . . punct
Input: The redirector propagates invalidations from servers to affected clients .
Parse:
propagates VBZ ROOT
 +-- redirector NN nsubj
 |   +-- The DT det
 +-- invalidations NNS dobj
 |   +-- from IN prep
 |       +-- servers NNS pobj
 |       +-- to IN prep
 |           +-- clients NNS pobj
 |               +-- affected VBN amod
 +-- . . punct
Input: When all affected clients acknowledge invalidations , redirector can propagate the group acknowledgment to the server .
Parse:
propagate VB ROOT
 +-- acknowledge VBP advcl
 |   +-- When WRB advmod
 |   +-- clients NNS nsubj
 |   |   +-- all DT det
 |   |   +-- affected VBN amod
 |   +-- invalidations NNS dobj
 +-- , , punct
 +-- redirector NN nsubj
 +-- can MD aux
 +-- acknowledgment NN dobj
 |   +-- the DT det
 |   +-- group NN nn
 +-- to IN prep
 |   +-- server NN pobj
 |       +-- the DT det
 +-- . . punct
Input: 3.2 Light weight Peer Update When one of the clients in the collaborative group creates or modifies shared objects , the copies cached by any other client become stale but the new data is likely to be of potential interest to the group members .
Parse:
stale JJ ROOT
 +-- Update NNP nsubj
 |   +-- weight NN nn
 |   |   +-- 3.2 CD num
 |   |   +-- Light NNP nn
 |   +-- Peer NNP nn
 +-- creates VBZ advcl
 |   +-- When WRB advmod
 |   +-- one CD nsubj
 |   |   +-- of IN prep
 |   |       +-- clients NNS pobj
 |   |           +-- the DT det
 |   |           +-- in IN prep
 |   |               +-- group NN pobj
 |   |                   +-- the DT det
 |   |                   +-- collaborative JJ amod
 |   +-- or CC cc
 |   +-- modifies NNS conj
 |   +-- objects NNS dobj
 |       +-- shared VBN amod
 +-- , , punct
 +-- copies NNS nsubj
 |   +-- the DT det
 |   +-- cached VBN partmod
 |       +-- by IN prep
 |           +-- client NN pobj
 |               +-- any DT det
 |               +-- other JJ amod
 +-- become VBP cop
 +-- but CC cc
 +-- likely JJ conj
 |   +-- data NN nsubj
 |   |   +-- the DT det
 |   |   +-- new JJ amod
 |   +-- is VBZ cop
 |   +-- be VB xcomp
 |       +-- to TO aux
 |       +-- of IN prep
 |           +-- interest NN pobj
 |               +-- potential JJ amod
 |               +-- to IN prep
 |                   +-- members NNS pobj
 |                       +-- the DT det
 |                       +-- group NN nn
 +-- . . punct
Input: The goal in BuddyCache is to provide group members with efficient and consistent access to updates committed within the group without imposing extra overhead on other parts of the storage system .
Parse:
is VBZ ROOT
 +-- goal NN nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- BuddyCache NNP pobj
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- members NNS dobj
 |   |   +-- group NN nn
 |   +-- with IN prep
 |       +-- access NN pobj
 |           +-- efficient JJ amod
 |           |   +-- and CC cc
 |           |   +-- consistent JJ conj
 |           +-- to IN prep
 |               +-- updates NNS pobj
 |                   +-- committed VBN partmod
 |                       +-- within IN prep
 |                       |   +-- group NN pobj
 |                       |       +-- the DT det
 |                       +-- without IN prep
 |                           +-- imposing VBG pcomp
 |                               +-- overhead NN dobj
 |                               |   +-- extra JJ amod
 |                               +-- on IN prep
 |                                   +-- parts NNS pobj
 |                                       +-- other JJ amod
 |                                       +-- of IN prep
 |                                           +-- system NN pobj
 |                                               +-- the DT det
 |                                               +-- storage NN nn
 +-- . . punct
Input: The two possible approaches to deal with stale data are cache invalidations and cache updates .
Parse:
invalidations NNS ROOT
 +-- approaches NNS nsubj
 |   +-- The DT det
 |   +-- two CD num
 |   +-- possible JJ amod
 |   +-- deal VB infmod
 |       +-- to TO aux
 |       +-- with IN prep
 |           +-- data NNS pobj
 |               +-- stale JJ amod
 +-- are VBP cop
 +-- cache JJ amod
 +-- and CC cc
 +-- updates NNS conj
 |   +-- cache NN nn
 +-- . . punct
Input: Cache coherence studies in web systems -LRB- e.g .
Parse:
studies NNS ROOT
 +-- Cache NNP nn
 +-- coherence NN amod
 +-- in IN prep
 |   +-- systems NNS pobj
 |       +-- web NN nn
 +-- -LRB- -LRB- punct
 +-- e.g UH dep
 +-- . . punct
Input: -LRB- 7 -RRB- -RRB- DSM systems -LRB- e.g .
Parse:
e.g UH ROOT
 +-- 7 CD dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- systems NNS dep
 |   +-- DSM NN nn
 +-- -LRB- -LRB- punct
 +-- . . punct
Input: -LRB- 5 -RRB- -RRB- , and transactional object systems -LRB- e.g .
Parse:
5 CD ROOT
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- , , punct
 +-- and CC cc
 +-- systems NNS conj
 |   +-- transactional JJ amod
 |   +-- object NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- e.g UH dep
 +-- . . punct
Input: -LRB- 19 -RRB- -RRB- compare the benefits of update and invalidation .
Parse:
compare VBP ROOT
 +-- 19 CD nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- benefits NNS dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- update NN pobj
 |           +-- and CC cc
 |           +-- invalidation NN conj
 +-- . . punct
Input: The studies show the Committing Client Server Redirector x2 .
Parse:
show VBP ROOT
 +-- studies NNS nsubj
 |   +-- The DT det
 +-- x2 CD dobj
 |   +-- the DT det
 |   +-- Redirector NNP nn
 |       +-- Server NNP nn
 |           +-- Committing NNP nn
 |           +-- Client NNP nn
 +-- . . punct
Input: Store x .
Parse:
Store NN ROOT
 +-- x , punct
 +-- . . punct
