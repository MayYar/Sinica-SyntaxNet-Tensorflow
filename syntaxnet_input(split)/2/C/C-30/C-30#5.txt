Input: We have evaluated Bullet '' s performance in real Internet environments as well as the ModelNet -LRB- 37 -RRB- IP emulation framework .
Parse:
evaluated VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- performance NN dobj
 |   +-- Bullet NNP poss
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- in IN prep
 |       +-- environments NNS pobj
 |           +-- real JJ amod
 |           +-- Internet NN nn
 |           +-- well RB cc
 |           |   +-- as RB advmod
 |           |   +-- as IN mwe
 |           +-- IP NNP conj
 |               +-- ModelNet NNP nsubj
 |               |   +-- the DT det
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- 37 CD dep
 |               |   +-- -RRB- -RRB- punct
 |               +-- framework NN dobj
 |                   +-- emulation NN nn
 +-- . . punct
Input: While the bulk of our experiments use ModelNet , we also report on our experience with Bullet on the PlanetLab Internet testbed -LRB- 31 -RRB- .
Parse:
report VBP ROOT
 +-- use VBP advcl
 |   +-- While IN mark
 |   +-- bulk NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- experiments NNS pobj
 |   |           +-- our PRP$ poss
 |   +-- ModelNet NNP dobj
 +-- , , punct
 +-- we PRP nsubj
 +-- also RB advmod
 +-- on IN prep
 |   +-- experience NN pobj
 |       +-- our PRP$ poss
 |       +-- with IN prep
 |       |   +-- Bullet NNP pobj
 |       +-- on IN prep
 |           +-- testbed VBN pobj
 |               +-- the DT det
 |               +-- PlanetLab NNP nn
 |               +-- Internet NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- 31 CD dep
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: In addition , we have implemented a number of underlying overlay network trees upon which Bullet can execute .
Parse:
implemented VBN ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- have VBP aux
 +-- number NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- trees NNS pobj
 |           +-- underlying VBG amod
 |           +-- overlay NN amod
 |           +-- network NN nn
 |           +-- execute VB rcmod
 |               +-- upon IN prep
 |               |   +-- which WDT pobj
 |               +-- Bullet NNP nsubj
 |               +-- can MD aux
 +-- . . punct
Input: Because Bullet performs well over a randomly created overlay tree , we present results with Bullet running over such a tree compared against an o ? ine greedy bottleneck bandwidth tree algorithm using global topological information described in Section 4.1 .
Parse:
present VBP ROOT
 +-- performs VBZ advcl
 |   +-- Because IN mark
 |   +-- Bullet NNP nsubj
 |   +-- well RB advmod
 |   +-- over IN prep
 |       +-- tree NN pobj
 |           +-- a DT det
 |           +-- created VBN amod
 |           |   +-- randomly RB advmod
 |           +-- overlay NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- results NNS dobj
 |   +-- with IN prep
 |       +-- running VBG pcomp
 |           +-- Bullet NNP nsubj
 |           +-- over IN prep
 |               +-- tree NN pobj
 |                   +-- such PDT predet
 |                   +-- a DT det
 +-- compared VBN prep
 |   +-- against IN pcomp
 |       +-- algorithm NN pobj
 |           +-- an DT det
 |           +-- ine NN nn
 |           |   +-- o NN amod
 |           |   +-- ? . punct
 |           +-- bottleneck NN nn
 |           |   +-- greedy JJ amod
 |           +-- tree NN nn
 |           |   +-- bandwidth NN nn
 |           +-- using VBG partmod
 |               +-- information NN dobj
 |                   +-- global JJ amod
 |                   +-- topological JJ amod
 |                   +-- described VBN partmod
 |                       +-- in IN prep
 |                           +-- Section NNP pobj
 |                               +-- 4.1 CD num
 +-- . . punct
Input: All of our implementations leverage a common development infrastructure called MACEDON -LRB- 33 -RRB- that allows for the specification of overlay algorithms in a simple domainspecific language .
Parse:
leverage VBP ROOT
 +-- All DT nsubj
 |   +-- of IN prep
 |       +-- implementations NNS pobj
 |           +-- our PRP$ poss
 +-- infrastructure NN dobj
 |   +-- a DT det
 |   +-- common JJ amod
 |   +-- development NN nn
 |   +-- called VBN partmod
 |   |   +-- MACEDON NNP dep
 |   +-- 33 CD appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- allows VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- for IN prep
 |           +-- specification NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |               |   +-- algorithms NNS pobj
 |               |       +-- overlay NN amod
 |               +-- in IN prep
 |                   +-- language NN pobj
 |                       +-- a DT det
 |                       +-- simple JJ amod
 |                       +-- domainspecific JJ amod
 +-- . . punct
Input: It enables the reuse of the majority of common functionality in these distributed systems , including probing infrastructures , thread management , message passing , and debugging environment .
Parse:
enables VBZ ROOT
 +-- It PRP nsubj
 +-- reuse NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- majority NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- functionality NN pobj
 |           |       +-- common JJ amod
 |           +-- in IN prep
 |               +-- systems NNS pobj
 |                   +-- these DT det
 |                   +-- distributed VBN amod
 |                   +-- , , punct
 |                   +-- including VBG prep
 |                       +-- infrastructures NNS pobj
 |                           +-- probing VBG amod
 |                           +-- , , punct
 |                           +-- management NN conj
 |                           |   +-- thread NN nn
 |                           +-- passing VBG conj
 |                           |   +-- message NN nn
 |                           +-- and CC cc
 |                           +-- environment NN conj
 |                               +-- debugging VBG amod
 +-- . . punct
Input: As a result , we believe that our comparisons qualitatively show algorithmic differences rather than implementation intricacies .
Parse:
believe VBP ROOT
 +-- As IN prep
 |   +-- result NN pobj
 |       +-- a DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- show VBP ccomp
 |   +-- that IN mark
 |   +-- comparisons NNS nsubj
 |   |   +-- our PRP$ poss
 |   +-- qualitatively RB advmod
 |   +-- differences NNS dobj
 |       +-- algorithmic JJ amod
 |       +-- than IN prep
 |           +-- rather RB advmod
 |           +-- intricacies NNS pobj
 |               +-- implementation NN nn
 +-- . . punct
Input: Our implementation of the core Bullet logic is under 1000 lines of code in this infrastructure .
Parse:
is VBZ ROOT
 +-- implementation NN nsubj
 |   +-- Our PRP$ poss
 |   +-- of IN prep
 |       +-- logic NN pobj
 |           +-- the DT det
 |           +-- core NN nn
 |           +-- Bullet NNP nn
 +-- under IN prep
 |   +-- lines NNS pobj
 |       +-- 1000 CD num
 |       +-- of IN prep
 |       |   +-- code NN pobj
 |       +-- in IN prep
 |           +-- infrastructure NN pobj
 |               +-- this DT det
 +-- . . punct
Input: Our ModelNet experiments make use of 50 2Ghz Pentium4 '' s running Linux 2.4.20 and interconnected with 100 Mbps and 1 Gbps Ethernet switches .
Parse:
make VBP ROOT
 +-- experiments NNS nsubj
 |   +-- Our PRP$ poss
 |   +-- ModelNet NNP nn
 +-- use NN dobj
 |   +-- of IN prep
 |       +-- running VBG pcomp
 |           +-- Pentium4 NNP nsubj
 |           |   +-- 50 CD num
 |           |   +-- 2Ghz CD nn
 |           |   +-- '' '' punct
 |           |   +-- s POS possessive
 |           +-- 2.4.20 CD dobj
 |           |   +-- Linux NNP nn
 |           +-- and CC cc
 |           +-- interconnected VBN conj
 |               +-- with IN prep
 |                   +-- Mbps NNS pobj
 |                       +-- 100 CD num
 |                       +-- and CC cc
 |                       +-- switches NNS conj
 |                           +-- Gbps NN nn
 |                           |   +-- 1 CD num
 |                           +-- Ethernet NN nn
 +-- . . punct
Input: For the majority of these experiments , we multiplex one thousand instances -LRB- overlay participants -RRB- of our overlay applications across the 50 Linux nodes -LRB- 20 per machine -RRB- .
Parse:
multiplex VBP ROOT
 +-- For IN prep
 |   +-- majority NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- experiments NNS pobj
 |               +-- these DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- instances NNS dobj
 |   +-- thousand CD num
 |   |   +-- one CD number
 |   +-- -LRB- -LRB- punct
 |   +-- participants NNS dep
 |   |   +-- overlay NN nn
 |   +-- -RRB- -RRB- punct
 |   +-- of IN prep
 |       +-- applications NNS pobj
 |           +-- our PRP$ poss
 |           +-- overlay NN nn
 |           +-- across IN prep
 |               +-- nodes NNS pobj
 |                   +-- the DT det
 |                   +-- 50 CD num
 |                   +-- Linux NNP nn
 |                   +-- 20 CD appos
 |                       +-- -LRB- -LRB- punct
 |                       +-- per IN prep
 |                       |   +-- machine NN pobj
 |                       +-- -RRB- -RRB- punct
 +-- . . punct
Input: In ModelNet , packet transmissions are routed through emulators responsible for accurately emulating the hop by hop delay , bandwidth , and congestion of a network topology .
Parse:
routed VBN ROOT
 +-- In IN prep
 |   +-- ModelNet NNP pobj
 +-- , , punct
 +-- transmissions NNS nsubjpass
 |   +-- packet NN nn
 +-- are VBP auxpass
 +-- through IN prep
 |   +-- emulators NNS pobj
 |       +-- responsible JJ amod
 |           +-- for IN prep
 |               +-- emulating VBG pcomp
 |                   +-- accurately RB advmod
 |                   +-- hop NN dobj
 |                   |   +-- the DT det
 |                   +-- by IN prep
 |                       +-- delay NN pobj
 |                           +-- hop NN nn
 |                           +-- , , punct
 |                           +-- bandwidth NN conj
 |                           +-- and CC cc
 |                           +-- congestion NN conj
 |                               +-- of IN prep
 |                                   +-- topology NN pobj
 |                                       +-- a DT det
 |                                       +-- network NN nn
 +-- . . punct
Input: In our evaluations , we used four 1.4Ghz Pentium III '' s running FreeBSD 4.7 as emulators .
Parse:
used VBD ROOT
 +-- In IN prep
 |   +-- evaluations NNS pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- we PRP nsubj
 +-- III NNP dobj
 |   +-- four CD num
 |   +-- 1.4Ghz CD nn
 |   +-- Pentium NNP nn
 |   +-- '' '' punct
 |   +-- s POS punct
 |   +-- running VBG partmod
 |       +-- FreeBSD NNP dobj
 |       |   +-- 4.7 CD num
 |       +-- as IN prep
 |           +-- emulators NNS pobj
 +-- . . punct
Input: This platform supports approximately 2 3 Gbps of aggregate simultaneous communication among end hosts .
Parse:
supports VBZ ROOT
 +-- platform NN nsubj
 |   +-- This DT det
 +-- Gbps NN dobj
 |   +-- 3 CD num
 |   |   +-- approximately RB quantmod
 |   |   +-- 2 CD number
 |   +-- of IN prep
 |   |   +-- communication NN pobj
 |   |       +-- aggregate NN amod
 |   |       +-- simultaneous JJ amod
 |   +-- among IN prep
 |       +-- hosts NNS pobj
 |           +-- end NN nn
 +-- . . punct
Input: For most of our ModelNet experiments , we use 20 , 000 node INET generated topologies -LRB- 10 -RRB- .
Parse:
use VBP ROOT
 +-- For IN prep
 |   +-- most JJS pobj
 |       +-- of IN prep
 |           +-- experiments NNS pobj
 |               +-- our PRP$ poss
 |               +-- ModelNet NNP nn
 +-- , , punct
 +-- we PRP nsubj
 +-- INET NN dobj
 |   +-- 000 CD num
 |   |   +-- 20 CD number
 |   |       +-- , , punct
 |   +-- node NN nn
 |   +-- generated VBN partmod
 |   |   +-- topologies NNS dobj
 |   +-- -LRB- -LRB- punct
 |   +-- 10 CD dep
 |   +-- -RRB- -RRB- punct
 +-- . . punct
Input: We randomly assign our participant nodes to act as clients connected to one degree stub nodes in the topology .
Parse:
assign VBP ROOT
 +-- We PRP nsubj
 +-- randomly RB advmod
 +-- nodes NNS dobj
 |   +-- our PRP$ poss
 |   +-- participant NN nn
 +-- act VB xcomp
 |   +-- to TO aux
 |   +-- as IN prep
 |       +-- clients NNS pobj
 |           +-- connected VBN partmod
 |               +-- to IN prep
 |                   +-- nodes NNS pobj
 |                       +-- one CD num
 |                       +-- stub NN nn
 |                       |   +-- degree NN nn
 |                       +-- in IN prep
 |                           +-- topology NN pobj
 |                               +-- the DT det
 +-- . . punct
Input: We randomly select one of these participants to act as the source of the data stream .
Parse:
select VB ROOT
 +-- We PRP nsubj
 +-- randomly RB advmod
 +-- one CD dobj
 |   +-- of IN prep
 |   |   +-- participants NNS pobj
 |   |       +-- these DT det
 |   +-- act VB infmod
 |       +-- to TO aux
 |       +-- as IN prep
 |           +-- source NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- stream NN pobj
 |                       +-- the DT det
 |                       +-- data NNS nn
 +-- . . punct
Input: Propagation delays in the network topology are calculated based on the relative placement of the network nodes in the plane by INET .
Parse:
calculated VBN ROOT
 +-- delays NNS nsubjpass
 |   +-- Propagation NN nn
 |   +-- in IN prep
 |       +-- topology NN pobj
 |           +-- the DT det
 |           +-- network NN nn
 +-- are VBP auxpass
 +-- based VBN prep
 |   +-- on IN pcomp
 |       +-- placement NN pobj
 |           +-- the DT det
 |           +-- relative JJ amod
 |           +-- of IN prep
 |               +-- nodes NNS pobj
 |                   +-- the DT det
 |                   +-- network NN nn
 |                   +-- in IN prep
 |                       +-- plane NN pobj
 |                           +-- the DT det
 |                           +-- by IN prep
 |                               +-- INET NNP pobj
 +-- . . punct
Input: Based on the classification in -LRB- 8 -RRB- , we classify network links as being Client Stub , Stub Stub , TransitStub , and Transit Transit depending on their location in the network .
Parse:
classify VBP ROOT
 +-- Based VBN prep
 |   +-- on IN pcomp
 |       +-- classification NN pobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- 8 CD pobj
 |                   +-- -LRB- -LRB- punct
 |                   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- links NNS dobj
 |   +-- network NN nn
 +-- as IN prep
 |   +-- Stub NNP pcomp
 |       +-- being VBG cop
 |       +-- Client NNP nn
 |       +-- , , punct
 |       +-- Stub NNP conj
 |       |   +-- Stub NNP nn
 |       +-- TransitStub NNP conj
 |       +-- and CC cc
 |       +-- Transit NNP conj
 |       |   +-- Transit NNP nn
 |       +-- depending VBG prep
 |           +-- on IN pcomp
 |               +-- location NN pobj
 |                   +-- their PRP$ poss
 |                   +-- in IN prep
 |                       +-- network NN pobj
 |                           +-- the DT det
 +-- . . punct
Input: We restrict topological bandwidth by setting the bandwidth for each link depending on its type .
Parse:
restrict VBP ROOT
 +-- We PRP nsubj
 +-- bandwidth NN dobj
 |   +-- topological JJ amod
 +-- by IN prep
 |   +-- setting VBG pcomp
 |       +-- bandwidth NN dobj
 |       |   +-- the DT det
 |       +-- for IN prep
 |       |   +-- link NN pobj
 |       |       +-- each DT det
 |       +-- depending VBG prep
 |           +-- on IN pcomp
 |               +-- type NN pobj
 |                   +-- its PRP$ poss
 +-- . . punct
Input: Each type of link has an associated bandwidth range from which the bandwidth is chosen uniformly at random .
Parse:
has VBZ ROOT
 +-- type NN nsubj
 |   +-- Each DT det
 |   +-- of IN prep
 |       +-- link NN pobj
 +-- range NN dobj
 |   +-- an DT det
 |   +-- associated VBN amod
 |   +-- bandwidth NN nn
 |   +-- chosen VBN rcmod
 |       +-- from IN prep
 |       |   +-- which WDT pobj
 |       +-- bandwidth NN nsubjpass
 |       |   +-- the DT det
 |       +-- is VBZ auxpass
 |       +-- uniformly RB advmod
 |       +-- at IN prep
 |           +-- random JJ pobj
 +-- . . punct
Input: By changing these ranges , we vary bandwidth constraints in our topologies .
Parse:
vary VBP ROOT
 +-- By IN prep
 |   +-- changing VBG pcomp
 |       +-- ranges NNS dobj
 |           +-- these DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- constraints NNS dobj
 |   +-- bandwidth NN nn
 |   +-- in IN prep
 |       +-- topologies NNS pobj
 |           +-- our PRP$ poss
 +-- . . punct
Input: For our experiments , we created three different ranges corresponding to low , medium , and high bandwidths relative to our typical streaming rates of 600 1000 Kbps as specified in Table 1 .
Parse:
created VBD ROOT
 +-- For IN prep
 |   +-- experiments NNS pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- we PRP nsubj
 +-- ranges NNS dobj
 |   +-- three CD num
 |   +-- different JJ amod
 |   +-- corresponding VBG partmod
 |       +-- to IN prep
 |           +-- bandwidths NNS pobj
 |               +-- low JJ amod
 |                   +-- , , punct
 |                   +-- medium NN conj
 |                   +-- and CC cc
 |                   +-- high JJ conj
 +-- relative JJ advmod
 |   +-- to IN prep
 |       +-- rates NNS pobj
 |           +-- our PRP$ poss
 |           +-- typical JJ amod
 |           +-- streaming NN amod
 |           +-- of IN prep
 |               +-- Kbps NNS pobj
 |                   +-- 1000 CD num
 |                       +-- 600 CD number
 +-- specified VBN advcl
 |   +-- as IN mark
 |   +-- in IN prep
 |       +-- Table NNP pobj
 |           +-- 1 CD num
 +-- . . punct
Input: While the presented ModelNet results are restricted to two topologies with varying bandwidth constraints , the results of experiments with additional topologies all show qualitatively similar behavior .
Parse:
show VBP ROOT
 +-- restricted VBN advcl
 |   +-- While IN mark
 |   +-- results NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- presented VBN amod
 |   |   +-- ModelNet NNP nn
 |   +-- are VBP auxpass
 |   +-- to IN prep
 |       +-- topologies NNS pobj
 |           +-- two CD num
 |           +-- with IN prep
 |               +-- constraints NNS pobj
 |                   +-- varying VBG amod
 |                   +-- bandwidth NN nn
 +-- , , punct
 +-- results NNS nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- experiments NNS pobj
 |   |       +-- with IN prep
 |   |           +-- topologies NNS pobj
 |   |               +-- additional JJ amod
 |   +-- all DT dep
 +-- qualitatively RB advmod
 +-- behavior NN dobj
 |   +-- similar JJ amod
 +-- . . punct
Input: We do not implement any particular coding scheme for our experiments .
Parse:
implement VB ROOT
 +-- We PRP nsubj
 +-- do VBP aux
 +-- not RB neg
 +-- scheme NN dobj
 |   +-- any DT det
 |   +-- particular JJ amod
 |   +-- coding NN nn
 |   +-- for IN prep
 |       +-- experiments NNS pobj
 |           +-- our PRP$ poss
 +-- . . punct
Input: Rather , we assume that either each sequence number directly specifies a particular data block and the block offset for each packet , or we are distributing data within the same block for LT Codes , e.g. , when distributing a file .
Parse:
assume VBP ROOT
 +-- Rather RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- specifies VBZ ccomp
 |   +-- that IN mark
 |   +-- number NN nsubj
 |   |   +-- either CC dep
 |   |   +-- each DT det
 |   |   +-- sequence NN nn
 |   +-- directly RB advmod
 |   +-- block NN dobj
 |   |   +-- a DT det
 |   |   +-- particular JJ amod
 |   |   +-- data NN nn
 |   |   +-- and CC cc
 |   |   +-- block NN conj
 |   |   |   +-- the DT det
 |   |   +-- offset VBN partmod
 |   |       +-- for IN prep
 |   |           +-- packet NN pobj
 |   |               +-- each DT det
 |   +-- , , punct
 |   +-- or CC cc
 |   +-- distributing VBG conj
 |       +-- we PRP nsubj
 |       +-- are VBP aux
 |       +-- data NNS dobj
 |       +-- within IN prep
 |       |   +-- block NN pobj
 |       |       +-- the DT det
 |       |       +-- same JJ amod
 |       |       +-- for IN prep
 |       |           +-- Codes NNPS pobj
 |       |               +-- LT NNP nn
 |       |               +-- , , punct
 |       |               +-- e.g. NNP appos
 |       +-- distributing VBG advcl
 |           +-- when WRB advmod
 |           +-- file NN dobj
 |               +-- a DT det
 +-- . . punct
Input: 4.1 Offline Bottleneck Bandwidth Tree One of our goals is to determine Bullet '' s performance relative to the best possible bandwidth optimized tree for a given network topology .
Parse:
is VBZ ROOT
 +-- Tree NNP nsubj
 |   +-- 4.1 CD num
 |   +-- Offline NNP nn
 |   +-- Bottleneck NNP nn
 |   +-- Bandwidth NNP nn
 |   +-- One CD num
 |   +-- of IN prep
 |       +-- goals NNS pobj
 |           +-- our PRP$ poss
 +-- determine VB xcomp
 |   +-- to TO aux
 |   +-- performance NN dobj
 |       +-- Bullet NNP poss
 |       |   +-- '' '' punct
 |       |   +-- s POS possessive
 |       +-- relative JJ amod
 |       |   +-- to IN prep
 |       |       +-- tree NN pobj
 |       |           +-- the DT det
 |       |           +-- possible JJ amod
 |       |           |   +-- best RBS advmod
 |       |           +-- bandwidth NN nn
 |       |           +-- optimized VBN amod
 |       +-- for IN prep
 |           +-- topology NN pobj
 |               +-- a DT det
 |               +-- given VBN amod
 |               +-- network NN nn
 +-- . . punct
Input: This allows us to quantify the possible improvements of an overlay mesh constructed using Bullet relative to the best possible tree .
Parse:
allows VBZ ROOT
 +-- This DT nsubj
 +-- quantify VB xcomp
 |   +-- us PRP nsubj
 |   +-- to TO aux
 |   +-- improvements NNS dobj
 |       +-- the DT det
 |       +-- possible JJ amod
 |       +-- of IN prep
 |           +-- mesh NN pobj
 |               +-- an DT det
 |               +-- overlay NN nn
 |               +-- constructed VBN partmod
 |                   +-- using VBG xcomp
 |                       +-- relative NN dobj
 |                       |   +-- Bullet NNP nn
 |                       +-- to IN prep
 |                           +-- tree NN pobj
 |                               +-- the DT det
 |                               +-- best JJS amod
 |                               +-- possible JJ amod
 +-- . . punct
Input: While we have not yet proven this , we believe that this problem is NP hard .
Parse:
believe VBP ROOT
 +-- proven VBN advcl
 |   +-- While IN mark
 |   +-- we PRP nsubj
 |   +-- have VBP aux
 |   +-- not RB neg
 |   +-- yet RB advmod
 |   +-- this DT dobj
 +-- , , punct
 +-- we PRP nsubj
 +-- hard JJ ccomp
 |   +-- that IN mark
 |   +-- problem NN nsubj
 |   |   +-- this DT det
 |   +-- is VBZ cop
 |   +-- NP NNP npadvmod
 +-- . . punct
Input: Thus , in this section we present a simple greedy o ? ine algorithm to determine the connectivity of a tree likely to deliver a high level of bandwidth .
Parse:
present VBP ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- o NNP dobj
 |   +-- a DT det
 |   +-- simple JJ amod
 |   +-- greedy JJ nn
 |   +-- ? . punct
 |   +-- algorithm NN dep
 |       +-- ine NN nn
 +-- determine VB xcomp
 |   +-- to TO aux
 |   +-- connectivity NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- tree NN pobj
 |               +-- a DT det
 |               +-- likely JJ amod
 |                   +-- deliver VB xcomp
 |                       +-- to TO aux
 |                       +-- level NN dobj
 |                           +-- a DT det
 |                           +-- high JJ amod
 |                           +-- of IN prep
 |                               +-- bandwidth NN pobj
 +-- . . punct
Input: In practice , we are not aware of any scalable online algorithms that are able to deliver the bandwidth of an o ? ine algorithm .
Parse:
aware JJ ROOT
 +-- In IN prep
 |   +-- practice NN pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- are VBP cop
 +-- not RB neg
 +-- of IN prep
 |   +-- algorithms NNS pobj
 |       +-- any DT det
 |       +-- scalable JJ amod
 |       +-- online JJ amod
 |       +-- able JJ rcmod
 |           +-- that WDT nsubj
 |           +-- are VBP cop
 |           +-- deliver VB xcomp
 |               +-- to TO aux
 |               +-- bandwidth NN dobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- algorithm NN pobj
 |                           +-- an DT det
 |                           +-- o NNP amod
 |                           +-- ? . punct
 |                           +-- ine NN amod
 +-- . . punct
Input: At the same time , trees constructed by our algorithm tend to be long and skinny making them less resilient to failures and inappropriate for delay sensitive applications -LRB- such as multimedia streaming -RRB- .
Parse:
tend VB ROOT
 +-- At IN prep
 |   +-- time NN pobj
 |       +-- the DT det
 |       +-- same JJ amod
 +-- , , punct
 +-- trees NNS nsubj
 |   +-- constructed VBN partmod
 |       +-- by IN prep
 |           +-- algorithm NN pobj
 |               +-- our PRP$ poss
 +-- long JJ xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- and CC cc
 |   +-- skinny VB conj
 |       +-- making VBG xcomp
 |           +-- resilient JJ xcomp
 |               +-- them PRP nsubj
 |               +-- less RBR advmod
 |               +-- to IN prep
 |               |   +-- failures NNS pobj
 |               +-- and CC cc
 |               +-- inappropriate JJ conj
 |               +-- for IN prep
 |                   +-- applications NNS pobj
 |                       +-- delay NN nn
 |                       +-- sensitive JJ amod
 |                       +-- -LRB- -LRB- punct
 |                       +-- as IN prep
 |                       |   +-- such JJ mwe
 |                       |   +-- multimedia NNS pobj
 |                       |       +-- streaming VBG partmod
 |                       +-- -RRB- -RRB- punct
 +-- . . punct
Input: In addition to any performance comparisons , a Bullet mesh has much lower depth than the bottleneck tree and is more resilient to failure , as discussed in Section 4.6 .
Parse:
has VBZ ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 |       +-- to IN prep
 |           +-- comparisons NNS pobj
 |               +-- any DT det
 |               +-- performance NN nn
 +-- , , punct
 +-- mesh NN nsubj
 |   +-- a DT det
 |   +-- Bullet NNP nn
 +-- depth NN dobj
 |   +-- lower JJR amod
 |   |   +-- much RB advmod
 |   +-- than IN prep
 |       +-- tree NN pobj
 |           +-- the DT det
 |           +-- bottleneck NN nn
 +-- and CC cc
 +-- resilient JJ conj
 |   +-- is VBZ cop
 |   +-- more RBR advmod
 |   +-- to IN prep
 |   |   +-- failure NN pobj
 |   +-- , , punct
 |   +-- discussed VBN advcl
 |       +-- as IN mark
 |       +-- in IN prep
 |           +-- Section NN pobj
 |               +-- 4.6 CD num
 +-- . . punct
Input: 289 Topology classification Client Stub Stub Stub Transit Stub Transit Transit Low bandwidth 300 600 500 1000 1000 2000 2000 4000 Medium bandwidth 800 2800 1000 4000 1000 4000 5000 10000 High bandwidth 1600 5600 2000 8000 2000 8000 10000 20000 Table 1
Parse:
bandwidth NN ROOT
 +-- 289 CD num
 +-- Transit NNP nn
 |   +-- Topology NNP nn
 |   +-- classification NN nn
 |   +-- Client NNP nn
 |   +-- Stub NNP nn
 |   +-- Transit NNP nn
 +-- Low JJ nn
 |   +-- Transit NN nn
 +-- 2000 CD num
 |   +-- 300 CD number
 |   +-- 600 CD number
 |   +-- 500 CD number
 |   +-- 1000 CD number
 |   +-- 2000 CD number
 +-- bandwidth NN dep
 |   +-- 4000 CD num
 |   +-- Medium NNP amod
 +-- 10000 CD dep
 |   +-- 5000 CD num
 |       +-- 800 CD number
 |       +-- 2800 CD number
 |       +-- 1000 CD number
 |       +-- 4000 CD number
 +-- bandwidth JJ dep
 |   +-- High JJ amod
 +-- 1600 CD dep
     +-- 1 CD num
         +-- 5600 CD number
         +-- 2000 CD number
         |   +-- 2000 CD number
         |   +-- 8000 CD number
         +-- 8000 CD number
         +-- 10000 CD number
         +-- 20000 CD num
         +-- Table NNP nn
Input: Specifically , we consider the following problem
Parse:
consider VBP ROOT
 +-- Specifically RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- problem NN dobj
     +-- the DT det
     +-- following VBG amod
Input: We are , therefore , trying to find the directed overlay tree with the maximum bottleneck link .
Parse:
are VBP ROOT
 +-- We PRP nsubj
 +-- , , punct
 +-- therefore RB advmod
 +-- trying VBG xcomp
 |   +-- find VB xcomp
 |       +-- to TO aux
 |       +-- tree NN dobj
 |       |   +-- the DT det
 |       |   +-- directed VBN amod
 |       |   +-- overlay NN nn
 |       +-- with IN prep
 |           +-- link NN pobj
 |               +-- the DT det
 |               +-- maximum JJ amod
 |               +-- bottleneck NN nn
 +-- . . punct
Input: Accordingly , we refer to this problem as the overlay maximum bottleneck tree .
Parse:
refer VBP ROOT
 +-- Accordingly RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- to IN prep
 |   +-- problem NN pobj
 |       +-- this DT det
 +-- as IN prep
 |   +-- tree NN pobj
 |       +-- the DT det
 |       +-- maximum JJ nn
 |       |   +-- overlay NN nn
 |       +-- bottleneck NN nn
 +-- . . punct
Input: In a simplified case , assuming that congestion only exists on access links and there are no lossy links , there exists an optimal algorithm -LRB- 23 -RRB- .
Parse:
exists VBZ ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- a DT det
 |       +-- simplified JJ amod
 +-- , , punct
 +-- assuming VBG partmod
 |   +-- exists VBZ ccomp
 |       +-- that IN mark
 |       +-- congestion NN nsubj
 |       +-- only RB advmod
 |       +-- on IN prep
 |       |   +-- links NNS pobj
 |       |       +-- access NN nn
 |       +-- and CC cc
 |       +-- are VBP conj
 |           +-- there EX expl
 |           +-- links NNS nsubj
 |               +-- no DT det
 |               +-- lossy NN nn
 +-- there EX expl
 +-- algorithm NN dobj
 |   +-- an DT det
 |   +-- optimal JJ amod
 |   +-- 23 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: In the more general case of contention on any physical link , and when the system is allowed to choose the routing path between the two endpoints , this problem is known to be NP hard -LRB- 12 -RRB- , even in the absence of link losses .
Parse:
known VBN ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- general JJ amod
 |       |   +-- more RBR advmod
 |       +-- of IN prep
 |           +-- contention NN pobj
 |               +-- on IN prep
 |                   +-- link NN pobj
 |                       +-- any DT det
 |                       +-- physical JJ amod
 +-- , , punct
 +-- and CC cc
 +-- allowed VBN advcl
 |   +-- when WRB advmod
 |   +-- system NN nsubjpass
 |   |   +-- the DT det
 |   +-- is VBZ auxpass
 |   +-- choose VB xcomp
 |       +-- to TO aux
 |       +-- path NN dobj
 |           +-- the DT det
 |           +-- routing VBG nn
 |           +-- between IN prep
 |               +-- endpoints NNS pobj
 |                   +-- the DT det
 |                   +-- two CD num
 +-- problem NN nsubjpass
 |   +-- this DT det
 +-- is VBZ auxpass
 +-- NP NNP xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- hard RB dep
 |   +-- -LRB- -LRB- punct
 |   +-- 12 CD num
 |   +-- -RRB- -RRB- punct
 +-- in IN prep
 |   +-- even RB advmod
 |   +-- absence NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- losses NNS pobj
 |               +-- link NN nn
 +-- . . punct
Input: For the purposes of this paper , our goal is to determine a good overlay streaming tree that provides each overlay participant with substantial bandwidth , while avoiding overlay links with high end to end loss rates .
Parse:
is VBZ ROOT
 +-- For IN prep
 |   +-- purposes NNS pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- paper NN pobj
 |               +-- this DT det
 +-- , , punct
 +-- goal NN nsubj
 |   +-- our PRP$ poss
 +-- determine VB xcomp
 |   +-- to TO aux
 |   +-- tree NN dobj
 |       +-- a DT det
 |       +-- overlay NN nn
 |       |   +-- good JJ amod
 |       +-- streaming NN amod
 |       +-- provides VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- participant NN dobj
 |           |   +-- each DT det
 |           |   +-- overlay JJ amod
 |           +-- with IN prep
 |           |   +-- bandwidth NN pobj
 |           |       +-- substantial JJ amod
 |           +-- , , punct
 |           +-- avoiding VBG advcl
 |               +-- while IN mark
 |               +-- links NNS dobj
 |               |   +-- overlay NN nn
 |               |   +-- with IN prep
 |               |       +-- end NN pobj
 |               |           +-- high JJ amod
 |               +-- end VB xcomp
 |                   +-- to TO aux
 |                   +-- rates NNS dobj
 |                       +-- loss NN nn
 +-- . . punct
Input: We make the following assumptions
Parse:
make VBP ROOT
 +-- We PRP nsubj
 +-- assumptions NNS dobj
     +-- the DT det
     +-- following VBG amod
Input: This closely models the existing overlay network model with IP for unicast routing .
Parse:
models VBZ ROOT
 +-- This DT nsubj
 +-- closely RB advmod
 +-- model NN dobj
 |   +-- the DT det
 |   +-- existing VBG amod
 |   +-- overlay NN nn
 |   +-- network NN nn
 |   +-- with IN prep
 |       +-- IP NN pobj
 |           +-- for IN prep
 |               +-- routing NN pobj
 |                   +-- unicast JJ amod
 +-- . . punct
Input: connections to transfer data point to point .
Parse:
connections NNS ROOT
 +-- transfer VB infmod
 |   +-- to TO aux
 |   +-- point NN dobj
 |   |   +-- data NNS nn
 |   +-- to IN prep
 |       +-- point VB pobj
 +-- . . punct
Input: throughput of a TCP friendly flow using a steady state formula -LRB- 27 -RRB- .
Parse:
throughput NN ROOT
 +-- of IN prep
 |   +-- flow NN pobj
 |       +-- a DT det
 |       +-- TCP NNP nn
 |       +-- friendly JJ amod
 |       +-- using VBG partmod
 |           +-- formula NN dobj
 |               +-- a DT det
 |               +-- steady JJ amod
 |               +-- state NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- 27 CD dep
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: each flow can achieve throughput of at most c n , where c is the physical capacity of the link .
Parse:
achieve VB ROOT
 +-- flow NN nsubj
 |   +-- each DT det
 +-- can MD aux
 +-- throughput NN dobj
 |   +-- of IN prep
 |       +-- at IN pcomp
 |           +-- c $ pobj
 |               +-- most RBS amod
 |               +-- n CC advmod
 |               +-- , , punct
 |               +-- capacity NN rcmod
 |                   +-- where WRB advmod
 |                   +-- c PRP nsubj
 |                   +-- is VBZ cop
 |                   +-- the DT det
 |                   +-- physical JJ amod
 |                   +-- of IN prep
 |                       +-- link NN pobj
 |                           +-- the DT det
 +-- . . punct
Input: Given these assumptions , we concentrate on estimating the throughput available between two participants in the overlay .
Parse:
concentrate VBP ROOT
 +-- Given VBN prep
 |   +-- assumptions NNS dep
 |       +-- these DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- on IN prep
 |   +-- estimating VBG pcomp
 |       +-- throughput NN dobj
 |           +-- the DT det
 |           +-- available JJ amod
 |               +-- between IN prep
 |                   +-- participants NNS pobj
 |                       +-- two CD num
 |                       +-- in IN prep
 |                           +-- overlay NN pobj
 |                               +-- the DT det
 +-- . . punct
Input: We start by calculating the throughput using the steady state formula .
Parse:
start VBP ROOT
 +-- We PRP nsubj
 +-- by IN prep
 |   +-- calculating VBG pcomp
 |       +-- throughput NN dobj
 |       |   +-- the DT det
 |       +-- using VBG partmod
 |           +-- formula NN dobj
 |               +-- the DT det
 |               +-- steady JJ amod
 |               +-- state NN nn
 +-- . . punct
Input: We then route the flow in the network , and consider the physical links one at a time .
Parse:
route VBP ROOT
 +-- We PRP nsubj
 +-- then RB advmod
 +-- flow NN dobj
 |   +-- the DT det
 |   +-- in IN prep
 |       +-- network NN pobj
 |           +-- the DT det
 +-- , , punct
 +-- and CC cc
 +-- consider VB conj
 |   +-- one CD xcomp
 |       +-- links NNS nsubj
 |       |   +-- the DT det
 |       |   +-- physical JJ amod
 |       +-- at IN prep
 |           +-- time NN pobj
 |               +-- a DT det
 +-- . . punct
Input: On each physical link , we compute the fair share for each of the competing flows .
Parse:
compute VBP ROOT
 +-- On IN prep
 |   +-- link NN pobj
 |       +-- each DT det
 |       +-- physical JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- share NN dobj
 |   +-- the DT det
 |   +-- fair JJ amod
 |   +-- for IN prep
 |       +-- each DT pobj
 |           +-- of IN prep
 |               +-- flows NNS pobj
 |                   +-- the DT det
 |                   +-- competing VBG amod
 +-- . . punct
Input: The throughput of an overlay link is then approximated by the minimum of the fair shares along the routing path , and the formula rate .
Parse:
approximated VBN ROOT
 +-- throughput NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- link NN pobj
 |           +-- an DT det
 |           +-- overlay NN nn
 +-- is VBZ auxpass
 +-- then RB advmod
 +-- by IN prep
 |   +-- minimum NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- shares NNS pobj
 |       |       +-- the DT det
 |       |       +-- fair JJ amod
 |       +-- along IN prep
 |       |   +-- path NN pobj
 |       |       +-- the DT det
 |       |       +-- routing VBG nn
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- rate NN conj
 |           +-- the DT det
 |           +-- formula NN nn
 +-- . . punct
Input: If some flow does not require the same share of the bottleneck link as other competing flows -LRB- i.e. , its throughput might be limited by losses elsewhere in the network -RRB- , then the other flows might end up with a greater share than the one we compute .
Parse:
limited VBN ROOT
 +-- require VB advcl
 |   +-- If IN mark
 |   +-- flow NN nsubj
 |   |   +-- some DT det
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- share NN dobj
 |       +-- the DT det
 |       +-- same JJ amod
 |       +-- of IN prep
 |       |   +-- link NN pobj
 |       |       +-- the DT det
 |       |       +-- bottleneck NN nn
 |       +-- as IN prep
 |           +-- flows NNS pobj
 |               +-- other JJ amod
 |               +-- competing VBG amod
 |               +-- -LRB- -LRB- punct
 |               +-- i.e. FW advmod
 +-- , , punct
 +-- throughput NN nsubjpass
 |   +-- its PRP$ poss
 +-- might MD aux
 +-- be VB auxpass
 +-- by IN prep
 |   +-- losses NNS pobj
 |       +-- elsewhere RB advmod
 |       +-- in IN prep
 |           +-- network NN pobj
 |               +-- the DT det
 +-- -RRB- -RRB- punct
 +-- end VB ccomp
 |   +-- then RB advmod
 |   +-- flows NNS nsubj
 |   |   +-- the DT det
 |   |   +-- other JJ amod
 |   +-- might MD aux
 |   +-- up RP prt
 |   +-- with IN prep
 |       +-- share NN pobj
 |           +-- a DT det
 |           +-- greater JJR amod
 |           +-- than IN prep
 |               +-- one NN pobj
 |                   +-- the DT det
 |                   +-- compute VBP rcmod
 |                       +-- we PRP nsubj
 +-- . . punct
Input: We do not account for this , as the major goal of this estimate is simply to avoid lossy and highly congested physical links .
Parse:
account VB ROOT
 +-- We PRP nsubj
 +-- do VBP aux
 +-- not RB neg
 +-- for IN prep
 |   +-- this DT pobj
 +-- , , punct
 +-- is VBZ advcl
 |   +-- as IN mark
 |   +-- goal NN nsubj
 |   |   +-- the DT det
 |   |   +-- major JJ amod
 |   |   +-- of IN prep
 |   |       +-- estimate NN pobj
 |   |           +-- this DT det
 |   +-- simply RB advmod
 |   +-- avoid VB xcomp
 |       +-- to TO aux
 |       +-- lossy NN dobj
 |           +-- and CC cc
 |           +-- links NNS conj
 |               +-- congested JJ amod
 |               |   +-- highly RB advmod
 |               +-- physical JJ amod
 +-- . . punct
Input: More formally , we define the problem as follows
Parse:
define VBP ROOT
 +-- formally RB advmod
 |   +-- More RBR advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- problem NN dobj
 |   +-- the DT det
 +-- follows VBZ advcl
     +-- as IN mark
Input: Given a physical network represented as a graph G = -LRB- V , E -RRB- , set of overlay participants P ? V , source node -LRB- s ? P -RRB- , bandwidth B
Parse:
Given VBN ROOT
 +-- network NN dep
     +-- a DT det
     +-- physical JJ amod
     +-- represented VBN partmod
     |   +-- as IN prep
     |       +-- G NNP pobj
     |           +-- a DT det
     |           +-- graph NN nn
     +-- = SYM punct
     +-- -LRB- -LRB- punct
     +-- V NNP dep
     |   +-- , , punct
     |   +-- E NNP appos
     +-- -RRB- -RRB- punct
     +-- , , punct
     +-- set VBN partmod
         +-- of IN prep
             +-- P NN pobj
                 +-- participants NNS nn
                 |   +-- overlay NN nn
                 +-- ? . punct
                 +-- V NNP appos
                     +-- , , punct
                     +-- node NN appos
                     |   +-- source NN nn
                     |   +-- s PRP appos
                     |       +-- -LRB- -LRB- punct
                     |       +-- ? . punct
                     |       +-- P NN dep
                     |       +-- -RRB- -RRB- punct
                     +-- B NNP appos
                         +-- bandwidth NN nn
Input: We write e ? o to express that link e is included in the o '' s routing path -LRB- RT -LRB- o , e -RRB- = 1 -RRB- .
Parse:
write VBP ROOT
 +-- We PRP nsubj
 +-- e NNP dobj
 +-- ? . punct
 +-- included VBN ccomp
 |   +-- o NN nsubjpass
 |   |   +-- express VB infmod
 |   |       +-- to TO aux
 |   |       +-- e NN dobj
 |   |           +-- that DT det
 |   |           +-- link NN nn
 |   +-- is VBZ auxpass
 |   +-- in IN prep
 |       +-- path NN pobj
 |           +-- o NN poss
 |           |   +-- the DT det
 |           |   +-- '' '' punct
 |           |   +-- s POS possessive
 |           +-- routing VBG nn
 |           +-- -LRB- -LRB- punct
 |           +-- RT NNP dep
 |           |   +-- e NNP dep
 |           |   |   +-- -LRB- -LRB- punct
 |           |   |   +-- o UH discourse
 |           |   |   +-- , , punct
 |           |   |   +-- -RRB- -RRB- punct
 |           |   +-- = SYM dep
 |           |       +-- 1 CD num
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: Assuming that we can estimate the throughput of a flow , we proceed to formulate a greedy OMBT algorithm .
Parse:
proceed VBP ROOT
 +-- Assuming VBG partmod
 |   +-- estimate VB ccomp
 |       +-- that IN mark
 |       +-- we PRP nsubj
 |       +-- can MD aux
 |       +-- throughput NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- flow NN pobj
 |                   +-- a DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- formulate VB xcomp
 |   +-- to TO aux
 |   +-- algorithm NN dobj
 |       +-- a DT det
 |       +-- greedy JJ amod
 |       +-- OMBT NN nn
 +-- . . punct
Input: This algorithm is non optimal , but a similar approach was found to perform well -LRB- 12 -RRB- .
Parse:
optimal JJ ROOT
 +-- algorithm NN nsubj
 |   +-- This DT det
 +-- is VBZ cop
 +-- non CD number
 +-- , , punct
 +-- but CC cc
 +-- found VBN conj
 |   +-- approach NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- similar JJ amod
 |   +-- was VBD auxpass
 |   +-- perform VB xcomp
 |       +-- to TO aux
 |       +-- well RB advmod
 |       +-- -LRB- -LRB- punct
 |       +-- 12 CD dobj
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: Our algorithm is similar to the Widest Path Heuristic -LRB- 12 -RRB- , and more generally to Prim '' s MST algorithm -LRB- 32 -RRB- .
Parse:
similar JJ ROOT
 +-- algorithm NN nsubj
 |   +-- Our PRP$ poss
 +-- is VBZ cop
 +-- to IN prep
 |   +-- Heuristic NNP pobj
 |       +-- the DT det
 |       +-- Widest NNP nn
 |       +-- Path NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- 12 CD dep
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- and CC cc
 +-- to IN conj
 |   +-- generally RB advmod
 |   |   +-- more RBR advmod
 |   +-- Prim NNP pobj
 |   +-- '' '' punct
 |   +-- s POS punct
 |   +-- MST SYM punct
 |   +-- algorithm NNP pobj
 |       +-- -LRB- -LRB- punct
 |       +-- 32 CD dep
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: During its execution , we maintain the set of nodes already in the tree , and the set of remaining nodes .
Parse:
maintain VBP ROOT
 +-- During IN prep
 |   +-- execution NN pobj
 |       +-- its PRP$ poss
 +-- , , punct
 +-- we PRP nsubj
 +-- set NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- nodes NNS pobj
 |   +-- in IN prep
 |   |   +-- already RB advmod
 |   |   +-- tree NN pobj
 |   |       +-- the DT det
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- set NN conj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- nodes NNS pobj
 |               +-- remaining VBG amod
 +-- . . punct
Input: To grow the tree , we consider all the overlay links leading from the nodes in the tree to the remaining nodes .
Parse:
consider VBP ROOT
 +-- grow VB advcl
 |   +-- To TO aux
 |   +-- tree NN dobj
 |       +-- the DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- links NNS dobj
 |   +-- all PDT predet
 |   +-- the DT det
 |   +-- overlay NN nn
 |   +-- leading VBG partmod
 |       +-- from IN prep
 |           +-- nodes NNS pobj
 |           |   +-- the DT det
 |           |   +-- in IN prep
 |           |       +-- tree NN pobj
 |           |           +-- the DT det
 |           +-- to IN prep
 |               +-- nodes NNS pobj
 |                   +-- the DT det
 |                   +-- remaining VBG amod
 +-- . . punct
Input: We greedily pick the node with the highest throughput overlay link .
Parse:
pick VBP ROOT
 +-- We PRP nsubj
 +-- greedily RB advmod
 +-- node NN dobj
 |   +-- the DT det
 +-- with IN prep
 |   +-- link NN pobj
 |       +-- the DT det
 |       +-- highest JJS amod
 |       +-- overlay NN nn
 |           +-- throughput NN nn
 +-- . . punct
Input: Using this overlay link might cause us to route traffic over physical links traversed by some other tree flows .
Parse:
cause VB ROOT
 +-- Using VBG csubj
 |   +-- link NN dobj
 |       +-- this DT det
 |       +-- overlay NN nn
 +-- might MD aux
 +-- route VB xcomp
 |   +-- us PRP nsubj
 |   +-- to TO aux
 |   +-- traffic NN dobj
 |   +-- over IN prep
 |       +-- links NNS pobj
 |           +-- physical JJ amod
 |           +-- traversed VBN partmod
 |               +-- by IN prep
 |                   +-- flows NNS pobj
 |                       +-- some DT det
 |                       +-- other JJ amod
 |                       +-- tree NN nn
 +-- . . punct
Input: Since we do not re examine the throughput of nodes that are already in the tree , they might end up being connected to the tree with slower overlay links than initially estimated .
Parse:
end VB ROOT
 +-- examine VB advcl
 |   +-- Since IN mark
 |   +-- we PRP nsubj
 |   +-- do VBP aux
 |   +-- not RB neg
 |   |   +-- re IN mwe
 |   +-- throughput NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- nodes NNS pobj
 |               +-- are VBP rcmod
 |                   +-- that WDT nsubj
 |                   +-- already RB advmod
 |                   +-- in IN prep
 |                       +-- tree NN pobj
 |                           +-- the DT det
 +-- , , punct
 +-- they PRP nsubj
 +-- might MD aux
 +-- up RP prt
 +-- connected VBN xcomp
 |   +-- being VBG auxpass
 |   +-- to IN prep
 |   |   +-- tree NN pobj
 |   |       +-- the DT det
 |   +-- with IN prep
 |       +-- links NNS pobj
 |           +-- slower JJR amod
 |           +-- overlay NN nn
 |           +-- estimated VBN dep
 |               +-- than IN mark
 |               +-- initially RB advmod
 +-- . . punct
Input: However , by attaching the node with the highest residual bandwidth at every step , we hope to lessen the effects of after the fact physical link sharing .
Parse:
hope VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- by IN prep
 |   +-- attaching VBG pcomp
 |       +-- node NN dobj
 |       |   +-- the DT det
 |       +-- with IN prep
 |       |   +-- bandwidth NN pobj
 |       |       +-- the DT det
 |       |       +-- highest JJS amod
 |       |       +-- residual JJ amod
 |       +-- at IN prep
 |           +-- step NN pobj
 |               +-- every DT det
 +-- we PRP nsubj
 +-- lessen VB xcomp
 |   +-- to TO aux
 |   +-- effects NNS dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   +-- after IN prep
 |       +-- fact NN pobj
 |           +-- the DT det
 |           +-- sharing NN ccomp
 |               +-- link NN nsubj
 |                   +-- physical JJ amod
 +-- . . punct
Input: With the synthetic topologies we use for our emulation environment , we have not found this inaccuracy to severely impact the quality of the tree .
Parse:
found VBN ROOT
 +-- With IN prep
 |   +-- topologies NNS pobj
 |       +-- the DT det
 |       +-- synthetic JJ amod
 |       +-- use VBP rcmod
 |           +-- we PRP nsubj
 |           +-- for IN prep
 |               +-- environment NN pobj
 |                   +-- our PRP$ poss
 |                   +-- emulation NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- have VBP aux
 +-- not RB neg
 +-- impact VB xcomp
 |   +-- inaccuracy NN nsubj
 |   |   +-- this DT det
 |   +-- to TO aux
 |   +-- severely RB advmod
 |   +-- quality NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- tree NN pobj
 |               +-- the DT det
 +-- . . punct
Input: 4.2 Bullet vs .
Parse:
Bullet NN ROOT
 +-- 4.2 LS num
 +-- vs NN dep
 +-- . . punct
Input: Streaming We have implemented a simple streaming application that is capable of streaming data over any specified tree .
Parse:
Streaming VBG ROOT
 +-- implemented VBN ccomp
 |   +-- We PRP nsubj
 |   +-- have VBP aux
 |   +-- application NN dobj
 |       +-- a DT det
 |       +-- simple JJ amod
 |       +-- streaming NN nn
 |       +-- capable JJ rcmod
 |           +-- that WDT nsubj
 |           +-- is VBZ cop
 |           +-- of IN prep
 |               +-- streaming VBG pcomp
 |                   +-- data NNS dobj
 |                       +-- over IN prep
 |                           +-- tree NN pobj
 |                               +-- any DT det
 |                               +-- specified VBN amod
 +-- . . punct
Input: In our implementation , we are able to stream data through overlay trees using UDP , TFRC , or TCP .
Parse:
able JJ ROOT
 +-- In IN prep
 |   +-- implementation NN pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- we PRP nsubj
 +-- are VBP cop
 +-- stream VB xcomp
 |   +-- to TO aux
 |   +-- data NNS dobj
 |   +-- through IN prep
 |       +-- trees NNS pobj
 |           +-- overlay NN amod
 |           +-- using VBG partmod
 |               +-- UDP NNP dobj
 |                   +-- , , punct
 |                   +-- TFRC NNP conj
 |                   +-- or CC cc
 |                   +-- TCP NNP conj
 +-- . . punct
Input: Figure 6 shows average bandwidth that each of 1000 nodes receives via this streaming as time progresses on the x axis .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 6 CD num
 +-- bandwidth NN dobj
 |   +-- average JJ amod
 |   +-- receives VBZ rcmod
 |       +-- that IN dobj
 |       +-- each DT nsubj
 |       |   +-- of IN prep
 |       |       +-- nodes NNS pobj
 |       |           +-- 1000 CD num
 |       +-- via IN prep
 |       |   +-- streaming NN pobj
 |       |       +-- this DT det
 |       +-- progresses VBZ advcl
 |           +-- as IN mark
 |           +-- time NN nsubj
 |           +-- on IN prep
 |               +-- axis NN pobj
 |                   +-- the DT det
 |                   +-- x , punct
 +-- . . punct
Input: In this example , we use TFRC to stream 600 Kbps over our o ? ine bottleneck bandwidth tree and a random tree -LRB- other random trees exhibit qualitatively similar behavior -RRB- .
Parse:
use VBP ROOT
 +-- In IN prep
 |   +-- example NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- TFRC NNP dobj
 +-- stream VB xcomp
 |   +-- to TO aux
 |   +-- Kbps NNS dobj
 |   |   +-- 600 CD num
 |   +-- over IN prep
 |       +-- tree NN pobj
 |           +-- our PRP$ poss
 |           +-- o NNP nn
 |           |   +-- ? . punct
 |           +-- bottleneck NN nn
 |           |   +-- ine NN nn
 |           +-- bandwidth NN nn
 |           +-- and CC cc
 |           +-- tree NN conj
 |               +-- a DT det
 |               +-- random JJ amod
 |               +-- -LRB- -LRB- punct
 |               +-- exhibit VBP dep
 |               |   +-- trees NNS nsubj
 |               |   |   +-- other JJ amod
 |               |   |   +-- random JJ amod
 |               |   +-- qualitatively RB advmod
 |               |   +-- behavior NN dobj
 |               |       +-- similar JJ amod
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: In these experiments , streaming begins 100 seconds into each run .
Parse:
begins VBZ ROOT
 +-- In IN prep
 |   +-- experiments NNS pobj
 |       +-- these DT det
 +-- , , punct
 +-- streaming NN nsubj
 +-- seconds NNS dobj
 |   +-- 100 CD num
 +-- into IN prep
 |   +-- run NN pobj
 |       +-- each DT det
 +-- . . punct
Input: While the random tree delivers an achieved bandwidth of under 100 Kbps , our o ? ine algorithm overlay delivers approximately 400 Kbps of data .
Parse:
delivers VBZ ROOT
 +-- delivers VBZ advcl
 |   +-- While IN mark
 |   +-- tree NN nsubj
 |   |   +-- the DT det
 |   |   +-- random JJ amod
 |   +-- bandwidth NN dobj
 |       +-- an DT det
 |       +-- achieved VBN amod
 |       +-- of IN prep
 |           +-- Kbps NNS pobj
 |               +-- 100 CD num
 |                   +-- under IN quantmod
 +-- , , punct
 +-- overlay NN nsubj
 |   +-- our PRP$ poss
 |   +-- o NNP nn
 |   |   +-- ? . punct
 |   +-- ine NN nn
 |   +-- algorithm NN nn
 +-- Kbps NNS dobj
 |   +-- 400 CD num
 |   |   +-- approximately RB quantmod
 |   +-- of IN prep
 |       +-- data NNS pobj
 +-- . . punct
Input: For this experiment , bandwidths were set to the medium range from Table 1 .
Parse:
set VBN ROOT
 +-- For IN prep
 |   +-- experiment NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- bandwidths NNS nsubjpass
 +-- were VBD auxpass
 +-- to IN prep
 |   +-- range NN pobj
 |       +-- the DT det
 |       +-- medium JJ amod
 +-- from IN prep
 |   +-- Table NNP pobj
 |       +-- 1 CD num
 +-- . . punct
Input: We believe that any degree constrained online bandwidth overlay tree algorithm would exhibit similar -LRB- or lower -RRB- behavior to our bandwidth290 0 200 400 600 800 1000 0 50 100 150 200 250 300 350 400 Bandwidth -LRB- Kbps -RRB- Time -LRB- s -RRB- Bottleneck bandwidth tree Random tree Figure 6
Parse:
believe VBP ROOT
 +-- We PRP nsubj
 +-- constrained VBD ccomp
     +-- that IN mark
     +-- degree NN nsubj
     |   +-- any DT det
     +-- exhibit VB ccomp
         +-- algorithm NN nsubj
         |   +-- online JJ amod
         |   +-- overlay NN nn
         |   |   +-- bandwidth NN nn
         |   +-- tree NN nn
         +-- would MD aux
         +-- behavior NN dobj
         |   +-- similar JJ amod
         |   |   +-- -LRB- -LRB- punct
         |   |   +-- or CC cc
         |   |   +-- lower JJR conj
         |   +-- -RRB- -RRB- punct
         +-- to IN prep
             +-- Figure NN pobj
                 +-- our PRP$ poss
                 +-- bandwidth290 CD num
                 +-- 300 CD num
                 |   +-- 0 CD dep
                 |   +-- 200 CD number
                 |   +-- 400 CD quantmod
                 |   +-- 600 CD quantmod
                 |   +-- 800 CD number
                 |   +-- 1000 CD number
                 |   +-- 50 CD number
                 |   +-- 100 CD number
                 |   +-- 150 CD quantmod
                 |   +-- 200 CD quantmod
                 |   +-- 250 CD number
                 +-- Bottleneck NNP nn
                 |   +-- 400 CD num
                 |   |   +-- 350 CD number
                 |   +-- Bandwidth NNP dep
                 |   +-- -LRB- -LRB- punct
                 |   +-- Kbps NNS dep
                 |   +-- -RRB- -RRB- punct
                 |   +-- Time NNP dep
                 |   +-- s NNP nn
                 +-- Random NNP nn
                 |   +-- bandwidth NN nn
                 |   +-- tree NN nn
                 +-- tree NN nn
                 +-- 6 CD num
Input: optimized overlay .
Parse:
overlay NN ROOT
 +-- optimized VBN amod
 +-- . . punct
Input: Hence , Bullet '' s goal is to overcome this bandwidth limit by allowing for the perpendicular reception of data and by utilizing disjoint data flows in an attempt to match or exceed the performance of our o ? ine algorithm .
Parse:
is VBZ ROOT
 +-- Hence RB advmod
 +-- , , punct
 +-- goal NN nsubj
 |   +-- Bullet NNP poss
 |       +-- '' '' punct
 |       +-- s POS possessive
 +-- overcome VB xcomp
 |   +-- to TO aux
 |   +-- limit NN dobj
 |   |   +-- this DT det
 |   |   +-- bandwidth NN nn
 |   +-- by IN prep
 |       +-- allowing VBG pcomp
 |       |   +-- for IN prep
 |       |       +-- reception NN pobj
 |       |           +-- the DT det
 |       |           +-- perpendicular JJ amod
 |       |           +-- of IN prep
 |       |               +-- data NNS pobj
 |       +-- and CC cc
 |       +-- by IN conj
 |           +-- utilizing VBG pcomp
 |               +-- flows NNS dobj
 |               |   +-- disjoint NN nn
 |               |   +-- data NNS nn
 |               +-- in IN prep
 |                   +-- attempt NN pobj
 |                       +-- an DT det
 |                       +-- match VB infmod
 |                           +-- to TO aux
 |                           +-- or CC cc
 |                           +-- exceed VB conj
 |                           +-- performance NN dobj
 |                               +-- the DT det
 |                               +-- of IN prep
 |                                   +-- algorithm NN pobj
 |                                       +-- our PRP$ poss
 |                                       +-- o NNP nn
 |                                       |   +-- ? . punct
 |                                       +-- ine NN nn
 +-- . . punct
Input: To evaluate Bullet '' s ability to exceed the bandwidth achievable via tree distribution overlays , we compare Bullet running over a random overlay tree to the streaming behavior shown in Figure 6 .
Parse:
compare VBP ROOT
 +-- evaluate VB advcl
 |   +-- To TO aux
 |   +-- ability NN dobj
 |       +-- Bullet NNP poss
 |       |   +-- '' '' punct
 |       |   +-- s POS possessive
 |       +-- exceed VB infmod
 |           +-- to TO aux
 |           +-- achievable JJ dobj
 |           |   +-- the DT det
 |           |   +-- bandwidth NN nn
 |           +-- via IN prep
 |               +-- overlays NNS pobj
 |                   +-- distribution NN nn
 |                       +-- tree NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- Bullet NNP dobj
 |   +-- running VBG partmod
 |       +-- over IN prep
 |           +-- tree NN pobj
 |               +-- a DT det
 |               +-- overlay NN nn
 |                   +-- random JJ amod
 +-- to IN prep
 |   +-- behavior NN pobj
 |       +-- the DT det
 |       +-- streaming VBG amod
 |       +-- shown VBN partmod
 |           +-- in IN prep
 |               +-- Figure NNP pobj
 |                   +-- 6 CD num
 +-- . . punct
Input: Figure 7 shows the average bandwidth received by each node -LRB- labeled Useful total -RRB- with standard deviation .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 7 CD num
 +-- bandwidth NN dobj
 |   +-- the DT det
 |   +-- average JJ amod
 |   +-- received VBN partmod
 |   |   +-- by IN prep
 |   |       +-- node NN pobj
 |   |           +-- each DT det
 |   +-- -LRB- -LRB- punct
 |   +-- labeled VBN partmod
 |   |   +-- total NN dep
 |   |       +-- Useful JJ amod
 |   +-- -RRB- -RRB- punct
 +-- with IN prep
 |   +-- deviation NN pobj
 |       +-- standard JJ amod
 +-- . . punct
Input: The graph also plots the total amount of data received and the amount of data a node receives from its parent .
Parse:
plots VBZ ROOT
 +-- graph NN nsubj
 |   +-- The DT det
 +-- also RB advmod
 +-- amount NN dobj
 |   +-- the DT det
 |   +-- total JJ amod
 |   +-- of IN prep
 |   |   +-- data NNS pobj
 |   |       +-- received VBN partmod
 |   +-- and CC cc
 |   +-- amount NN conj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- data NNS pobj
 |   +-- receives VBZ rcmod
 |       +-- node NN nsubj
 |       |   +-- a DT det
 |       +-- from IN prep
 |           +-- parent NN pobj
 |               +-- its PRP$ poss
 +-- . . punct
Input: For this topology and bandwidth setting , Bullet was able to achieve an average bandwidth of 500 Kbps , fives times that achieved by the random tree and more than 25 % higher than the o ? ine bottleneck bandwidth algorithm .
Parse:
able JJ ROOT
 +-- For IN prep
 |   +-- topology NN pobj
 |       +-- this DT det
 |       +-- and CC cc
 |       +-- setting VBG conj
 |           +-- bandwidth NN nn
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- was VBD cop
 +-- achieve VB xcomp
 |   +-- to TO aux
 |   +-- bandwidth NN dobj
 |   |   +-- an DT det
 |   |   +-- average JJ amod
 |   |   +-- of IN prep
 |   |       +-- Kbps NNS pobj
 |   |           +-- 500 CD num
 |   |           +-- , , punct
 |   |           +-- fives NNS appos
 |   |               +-- times NNS num
 |   |               +-- achieved VBD rcmod
 |   |               |   +-- that WDT nsubj
 |   |               |   +-- by IN prep
 |   |               |       +-- tree NN pobj
 |   |               |           +-- the DT det
 |   |               |           +-- random JJ amod
 |   |               +-- and CC cc
 |   |               +-- higher JJR conj
 |   |                   +-- % NN npadvmod
 |   |                   |   +-- 25 CD num
 |   |                   |       +-- than IN quantmod
 |   |                   |           +-- more JJR mwe
 |   |                   +-- than IN prep
 |   |                       +-- o NNP pobj
 |   |                           +-- the DT det
 |   +-- ? . punct
 |   +-- algorithm NN dobj
 |       +-- bottleneck NN nn
 |       |   +-- ine VB nn
 |       +-- bandwidth NN nn
 +-- . . punct
Input: Further , the total bandwidth -LRB- including redundant data -RRB- received by each node is only slightly higher than the useful content , meaning that Bullet is able to achieve high bandwidth while wasting little network resources .
Parse:
higher JJR ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- bandwidth NN nsubj
 |   +-- the DT det
 |   +-- total JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- including VBG prep
 |   |   +-- data NNS pobj
 |   |       +-- redundant JJ amod
 |   +-- -RRB- -RRB- punct
 |   +-- received VBN partmod
 |       +-- by IN prep
 |           +-- node NN pobj
 |               +-- each DT det
 +-- is VBZ cop
 +-- only RB advmod
 +-- slightly RB advmod
 +-- than IN prep
 |   +-- content NN pobj
 |       +-- the DT det
 |       +-- useful JJ amod
 +-- meaning VBG partmod
 |   +-- able JJ ccomp
 |       +-- that IN mark
 |       +-- Bullet NNP nsubj
 |       +-- is VBZ cop
 |       +-- achieve VB xcomp
 |           +-- to TO aux
 |           +-- bandwidth NN dobj
 |           |   +-- high JJ amod
 |           +-- wasting VBG advcl
 |               +-- while IN mark
 |               +-- resources NNS dobj
 |                   +-- little JJ amod
 |                   +-- network NN nn
 +-- . . punct
Input: Bullet '' s use of TFRC in this example ensures that the overlay is TCP friendly throughout .
Parse:
ensures VBZ ROOT
 +-- use NN nsubj
 |   +-- Bullet NNP poss
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- of IN prep
 |   |   +-- TFRC NNP pobj
 |   +-- in IN prep
 |       +-- example NN pobj
 |           +-- this DT det
 +-- friendly JJ ccomp
 |   +-- that IN mark
 |   +-- overlay NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ cop
 |   +-- TCP NNP advmod
 |   +-- throughout IN prep
 +-- . . punct
Input: The average per node control overhead is approximately 30 Kbps .
Parse:
Kbps NNS ROOT
 +-- average NN nsubj
 |   +-- The DT det
 |   +-- per IN prep
 |       +-- overhead NN pobj
 |           +-- control NN nn
 |               +-- node NN nn
 +-- is VBZ cop
 +-- 30 CD num
 |   +-- approximately RB quantmod
 +-- . . punct
Input: By tracing certain packets as they move through the system , we are able to acquire link stress estimates of our system .
Parse:
able JJ ROOT
 +-- By IN prep
 |   +-- tracing VBG pcomp
 |       +-- packets NNS dobj
 |       |   +-- certain JJ amod
 |       +-- move VBP advcl
 |           +-- as IN mark
 |           +-- they PRP nsubj
 |           +-- through IN prep
 |               +-- system NN pobj
 |                   +-- the DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- are VBP cop
 +-- acquire VB xcomp
 |   +-- to TO aux
 |   +-- estimates NNS dobj
 |       +-- stress NN nn
 |       |   +-- link VB nn
 |       +-- of IN prep
 |           +-- system NN pobj
 |               +-- our PRP$ poss
 +-- . . punct
Input: Though the link stress can be different for each packet since each can take a different path through the overlay mesh , we average link stress due to each traced packet .
Parse:
link NN ROOT
 +-- different JJ advcl
 |   +-- Though IN mark
 |   +-- stress NN nsubj
 |   |   +-- the DT det
 |   |   +-- link NN nn
 |   +-- can MD aux
 |   +-- be VB cop
 |   +-- for IN prep
 |   |   +-- packet NN pobj
 |   |       +-- each DT det
 |   +-- take VB advcl
 |       +-- since IN mark
 |       +-- each DT nsubj
 |       +-- can MD aux
 |       +-- path NN dobj
 |       |   +-- a DT det
 |       |   +-- different JJ amod
 |       +-- through IN prep
 |           +-- mesh NN pobj
 |               +-- the DT det
 |               +-- overlay NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- average JJ amod
 +-- stress NN dobj
 +-- to IN prep
 |   +-- due IN mwe
 |   +-- packet NN pobj
 |       +-- each DT det
 |       +-- traced VBN amod
 +-- . . punct
Input: For this experiment , Bullet has an average link stress of approximately 1.5 with an absolute maximum link stress of 22 .
Parse:
has VBZ ROOT
 +-- For IN prep
 |   +-- experiment NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- stress NN dobj
 |   +-- an DT det
 |   +-- average JJ amod
 |   +-- link NN nn
 |   +-- of IN prep
 |   |   +-- 1.5 CD pobj
 |   |       +-- approximately RB quantmod
 |   +-- with IN prep
 |       +-- stress NN pobj
 |           +-- an DT det
 |           +-- link NN nn
 |           |   +-- absolute JJ amod
 |           |   +-- maximum NN nn
 |           +-- of IN prep
 |               +-- 22 CD pobj
 +-- . . punct
Input: The standard deviation in most of our runs is fairly high because of the limited bandwidth randomly assigned to some Client Stub and Stub Stub links .
Parse:
high JJ ROOT
 +-- deviation NN nsubj
 |   +-- The DT det
 |   +-- standard JJ amod
 |   +-- in IN prep
 |       +-- most JJS pobj
 |           +-- of IN prep
 |               +-- runs NNS pobj
 |                   +-- our PRP$ poss
 +-- is VBZ cop
 +-- fairly RB advmod
 +-- of IN prep
 |   +-- because IN mwe
 |   +-- bandwidth NN pobj
 |       +-- the DT det
 |       +-- limited JJ amod
 |       +-- assigned VBN partmod
 |           +-- randomly RB advmod
 |           +-- to IN prep
 |               +-- Stub NNP pobj
 |                   +-- some DT det
 |                   +-- Client NNP nn
 |                   +-- and CC cc
 |                   +-- links NNS conj
 |                       +-- Stub NNP nn
 +-- . . punct
Input: We feel that this is consistent with real Internet behavior where clients have widely varying network connectivity .
Parse:
feel VBP ROOT
 +-- We PRP nsubj
 +-- consistent JJ ccomp
 |   +-- that IN mark
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- with IN prep
 |       +-- behavior NN pobj
 |           +-- real JJ amod
 |           +-- Internet NN nn
 |           +-- have VBP rcmod
 |               +-- where WRB advmod
 |               +-- clients NNS nsubj
 |               +-- connectivity NN dobj
 |                   +-- varying VBG amod
 |                   |   +-- widely RB advmod
 |                   +-- network NN nn
 +-- . . punct
Input: A time slice is shown in Figure 8 that plots the CDF of instantaneous bandwidths that each node receives .
Parse:
shown VBN ROOT
 +-- slice NN nsubjpass
 |   +-- A DT det
 |   +-- time NN nn
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- Figure NN pobj
 |       +-- 8 CD num
 |       +-- plots VBZ rcmod
 |           +-- that DT nsubj
 |           +-- CDF NNP dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- bandwidths NNS pobj
 |                       +-- instantaneous JJ amod
 |                       +-- receives VBZ rcmod
 |                           +-- that WDT dobj
 |                           +-- node NN nsubj
 |                               +-- each DT det
 +-- . . punct
Input: The graph shows that few client nodes receive inadequate bandwidth even though they are bandwidth constrained .
Parse:
shows VBZ ROOT
 +-- graph NN nsubj
 |   +-- The DT det
 +-- receive VBP ccomp
 |   +-- that IN mark
 |   +-- nodes NNS nsubj
 |   |   +-- few JJ amod
 |   |   +-- client NN nn
 |   +-- bandwidth NN dobj
 |   |   +-- inadequate JJ amod
 |   +-- constrained VBN advcl
 |       +-- even RB advmod
 |       +-- though IN mark
 |       +-- they PRP nsubjpass
 |       +-- are VBP auxpass
 |       +-- bandwidth NN dep
 +-- . . punct
Input: The distribution rises sharply starting at approximately 500 Kbps .
Parse:
rises VBZ ROOT
 +-- distribution NN nsubj
 |   +-- The DT det
 +-- sharply RB advmod
 +-- starting VBG xcomp
 |   +-- at IN prep
 |       +-- Kbps NNS pobj
 |           +-- 500 CD num
 |               +-- approximately RB quantmod
 +-- . . punct
Input: The vast majority of nodes receive a stream of 500 600 Kbps .
Parse:
receive VBP ROOT
 +-- majority NN nsubj
 |   +-- The DT det
 |   +-- vast JJ amod
 |   +-- of IN prep
 |       +-- nodes NNS pobj
 +-- stream NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- Kbps NNS pobj
 |           +-- 600 CD num
 |               +-- 500 CD number
 +-- . . punct
Input: We have evaluated Bullet under a number of bandwidth constraints to determine how Bullet performs relative to the 0 200 400 600 800 1000 0 50 100 150 200 250 300 350 400 450 500 Bandwidth -LRB- Kbps -RRB- Time -LRB- s -RRB- Raw total Useful total From parent Figure 7
Parse:
evaluated VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- Bullet NNP dobj
 +-- under IN prep
 |   +-- number NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- constraints NNS pobj
 |               +-- bandwidth NN nn
 +-- determine VB xcomp
     +-- to TO aux
     +-- performs VBZ ccomp
         +-- how WRB advmod
         +-- Bullet NNP nsubj
         +-- relative JJ advmod
             +-- to IN prep
                 +-- Kbps NNS pobj
                     +-- the DT det
                     +-- 500 CD num
                     |   +-- 400 CD number
                     |   |   +-- 0 CD number
                     |   |   +-- 200 CD number
                     |   |   +-- 400 CD quantmod
                     |   |   +-- 600 CD quantmod
                     |   |   +-- 800 CD number
                     |   |   +-- 1000 CD quantmod
                     |   |   +-- 0 CD dep
                     |   |   +-- 50 CD number
                     |   |   +-- 100 CD number
                     |   |   +-- 150 CD quantmod
                     |   |   +-- 250 CD quantmod
                     |   |   +-- 300 CD quantmod
                     |   |   +-- 350 CD number
                     |   +-- 450 CD number
                     +-- Bandwidth NNP nn
                     +-- -LRB- -LRB- punct
                     +-- -RRB- -RRB- punct
                     +-- Raw NNP dep
                         +-- Time NNP nn
                         +-- -LRB- -LRB- punct
                         +-- s NNP nn
                         +-- -RRB- -RRB- punct
                         +-- total NN dep
                             +-- total JJ amod
                             +-- Useful JJ amod
                             +-- From IN prep
                                 +-- parent NN pobj
                                     +-- Figure NN dep
                                         +-- 7 CD num
Input: 0 0.2 0.4 0.6 0.8 1 0 100 200 300 400 500 600 700 800 Percentageofnodes Bandwidth -LRB- Kbps -RRB- Figure 8
Parse:
Bandwidth NNP ROOT
 +-- 800 CD num
 |   +-- 700 CD number
 |       +-- 0 LS dep
 |       +-- 0.2 CD number
 |       +-- 0.4 CD number
 |       +-- 0.6 CD quantmod
 |       +-- 0.8 CD number
 |       +-- 1 CD number
 |       +-- 0 CD dep
 |       +-- 100 CD number
 |       +-- 200 CD number
 |       +-- 300 CD quantmod
 |       +-- 400 CD quantmod
 |       +-- 500 CD number
 |       +-- 600 CD number
 +-- Percentageofnodes NNP nn
 +-- -LRB- -LRB- punct
 +-- Kbps NNS dep
 +-- -RRB- -RRB- punct
 +-- Figure NN dep
     +-- 8 CD num
Input: available bandwidth of the underlying topology .
Parse:
bandwidth NN ROOT
 +-- available JJ amod
 +-- of IN prep
 |   +-- topology NN pobj
 |       +-- the DT det
 |       +-- underlying VBG amod
 +-- . . punct
Input: Table 1 describes representative bandwidth settings for our streaming rate of 600 Kbps .
Parse:
describes VBZ ROOT
 +-- Table JJ nsubj
 |   +-- 1 CD num
 +-- settings NNS dobj
 |   +-- representative JJ amod
 |   +-- bandwidth NN nn
 |   +-- for IN prep
 |       +-- rate NN pobj
 |           +-- our PRP$ poss
 |           +-- streaming NN amod
 |           +-- of IN prep
 |               +-- Kbps NNS pobj
 |                   +-- 600 CD num
 +-- . . punct
Input: The intent of these settings is to show a scenario where more than enough bandwidth is available to achieve a target rate even with traditional tree streaming , an example of where it is slightly not sufficient , and one in which the available bandwidth is quite restricted .
Parse:
is VBZ ROOT
 +-- intent NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- settings NNS pobj
 |           +-- these DT det
 +-- show VB xcomp
 |   +-- to TO aux
 |   +-- scenario NN dobj
 |       +-- a DT det
 |       +-- available JJ rcmod
 |           +-- where WRB advmod
 |           +-- bandwidth NN nsubj
 |           |   +-- more JJR amod
 |           |       +-- than IN prep
 |           |           +-- enough JJ pobj
 |           +-- is VBZ cop
 |           +-- achieve VB xcomp
 |               +-- to TO aux
 |               +-- rate NN dobj
 |               |   +-- a DT det
 |               |   +-- target NN nn
 |               +-- with IN prep
 |                   +-- even RB advmod
 |                   +-- streaming VBG pobj
 |                       +-- traditional JJ amod
 |                       +-- tree NN nn
 |                       +-- , , punct
 |                       +-- example NN conj
 |                       |   +-- an DT det
 |                       |   +-- of IN prep
 |                       |       +-- sufficient JJ pcomp
 |                       |           +-- where WRB advmod
 |                       |           +-- it PRP nsubj
 |                       |           +-- is VBZ cop
 |                       |           +-- slightly RB advmod
 |                       |           +-- not RB neg
 |                       +-- and CC cc
 |                       +-- one CD conj
 |                           +-- restricted VBN rcmod
 |                               +-- in IN prep
 |                               |   +-- which WDT pobj
 |                               +-- bandwidth NN nsubjpass
 |                               |   +-- the DT det
 |                               |   +-- available JJ amod
 |                               +-- is VBZ auxpass
 |                               +-- quite RB advmod
 +-- . . punct
Input: Figure 9 shows achieved bandwidths for Bullet and the bottleneck bandwidth tree over time generated from topologies with bandwidths in each range .
Parse:
achieved VBN ROOT
 +-- shows NNS nsubj
 |   +-- Figure NN nn
 |       +-- 9 CD num
 +-- bandwidths NNS dobj
 |   +-- for IN prep
 |   |   +-- Bullet NNP pobj
 |   +-- and CC cc
 |   +-- tree NN conj
 |       +-- the DT det
 |       +-- bottleneck NN nn
 |       +-- bandwidth NN nn
 |       +-- over IN prep
 |       |   +-- time NN pobj
 |       +-- generated VBN partmod
 |           +-- from IN prep
 |               +-- topologies NNS pobj
 |                   +-- with IN prep
 |                       +-- bandwidths NNS pobj
 |                           +-- in IN prep
 |                               +-- range NN pobj
 |                                   +-- each DT det
 +-- . . punct
Input: In all of our experiments , Bullet outperforms the bottleneck bandwidth tree by a factor of up to 100 % , depending on how much bandwidth is constrained in the underlying topology .
Parse:
outperforms VBZ ROOT
 +-- In IN prep
 |   +-- all DT pobj
 |       +-- of IN prep
 |           +-- experiments NNS pobj
 |               +-- our PRP$ poss
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- tree NN dobj
 |   +-- the DT det
 |   +-- bottleneck NN nn
 |   +-- bandwidth NN nn
 +-- by IN prep
 |   +-- factor NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- % NN pobj
 |               +-- 100 CD num
 |                   +-- to IN quantmod
 |                       +-- up IN dep
 +-- depending VBG prep
 |   +-- on IN pcomp
 |       +-- constrained VBN pcomp
 |           +-- bandwidth NN nsubjpass
 |           |   +-- much JJ amod
 |           |       +-- how WRB advmod
 |           +-- is VBZ auxpass
 |           +-- in IN prep
 |               +-- topology NN pobj
 |                   +-- the DT det
 |                   +-- underlying VBG amod
 +-- . . punct
Input: In one extreme , having more than ample bandwidth , Bullet and the bottleneck bandwidth tree are both able to stream at the requested rate -LRB- 600 Kbps in our example -RRB- .
Parse:
having VBG ROOT
 +-- In IN prep
 |   +-- extreme NN pobj
 |       +-- one CD num
 +-- , , punct
 +-- more JJR dobj
 |   +-- than IN prep
 |       +-- bandwidth NN pobj
 |           +-- ample JJ amod
 +-- able JJ ccomp
 |   +-- Bullet NNP nsubj
 |   |   +-- and CC cc
 |   |   +-- tree NN conj
 |   |       +-- the DT det
 |   |       +-- bottleneck NN nn
 |   |       +-- bandwidth NN nn
 |   +-- are VBP cop
 |   +-- both CC preconj
 |   +-- stream VB xcomp
 |       +-- to TO aux
 |       +-- at IN prep
 |           +-- rate NN pobj
 |               +-- the DT det
 |               +-- requested VBN amod
 |               +-- -LRB- -LRB- punct
 |               +-- Kbps NNS dep
 |               |   +-- 600 CD num
 |               |   +-- in IN prep
 |               |       +-- example NN pobj
 |               |           +-- our PRP$ poss
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: In the other extreme , heavily constrained topologies allow Bullet to achieve twice the bandwidth achievable via the bottleneck bandwidth tree .
Parse:
allow VBP ROOT
 +-- In IN prep
 |   +-- extreme NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- topologies NNS nsubj
 |   +-- constrained VBN amod
 |       +-- heavily RB advmod
 +-- achieve VB xcomp
 |   +-- Bullet NNP nsubj
 |   +-- to TO aux
 |   +-- bandwidth NN dobj
 |       +-- twice RB advmod
 |       +-- the DT det
 |       +-- achievable JJ amod
 |           +-- via IN prep
 |               +-- tree NN pobj
 |                   +-- the DT det
 |                   +-- bottleneck NN nn
 |                   +-- bandwidth NN nn
 +-- . . punct
Input: For all other topologies , Bullet '' s benefits are somewhere in between .
Parse:
are VBP ROOT
 +-- For IN prep
 |   +-- topologies NNS pobj
 |       +-- all DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- benefits NNS nsubj
 |   +-- Bullet NNP poss
 |       +-- '' '' punct
 |       +-- s POS possessive
 +-- somewhere RB advmod
 +-- in IN prep
 |   +-- between IN pobj
 +-- . . punct
Input: In our example , Bullet running over our medium constrained bandwidth topology is able to outperform the bottleneck bandwidth tree by a factor of 25 % .
Parse:
able JJ ROOT
 +-- In IN prep
 |   +-- example NN pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- Bullet NNP nsubj
 |   +-- running VBG partmod
 |       +-- over IN prep
 |           +-- topology NN pobj
 |               +-- our PRP$ poss
 |               +-- constrained VBN amod
 |               |   +-- medium JJ dep
 |               +-- bandwidth NN nn
 +-- is VBZ cop
 +-- outperform VB xcomp
 |   +-- to TO aux
 |   +-- tree NN dobj
 |   |   +-- the DT det
 |   |   +-- bottleneck NN nn
 |   |   +-- bandwidth NN nn
 |   +-- by IN prep
 |       +-- factor NN pobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- % NN pobj
 |                   +-- 25 CD num
 +-- . . punct
Input: Further , we stress that we believe it would 291 0 200 400 600 800 1000 0 50 100 150 200 250 300 350 400 Bandwidth -LRB- Kbps -RRB- Time -LRB- s -RRB- Bullet High Bandwidth Bottleneck tree High Bandwidth Bullet Medium Bandwidth Bottleneck tree Medium Bandwidth Bullet Low Bandwidth Bottleneck tree Low Bandwidth Figure 9
Parse:
stress VBP ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- believe VBP ccomp
     +-- that IN mark
     +-- we PRP nsubj
     +-- would MD ccomp
         +-- it PRP nsubj
         +-- Figure NN dobj
             +-- 300 CD num
             |   +-- 0 CD number
             |   |   +-- 291 CD number
             |   +-- 200 CD number
             |   +-- 400 CD quantmod
             |   +-- 600 CD quantmod
             |   +-- 800 CD number
             |   +-- 1000 CD number
             |   +-- 0 CD dep
             |   +-- 50 CD number
             |   +-- 100 CD number
             |   +-- 150 CD quantmod
             |   +-- 200 CD quantmod
             |   +-- 250 CD number
             |   +-- Kbps NNS dep
             |   |   +-- 400 CD num
             |   |   |   +-- 350 CD number
             |   |   +-- Bandwidth NNP nn
             |   |   +-- -LRB- -LRB- punct
             |   +-- -RRB- -RRB- punct
             +-- Bandwidth NNP nn
             |   +-- Bullet NNP nn
             |   +-- High NNP nn
             |   +-- Bandwidth NNP nn
             |   +-- Bottleneck NNP nn
             |   +-- tree NN nn
             |   +-- Medium NNP nn
             |   +-- Low NNP nn
             +-- 9 CD num
Input: be extremely difficult for any online tree based algorithm to exceed the bandwidth achievable by our o ? ine bottleneck algorithm that makes use of global topological information .
Parse:
difficult JJ ROOT
 +-- be VB cop
 +-- extremely RB advmod
 +-- exceed VB advcl
 |   +-- for IN mark
 |   +-- algorithm NN nsubj
 |   |   +-- any DT det
 |   |   +-- online JJ amod
 |   |   +-- based VBN amod
 |   |       +-- tree NN dep
 |   +-- to TO aux
 |   +-- bandwidth NN dobj
 |       +-- the DT det
 |       +-- achievable JJ amod
 |       |   +-- by IN prep
 |       |       +-- algorithm NN pobj
 |       |           +-- our PRP$ poss
 |       |           +-- o NNP nn
 |       |           |   +-- ? , punct
 |       |           +-- bottleneck NN nn
 |       |               +-- ine NN nn
 |       +-- makes VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- use NN dobj
 |               +-- of IN prep
 |                   +-- information NN pobj
 |                       +-- global JJ amod
 |                       +-- topological JJ amod
 +-- . . punct
Input: For instance , we built a simple bandwidth optimizing overlay tree construction based on Overcast -LRB- 21 -RRB- .
Parse:
built VBD ROOT
 +-- For IN prep
 |   +-- instance NN pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- construction NN dobj
 |   +-- a DT det
 |   +-- simple JJ amod
 |   +-- overlay NN nn
 |   |   +-- optimizing VBG nn
 |   |       +-- bandwidth NN nn
 |   +-- tree NN nn
 |   +-- based VBN partmod
 |       +-- on IN prep
 |           +-- Overcast NNP pobj
 |               +-- -LRB- -LRB- punct
 |               +-- 21 CD dep
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: The resulting dynamically constructed trees never achieved more than 75 % of the bandwidth of our own o ? ine algorithm .
Parse:
achieved VBD ROOT
 +-- trees NNS nsubj
 |   +-- The DT det
 |   +-- resulting VBG amod
 |   +-- constructed VBN amod
 |       +-- dynamically RB advmod
 +-- never RB neg
 +-- % NN dobj
 |   +-- 75 CD num
 |   |   +-- than IN quantmod
 |   |       +-- more JJR mwe
 |   +-- of IN prep
 |       +-- bandwidth NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- o NNP pobj
 |                   +-- our PRP$ poss
 |                   +-- own JJ amod
 |                   +-- ? . punct
 |                   +-- algorithm NNP dep
 |                       +-- ine NN nn
 +-- . . punct
Input: 4.3 Creating Disjoint Data Bullet '' s ability to deliver high bandwidth levels to nodes depends on its disjoint transmission strategy .
Parse:
depends VBZ ROOT
 +-- ability NN nsubj
 |   +-- Bullet NNP poss
 |   |   +-- 4.3 CD num
 |   |   +-- Creating NNP nn
 |   |   +-- Disjoint NNP nn
 |   |   +-- Data NNP nn
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- deliver VB infmod
 |       +-- to TO aux
 |       +-- levels NNS dobj
 |       |   +-- bandwidth NN nn
 |       |       +-- high JJ amod
 |       +-- to IN prep
 |           +-- nodes NNS pobj
 +-- on IN prep
 |   +-- strategy NN pobj
 |       +-- its PRP$ poss
 |       +-- disjoint NN nn
 |       +-- transmission NN nn
 +-- . . punct
Input: That is , when bandwidth to a child is limited , Bullet attempts to send the correct portions of data so that recovery of the lost data is facilitated .
Parse:
is VBZ ROOT
 +-- That DT nsubj
 +-- , , punct
 +-- limited VBN advcl
 |   +-- when WRB advmod
 |   +-- bandwidth NN nsubjpass
 |   |   +-- to IN prep
 |   |       +-- child NN pobj
 |   |           +-- a DT det
 |   +-- is VBZ auxpass
 |   +-- , , punct
 |   +-- attempts NNS dobj
 |       +-- Bullet NNP nn
 |       +-- send VB infmod
 |           +-- to TO aux
 |           +-- portions NNS dobj
 |           |   +-- the DT det
 |           |   +-- correct JJ amod
 |           |   +-- of IN prep
 |           |       +-- data NNS pobj
 |           +-- facilitated VBN advcl
 |               +-- so IN mark
 |               +-- that IN mark
 |               +-- recovery NN nsubjpass
 |               |   +-- of IN prep
 |               |       +-- data NN pobj
 |               |           +-- the DT det
 |               |           +-- lost VBN amod
 |               +-- is VBZ auxpass
 +-- . . punct
Input: A Bullet parent sends different data to its children in hopes that each data item will be readily available to nodes spread throughout its subtree .
Parse:
sends VBZ ROOT
 +-- parent NN nsubj
 |   +-- A DT det
 |   +-- Bullet JJ nn
 +-- data NNS dobj
 |   +-- different JJ amod
 +-- to IN prep
 |   +-- children NNS pobj
 |       +-- its PRP$ poss
 +-- in IN prep
 |   +-- hopes NNS pobj
 |       +-- available JJ ccomp
 |           +-- that IN mark
 |           +-- item NN nsubj
 |           |   +-- each DT det
 |           |   +-- data NN nn
 |           +-- will MD aux
 |           +-- be VB cop
 |           +-- readily RB advmod
 |           +-- to IN prep
 |               +-- nodes NNS pobj
 |                   +-- spread VB partmod
 |                       +-- throughout IN prep
 |                           +-- subtree NN pobj
 |                               +-- its PRP$ poss
 +-- . . punct
Input: It does so by assigning ownership of data objects to children in a manner that makes the expected number of nodes holding a particular data object equal for all data objects it transmits .
Parse:
does VBZ ROOT
 +-- It PRP nsubj
 +-- so RB advmod
 +-- by IN prep
 |   +-- assigning VBG pcomp
 |       +-- ownership NN dobj
 |       |   +-- of IN prep
 |       |       +-- objects NNS pobj
 |       |           +-- data NNS nn
 |       +-- to IN prep
 |       |   +-- children NNS pobj
 |       +-- in IN prep
 |           +-- manner NN pobj
 |               +-- a DT det
 |               +-- makes VBZ rcmod
 |                   +-- that WDT nsubj
 |                   +-- holding VBG dep
 |                       +-- number NN nsubj
 |                       |   +-- the DT det
 |                       |   +-- expected VBN amod
 |                       |   +-- of IN prep
 |                       |       +-- nodes NNS pobj
 |                       +-- object NN dobj
 |                           +-- a DT det
 |                           +-- data NNS nn
 |                           |   +-- particular JJ amod
 |                           +-- equal JJ amod
 |                               +-- for IN prep
 |                                   +-- objects NNS pobj
 |                                       +-- all DT det
 |                                       +-- data NNS nn
 |                                       +-- transmits VBZ rcmod
 |                                           +-- it PRP nsubj
 +-- . . punct
Input: Figure 10 shows the resulting bandwidth over time for the non disjoint strategy in which a node -LRB- and more importantly , the root of the tree -RRB- attempts to send all data to each of its children -LRB- subject to independent losses at individual child links -RRB- .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 10 CD num
 +-- bandwidth NN dobj
 |   +-- the DT det
 |   +-- resulting VBG amod
 +-- over IN prep
 |   +-- time NN pobj
 +-- for IN prep
 |   +-- strategy NN pobj
 |       +-- the DT det
 |       +-- disjoint NN nn
 |       |   +-- non FW nn
 |       +-- attempts VBZ rcmod
 |           +-- in IN prep
 |           |   +-- which WDT pobj
 |           +-- node NN nsubj
 |           |   +-- a DT det
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- and CC cc
 |           |   +-- importantly RB advmod
 |           |   |   +-- more RBR advmod
 |           |   +-- , , punct
 |           |   +-- root NN appos
 |           |   |   +-- the DT det
 |           |   |   +-- of IN prep
 |           |   |       +-- tree NN pobj
 |           |   |           +-- the DT det
 |           |   +-- -RRB- -RRB- punct
 |           +-- send VB xcomp
 |               +-- to TO aux
 |               +-- data NNS dobj
 |               |   +-- all DT det
 |               +-- to IN prep
 |                   +-- each DT pobj
 |                       +-- of IN prep
 |                       |   +-- children NNS pobj
 |                       |       +-- its PRP$ poss
 |                       +-- -LRB- -LRB- punct
 |                       +-- subject JJ amod
 |                       |   +-- to IN prep
 |                       |       +-- losses NNS pobj
 |                       |           +-- independent JJ amod
 |                       |           +-- at IN prep
 |                       |               +-- links NNS pobj
 |                       |                   +-- individual JJ amod
 |                       |                   +-- child NN nn
 |                       +-- -RRB- -RRB- punct
 +-- . . punct
Input: Because the children transports throttle the sending rate at each parent , some data is inherently sent disjointly -LRB- by chance -RRB- .
Parse:
sent VBN ROOT
 +-- transports VBZ advcl
 |   +-- Because IN mark
 |   +-- children NNS nsubj
 |   |   +-- the DT det
 |   +-- throttle VBP dobj
 |       +-- rate NN dobj
 |       |   +-- the DT det
 |       |   +-- sending VBG nn
 |       +-- at IN prep
 |           +-- parent NN pobj
 |               +-- each DT det
 +-- , , punct
 +-- data NNS nsubjpass
 |   +-- some DT det
 +-- is VBZ auxpass
 +-- inherently RB advmod
 +-- disjointly RB advmod
 +-- -LRB- -LRB- punct
 +-- by IN prep
 |   +-- chance NN pobj
 +-- -RRB- -RRB- punct
 +-- . . punct
Input: By not explicitly choosing which data to send its child , this approach deprives Bullet of 25 % of its bandwidth capability , when compared to the case when our disjoint strategy is enabled in Figure 7 .
Parse:
deprives VBZ ROOT
 +-- By IN prep
 |   +-- choosing VBG pcomp
 |       +-- not RB neg
 |       +-- explicitly RB advmod
 |       +-- data NNS dobj
 |       |   +-- which WDT det
 |       +-- send VB xcomp
 |           +-- to TO aux
 |           +-- child NN dobj
 |               +-- its PRP$ poss
 +-- , , punct
 +-- approach NN nsubj
 |   +-- this DT det
 +-- Bullet NNP dobj
 |   +-- of IN prep
 |       +-- % NN pobj
 |           +-- 25 CD num
 |           +-- of IN prep
 |               +-- capability NN pobj
 |                   +-- its PRP$ poss
 |                   +-- bandwidth NN nn
 +-- compared VBN advcl
 |   +-- when WRB advmod
 |   +-- to IN prep
 |       +-- case NN pobj
 |           +-- the DT det
 |           +-- enabled VBN rcmod
 |               +-- when WRB advmod
 |               +-- strategy NN nsubjpass
 |               |   +-- our PRP$ poss
 |               |   +-- disjoint NN nn
 |               +-- is VBZ auxpass
 |               +-- in IN prep
 |                   +-- Figure NN pobj
 |                       +-- 7 CD num
 +-- . . punct
Input: 4.4 Epidemic Approaches In this section , we explore how Bullet compares to data dissemination approaches that use some form of epidemic routing .
Parse:
explore VBP ROOT
 +-- 4.4 LS prep
 |   +-- Approaches NNS dep
 |       +-- Epidemic NNP nn
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- compares VBZ ccomp
 |   +-- how WRB advmod
 |   +-- Bullet NNP nsubj
 |   +-- to IN prep
 |       +-- approaches NNS pobj
 |           +-- dissemination NN nn
 |           |   +-- data NNS nn
 |           +-- use VBP rcmod
 |               +-- that WDT nsubj
 |               +-- form NN dobj
 |                   +-- some DT det
 |                   +-- of IN prep
 |                       +-- routing NN pobj
 |                           +-- epidemic NN nn
 +-- . . punct
Input: We implemented a form of gossiping , where a node forwards non duplicate packets to a randomly chosen number of nodes in its local view .
Parse:
implemented VBD ROOT
 +-- We PRP nsubj
 +-- form NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |   |   +-- gossiping VBG pobj
 |   +-- , , punct
 |   +-- forwards VBZ rcmod
 |       +-- where WRB advmod
 |       +-- node NN nsubj
 |       |   +-- a DT det
 |       +-- packets NNS dobj
 |       |   +-- duplicate JJ amod
 |       |       +-- non FW dep
 |       +-- to IN prep
 |           +-- number NN pobj
 |               +-- a DT det
 |               +-- chosen VBN amod
 |               |   +-- randomly RB advmod
 |               +-- of IN prep
 |                   +-- nodes NNS pobj
 |                       +-- in IN prep
 |                           +-- view NN pobj
 |                               +-- its PRP$ poss
 |                               +-- local JJ amod
 +-- . . punct
Input: This technique does not use a tree for dissemination , and is similar to lpbcast -LRB- 14 -RRB- -LRB- recently improved to incorporate retrieval of data objects -LRB- 13 -RRB- -RRB- .
Parse:
use VB ROOT
 +-- technique NN nsubj
 |   +-- This DT det
 +-- does VBZ aux
 +-- not RB neg
 +-- tree NN dobj
 |   +-- a DT det
 +-- for IN prep
 |   +-- dissemination NN pobj
 +-- , , punct
 +-- and CC cc
 +-- similar JJ conj
 |   +-- is VBZ cop
 |   +-- to IN prep
 |       +-- lpbcast VB pobj
 |           +-- -LRB- -LRB- punct
 |           +-- 14 CD dep
 |           +-- -RRB- -RRB- punct
 +-- improved VBN dep
 |   +-- -LRB- -LRB- punct
 |   +-- recently RB advmod
 |   +-- incorporate VB xcomp
 |   |   +-- to TO aux
 |   |   +-- retrieval NN dobj
 |   |       +-- of IN prep
 |   |           +-- objects NNS pobj
 |   |               +-- data NNS nn
 |   +-- 13 CD dobj
 |   +-- -RRB- -RRB- punct
 +-- . . punct
Input: We do not disseminate packets every T seconds ; instead we forward them as soon as they arrive .
Parse:
disseminate VB ROOT
 +-- We PRP nsubj
 +-- do VBP aux
 +-- not RB neg
 +-- packets NNS iobj
 +-- seconds NNS dobj
 |   +-- every DT det
 |   +-- T NNP nn
 +-- ; : punct
 +-- forward VBP parataxis
 |   +-- instead RB advmod
 |   +-- we PRP nsubj
 |   +-- them PRP dobj
 |   +-- soon RB advmod
 |       +-- as RB advmod
 |       +-- arrive VBP ccomp
 |           +-- as IN mark
 |           +-- they PRP nsubj
 +-- . . punct
Input: 0 200 400 600 800 1000 0 50 100 150 200 250 300 350 400 450 500 Bandwidth -LRB- Kbps -RRB- Time -LRB- s -RRB- Raw total Useful total From parent Figure 10
Parse:
Figure NN ROOT
 +-- 0 NFP punct
 +-- total NN nsubj
 |   +-- 400 CD num
 |   |   +-- 200 CD number
 |   |   +-- 400 CD quantmod
 |   |   +-- 600 CD quantmod
 |   |   +-- 800 CD number
 |   |   +-- 1000 CD quantmod
 |   |   +-- 0 CD dep
 |   |   +-- 50 CD number
 |   |   +-- 100 CD number
 |   |   +-- 150 CD quantmod
 |   |   +-- 250 CD quantmod
 |   |   +-- 300 CD quantmod
 |   |   +-- 350 CD number
 |   +-- Raw NNP nn
 |   |   +-- 500 CD num
 |   |   |   +-- 450 CD number
 |   |   +-- Bandwidth NNP nn
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- Kbps NNS nn
 |   |   +-- -RRB- -RRB- punct
 |   |   +-- Time NNP nn
 |   |   +-- s NNP nn
 |   +-- total JJ amod
 |   +-- Useful JJ amod
 |   +-- From IN prep
 |       +-- parent NN pobj
 +-- 10 CD num
Input: We also implemented a pbcast like -LRB- 2 -RRB- approach for retrieving data missing from a data distribution tree .
Parse:
implemented VBD ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- pbcast NN dobj
 |   +-- a DT det
 +-- like IN prep
 |   +-- 2 CD pobj
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- approach NN dobj
 |   +-- for IN prep
 |       +-- retrieving VBG pcomp
 |           +-- data NNS dobj
 |               +-- missing VBG partmod
 |                   +-- from IN prep
 |                       +-- tree NN pobj
 |                           +-- a DT det
 |                           +-- distribution NN nn
 |                               +-- data NN nn
 +-- . . punct
Input: The idea here is that nodes are expected to obtain most of their data from their parent .
Parse:
is VBZ ROOT
 +-- idea NN nsubj
 |   +-- The DT det
 |   +-- here RB advmod
 +-- expected VBN ccomp
 |   +-- that IN mark
 |   +-- nodes NNS nsubjpass
 |   +-- are VBP auxpass
 |   +-- obtain VB xcomp
 |       +-- to TO aux
 |       +-- most JJS dobj
 |       |   +-- of IN prep
 |       |       +-- data NNS pobj
 |       |           +-- their PRP$ poss
 |       +-- from IN prep
 |           +-- parent NN pobj
 |               +-- their PRP$ poss
 +-- . . punct
Input: Nodes then attempt to retrieve any missing data items through gossiping with random peers .
Parse:
attempt VB ROOT
 +-- Nodes NNS nsubj
 +-- then RB advmod
 +-- retrieve VB xcomp
 |   +-- to TO aux
 |   +-- items NNS dobj
 |   |   +-- any DT det
 |   |   +-- missing VBG amod
 |   |   +-- data NNS nn
 |   +-- through IN prep
 |       +-- gossiping VBG pcomp
 |           +-- with IN prep
 |               +-- peers NNS pobj
 |                   +-- random JJ amod
 +-- . . punct
Input: Instead of using gossiping with a fixed number of rounds for each packet , we use anti entropy with a FIFO Bloom filter to attempt to locate peers that hold any locally missing data items .
Parse:
use VBP ROOT
 +-- of IN prep
 |   +-- Instead RB advmod
 |   +-- using VBG pcomp
 |       +-- gossiping VBG dobj
 |       +-- with IN prep
 |           +-- number NN pobj
 |               +-- a DT det
 |               +-- fixed VBN amod
 |               +-- of IN prep
 |                   +-- rounds NNS pobj
 |                       +-- for IN prep
 |                           +-- packet NN pobj
 |                               +-- each DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- entropy NN dobj
 |   +-- anti NNP nn
 +-- with IN prep
 |   +-- filter NN pobj
 |       +-- a DT det
 |       +-- FIFO NNP nn
 |       +-- Bloom NNP nn
 +-- attempt VB xcomp
 |   +-- to TO aux
 |   +-- locate VB xcomp
 |       +-- to TO aux
 |       +-- peers NNS dobj
 |           +-- hold VBP rcmod
 |               +-- that WDT nsubj
 |               +-- items NNS dobj
 |                   +-- any DT det
 |                   +-- missing VBG amod
 |                   |   +-- locally RB advmod
 |                   +-- data NNS nn
 +-- . . punct
Input: To make our evaluation conservative , we assume that nodes employing gossip and anti entropy recovery are able to maintain full group membership .
Parse:
assume VBP ROOT
 +-- make VB advcl
 |   +-- To TO aux
 |   +-- conservative JJ xcomp
 |       +-- evaluation NN nsubj
 |           +-- our PRP$ poss
 +-- , , punct
 +-- we PRP nsubj
 +-- able JJ ccomp
 |   +-- that IN mark
 |   +-- nodes NNS nsubj
 |   |   +-- employing VBG partmod
 |   |       +-- gossip NN dobj
 |   |           +-- and CC cc
 |   |           +-- recovery NN conj
 |   |               +-- anti NNP nn
 |   |               +-- entropy JJ amod
 |   +-- are VBP cop
 |   +-- maintain VB xcomp
 |       +-- to TO aux
 |       +-- membership NN dobj
 |           +-- full JJ amod
 |           +-- group NN nn
 +-- . . punct
Input: While this might be difficult in practice , we assume that RanSub -LRB- 24 -RRB- could also be applied to these ideas , specifically in the case of anti entropy recovery that employs an underlying tree .
Parse:
assume VBP ROOT
 +-- difficult JJ advcl
 |   +-- While IN mark
 |   +-- this DT nsubj
 |   +-- might MD aux
 |   +-- be VB cop
 |   +-- in IN prep
 |       +-- practice NN pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- applied VBN ccomp
 |   +-- that IN mark
 |   +-- RanSub NNP nsubjpass
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- 24 CD num
 |   |   +-- -RRB- -RRB- punct
 |   +-- could MD aux
 |   +-- also RB advmod
 |   +-- be VB auxpass
 |   +-- to IN prep
 |   |   +-- ideas NNS pobj
 |   |       +-- these DT det
 |   +-- , , punct
 |   +-- in IN prep
 |       +-- specifically RB advmod
 |       +-- case NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- recovery NN pobj
 |                   +-- anti JJ amod
 |                   +-- entropy JJ amod
 |                   +-- employs VBZ rcmod
 |                       +-- that WDT nsubj
 |                       +-- tree NN dobj
 |                           +-- an DT det
 |                           +-- underlying JJ amod
 +-- . . punct
Input: Further , we also allow both techniques to reuse other aspects of our implementation
Parse:
allow VBP ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- also RB advmod
 +-- reuse VB xcomp
     +-- techniques NNS nsubj
     |   +-- both DT det
     +-- to TO aux
     +-- aspects NNS dobj
         +-- other JJ amod
         +-- of IN prep
             +-- implementation NN pobj
                 +-- our PRP$ poss
Input: To reduce the number of duplicate packets , we use less peers in each round -LRB- 5 -RRB- than Bullet -LRB- 10 -RRB- .
Parse:
use VBP ROOT
 +-- reduce VB advcl
 |   +-- To TO aux
 |   +-- number NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- packets NNS pobj
 |               +-- duplicate JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- peers NNS dobj
 |   +-- less JJR amod
 +-- in IN prep
 |   +-- round NN pobj
 |       +-- each DT det
 |       +-- 5 CD appos
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- than IN prep
 |           +-- Bullet NN pobj
 |               +-- -LRB- -LRB- punct
 |               +-- 10 CD dep
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: For our configuration , we experimentally found that 5 peers results in the best performance with the lowest overhead .
Parse:
found VBD ROOT
 +-- For IN prep
 |   +-- configuration NN pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- we PRP nsubj
 +-- experimentally RB advmod
 +-- results NNS ccomp
 |   +-- that IN mark
 |   +-- peers NNS nsubj
 |   |   +-- 5 CD num
 |   +-- in IN prep
 |       +-- performance NN pobj
 |           +-- the DT det
 |           +-- best JJS amod
 |           +-- with IN prep
 |               +-- overhead NN pobj
 |                   +-- the DT det
 |                   +-- lowest JJS amod
 +-- . . punct
Input: In our experiments , increasing the number of peers did not improve the average bandwidth achieved throughout the system .
Parse:
improve VB ROOT
 +-- In IN prep
 |   +-- experiments NNS pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- increasing VBG csubj
 |   +-- number NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- peers NNS pobj
 +-- did VBD aux
 +-- not RB neg
 +-- bandwidth NN dobj
 |   +-- the DT det
 |   +-- average JJ amod
 |   +-- achieved VBN partmod
 |       +-- throughout IN prep
 |           +-- system NN pobj
 |               +-- the DT det
 +-- . . punct
Input: To allow TFRC enough time to ramp up to the appropriate TCP friendly sending rate , we set the epoch length for anti entropy recovery to 20 seconds .
Parse:
set VBD ROOT
 +-- allow VB advcl
 |   +-- To TO aux
 |   +-- TFRC NNP iobj
 |   +-- time NN dobj
 |       +-- enough JJ amod
 |       +-- ramp VB infmod
 |           +-- to TO aux
 |           +-- up RP prt
 |           +-- to IN prep
 |               +-- rate NN pobj
 |                   +-- the DT det
 |                   +-- appropriate JJ amod
 |                   +-- TCP NNP nn
 |                   +-- friendly JJ amod
 |                   +-- sending VBG nn
 +-- , , punct
 +-- we PRP nsubj
 +-- length NN dobj
 |   +-- the DT det
 |   +-- epoch NN nn
 |   +-- for IN prep
 |       +-- recovery NN pobj
 |           +-- anti NN nn
 |           +-- entropy JJ amod
 +-- to IN prep
 |   +-- seconds NNS pobj
 |       +-- 20 CD num
 +-- . . punct
Input: For these experiments , we use a 5000 node INET topology with no explicit physical link losses .
Parse:
use VBP ROOT
 +-- For IN prep
 |   +-- experiments NNS pobj
 |       +-- these DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- topology NN dobj
 |   +-- a DT det
 |   +-- node NN nn
 |   |   +-- 5000 CD num
 |   +-- INET NN nn
 +-- with IN prep
 |   +-- losses NNS pobj
 |       +-- no DT det
 |       +-- explicit JJ amod
 |       +-- link NN nn
 |           +-- physical JJ amod
 +-- . . punct
Input: We set link bandwidths according to the medium range from Table 1 , and randomly assign 100 overlay participants .
Parse:
set VBP ROOT
 +-- We PRP nsubj
 +-- bandwidths NNS dobj
 |   +-- link NN nn
 +-- according VBG prep
 |   +-- to IN pcomp
 |       +-- range NN pobj
 |           +-- the DT det
 |           +-- medium JJ amod
 |           +-- from IN prep
 |               +-- Table NNP pobj
 |                   +-- 1 CD num
 +-- , , punct
 +-- and CC cc
 +-- randomly RB advmod
 +-- assign VB conj
 |   +-- participants NNS dobj
 |       +-- 100 CD num
 |       +-- overlay JJ amod
 +-- . . punct
Input: The randomly chosen root either streams at 900 Kbps -LRB- over a random tree for Bullet and greedy bottleneck tree for anti entropy recovery -RRB- , or sends packets at that rate to randomly chosen nodes for gossiping .
Parse:
streams NNS ROOT
 +-- root NN nsubj
 |   +-- The DT det
 |   +-- chosen VBN amod
 |       +-- randomly RB advmod
 +-- either CC advmod
 +-- at IN prep
 |   +-- Kbps NNS pobj
 |       +-- 900 CD num
 |       +-- -LRB- -LRB- punct
 |       +-- over IN prep
 |       |   +-- tree NN pobj
 |       |       +-- a DT det
 |       |       +-- random JJ amod
 |       |       +-- for IN prep
 |       |           +-- recovery NN pobj
 |       |               +-- anti NN nn
 |       |               +-- entropy JJ amod
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- or CC cc
 +-- sends VBZ conj
 |   +-- packets NNS dobj
 |   +-- at IN prep
 |   |   +-- rate NN pobj
 |   |       +-- that DT det
 |   +-- to IN prep
 |   |   +-- nodes NNS pobj
 |   |       +-- chosen VBN amod
 |   |           +-- randomly RB advmod
 |   +-- for IN prep
 |       +-- gossiping VBG pobj
 +-- . . punct
Input: Figure 11 shows the resulting bandwidth over time achieved by Bullet and the two epidemic approaches .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 11 CD num
 +-- bandwidth NN dobj
 |   +-- the DT det
 |   +-- resulting VBG amod
 +-- over IN prep
 |   +-- time NN pobj
 |       +-- achieved VBN partmod
 |           +-- by IN prep
 |               +-- approaches NNS pobj
 |                   +-- Bullet NNP nn
 |                       +-- and CC cc
 |                       +-- epidemic NN conj
 |                           +-- the DT det
 |                           +-- two CD num
 +-- . . punct
Input: As expected , Bullet comes close to providing the target bandwidth to all participants , achieving approximately 60 percent more then gossiping and streaming with anti entropy .
Parse:
comes VBZ ROOT
 +-- expected VBN advcl
 |   +-- As IN mark
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- close RB advmod
 |   +-- to IN prep
 |       +-- providing VBG pcomp
 |           +-- bandwidth NN dobj
 |           |   +-- the DT det
 |           |   +-- target NN nn
 |           +-- to IN prep
 |           |   +-- participants NNS pobj
 |           |       +-- all DT det
 |           +-- , , punct
 |           +-- achieving VBG ccomp
 |               +-- more JJR dobj
 |               |   +-- percent NN dep
 |               |       +-- 60 CD num
 |               |           +-- approximately RB quantmod
 |               +-- then RB advmod
 |               +-- gossiping VBG dep
 |                   +-- and CC cc
 |                   +-- streaming VBG conj
 |                       +-- with IN prep
 |                           +-- entropy NN pobj
 |                               +-- anti NN nn
 +-- . . punct
Input: The two epidemic techniques send an excessive number of duplicates , effectively reducing the useful bandwidth provided to each node .
Parse:
send VBP ROOT
 +-- techniques NNS nsubj
 |   +-- The DT det
 |   +-- two CD num
 |   +-- epidemic NN nn
 +-- number NN dobj
 |   +-- an DT det
 |   +-- excessive JJ amod
 |   +-- of IN prep
 |       +-- duplicates NNS pobj
 +-- , , punct
 +-- reducing VBG partmod
 |   +-- effectively RB advmod
 |   +-- bandwidth NN dobj
 |       +-- the DT det
 |       +-- useful JJ amod
 |       +-- provided VBN partmod
 |           +-- to IN prep
 |               +-- node NN pobj
 |                   +-- each DT det
 +-- . . punct
Input: More importantly , both approaches assign equal significance to other peers , regardless of the available band292 0 500 1000 1500 2000 0 50 100 150 200 250 300 Bandwidth -LRB- Kbps -RRB- Time -LRB- s -RRB- Push gossiping raw Streaming w AE raw Bullet raw Bullet useful Push gossiping useful Streaming w AE useful Figure 11
Parse:
assign VBP ROOT
 +-- importantly RB advmod
 |   +-- More RBR advmod
 +-- , , punct
 +-- approaches NNS nsubj
 |   +-- both DT det
 +-- significance NN dobj
 |   +-- equal JJ amod
 +-- to IN prep
 |   +-- peers NNS pobj
 |       +-- other JJ amod
 +-- regardless RB advmod
     +-- of IN prep
     |   +-- band292 NN pobj
     |       +-- the DT det
     |       +-- available JJ amod
     +-- 0 CD prep
         +-- 250 CD dep
             +-- 0 CD dep
             |   +-- 500 CD number
             |   +-- 1000 CD number
             |   +-- 1500 CD number
             |   +-- 2000 CD number
             +-- 50 CD number
             +-- 100 CD dep
             +-- 150 CD number
             +-- 200 CD number
             +-- 300 CD prep
                 +-- Bandwidth NNP pobj
                     +-- Push NNP dep
                         +-- -LRB- -LRB- punct
                         +-- Kbps NNS nn
                         +-- -RRB- -RRB- punct
                         +-- Time NNP dep
                         +-- s NNP nn
                         +-- gossiping VBG dep
                             +-- Streaming NNP dobj
                             |   +-- raw JJ amod
                             +-- w IN prep
                                 +-- Bullet NNP pobj
                                     +-- AE NNP nn
                                     +-- raw JJ amod
                                     +-- Push NNP dep
                                     |   +-- Bullet NNP nn
                                     |   |   +-- raw JJ amod
                                     |   +-- useful JJ amod
                                     +-- gossiping VBG partmod
                                         +-- Figure NN dobj
                                             +-- useful JJ amod
                                             +-- Streaming NNP nn
                                             |   +-- w IN prep
                                             |       +-- AE NNP pobj
                                             +-- 11 CD num
Input: width and the similarity ratio .
Parse:
width NNP ROOT
 +-- and CC cc
 +-- ratio NN conj
 |   +-- the DT det
 |   +-- similarity NN amod
 +-- . . punct
Input: Bullet , on the other hand , establishes long term connections with peers that provide good bandwidth and disjoint content , and avoids most of the duplicates by requesting disjoint data from each node '' s peers .
Parse:
establishes VBZ ROOT
 +-- Bullet NNP nsubj
 +-- , , punct
 +-- on IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- connections NNS dobj
 |   +-- term NN nn
 |   |   +-- long JJ amod
 |   +-- with IN prep
 |       +-- peers NNS pobj
 |           +-- provide VBP rcmod
 |               +-- that WDT nsubj
 |               +-- bandwidth NN dobj
 |                   +-- good JJ amod
 |                   +-- and CC cc
 |                   +-- content NN conj
 |                       +-- disjoint VB amod
 +-- and CC cc
 +-- avoids VBZ conj
 |   +-- most JJS dobj
 |   |   +-- of IN prep
 |   |       +-- duplicates NNS pobj
 |   |           +-- the DT det
 |   +-- by IN prep
 |       +-- requesting VBG pcomp
 |           +-- data NNS dobj
 |               +-- disjoint NN nn
 |               +-- from IN prep
 |                   +-- node NN pobj
 |                       +-- each DT det
 +-- '' '' punct
 +-- s POS punct
 +-- peers NNS dobj
 +-- . . punct
Input: 4.5 Bullet on a Lossy Network To evaluate Bullet '' s performance under more lossy network conditions , we have modified our 20 , 000 node topologies used in our previous experiments to include random packet losses .
Parse:
Bullet NN ROOT
 +-- 4.5 CD num
 +-- on IN prep
 |   +-- Network NNP pobj
 |       +-- a DT det
 |       +-- Lossy NNP nn
 +-- evaluate VB infmod
 |   +-- To TO aux
 |   +-- performance NN dobj
 |       +-- Bullet NNP poss
 |       |   +-- '' '' punct
 |       |   +-- s POS possessive
 |       +-- under IN prep
 |           +-- conditions NNS pobj
 |               +-- more JJR amod
 |               +-- lossy JJ amod
 |               +-- network NN nn
 +-- , , punct
 +-- modified VBN ccomp
 |   +-- we PRP nsubj
 |   +-- have VBP aux
 |   +-- 20 CD dobj
 |       +-- our PRP$ poss
 +-- 000 NFP punct
 +-- topologies NNS dep
 |   +-- node NN nn
 |   +-- used VBN partmod
 |       +-- in IN prep
 |       |   +-- experiments NNS pobj
 |       |       +-- our PRP$ poss
 |       |       +-- previous JJ amod
 |       +-- include VB xcomp
 |           +-- to TO aux
 |           +-- losses NNS dobj
 |               +-- random JJ amod
 |               +-- packet NN nn
 +-- . . punct
Input: ModelNet allows the specification of a packet loss rate in the description of a network link .
Parse:
allows VBZ ROOT
 +-- ModelNet NNP nsubj
 +-- specification NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- rate NN pobj
 |   |       +-- a DT det
 |   |       +-- loss NN nn
 |   |           +-- packet NN nn
 |   +-- in IN prep
 |       +-- description NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- link NN pobj
 |                   +-- a DT det
 |                   +-- network NN nn
 +-- . . punct
Input: Our goal by modifying these loss rates is to simulate queuing behavior when the network is under load due to background network traffic .
Parse:
is VBZ ROOT
 +-- goal NN nsubj
 |   +-- Our PRP$ poss
 |   +-- by IN prep
 |       +-- modifying VBG pcomp
 |           +-- rates NNS dobj
 |               +-- these DT det
 |               +-- loss NN nn
 +-- simulate VB xcomp
 |   +-- to TO aux
 |   +-- behavior NN dobj
 |   |   +-- queuing VBG nn
 |   +-- is VBZ advcl
 |       +-- when WRB advmod
 |       +-- network NN nsubj
 |       |   +-- the DT det
 |       +-- under IN prep
 |           +-- load NN pobj
 |               +-- to IN prep
 |                   +-- due IN mwe
 |                   +-- traffic NN pobj
 |                       +-- network NN nn
 |                           +-- background NN nn
 +-- . . punct
Input: To effect this behavior , we first modify all non transit links in each topology to have a packet loss rate chosen uniformly random from -LRB- 0 , 0.003 -RRB- resulting in a maximum loss rate of 0.3 % .
Parse:
modify VBP ROOT
 +-- effect VB advcl
 |   +-- To TO aux
 |   +-- behavior NN dobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- first RB advmod
 +-- links NNS dobj
 |   +-- all DT det
 |   +-- transit NN nn
 |   |   +-- non FW nn
 |   +-- in IN prep
 |       +-- topology NN pobj
 |           +-- each DT det
 +-- have VB xcomp
 |   +-- to TO aux
 |   +-- chosen VBN ccomp
 |       +-- rate NN nsubj
 |       |   +-- a DT det
 |       |   +-- loss NN nn
 |       |       +-- packet NN nn
 |       +-- uniformly RB advmod
 |       +-- from IN prep
 |           +-- random JJ advmod
 |           +-- 0.003 CD pobj
 |               +-- -LRB- -LRB- punct
 |               +-- 0 CD num
 |               +-- , , punct
 |               +-- -RRB- -RRB- punct
 |               +-- resulting VBG partmod
 |                   +-- in IN prep
 |                       +-- rate NN pobj
 |                           +-- a DT det
 |                           +-- maximum JJ amod
 |                           +-- loss NN nn
 |                           +-- of IN prep
 |                               +-- % NN pobj
 |                                   +-- 0.3 CD num
 +-- . . punct
Input: Transit links are likewise modified , but with a maximum loss rate of 0.1 % .
Parse:
modified VBN ROOT
 +-- links NNS nsubjpass
 |   +-- Transit NN nn
 +-- are VBP auxpass
 +-- likewise RB advmod
 +-- , , punct
 +-- but CC dep
 |   +-- with IN prep
 |       +-- rate NN pobj
 |           +-- a DT det
 |           +-- maximum JJ amod
 |           +-- loss NN nn
 |           +-- of IN prep
 |               +-- % NN pobj
 |                   +-- 0.1 CD num
 +-- . . punct
Input: Similar to the approach in -LRB- 28 -RRB- , we randomly designated 5 % of the links in the topologies as overloaded and set their loss rates uniformly random from -LRB- 0.05 , 0.1 -RRB- resulting in a maximum packet loss rate of 10 % .
Parse:
designated VBD ROOT
 +-- Similar JJ advmod
 |   +-- to IN prep
 |       +-- approach NN pobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- -LRB- -LRB- punct
 |               +-- 28 CD pobj
 |               +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- randomly RB advmod
 +-- % NN dobj
 |   +-- 5 CD num
 |   +-- of IN prep
 |       +-- links NNS pobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- topologies NNS pobj
 |                   +-- the DT det
 +-- as IN prep
 |   +-- overloaded VBN pobj
 +-- and CC cc
 +-- set VBD conj
 |   +-- rates NNS dobj
 |   |   +-- their PRP$ poss
 |   |   +-- loss NN nn
 |   +-- random JJ dep
 |   |   +-- uniformly RB advmod
 |   +-- from IN prep
 |   |   +-- 0.05 CD pobj
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- , , punct
 |   |       +-- 0.1 CD num
 |   |       +-- -RRB- -RRB- punct
 |   +-- resulting VBG xcomp
 |       +-- in IN prep
 |           +-- rate NN pobj
 |               +-- a DT det
 |               +-- maximum JJ amod
 |               +-- loss NN nn
 |               |   +-- packet NN nn
 |               +-- of IN prep
 |                   +-- % NN pobj
 |                       +-- 10 CD num
 +-- . . punct
Input: Figure 12 shows achieved bandwidths for streaming over Bullet and using our greedy o ? ine bottleneck bandwidth tree .
Parse:
achieved VBN ROOT
 +-- shows NNS nsubj
 |   +-- Figure NN nn
 |       +-- 12 CD num
 +-- bandwidths NNS dobj
 |   +-- for IN prep
 |       +-- streaming VBG pobj
 |           +-- over IN prep
 |               +-- Bullet NNP pobj
 +-- and CC cc
 +-- using VBG conj
 |   +-- o NNP dobj
 |       +-- our PRP$ poss
 |       +-- greedy JJ amod
 |       +-- ? , punct
 |       +-- tree NN appos
 |           +-- bottleneck NN nn
 |           |   +-- ine VB nn
 |           +-- bandwidth NN nn
 +-- . . punct
Input: Because losses adversely affect the bandwidth achievable over TCP friendly transport and since bandwidths are strictly monotonically decreasing over a streaming tree , treebased algorithms perform considerably worse than Bullet when used on a lossy network .
Parse:
perform VBP ROOT
 +-- affect VBP advcl
 |   +-- Because IN mark
 |   +-- losses NNS nsubj
 |   +-- adversely RB advmod
 |   +-- bandwidth NN dobj
 |   |   +-- the DT det
 |   |   +-- achievable JJ amod
 |   |       +-- over IN prep
 |   |           +-- transport NN pobj
 |   |               +-- TCP NNP nn
 |   |               +-- friendly JJ amod
 |   +-- and CC cc
 |   +-- decreasing VBG conj
 |       +-- since IN mark
 |       +-- bandwidths NNS nsubj
 |       +-- are VBP aux
 |       +-- strictly RB advmod
 |       +-- monotonically RB advmod
 |       +-- over IN prep
 |           +-- tree NN pobj
 |               +-- a DT det
 |               +-- streaming NN amod
 +-- , , punct
 +-- algorithms NNS nsubj
 |   +-- treebased VBN amod
 +-- worse JJR dobj
 |   +-- considerably RB advmod
 |   +-- than IN prep
 |       +-- Bullet NNP pobj
 +-- used VBN advcl
 |   +-- when WRB advmod
 |   +-- on IN prep
 |       +-- network NN pobj
 |           +-- a DT det
 |           +-- lossy JJ amod
 +-- . . punct
Input: In all cases , Bullet delivers at least twice as much bandwidth than the bottleneck bandwidth tree .
Parse:
delivers NNS ROOT
 +-- In IN prep
 |   +-- cases NNS pobj
 |       +-- all DT det
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- bandwidth NN dobj
 |   +-- much JJ amod
 |   |   +-- least RBS advmod
 |   |   |   +-- at RB advmod
 |   |   |   +-- twice RB advmod
 |   |   +-- as RB advmod
 |   +-- than IN prep
 |       +-- tree NN pobj
 |           +-- the DT det
 |           +-- bottleneck NN nn
 |           +-- bandwidth NN nn
 +-- . . punct
Input: Additionally , losses in the low bandwidth topology essentially keep the bottleneck bandwidth tree from delivering any data , an artifact that is avoided by Bullet .
Parse:
keep VBP ROOT
 +-- Additionally RB advmod
 +-- , , punct
 +-- losses NNS nsubj
 |   +-- in IN prep
 |       +-- topology NN pobj
 |           +-- the DT det
 |           +-- bandwidth NN nn
 |               +-- low JJ amod
 +-- essentially RB advmod
 +-- tree NN dobj
 |   +-- the DT det
 |   +-- bottleneck NN nn
 |   +-- bandwidth NN nn
 +-- from IN prep
 |   +-- delivering VBG pcomp
 |       +-- data NNS dobj
 |           +-- any DT det
 |           +-- , , punct
 |           +-- artifact NN appos
 |               +-- an DT det
 |               +-- avoided VBN rcmod
 |                   +-- that WDT nsubjpass
 |                   +-- is VBZ auxpass
 |                   +-- by IN prep
 |                       +-- Bullet NNP pobj
 +-- . . punct
Input: 4.6 Performance Under Failure In this section , we discuss Bullet '' s behavior in the face of node failure .
Parse:
discuss VBP ROOT
 +-- Performance NN nsubj
 |   +-- 4.6 CD num
 |   +-- Under IN prep
 |       +-- Failure NN pobj
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- behavior NN dobj
 |   +-- Bullet NNP poss
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- in IN prep
 |       +-- face NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- failure NN pobj
 |                   +-- node NN nn
 +-- . . punct
Input: In contrast to streaming distribution trees that must quickly detect and make tree transformations to overcome failure , Bullet '' s failure resilience rests on its ability to maintain a higher level of achieved bandwidth by virtue of perpendicular -LRB- peer -RRB- streaming .
Parse:
rests VBZ ROOT
 +-- In IN prep
 |   +-- contrast NN pobj
 |       +-- to IN prep
 |           +-- streaming VBG pcomp
 |               +-- trees NNS dobj
 |                   +-- distribution NN nn
 |                   +-- detect VB rcmod
 |                       +-- that WDT nsubj
 |                       +-- must MD aux
 |                       +-- quickly RB advmod
 |                       +-- and CC cc
 |                       +-- make VB conj
 |                           +-- overcome VB xcomp
 |                               +-- transformations NNS nsubj
 |                               |   +-- tree NN nn
 |                               +-- to TO aux
 |                               +-- resilience NN dobj
 |                                   +-- failure NN poss
 |                                   |   +-- , , punct
 |                                   |   +-- Bullet NNP appos
 |                                   |   +-- '' '' punct
 |                                   |   +-- s POS possessive
 |                                   +-- failure NN nn
 +-- on IN prep
 |   +-- ability NN pobj
 |       +-- its PRP$ poss
 |       +-- maintain VB infmod
 |           +-- to TO aux
 |           +-- level NN dobj
 |               +-- a DT det
 |               +-- higher JJR amod
 |               +-- of IN prep
 |                   +-- bandwidth NN pobj
 |                       +-- achieved VBN amod
 |                       +-- by IN prep
 |                           +-- virtue NN pobj
 |                               +-- of IN prep
 |                                   +-- streaming VBG pobj
 |                                       +-- perpendicular NN amod
 |                                           +-- -LRB- -LRB- punct
 |                                           +-- peer NN dep
 |                                           +-- -RRB- -RRB- punct
 +-- . . punct
Input: While all nodes under a failed node in a distribution tree will experience a temporary 0 200 400 600 800 1000 0 50 100 150 200 250 300 350 400 Bandwidth -LRB- Kbps -RRB- Time -LRB- s -RRB- Bullet High Bandwidth Bullet Medium Bandwidth Bottleneck tree High Bandwidth Bottleneck tree Medium Bandwidth Bullet Low Bandwidth Bottleneck tree Low Bandwidth Figure 12
Parse:
experience VB ROOT
 +-- While IN mark
 +-- nodes NNS nsubj
 |   +-- all DT det
 |   +-- under IN prep
 |       +-- node NN pobj
 |           +-- a DT det
 |           +-- failed VBN amod
 |           +-- in IN prep
 |               +-- tree NN pobj
 |                   +-- a DT det
 |                   +-- distribution NN nn
 +-- will MD aux
 +-- Kbps NNS dobj
     +-- 300 CD num
     |   +-- a DT quantmod
     |   +-- temporary JJ quantmod
     |   +-- 0 CD number
     |   +-- 200 CD number
     |   +-- 400 CD quantmod
     |   +-- 600 CD quantmod
     |   +-- 800 CD number
     |   +-- 1000 CD number
     |   +-- 0 CD dep
     |   +-- 50 CD number
     |   +-- 100 CD number
     |   +-- 150 CD quantmod
     |   +-- 200 CD quantmod
     |   +-- 250 CD number
     +-- 400 CD num
     |   +-- 350 CD number
     +-- Bandwidth NNP nn
     +-- -LRB- -LRB- punct
     +-- -RRB- -RRB- punct
     +-- Time NNP dep
         +-- -LRB- -LRB- punct
         +-- s NNP dep
         +-- -RRB- -RRB- punct
         +-- Bandwidth NNP dep
         |   +-- Bullet NNP nn
         |   +-- High NNP nn
         |   +-- Bandwidth NNP nn
         |   +-- Medium NNP nn
         |   +-- Bottleneck NNP nn
         |   +-- tree NN nn
         |   +-- Low NNP nn
         +-- Figure NN dep
             +-- 12 CD num
Input: disruption in service , Bullet nodes are able compensate for this by receiving data from peers throughout the outage .
Parse:
compensate NN ROOT
 +-- disruption NN nsubj
 |   +-- in IN prep
 |       +-- service NN pobj
 +-- , , punct
 +-- nodes NNS nsubj
 |   +-- Bullet NNP nn
 +-- are VBP cop
 +-- able JJ amod
 +-- for IN prep
 |   +-- this DT pobj
 +-- by IN prep
 |   +-- receiving VBG pcomp
 |       +-- data NNS dobj
 |       |   +-- from IN prep
 |       |       +-- peers NNS pobj
 |       +-- throughout IN prep
 |           +-- outage NN pobj
 |               +-- the DT det
 +-- . . punct
Input: Because Bullet , and , more importantly , RanSub makes use of an underlying tree overlay , part of Bullet '' s failure recovery properties will depend on the failure recovery behavior of the underlying tree .
Parse:
depend VB ROOT
 +-- makes VBZ advcl
 |   +-- Because IN mark
 |   +-- Bullet NNP nsubj
 |   |   +-- , , punct
 |   |   +-- and CC cc
 |   |   +-- importantly RB advmod
 |   |   |   +-- more RBR advmod
 |   |   +-- RanSub NNP appos
 |   +-- use NN dobj
 |       +-- of IN prep
 |           +-- overlay NN pobj
 |               +-- an DT det
 |               +-- underlying JJ amod
 |               +-- tree NN nn
 +-- , , punct
 +-- part NN nsubj
 |   +-- of IN prep
 |       +-- properties NNS pobj
 |           +-- Bullet NNP poss
 |           |   +-- '' '' punct
 |           |   +-- s POS possessive
 |           +-- failure NN nn
 |           +-- recovery NN nn
 +-- will MD aux
 +-- on IN prep
 |   +-- behavior NN pobj
 |       +-- the DT det
 |       +-- recovery NN nn
 |       |   +-- failure NN nn
 |       +-- of IN prep
 |           +-- tree NN pobj
 |               +-- the DT det
 |               +-- underlying VBG amod
 +-- . . punct
Input: For the purposes of this discussion , we simply assume the worst case scenario where an underlying tree has no failure recovery .
Parse:
assume VBP ROOT
 +-- For IN prep
 |   +-- purposes NNS pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- discussion NN pobj
 |               +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- simply RB advmod
 +-- scenario NN dobj
 |   +-- the DT det
 |   +-- case NN nn
 |   |   +-- worst JJS amod
 |   +-- has VBZ rcmod
 |       +-- where WRB advmod
 |       +-- tree NN nsubj
 |       |   +-- an DT det
 |       |   +-- underlying VBG amod
 |       +-- recovery NN dobj
 |           +-- no DT det
 |           +-- failure NN nn
 +-- . . punct
Input: In our failure experiments , we fail one of root '' s children -LRB- with 110 of the total 1000 nodes as descendants -RRB- 250 seconds after data streaming is started .
Parse:
fail VBP ROOT
 +-- In IN prep
 |   +-- experiments NNS pobj
 |       +-- our PRP$ poss
 |       +-- failure NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- children NNS iobj
 |   +-- one CD poss
 |   |   +-- of IN prep
 |   |   |   +-- root NN pobj
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- with IN prep
 |       +-- -LRB- -LRB- punct
 |       +-- 110 CD pobj
 |       |   +-- of IN prep
 |       |       +-- nodes NNS pobj
 |       |           +-- the DT det
 |       |           +-- total JJ amod
 |       |           +-- 1000 CD num
 |       |           +-- as IN prep
 |       |               +-- descendants NNS pobj
 |       +-- -RRB- -RRB- punct
 +-- seconds NNS dobj
 |   +-- 250 CD num
 +-- started VBN advcl
 |   +-- after IN mark
 |   +-- streaming NN nsubjpass
 |   |   +-- data NNS nn
 |   +-- is VBZ auxpass
 +-- . . punct
Input: By failing one of root '' s children , we are able to show Bullet '' s worst case performance under a single node failure .
Parse:
able JJ ROOT
 +-- By IN prep
 |   +-- failing VBG pcomp
 |       +-- children NNS dobj
 |           +-- one CD poss
 |               +-- of IN prep
 |               |   +-- root NN pobj
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- , , punct
 +-- we PRP nsubj
 +-- are VBP cop
 +-- show VB xcomp
 |   +-- to TO aux
 |   +-- performance NN dobj
 |       +-- Bullet NNP poss
 |       |   +-- '' '' punct
 |       |   +-- s POS possessive
 |       +-- worst JJS amod
 |       +-- case NN nn
 |       +-- under IN prep
 |           +-- failure NN pobj
 |               +-- a DT det
 |               +-- single JJ amod
 |               +-- node NN nn
 +-- . . punct
Input: In our first scenario , we disable failure detection in RanSub so that after a failure occurs , Bullet nodes request data only from their current peers .
Parse:
disable JJ ROOT
 +-- In IN prep
 |   +-- scenario NN pobj
 |       +-- our PRP$ poss
 |       +-- first JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- detection NN dobj
 |   +-- failure NN nn
 +-- in IN prep
 |   +-- RanSub NNP pobj
 +-- request NN advcl
 |   +-- so IN mark
 |   +-- that IN mark
 |   +-- occurs VBZ advcl
 |   |   +-- after IN mark
 |   |   +-- failure NN nsubj
 |   |       +-- a DT det
 |   +-- , , punct
 |   +-- nodes NNS nsubj
 |   |   +-- Bullet NNP nn
 |   +-- data NNS dobj
 |   +-- from IN prep
 |       +-- only RB advmod
 |       +-- peers NNS pobj
 |           +-- their PRP$ poss
 |           +-- current JJ amod
 +-- . . punct
Input: That is , at this point , RanSub stops functioning and no new peer relationships are created for the remainder of the run .
Parse:
stops VBZ ROOT
 +-- That DT nsubj
 +-- is VBZ cop
 +-- , , punct
 +-- at IN prep
 |   +-- point NN pobj
 |       +-- this DT det
 +-- RanSub NNP nsubj
 +-- functioning VBG xcomp
 +-- and CC cc
 +-- created VBN conj
 |   +-- relationships NNS nsubjpass
 |   |   +-- no DT det
 |   |   +-- new JJ amod
 |   |   +-- peer NN nn
 |   +-- are VBP auxpass
 |   +-- for IN prep
 |       +-- remainder NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- run NN pobj
 |                   +-- the DT det
 +-- . . punct
Input: Figure 13 shows Bullet '' s achieved bandwidth over time for this case .
Parse:
shows NNS ROOT
 +-- Figure NN nsubj
 |   +-- 13 CD num
 +-- bandwidth NN dobj
 |   +-- Bullet NNP poss
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- achieved VBN amod
 +-- over IN prep
 |   +-- time NN pobj
 +-- for IN prep
 |   +-- case NN pobj
 |       +-- this DT det
 +-- . . punct
Input: While the average achieved rate drops from 500 Kbps to 350 Kbps , most nodes -LRB- including the descendants of the failed root child -RRB- are able to recover a large portion of the data rate .
Parse:
able JJ ROOT
 +-- drops NNS advcl
 |   +-- While IN mark
 |   +-- rate NN nsubj
 |   |   +-- the DT det
 |   |   +-- average JJ amod
 |   |   +-- achieved VBN amod
 |   +-- from IN prep
 |   |   +-- Kbps NNS pobj
 |   |       +-- 500 CD num
 |   +-- to IN prep
 |       +-- Kbps NNS pobj
 |           +-- 350 CD num
 +-- , , punct
 +-- nodes NNS nsubj
 |   +-- most JJS amod
 |   +-- -LRB- -LRB- punct
 |   +-- including VBG prep
 |   |   +-- descendants NNS pobj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- child NN pobj
 |   |               +-- the DT det
 |   |               +-- failed JJ amod
 |   |               +-- root NN nn
 |   +-- -RRB- -RRB- punct
 +-- are VBP cop
 +-- recover VB xcomp
 |   +-- to TO aux
 |   +-- portion NN dobj
 |       +-- a DT det
 |       +-- large JJ amod
 |       +-- of IN prep
 |           +-- rate NN pobj
 |               +-- the DT det
 |               +-- data NN nn
 +-- . . punct
Input: Next , we enable RanSub failure detection that recognizes a node '' s failure when a RanSub epoch has lasted longer than the predetermined maximum -LRB- 5 seconds for this test -RRB- .
Parse:
enable VBP ROOT
 +-- Next RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- detection NN dobj
 |   +-- RanSub NNP nn
 |   +-- failure NN nn
 |   +-- recognizes VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- failure NN dobj
 |       |   +-- node NN poss
 |       |       +-- a DT det
 |       |       +-- '' '' punct
 |       |       +-- s POS possessive
 |       +-- lasted VBN advcl
 |           +-- when WRB advmod
 |           +-- epoch NN nsubj
 |           |   +-- a DT det
 |           |   +-- RanSub NNP nn
 |           +-- has VBZ aux
 |           +-- longer RBR advmod
 |               +-- than IN prep
 |                   +-- maximum NN pobj
 |                       +-- the DT det
 |                       +-- predetermined JJ amod
 |                       +-- -LRB- -LRB- punct
 |                       +-- seconds NNS dep
 |                       |   +-- 5 CD num
 |                       |   +-- for IN prep
 |                       |       +-- test NN pobj
 |                       |           +-- this DT det
 |                       +-- -RRB- -RRB- punct
 +-- . . punct
Input: In this case , the root simply initiates the next distribute phase upon RanSub timeout .
Parse:
initiates VBZ ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- root NN nsubj
 |   +-- the DT det
 +-- simply RB advmod
 +-- phase NN dobj
 |   +-- the DT det
 |   +-- next JJ amod
 |   +-- distribute NN nn
 |   +-- upon IN prep
 |       +-- timeout NN pobj
 |           +-- RanSub NNP nn
 +-- . . punct
Input: The net result is that nodes that are not descendants of the failed node will continue to receive updated random subsets allowing them to peer with appropriate nodes reflecting the new network conditions .
Parse:
is VBZ ROOT
 +-- result NN nsubj
 |   +-- The DT det
 |   +-- net JJ amod
 +-- continue VB ccomp
 |   +-- that IN mark
 |   +-- nodes NNS nsubj
 |   |   +-- descendants NNS rcmod
 |   |       +-- that WDT nsubj
 |   |       +-- are VBP cop
 |   |       +-- not RB neg
 |   |       +-- of IN prep
 |   |           +-- node NN pobj
 |   |               +-- the DT det
 |   |               +-- failed VBN amod
 |   +-- will MD aux
 |   +-- receive VB xcomp
 |       +-- to TO aux
 |       +-- subsets NNS dobj
 |           +-- updated VBN amod
 |           +-- random JJ amod
 |           +-- allowing VBG partmod
 |               +-- peer VB xcomp
 |                   +-- them PRP nsubj
 |                   +-- to TO aux
 |                   +-- with IN prep
 |                       +-- nodes NNS pobj
 |                           +-- appropriate JJ amod
 |                           +-- reflecting VBG partmod
 |                               +-- conditions NNS dobj
 |                                   +-- the DT det
 |                                   +-- new JJ amod
 |                                   +-- network NN nn
 +-- . . punct
Input: As shown in Figure 14 , the failure causes a negligible disruption in performance .
Parse:
causes VBZ ROOT
 +-- shown VBN advcl
 |   +-- As IN mark
 |   +-- in IN prep
 |       +-- Figure NNP pobj
 |           +-- 14 CD num
 +-- , , punct
 +-- failure NN nsubj
 |   +-- the DT det
 +-- disruption NN dobj
 |   +-- a DT det
 |   +-- negligible JJ amod
 |   +-- in IN prep
 |       +-- performance NN pobj
 +-- . . punct
Input: With RanSub failure detection enabled , nodes quickly learn of other nodes from which to receive data .
Parse:
learn VBP ROOT
 +-- enabled VBD advcl
 |   +-- With IN mark
 |   +-- detection NN nsubj
 |       +-- RanSub NNP nn
 |       +-- failure NN nn
 +-- , , punct
 +-- nodes NNS nsubj
 +-- quickly RB advmod
 +-- of IN prep
 |   +-- nodes NNS pobj
 |       +-- other JJ amod
 |       +-- receive VB infmod
 |           +-- from IN prep
 |           |   +-- which WDT pobj
 |           +-- to TO aux
 |           +-- data NNS dobj
 +-- . . punct
Input: Once such recovery completes , the descendants of the failed node use their already established peer relationships to compensate for their ancestor '' s failure .
Parse:
use VBP ROOT
 +-- completes NNS advcl
 |   +-- Once IN mark
 |   +-- recovery NN nsubj
 |       +-- such JJ amod
 +-- , , punct
 +-- descendants NNS nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- node NN pobj
 |           +-- the DT det
 |           +-- failed VBN amod
 +-- relationships NNS dobj
 |   +-- their PRP$ poss
 |   +-- established VBN amod
 |   |   +-- already RB advmod
 |   +-- peer NN amod
 +-- compensate VB xcomp
 |   +-- to TO aux
 |   +-- for IN prep
 |       +-- failure NN pobj
 |           +-- ancestor NN poss
 |               +-- their PRP$ poss
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- . . punct
Input: Hence , because Bullet is an overlay mesh , its reliability characteristics far exceed that of typical overlay distribution trees .
Parse:
exceed VBP ROOT
 +-- Hence RB advmod
 +-- , , punct
 +-- mesh NN advcl
 |   +-- because IN mark
 |   +-- Bullet NNP nsubj
 |   +-- is VBZ cop
 |   +-- an DT det
 |   +-- overlay JJ amod
 +-- characteristics NNS nsubj
 |   +-- its PRP$ poss
 |   +-- reliability NN nn
 +-- far RB advmod
 +-- that DT dobj
 |   +-- of IN prep
 |       +-- trees NNS pobj
 |           +-- typical JJ amod
 |           +-- overlay NN nn
 |           +-- distribution NN nn
 +-- . . punct
Input: 4.7 PlanetLab This section contains results from the deployment of Bullet over the PlanetLab -LRB- 31 -RRB- wide area network testbed .
Parse:
contains VBZ ROOT
 +-- section NN nsubj
 |   +-- 4.7 CD num
 |   +-- PlanetLab NNP nn
 |   +-- This DT nn
 +-- results NNS dobj
 |   +-- from IN prep
 |       +-- testbed VBN pobj
 |           +-- 31 CD nn
 |           |   +-- deployment NN dep
 |           |   |   +-- the DT det
 |           |   |   +-- of IN prep
 |           |   |   |   +-- Bullet NNP pobj
 |           |   |   +-- over IN prep
 |           |   |       +-- PlanetLab NNP pobj
 |           |   |           +-- the DT det
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- -RRB- -RRB- punct
 |           +-- area NN nn
 |           |   +-- wide JJ amod
 |           +-- network NN nn
 +-- . . punct
Input: For 293 0 200 400 600 800 1000 0 50 100 150 200 250 300 350 400 Bandwidth -LRB- Kbps -RRB- Time -LRB- s -RRB- Bandwidth received Useful total From parent Figure 13
Parse:
For IN ROOT
 +-- 300 CD pobj
     +-- 293 CD number
     +-- 0 CD dep
     +-- 200 CD number
     +-- 400 CD quantmod
     +-- 600 CD quantmod
     +-- 800 CD number
     +-- 1000 CD number
     +-- 50 CD number
     +-- 100 CD number
     +-- 150 CD quantmod
     +-- 200 CD quantmod
     +-- 250 CD number
     +-- 350 CD number
     +-- 400 CD prep
         +-- Bandwidth NNP dep
             +-- Bandwidth NNP dep
             +-- -LRB- -LRB- punct
             +-- Kbps NNS dep
             +-- -RRB- -RRB- punct
             +-- Time NNP dep
             +-- s NNP dep
             +-- received VBD partmod
                 +-- total NN dobj
                 |   +-- Useful JJ amod
                 +-- From IN prep
                     +-- Figure NN pobj
                         +-- parent NN nn
                         +-- 13 CD num
Input: 0 200 400 600 800 1000 0 50 100 150 200 250 300 350 400 Bandwidth -LRB- Kbps -RRB- Time -LRB- s -RRB- Bandwidth received Useful total From parent Figure 14
Parse:
received VBD ROOT
 +-- 0 NFP punct
 +-- Bandwidth NNP nsubj
 |   +-- 300 CD num
 |   |   +-- 200 CD number
 |   |   +-- 400 CD quantmod
 |   |   +-- 600 CD quantmod
 |   |   +-- 800 CD number
 |   |   +-- 1000 CD number
 |   |   +-- 0 CD dep
 |   |   +-- 50 CD number
 |   |   +-- 100 CD number
 |   |   +-- 150 CD quantmod
 |   |   +-- 200 CD quantmod
 |   |   +-- 250 CD number
 |   +-- 400 CD num
 |   |   +-- 350 CD number
 |   +-- Bandwidth NNP nn
 |   +-- -LRB- -LRB- punct
 |   +-- Kbps NNS nn
 |   +-- -RRB- -RRB- punct
 |   +-- Time NNP nn
 |   +-- s NNP nn
 +-- total NN dobj
 |   +-- Useful JJ amod
 +-- From IN prep
     +-- Figure NN pobj
         +-- parent NN nn
         +-- 14 CD num
Input: our first experiment , we chose 47 nodes for our deployment , with no two machines being deployed at the same site .
Parse:
chose VBD ROOT
 +-- experiment NN nsubj
 |   +-- our PRP$ poss
 |   +-- first JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- nodes NNS dobj
 |   +-- 47 CD num
 +-- for IN prep
 |   +-- deployment NN pobj
 |       +-- our PRP$ poss
 +-- with IN prep
 |   +-- machines NNS pobj
 |       +-- no DT det
 |       +-- two CD num
 |       +-- deployed VBN partmod
 |           +-- being VBG auxpass
 |           +-- at IN prep
 |               +-- site NN pobj
 |                   +-- the DT det
 |                   +-- same JJ amod
 +-- . . punct
Input: Since there is currently ample bandwidth available throughout the PlanetLab overlay -LRB- a characteristic not necessarily representative of the Internet at large -RRB- , we designed this experiment to show that Bullet can achieve higher bandwidth than an overlay tree when the source is constrained , for instance in cases of congestion on its outbound access link , or of overload by a flash crowd .
Parse:
designed VBD ROOT
 +-- is VBZ advcl
 |   +-- Since IN mark
 |   +-- there EX expl
 |   +-- currently RB advmod
 |   +-- bandwidth NN nsubj
 |       +-- ample JJ amod
 |       +-- available JJ amod
 |           +-- throughout IN prep
 |               +-- overlay NN pobj
 |                   +-- the DT det
 |                   +-- PlanetLab NNP nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- representative JJ dep
 |                   |   +-- a DT det
 |                   |   +-- characteristic JJ amod
 |                   |   +-- not RB neg
 |                   |   +-- necessarily RB advmod
 |                   |   +-- of IN prep
 |                   |   |   +-- Internet NN pobj
 |                   |   |       +-- the DT det
 |                   |   +-- at IN prep
 |                   |       +-- large JJ pobj
 |                   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- experiment NN dobj
 |   +-- this DT det
 +-- show VB xcomp
 |   +-- to TO aux
 |   +-- achieve VB ccomp
 |       +-- that IN mark
 |       +-- Bullet NNP nsubj
 |       +-- can MD aux
 |       +-- bandwidth NN dobj
 |       |   +-- higher JJR amod
 |       |   +-- than IN prep
 |       |       +-- tree NN pobj
 |       |           +-- an DT det
 |       |           +-- overlay NN nn
 |       +-- constrained VBN advcl
 |       |   +-- when WRB advmod
 |       |   +-- source NN nsubjpass
 |       |   |   +-- the DT det
 |       |   +-- is VBZ auxpass
 |       +-- , , punct
 |       +-- for IN prep
 |       |   +-- instance NN pobj
 |       +-- in IN prep
 |       |   +-- cases NNS pobj
 |       |   |   +-- of IN prep
 |       |   |       +-- congestion NN pobj
 |       |   |           +-- on IN prep
 |       |   |               +-- link NN pobj
 |       |   |                   +-- its PRP$ poss
 |       |   |                   +-- outbound JJ amod
 |       |   |                   +-- access NN nn
 |       |   +-- , , punct
 |       |   +-- or CC cc
 |       |   +-- of IN conj
 |       |       +-- overload NN pobj
 |       +-- by IN prep
 |           +-- crowd NN pobj
 |               +-- a DT det
 |               +-- flash NN nn
 +-- . . punct
Input: We did this by choosing a root in Europe connected to PlanetLab with fairly low bandwidth .
Parse:
did VBD ROOT
 +-- We PRP nsubj
 +-- this DT dobj
 +-- by IN prep
 |   +-- choosing VBG pcomp
 |       +-- root NN dobj
 |           +-- a DT det
 |           +-- in IN prep
 |           |   +-- Europe NNP pobj
 |           +-- connected VBN partmod
 |               +-- to IN prep
 |               |   +-- PlanetLab NNP pobj
 |               +-- with IN prep
 |                   +-- bandwidth NN pobj
 |                       +-- low JJ amod
 |                           +-- fairly RB advmod
 +-- . . punct
Input: The node we selected was in Italy -LRB- cs.unibo.it -RRB- and we had 10 other overlay nodes in Europe .
Parse:
was VBD ROOT
 +-- node NN nsubj
 |   +-- The DT det
 |   +-- selected VBD rcmod
 |       +-- we PRP nsubj
 +-- in IN prep
 |   +-- Italy NNP pobj
 |       +-- -LRB- -LRB- punct
 |       +-- cs.unibo.it NNP dep
 |       +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- had VBD conj
 |   +-- we PRP nsubj
 |   +-- nodes NNS dobj
 |       +-- 10 CD num
 |       +-- other JJ amod
 |       +-- overlay NN nn
 |       +-- in IN prep
 |           +-- Europe NNP pobj
 +-- . . punct
Input: Without global knowledge of the topology in PlanetLab -LRB- and the Internet -RRB- , we are , of course , unable to produce our greedy bottleneck bandwidth tree for comparison .
Parse:
unable JJ ROOT
 +-- Without IN prep
 |   +-- knowledge NN pobj
 |       +-- global JJ amod
 |       +-- of IN prep
 |           +-- topology NN pobj
 |               +-- the DT det
 |               +-- in IN prep
 |               |   +-- PlanetLab NNP pobj
 |               +-- -LRB- -LRB- punct
 |               +-- and CC cc
 |               +-- Internet NN conj
 |               |   +-- the DT det
 |               +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- are VBP cop
 +-- of IN prep
 |   +-- course NN pobj
 +-- produce VB xcomp
 |   +-- to TO aux
 |   +-- tree NN dobj
 |   |   +-- our PRP$ poss
 |   |   +-- bottleneck NN nn
 |   |   |   +-- greedy JJ amod
 |   |   +-- bandwidth NN nn
 |   +-- for IN prep
 |       +-- comparison NN pobj
 +-- . . punct
Input: We ran Bullet over a random overlay tree for 300 seconds while attempting to stream at a rate of 1.5 Mbps .
Parse:
ran VBD ROOT
 +-- We PRP nsubj
 +-- Bullet NNP dobj
 +-- over IN prep
 |   +-- tree NN pobj
 |       +-- a DT det
 |       +-- random JJ amod
 |       +-- overlay NN nn
 +-- for IN prep
 |   +-- seconds NNS pobj
 |       +-- 300 CD num
 +-- attempting VBG advcl
 |   +-- while IN mark
 |   +-- stream VB xcomp
 |       +-- to TO aux
 |       +-- at IN prep
 |           +-- rate NN pobj
 |               +-- a DT det
 |               +-- of IN prep
 |                   +-- Mbps NNS pobj
 |                       +-- 1.5 CD num
 +-- . . punct
Input: We waited 50 seconds before starting to stream data to allow nodes to successfully join the tree .
Parse:
waited VBD ROOT
 +-- We PRP nsubj
 +-- seconds NNS dobj
 |   +-- 50 CD num
 +-- before IN prep
 |   +-- starting VBG pcomp
 |       +-- stream VB xcomp
 |           +-- to TO aux
 |           +-- data NNS dobj
 +-- allow VB xcomp
 |   +-- to TO aux
 |   +-- join VB xcomp
 |       +-- nodes NNS nsubj
 |       +-- to TO aux
 |       +-- successfully RB advmod
 |       +-- tree NN dobj
 |           +-- the DT det
 +-- . . punct
Input: We compare the performance of Bullet to data streaming over multiple handcrafted trees .
Parse:
compare VBP ROOT
 +-- We PRP nsubj
 +-- performance NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- Bullet NNP pobj
 +-- to IN prep
 |   +-- data NNS pobj
 |       +-- streaming VBG partmod
 |           +-- over IN prep
 |               +-- trees NNS pobj
 |                   +-- multiple JJ amod
 |                   +-- handcrafted VBN amod
 +-- . . punct
Input: Figure 15 shows our results for two such trees .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 15 CD num
 +-- results NNS dobj
 |   +-- our PRP$ poss
 |   +-- for IN prep
 |       +-- trees NNS pobj
 |           +-- two CD num
 |           +-- such JJ amod
 +-- . . punct
Input: The good tree has all nodes in Europe located high in the tree , close to the root .
Parse:
has VBZ ROOT
 +-- tree NN nsubj
 |   +-- The DT det
 |   +-- good JJ amod
 +-- nodes NNS dobj
 |   +-- all DT det
 |   +-- in IN prep
 |   |   +-- Europe NNP pobj
 |   +-- located VBN partmod
 |   |   +-- high RB advmod
 |   |   +-- in IN prep
 |   |       +-- tree NN pobj
 |   |           +-- the DT det
 |   +-- , , punct
 |   +-- close JJ amod
 |       +-- to IN prep
 |           +-- root NN pobj
 |               +-- the DT det
 +-- . . punct
Input: We used pathload -LRB- 20 -RRB- to measure the 0 200 400 600 800 1000 1200 0 50 100 150 200 250 Bandwidth -LRB- Kbps -RRB- Time -LRB- s -RRB- Bullet Good Tree Worst Tree Figure 15
Parse:
used VBD ROOT
 +-- We PRP nsubj
 +-- pathload NN dobj
 |   +-- -LRB- -LRB- punct
 |   +-- 20 CD dep
 |   +-- -RRB- -RRB- punct
 +-- measure VB xcomp
     +-- to TO aux
     +-- Kbps NNS dobj
         +-- the DT det
         +-- 200 CD num
         |   +-- 0 CD number
         |   +-- 200 CD number
         |   +-- 400 CD number
         |   +-- 600 CD quantmod
         |   +-- 800 CD dep
         |   +-- 1000 CD number
         |   +-- 1200 CD number
         |   +-- 0 CD dep
         |   +-- 50 CD number
         |   +-- 100 CD number
         |   +-- 150 CD number
         +-- 250 CD num
         +-- Bandwidth NNP nn
         +-- -LRB- -LRB- punct
         +-- -RRB- -RRB- punct
         +-- Figure NN dep
             +-- Tree NNP nn
             |   +-- Tree NNP nn
             |   |   +-- Bullet NNP nn
             |   |   |   +-- Time NNP nn
             |   |   |       +-- -LRB- -LRB- punct
             |   |   |       +-- s NNP dep
             |   |   |       +-- -RRB- -RRB- punct
             |   |   +-- Good NNP nn
             |   +-- Worst NNP nn
             +-- 15 CD num
Input: available bandwidth between the root and all other nodes .
Parse:
bandwidth NN ROOT
 +-- available JJ amod
 +-- between IN prep
 |   +-- root NN pobj
 |       +-- the DT det
 |       +-- and CC cc
 |       +-- nodes NNS conj
 |           +-- all DT det
 |           +-- other JJ amod
 +-- . . punct
Input: Nodes with high bandwidth measurements were placed close to the root .
Parse:
placed VBN ROOT
 +-- Nodes NNS nsubjpass
 |   +-- with IN prep
 |       +-- measurements NNS pobj
 |           +-- bandwidth NN nn
 |               +-- high JJ amod
 +-- were VBD auxpass
 +-- close JJ advmod
 |   +-- to IN prep
 |       +-- root NN pobj
 |           +-- the DT det
 +-- . . punct
Input: In this case , we are able to achieve a bandwidth of approximately 300 Kbps .
Parse:
able JJ ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- are VBP cop
 +-- achieve VB xcomp
 |   +-- to TO aux
 |   +-- bandwidth NN dobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- Kbps NNS pobj
 |               +-- 300 CD num
 |                   +-- approximately RB quantmod
 +-- . . punct
Input: The worst tree was created by setting the root '' s children to be the three nodes with the worst bandwidth characteristics from the root as measured by pathload .
Parse:
created VBN ROOT
 +-- tree NN nsubjpass
 |   +-- The DT det
 |   +-- worst JJS amod
 +-- was VBD auxpass
 +-- by IN prep
 |   +-- setting VBG pcomp
 |       +-- children NNS dobj
 |       |   +-- root NN poss
 |       |       +-- the DT det
 |       |       +-- '' '' punct
 |       |       +-- s POS possessive
 |       +-- nodes NNS xcomp
 |           +-- to TO aux
 |           +-- be VB cop
 |           +-- the DT det
 |           +-- three CD num
 |           +-- with IN prep
 |           |   +-- characteristics NNS pobj
 |           |       +-- the DT det
 |           |       +-- worst JJS amod
 |           |       +-- bandwidth JJ nn
 |           +-- from IN prep
 |           |   +-- root NN pobj
 |           |       +-- the DT det
 |           +-- measured VBN advcl
 |               +-- as IN mark
 |               +-- by IN prep
 |                   +-- pathload NN pobj
 +-- . . punct
Input: All subsequent levels in the tree were set in this fashion .
Parse:
set VBN ROOT
 +-- levels NNS nsubjpass
 |   +-- All DT det
 |   +-- subsequent JJ amod
 |   +-- in IN prep
 |       +-- tree NN pobj
 |           +-- the DT det
 +-- were VBD auxpass
 +-- in IN prep
 |   +-- fashion NN pobj
 |       +-- this DT det
 +-- . . punct
Input: For comparison , we replaced all nodes in Europe from our topology with nodes in the US , creating a topology that only included US nodes with high bandwidth characteristics .
Parse:
replaced VBD ROOT
 +-- For IN prep
 |   +-- comparison NN pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- nodes NNS dobj
 |   +-- all DT det
 |   +-- in IN prep
 |       +-- Europe NNP pobj
 +-- from IN prep
 |   +-- topology NN pobj
 |       +-- our PRP$ poss
 |       +-- with IN prep
 |           +-- nodes NNS pobj
 |               +-- in IN prep
 |                   +-- US NNP pobj
 |                       +-- the DT det
 +-- creating VBG partmod
 |   +-- topology NN dobj
 |       +-- a DT det
 |       +-- included VBD rcmod
 |           +-- that WDT nsubj
 |           +-- only RB advmod
 |           +-- nodes NNS dobj
 |               +-- US NNP nn
 |               +-- with IN prep
 |                   +-- characteristics NNS pobj
 |                       +-- bandwidth NN nn
 |                           +-- high JJ amod
 +-- . . punct
Input: As expected , Bullet was able to achieve the full 1.5 Mbps rate in this case .
Parse:
able JJ ROOT
 +-- expected VBN advcl
 |   +-- As IN mark
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- was VBD cop
 +-- achieve VB xcomp
 |   +-- to TO aux
 |   +-- rate NN dobj
 |   |   +-- the DT det
 |   |   +-- full JJ amod
 |   |   +-- Mbps NNS nn
 |   |       +-- 1.5 CD num
 |   +-- in IN prep
 |       +-- case NN pobj
 |           +-- this DT det
 +-- . . punct
Input: A well constructed tree over this highbandwidth topology yielded slightly lower than 1.5 Mbps , verifying that our approach does not sacrifice performance under high bandwidth conditions and improves performance under constrained bandwidth scenarios. .
Parse:
yielded VBD ROOT
 +-- tree NN nsubj
 |   +-- A DT det
 |   +-- constructed VBN amod
 |   |   +-- well RB advmod
 |   +-- over IN prep
 |       +-- topology NN pobj
 |           +-- this DT det
 |           +-- highbandwidth JJ amod
 +-- Mbps NNS dobj
 |   +-- 1.5 CD num
 |       +-- slightly RB quantmod
 |       +-- lower JJR quantmod
 |       +-- than IN quantmod
 +-- , , punct
 +-- verifying VBG partmod
 |   +-- sacrifice VB ccomp
 |       +-- that IN mark
 |       +-- approach NN nsubj
 |       |   +-- our PRP$ poss
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- performance NN dobj
 |       |   +-- under IN prep
 |       |       +-- conditions NNS pobj
 |       |           +-- bandwidth NN nn
 |       |               +-- high JJ amod
 |       +-- and CC cc
 |       +-- improves VBZ conj
 |           +-- performance NN dobj
 |               +-- under IN prep
 |                   +-- scenarios. NNS pobj
 |                       +-- constrained JJ amod
 |                       +-- bandwidth NN nn
 +-- . . punct
