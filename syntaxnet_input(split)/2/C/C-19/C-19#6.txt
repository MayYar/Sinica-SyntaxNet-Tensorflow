Input: PROTOCOL FRAMEWORK DESIGN We show in this section the advantages of service based protocol frameworks over event based protocol frameworks .
Parse:
show VBP ROOT
 +-- DESIGN NNP nsubj
 |   +-- PROTOCOL NNP nn
 |   +-- FRAMEWORK NNP nn
 +-- We PRP nsubj
 +-- in IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- advantages NNS dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- frameworks NNS pobj
 |   |       +-- based VBN amod
 |   |       |   +-- service NN dep
 |   |       +-- protocol NN nn
 |   +-- over IN prep
 |       +-- frameworks NNS pobj
 |           +-- based VBN amod
 |           |   +-- event NN dep
 |           +-- protocol NN nn
 +-- . . punct
Input: We structure our discussion in three parts .
Parse:
structure VBP ROOT
 +-- We PRP nsubj
 +-- discussion NN dobj
 |   +-- our PRP$ poss
 |   +-- in IN prep
 |       +-- parts NNS pobj
 |           +-- three CD num
 +-- . . punct
Input: Firstly , we present how protocol interactions are modeled in each of the protocol frameworks .
Parse:
present VBP ROOT
 +-- Firstly RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- modeled VBN ccomp
 |   +-- how WRB advmod
 |   +-- interactions NNS nsubjpass
 |   |   +-- protocol NN nn
 |   +-- are VBP auxpass
 |   +-- in IN prep
 |       +-- each DT pobj
 |           +-- of IN prep
 |               +-- frameworks NNS pobj
 |                   +-- the DT det
 |                   +-- protocol NN nn
 +-- . . punct
Input: Then , we discuss the composition of protocol modules in each of these frameworks .
Parse:
discuss VBP ROOT
 +-- Then RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- composition NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- modules NNS pobj
 |           +-- protocol NN nn
 |           +-- in IN prep
 |               +-- each DT pobj
 |                   +-- of IN prep
 |                       +-- frameworks NNS pobj
 |                           +-- these DT det
 +-- . . punct
Input: Finally , we present the problem of dynamic protocol replacement and the advantages of service interfaces in order to implement it .
Parse:
present VBP ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- problem NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- replacement NN pobj
 |   |       +-- dynamic JJ amod
 |   |       +-- protocol NN nn
 |   +-- and CC cc
 |   +-- advantages NNS conj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- interfaces NNS pobj
 |               +-- service NN nn
 +-- in IN prep
 |   +-- order NN pobj
 |       +-- implement VB infmod
 |           +-- to TO aux
 |           +-- it PRP dobj
 +-- . . punct
Input: The discussion is summarized in Table 1 .
Parse:
summarized VBN ROOT
 +-- discussion NN nsubjpass
 |   +-- The DT det
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- Table NNP pobj
 |       +-- 1 CD num
 +-- . . punct
Input: 5.1 Protocol Module Interactions A natural model of protocol interactions -LRB- as presented in Section 2 -RRB- facilitates the implementation of protocol modules .
Parse:
facilitates VBZ ROOT
 +-- Interactions NNP nsubj
 |   +-- 5.1 CD num
 |   +-- Protocol NNP nn
 |   +-- Module NNP nn
 |   +-- model NN dep
 |       +-- A DT det
 |       +-- natural JJ amod
 |       +-- of IN prep
 |       |   +-- interactions NNS pobj
 |       |       +-- protocol NN nn
 |       +-- presented VBN dep
 |           +-- -LRB- -LRB- punct
 |           +-- as IN mark
 |           +-- in IN prep
 |           |   +-- Section NN pobj
 |           |       +-- 2 CD num
 |           +-- -RRB- -RRB- punct
 +-- implementation NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- modules NNS pobj
 |           +-- protocol NN nn
 +-- . . punct
Input: For each protocol interaction , we show how it is modeled in both frameworks .
Parse:
show VBP ROOT
 +-- For IN prep
 |   +-- interaction NN pobj
 |       +-- each DT det
 |       +-- protocol NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- modeled VBN ccomp
 |   +-- how WRB advmod
 |   +-- it PRP nsubjpass
 |   +-- is VBZ auxpass
 |   +-- in IN prep
 |       +-- frameworks NNS pobj
 |           +-- both DT det
 +-- . . punct
Input: We also explain that an inadequate model may lead to problems .
Parse:
explain VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- lead VB ccomp
 |   +-- that IN mark
 |   +-- model NN nsubj
 |   |   +-- an DT det
 |   |   +-- inadequate JJ amod
 |   +-- may MD aux
 |   +-- to IN prep
 |       +-- problems NNS pobj
 +-- . . punct
Input: Requests .
Parse:
Requests NNS ROOT
 +-- . . punct
Input: In service based frameworks , a request is generated to a service interface .
Parse:
generated VBN ROOT
 +-- In IN prep
 |   +-- frameworks NNS pobj
 |       +-- based VBN amod
 |           +-- service NN dep
 +-- , , punct
 +-- request NN nsubjpass
 |   +-- a DT det
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- interface NN pobj
 |       +-- a DT det
 |       +-- service NN nn
 +-- . . punct
Input: Each request is handled by at most one executer , since we allow only one executer to be bound to a service interface at any time .
Parse:
handled VBN ROOT
 +-- request NN nsubjpass
 |   +-- Each DT det
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- executer NN pobj
 |       +-- one CD num
 |           +-- most RBS quantmod
 |               +-- at IN advmod
 +-- , , punct
 +-- allow VBP advcl
 |   +-- since IN mark
 |   +-- we PRP nsubj
 |   +-- bound VBN xcomp
 |       +-- executer NN nsubjpass
 |       |   +-- one CD num
 |       |       +-- only RB quantmod
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- to IN prep
 |       |   +-- interface NN pobj
 |       |       +-- a DT det
 |       |       +-- service NN nn
 |       +-- at IN prep
 |           +-- time NN pobj
 |               +-- any DT det
 +-- . . punct
Input: On the other hand , in event based frameworks , a protocol module emulates a request by triggering an event .
Parse:
emulates VBZ ROOT
 +-- On IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- in IN prep
 |   +-- frameworks NNS pobj
 |       +-- based VBN amod
 |           +-- event NN dep
 +-- module NN nsubj
 |   +-- a DT det
 |   +-- protocol NN nn
 +-- request NN dobj
 |   +-- a DT det
 +-- by IN prep
 |   +-- triggering VBG pcomp
 |       +-- event NN dobj
 |           +-- an DT det
 +-- . . punct
Input: There is no guarantee 1 The two service interfaces t in the left part of Figure 4 represent the same service interface t .
Parse:
is VBZ ROOT
 +-- There EX expl
 +-- guarantee NN nsubj
 |   +-- no DT det
 |   +-- 1 CD num
 |   +-- interfaces NNS dep
 |       +-- The DT det
 |       +-- two CD num
 |       +-- service NN nn
 |       +-- represent VBP rcmod
 |           +-- t NNP nsubj
 |           +-- in IN prep
 |           |   +-- part NN pobj
 |           |       +-- the DT det
 |           |       +-- left JJ amod
 |           |       +-- of IN prep
 |           |           +-- Figure NN pobj
 |           |               +-- 4 CD num
 |           +-- t NN dobj
 |               +-- the DT det
 |               +-- same JJ amod
 |               +-- interface NN nn
 |                   +-- service NN nn
 +-- . . punct
Input: The duplication is only to make the figure readable .
Parse:
is VBZ ROOT
 +-- duplication NN nsubj
 |   +-- The DT det
 +-- make VB xcomp
 |   +-- only RB advmod
 |   +-- to TO aux
 |   +-- readable JJ xcomp
 |       +-- figure NN nsubj
 |           +-- the DT det
 +-- . . punct
Input: 693 that this event is bound to only one handler , which may lead to programming errors .
Parse:
693 CD ROOT
 +-- bound VBN dep
 |   +-- that IN mark
 |   +-- event NN nsubjpass
 |   |   +-- this DT det
 |   +-- is VBZ auxpass
 |   +-- to TO prep
 |       +-- handler NN pobj
 |           +-- one CD num
 |           |   +-- only RB quantmod
 |           +-- , , punct
 |           +-- lead VB rcmod
 |               +-- which WDT nsubj
 |               +-- may MD aux
 |               +-- to IN prep
 |                   +-- errors NNS pobj
 |                       +-- programming NN nn
 +-- . . punct
Input: Replies .
Parse:
Replies NNS ROOT
 +-- . . punct
Input: When a protocol module generates a reply in a service based framework , only the correct listener -LRB- identified at the time the corresponding request was issued -RRB- is executed .
Parse:
executed VBN ROOT
 +-- generates VBZ advcl
 |   +-- When WRB advmod
 |   +-- module NN nsubj
 |   |   +-- a DT det
 |   |   +-- protocol NN nn
 |   +-- reply NN dobj
 |       +-- a DT det
 |       +-- in IN prep
 |           +-- framework NN pobj
 |               +-- a DT det
 |               +-- based VBN amod
 |                   +-- service NN dep
 +-- , , punct
 +-- listener NN nsubjpass
 |   +-- only RB advmod
 |   +-- the DT det
 |   +-- correct JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- identified VBN partmod
 |   |   +-- issued VBN advcl
 |   |       +-- at IN prep
 |   |       |   +-- time NN pobj
 |   |       |       +-- the DT det
 |   |       +-- request NN nsubjpass
 |   |       |   +-- the DT det
 |   |       |   +-- corresponding JJ amod
 |   |       +-- was VBD auxpass
 |   +-- -RRB- -RRB- punct
 +-- is VBZ auxpass
 +-- . . punct
Input: This ensures that a request issued by some protocol module Qi , leads to replies handled by protocol modules Qj -LRB- i.e .
Parse:
ensures VBZ ROOT
 +-- This DT nsubj
 +-- leads VBZ ccomp
 |   +-- that IN mark
 |   +-- request NN nsubj
 |   |   +-- a DT det
 |   |   +-- issued VBN partmod
 |   |       +-- by IN prep
 |   |           +-- Qi NNP pobj
 |   |               +-- some DT det
 |   |               +-- protocol NN nn
 |   |               +-- module NN nn
 |   +-- , , punct
 |   +-- to IN prep
 |       +-- replies NNS pobj
 |           +-- handled VBN partmod
 |               +-- by IN prep
 |                   +-- modules NNS pobj
 |                       +-- protocol NN nn
 |                       +-- Qj , punct
 |                       +-- -LRB- -LRB- punct
 |                       +-- i.e NNP dep
 +-- . . punct
Input: protocol modules of the same protocol -RRB- .
Parse:
modules NNS ROOT
 +-- protocol NN nn
 +-- of IN prep
 |   +-- protocol NN pobj
 |       +-- the DT det
 |       +-- same JJ amod
 +-- -RRB- -RRB- punct
 +-- . . punct
Input: This is not the case in event based frameworks , as we now show .
Parse:
case NN ROOT
 +-- This DT nsubj
 +-- is VBZ cop
 +-- not RB neg
 +-- the DT det
 +-- in IN prep
 |   +-- frameworks NNS pobj
 |       +-- based VBN amod
 |           +-- event NN dep
 +-- , , punct
 +-- show VBP advcl
 |   +-- as IN mark
 |   +-- we PRP nsubj
 |   +-- now RB advmod
 +-- . . punct
Input: Consider protocol module Q1 in Figure 2 that triggers event g to emulate a request .
Parse:
Consider VB ROOT
 +-- module NN dobj
 |   +-- protocol NN nn
 |   +-- Q1 CD num
 |   +-- in IN prep
 |   |   +-- Figure NNP pobj
 |   |       +-- 2 CD num
 |   +-- triggers VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- g , dobj
 |       |   +-- event NN nn
 |       +-- emulate VB xcomp
 |           +-- to TO aux
 |           +-- request NN dobj
 |               +-- a DT det
 +-- . . punct
Input: Module S1 handles the request .
Parse:
handles VBZ ROOT
 +-- S1 CD nsubj
 |   +-- Module NNP nn
 +-- request NN dobj
 |   +-- the DT det
 +-- . . punct
Input: When modules Si triggers event h to emulate a reply -LRB- remember that a reply can occur in many stacks -RRB- , both modules Qi and Ri will handle the reply -LRB- they both contain a handler bound to h -RRB- .
Parse:
handle VB ROOT
 +-- triggers VBZ advcl
 |   +-- When WRB advmod
 |   +-- Si NNP nsubj
 |   |   +-- modules NNS nn
 |   +-- event NN dobj
 |   +-- h , punct
 |   +-- emulate VB xcomp
 |   |   +-- to TO aux
 |   |   +-- reply NN dobj
 |   |       +-- a DT det
 |   +-- remember VB parataxis
 |       +-- -LRB- -LRB- punct
 |       +-- occur VB ccomp
 |       |   +-- that IN mark
 |       |   +-- reply NN nsubj
 |       |   |   +-- a DT det
 |       |   +-- can MD aux
 |       |   +-- in IN prep
 |       |       +-- stacks NNS pobj
 |       |           +-- many JJ amod
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- Qi NNP nsubj
 |   +-- both DT preconj
 |   +-- modules VBZ nn
 |   +-- and CC cc
 |   +-- Ri NNP conj
 +-- will MD aux
 +-- reply NN dobj
 |   +-- the DT det
 +-- -LRB- -LRB- punct
 +-- contain VBP parataxis
 |   +-- they PRP nsubj
 |   |   +-- both DT det
 |   +-- handler NN dobj
 |       +-- a DT det
 |       +-- bound VBN partmod
 |           +-- to IN prep
 |               +-- h VB pobj
 +-- -RRB- -RRB- punct
 +-- . . punct
Input: This behavior is not correct
Parse:
correct JJ ROOT
 +-- behavior NN nsubj
 |   +-- This DT det
 +-- is VBZ cop
 +-- not RB neg
Input: Moreover , as modules Ri are not necessarily implemented to interact with modules Qi , this behavior may lead to errors .
Parse:
implemented VBN ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- as IN prep
 |   +-- modules NNS pobj
 +-- Ri NNP nsubjpass
 +-- are VBP auxpass
 +-- not RB neg
 +-- necessarily RB advmod
 +-- interact VB xcomp
 |   +-- to TO aux
 |   +-- with IN prep
 |       +-- Qi NNP pobj
 |           +-- modules NNS nn
 +-- lead VB ccomp
 |   +-- behavior NN nsubj
 |   |   +-- this DT det
 |   +-- may MD aux
 |   +-- to IN prep
 |       +-- errors NNS pobj
 +-- . . punct
Input: Solutions to solve this problem exist .
Parse:
exist VBP ROOT
 +-- Solutions NNS nsubj
 |   +-- solve VB infmod
 |       +-- to TO aux
 |       +-- problem NN dobj
 |           +-- this DT det
 +-- . . punct
Input: However , they introduce an unnecessary burden on the protocol programmers and the stack composer .
Parse:
introduce VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- they PRP nsubj
 +-- burden NN dobj
 |   +-- an DT det
 |   +-- unnecessary JJ amod
 |   +-- on IN prep
 |       +-- programmers NNS pobj
 |           +-- the DT det
 |           +-- protocol NN nn
 |           +-- and CC cc
 |           +-- composer NN conj
 |               +-- the DT det
 |               +-- stack NN nn
 +-- . . punct
Input: For instance , channels allow to route events to ensure that modules handle only events concerning them .
Parse:
allow VBP ROOT
 +-- For IN prep
 |   +-- instance NN pobj
 +-- , , punct
 +-- channels NNS nsubj
 +-- route VB xcomp
 |   +-- to TO aux
 |   +-- events NNS dobj
 |   +-- ensure VB xcomp
 |       +-- to TO aux
 |       +-- handle VB ccomp
 |           +-- that IN mark
 |           +-- modules NNS nsubj
 |           +-- events NNS dobj
 |               +-- only JJ amod
 |               +-- concerning VBG prep
 |                   +-- them PRP pobj
 +-- . . punct
Input: However , the protocol programmer must take channels into account when implementing protocols .
Parse:
take VB ROOT
 +-- However RB advmod
 +-- , , punct
 +-- programmer NN nsubj
 |   +-- the DT det
 |   +-- protocol NN nn
 +-- must MD aux
 +-- channels NNS dobj
 +-- into IN prep
 |   +-- account NN pobj
 +-- implementing VBG advcl
 |   +-- when WRB advmod
 |   +-- protocols NNS dobj
 +-- . . punct
Input: Moreover , the composition of complex stacks becomes more difficult due to the fact that the composer has to create many channels to ensure that modules handle events correctly .
Parse:
difficult JJ ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- composition NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- stacks NNS pobj
 |           +-- complex JJ amod
 +-- becomes VBZ cop
 +-- more RBR advmod
 +-- to IN prep
 |   +-- due IN mwe
 |   +-- fact NN pobj
 |       +-- the DT det
 |       +-- has VBZ ccomp
 |           +-- that IN mark
 |           +-- composer NN nsubj
 |           |   +-- the DT det
 |           +-- create VB xcomp
 |               +-- to TO aux
 |               +-- channels NNS dobj
 |                   +-- many JJ amod
 |                   +-- ensure VB infmod
 |                       +-- to TO aux
 |                       +-- handle VB ccomp
 |                           +-- that IN mark
 |                           +-- modules NNS nsubj
 |                           +-- events NNS dobj
 |                           +-- correctly RB advmod
 +-- . . punct
Input: An addition of special protocol modules -LRB- named connectors -RRB- for routing events is also not satisfactory , since it requires additional work from the composer and introduces overhead .
Parse:
satisfactory JJ ROOT
 +-- addition NN nsubj
 |   +-- An DT det
 |   +-- of IN prep
 |   |   +-- modules NNS pobj
 |   |       +-- special JJ amod
 |   |       +-- protocol NN nn
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- named VBN partmod
 |   |       |   +-- connectors NNS dep
 |   |       +-- -RRB- -RRB- punct
 |   +-- for IN prep
 |       +-- routing VBG pcomp
 |           +-- events NNS dobj
 +-- is VBZ cop
 +-- also RB advmod
 +-- not RB neg
 +-- , , punct
 +-- requires VBZ advcl
 |   +-- since IN mark
 |   +-- it PRP nsubj
 |   +-- work NN dobj
 |   |   +-- additional JJ amod
 |   +-- from IN prep
 |   |   +-- composer NN pobj
 |   |       +-- the DT det
 |   +-- and CC cc
 |   +-- introduces VBZ conj
 |       +-- overhead RB advmod
 +-- . . punct
Input: Notifications .
Parse:
Notifications NNS ROOT
 +-- . . punct
Input: Contrary to requests and replies , notifications are well modeled in event based frameworks .
Parse:
modeled VBN ROOT
 +-- to IN prep
 |   +-- Contrary JJ mwe
 |   +-- requests NNS pobj
 |       +-- and CC cc
 |       +-- replies NNS conj
 +-- , , punct
 +-- notifications NNS nsubjpass
 +-- are VBP auxpass
 +-- well RB advmod
 +-- in IN prep
 |   +-- frameworks NNS pobj
 |       +-- based VBN amod
 |           +-- event NN dep
 +-- . . punct
Input: The reason is that notifications correspond to the one to many communication scheme provided by events .
Parse:
is VBZ ROOT
 +-- reason NN nsubj
 |   +-- The DT det
 +-- correspond VBP ccomp
 |   +-- that IN mark
 |   +-- notifications NNS nsubj
 |   +-- to IN prep
 |       +-- scheme NN pobj
 |           +-- many JJ amod
 |           +-- communication NN nn
 |           +-- provided VBN partmod
 |               +-- by IN prep
 |                   +-- events NNS pobj
 +-- . . punct
Input: In service based frameworks , notifications are also well modeled .
Parse:
modeled VBN ROOT
 +-- In IN prep
 |   +-- frameworks NNS pobj
 |       +-- based VBN amod
 |           +-- service NN dep
 +-- , , punct
 +-- notifications NNS nsubjpass
 +-- are VBP auxpass
 +-- also RB advmod
 +-- well RB advmod
 +-- . . punct
Input: When a module generates a notification to a service interface si , all listeners bound to s are executed .
Parse:
executed VBN ROOT
 +-- generates VBZ advcl
 |   +-- When WRB advmod
 |   +-- module NN nsubj
 |   |   +-- a DT det
 |   +-- notification NN dobj
 |       +-- a DT det
 |       +-- to IN prep
 |           +-- si NNS pobj
 |               +-- a DT det
 |               +-- interface NN nn
 |                   +-- service NN nn
 +-- , , punct
 +-- listeners NNS nsubjpass
 |   +-- all DT det
 |   +-- bound VBN partmod
 |       +-- to IN prep
 |           +-- s PRP pobj
 +-- are VBP auxpass
 +-- . . punct
Input: Note that in this case , service interfaces provide the same pattern of communication as events .
Parse:
Note VB ROOT
 +-- provide VBP ccomp
 |   +-- that DT mark
 |   +-- in IN prep
 |   |   +-- case NN pobj
 |   |       +-- this DT det
 |   +-- , , punct
 |   +-- interfaces NNS nsubj
 |   |   +-- service NN nn
 |   +-- pattern NN dobj
 |       +-- the DT det
 |       +-- same JJ amod
 |       +-- of IN prep
 |           +-- communication NN pobj
 |               +-- as IN prep
 |                   +-- events NNS pobj
 +-- . . punct
Input: 5.2 Protocol Module Composition Replies -LRB- and sometimes notifications -RRB- are the results of a request .
Parse:
results NNS ROOT
 +-- Composition NNP nsubj
 |   +-- 5.2 LS num
 |   +-- Protocol NNP nn
 |   +-- Module NNP nn
 |   +-- Replies NNS dep
 |   +-- -LRB- -LRB- punct
 |   +-- and CC cc
 |   +-- notifications NNS conj
 |   |   +-- sometimes RB advmod
 |   +-- -RRB- -RRB- punct
 +-- are VBP cop
 +-- the DT det
 +-- of IN prep
 |   +-- request NN pobj
 |       +-- a DT det
 +-- . . punct
Input: Thus , there is a semantic link between them .
Parse:
is VBZ ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- there EX expl
 +-- link NN nsubj
 |   +-- a DT det
 |   +-- semantic JJ nn
 |   +-- between IN prep
 |       +-- them PRP pobj
 +-- . . punct
Input: The composer of protocol modules must preserve this link in order to compose correct stacks .
Parse:
preserve VB ROOT
 +-- composer NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- modules NNS pobj
 |           +-- protocol NN nn
 +-- must MD aux
 +-- link NN dobj
 |   +-- this DT det
 +-- in IN prep
 |   +-- order NN pobj
 |       +-- compose VB infmod
 |           +-- to TO aux
 |           +-- stacks NNS dobj
 |               +-- correct JJ amod
 +-- . . punct
Input: We explain now that service based frameworks provide a mechanism to preserve this link , while in event based frameworks , the lack of such mechanism leads to error prone composition .
Parse:
explain VBP ROOT
 +-- We PRP nsubj
 +-- now RB advmod
 +-- provide VBP ccomp
 |   +-- that IN mark
 |   +-- frameworks NNS nsubj
 |   |   +-- based VBN amod
 |   |       +-- service NN dep
 |   +-- mechanism NN dobj
 |       +-- a DT det
 |       +-- preserve VB infmod
 |           +-- to TO aux
 |           +-- link NN dobj
 |               +-- this DT det
 +-- , , punct
 +-- leads VBZ advcl
 |   +-- while IN mark
 |   +-- in IN prep
 |   |   +-- frameworks NNS pobj
 |   |       +-- based VBN amod
 |   |           +-- event NN dep
 |   +-- , , punct
 |   +-- lack NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- mechanism NN pobj
 |   |           +-- such JJ amod
 |   +-- error VB xcomp
 |       +-- to TO aux
 |       +-- composition NN dobj
 |           +-- prone JJ amod
 +-- . . punct
Input: In service based frameworks , requests , replies and notifications are issued to a service interface .
Parse:
issued VBN ROOT
 +-- In IN prep
 |   +-- frameworks NNS pobj
 |       +-- based VBN amod
 |           +-- service NN dep
 +-- , , punct
 +-- requests NNS nsubjpass
 |   +-- , , punct
 |   +-- replies NNS conj
 |   +-- and CC cc
 |   +-- notifications NNS conj
 +-- are VBP auxpass
 +-- to IN prep
 |   +-- interface NN pobj
 |       +-- a DT det
 |       +-- service NN nn
 +-- . . punct
Input: Thus , a service interface introduces a link between these interactions .
Parse:
introduces VBZ ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- interface NN nsubj
 |   +-- a DT det
 |   +-- service NN nn
 +-- link NN dobj
 |   +-- a DT det
 |   +-- between IN prep
 |       +-- interactions NNS pobj
 |           +-- these DT det
 +-- . . punct
Input: To compose a correct stack , the composer has to bound a listener to service interface si for each module that issues a request to si .
Parse:
has VBZ ROOT
 +-- compose VB advcl
 |   +-- To TO aux
 |   +-- stack NN dobj
 |       +-- a DT det
 |       +-- correct JJ amod
 +-- , , punct
 +-- composer NN nsubj
 |   +-- the DT det
 +-- bound VBN xcomp
 |   +-- to TO aux
 |   +-- listener NN dobj
 |   |   +-- a DT det
 |   +-- service NN xcomp
 |       +-- to TO aux
 |       +-- si VBZ dobj
 |       |   +-- interface NN nn
 |       +-- for IN prep
 |           +-- module NN pobj
 |               +-- each DT det
 |               +-- issues VBZ rcmod
 |                   +-- that WDT nsubj
 |                   +-- request NN dobj
 |                       +-- a DT det
 |                       +-- si VB infmod
 |                           +-- to IN aux
 +-- . . punct
Input: The same must be done for one executer that is part of a module that issues replies or notifications .
Parse:
done VBN ROOT
 +-- same JJ nsubjpass
 |   +-- The DT det
 +-- must MD aux
 +-- be VB auxpass
 +-- for IN prep
 |   +-- executer NN pobj
 |       +-- one CD num
 |       +-- part NN rcmod
 |           +-- that WDT nsubj
 |           +-- is VBZ cop
 |           +-- of IN prep
 |               +-- module NN pobj
 |                   +-- a DT det
 |                   +-- issues NNS rcmod
 |                       +-- that WDT nsubj
 |                       +-- replies NNS dobj
 |                           +-- or CC cc
 |                           +-- notifications NNS conj
 +-- . . punct
Input: Applying this simple methodology ensures that every request issued to a service interface si eventually results in several replies or notifications issued to the same service interface si .
Parse:
ensures VBZ ROOT
 +-- Applying VBG csubj
 |   +-- methodology NN dobj
 |       +-- this DT det
 |       +-- simple JJ amod
 +-- results NNS ccomp
 |   +-- that IN mark
 |   +-- request NN nsubj
 |   |   +-- every DT det
 |   |   +-- issued VBN partmod
 |   |       +-- to IN prep
 |   |           +-- interface NN pobj
 |   |               +-- a DT det
 |   |               +-- service NN nn
 |   |               +-- si FW dep
 |   +-- eventually RB advmod
 |   +-- in IN prep
 |       +-- replies NNS pobj
 |           +-- several JJ amod
 |           +-- or CC cc
 |           +-- notifications NNS conj
 |           +-- issued VBN partmod
 |               +-- to IN prep
 |                   +-- si NNS pobj
 |                       +-- the DT det
 |                       +-- same JJ amod
 |                       +-- interface NN nn
 |                           +-- service NN nn
 +-- . . punct
Input: In event based frameworks , all protocol interactions are issued through different events
Parse:
issued VBN ROOT
 +-- In IN prep
 |   +-- frameworks NNS pobj
 |       +-- based VBN amod
 |           +-- event NN dep
 +-- , , punct
 +-- interactions NNS nsubjpass
 |   +-- all DT det
 |   +-- protocol NN nn
 +-- are VBP auxpass
 +-- through IN prep
     +-- events NNS pobj
         +-- different JJ amod
Input: Thus , the composer of a protocol stack must know the meaning of each event in order to preserve the semantic link between replies -LRB- and notifications -RRB- and requests .
Parse:
know VB ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- composer NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- stack NN pobj
 |           +-- a DT det
 |           +-- protocol NN nn
 +-- must MD aux
 +-- meaning NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- event NN pobj
 |           +-- each DT det
 +-- in IN prep
 |   +-- order NN pobj
 |       +-- preserve VB infmod
 |           +-- to TO aux
 |           +-- link NN dobj
 |               +-- the DT det
 |               +-- semantic JJ nn
 |               +-- between IN prep
 |                   +-- replies NNS pobj
 |                       +-- -LRB- -LRB- punct
 |                       +-- and CC cc
 |                       +-- notifications NNS conj
 |                       |   +-- -RRB- -RRB- punct
 |                       +-- requests NNS conj
 +-- . . punct
Input: Moreover , nothing prevents from binding a handler that should handle a request to an event used to issue a reply .
Parse:
prevents VBZ ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- nothing NN nsubj
 +-- from IN prep
 |   +-- binding VBG pcomp
 |       +-- handler NN dobj
 |           +-- a DT det
 |           +-- handle VB rcmod
 |               +-- that WDT nsubj
 |               +-- should MD aux
 |               +-- request NN dobj
 |                   +-- a DT det
 |                   +-- to IN prep
 |                       +-- event NN pobj
 |                           +-- an DT det
 |                           +-- used VBN partmod
 |                               +-- issue VB xcomp
 |                                   +-- to TO aux
 |                                   +-- reply NN dobj
 |                                       +-- a DT det
 +-- . . punct
Input: Note that these problems can be partially solved by typing events and handlers .
Parse:
Note VB ROOT
 +-- solved VBN ccomp
 |   +-- that IN mark
 |   +-- problems NNS nsubjpass
 |   |   +-- these DT det
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- partially RB advmod
 |   +-- by IN prep
 |       +-- events NNS pobj
 |           +-- typing VBG nn
 |           +-- and CC cc
 |           +-- handlers NNS conj
 +-- . . punct
Input: However , it does not prevent from errors if there are several instances of the same event type .
Parse:
prevent VB ROOT
 +-- However RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- does VBZ aux
 +-- not RB neg
 +-- from IN prep
 |   +-- errors NNS pobj
 +-- are VBP advcl
 |   +-- if IN mark
 |   +-- there EX expl
 |   +-- instances NNS nsubj
 |       +-- several JJ amod
 |       +-- of IN prep
 |           +-- type NN pobj
 |               +-- the DT det
 |               +-- same JJ amod
 |               +-- event NN nn
 +-- . . punct
Input: Note that protocol composition is clearer in the protocol frameworks that are based on services , rather than on events .
Parse:
Note VB ROOT
 +-- clearer JJR ccomp
 |   +-- that DT mark
 |   +-- composition NN nsubj
 |   |   +-- protocol NN nn
 |   +-- is VBZ cop
 |   +-- in IN prep
 |       +-- frameworks NNS pobj
 |           +-- the DT det
 |           +-- protocol NN nn
 |           +-- based VBN rcmod
 |               +-- that WDT nsubjpass
 |               +-- are VBP auxpass
 |               +-- on IN prep
 |                   +-- services NNS pobj
 |                   +-- , , punct
 |                   +-- rather RB cc
 |                   |   +-- than IN mwe
 |                   +-- on IN conj
 |                       +-- events NNS pobj
 +-- . . punct
Input: The reason is that several events that are used to model different protocol interactions can be modeled by a single service interface .
Parse:
is VBZ ROOT
 +-- reason NN nsubj
 |   +-- The DT det
 +-- modeled VBN ccomp
 |   +-- that IN mark
 |   +-- events NNS nsubjpass
 |   |   +-- several JJ amod
 |   |   +-- used VBN rcmod
 |   |       +-- that WDT nsubjpass
 |   |       +-- are VBP auxpass
 |   |       +-- model VB xcomp
 |   |           +-- to TO aux
 |   |           +-- interactions NNS dobj
 |   |               +-- different JJ amod
 |   |               +-- protocol NN nn
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- by IN prep
 |       +-- interface NN pobj
 |           +-- a DT det
 |           +-- single JJ amod
 |           +-- service NN nn
 +-- . . punct
Input: 5.3 Dynamic Replacement of Protocols Dynamic replacement of protocols consists in switching on the fly between protocols that solve the same problem .
Parse:
consists VBZ ROOT
 +-- replacement NN nsubj
 |   +-- 5.3 CD num
 |   +-- Replacement NNP nn
 |   |   +-- Dynamic NNP amod
 |   |   +-- of IN prep
 |   |       +-- Protocols NNP pobj
 |   +-- Dynamic JJ amod
 |   +-- of IN prep
 |       +-- protocols NNS pobj
 +-- in IN prep
 |   +-- switching VBG pcomp
 |       +-- on IN prep
 |           +-- fly NN pobj
 |               +-- the DT det
 |               +-- between IN prep
 |                   +-- protocols NNS pobj
 |                       +-- solve VBP rcmod
 |                           +-- that WDT nsubj
 |                           +-- problem NN dobj
 |                               +-- the DT det
 |                               +-- same JJ amod
 +-- . . punct
Input: Replacement of a protocol P by a new protocol newP means that a protocol module Pi is replaced by newPi in every stack i .
Parse:
means VBZ ROOT
 +-- Replacement NN nsubj
 |   +-- of IN prep
 |       +-- P NN pobj
 |           +-- a DT det
 |           +-- protocol NN nn
 |           +-- by IN prep
 |               +-- newP NN pobj
 |                   +-- a DT det
 |                   +-- new JJ amod
 |                   +-- protocol NN nn
 +-- replaced VBN ccomp
 |   +-- that IN mark
 |   +-- module NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- protocol NN nn
 |   |   +-- Pi NNP appos
 |   +-- is VBZ auxpass
 |   +-- by IN prep
 |   |   +-- newPi NN pobj
 |   +-- in IN prep
 |   |   +-- stack NN pobj
 |   |       +-- every DT det
 |   +-- i PRP punct
 +-- . . punct
Input: This replacement is problematic since the local replacements -LRB- within stacks -RRB- must be synchronized in order to guarantee protocol correctness -LRB- 21 , 18 -RRB- .
Parse:
problematic JJ ROOT
 +-- replacement NN nsubj
 |   +-- This DT det
 +-- is VBZ cop
 +-- synchronized VBN advcl
 |   +-- since IN mark
 |   +-- replacements NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- local JJ amod
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- within IN prep
 |   |   |   +-- stacks NNS pobj
 |   |   +-- -RRB- -RRB- punct
 |   +-- must MD aux
 |   +-- be VB auxpass
 |   +-- in IN prep
 |       +-- order NN pobj
 |           +-- guarantee VB infmod
 |               +-- to TO aux
 |               +-- correctness NN dobj
 |                   +-- protocol NN nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- 21 CD dep
 |                   |   +-- , , punct
 |                   |   +-- 18 CD amod
 |                   +-- -RRB- -RRB- punct
 +-- . . punct
Input: Q1 Q1 R1 P1 1P 1newP 1 Repl ? P1 Repl ? P1 R newP1 gg h h '' g '' t Figure 5
Parse:
Repl NNP ROOT
 +-- Q1 LS dep
 +-- Q1 CD dep
 +-- R1 CD dep
 +-- P1 CD dep
 +-- 1P CD dep
 +-- 1newP CD dep
 +-- 1 CD num
 +-- ? . punct
 +-- Repl NNP dep
     +-- P1 CD num
     +-- ? . punct
     +-- R NN dep
         +-- P1 CD num
         +-- newP1 CD dobj
             +-- h NNP dep
                 +-- gg FW nn
                 +-- h NN nn
                 +-- g UH dep
                 |   +-- '' '' punct
                 +-- Figure NN dep
                     +-- t NN nn
                     +-- 5 CD num
Input: -LRB- Other solutions , e.g .
Parse:
e.g '' ROOT
 +-- -LRB- -LRB- punct
 +-- solutions NNS nsubj
 |   +-- Other JJ amod
 +-- , , punct
 +-- . . punct
Input: in -LRB- 11 -RRB- , are more complex. -RRB- In Fig .
Parse:
complex. JJ ROOT
 +-- in IN prep
 |   +-- 11 CD pobj
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- are VBP cop
 +-- more RBR advmod
 +-- -RRB- -RRB- punct
 +-- In IN prep
 |   +-- Fig NNP pobj
 +-- . . punct
Input: 5 , we show how this interception can be implemented in protocol frameworks that are based on services -LRB- in the left part of the figure -RRB- and events -LRB- in the right part of the figure -RRB- .
Parse:
show VBP ROOT
 +-- 5 CD nsubj
 +-- , , punct
 +-- we PRP nsubj
 +-- implemented VBN ccomp
 |   +-- how WRB advmod
 |   +-- interception NN nsubjpass
 |   |   +-- this DT det
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- in IN prep
 |       +-- frameworks NNS pobj
 |           +-- protocol NN nn
 |           +-- based VBN rcmod
 |               +-- that WDT nsubjpass
 |               +-- are VBP auxpass
 |               +-- on IN prep
 |                   +-- services NNS pobj
 |                       +-- -LRB- -LRB- punct
 |                       +-- in IN prep
 |                       |   +-- part NN pobj
 |                       |       +-- the DT det
 |                       |       +-- left JJ amod
 |                       |       +-- of IN prep
 |                       |           +-- figure NN pobj
 |                       |               +-- the DT det
 |                       +-- -RRB- -RRB- punct
 |                       +-- and CC cc
 |                       +-- events NNS conj
 |                           +-- -LRB- -LRB- punct
 |                           +-- in IN prep
 |                           |   +-- part NN pobj
 |                           |       +-- the DT det
 |                           |       +-- right JJ amod
 |                           |       +-- of IN prep
 |                           |           +-- figure NN pobj
 |                           |               +-- the DT det
 |                           +-- -RRB- -RRB- punct
 +-- . . punct
Input: The two sided arrows point to the protocol modules P1 and newP1 that are switched .
Parse:
sided VBD ROOT
 +-- two CD nsubj
 |   +-- The DT det
 +-- point NN dobj
 |   +-- arrows NNS nn
 +-- to IN prep
 |   +-- modules NNS pobj
 |       +-- the DT det
 |       +-- protocol NN nn
 |       +-- P1 CD dep
 |       |   +-- and CC cc
 |       |   +-- newP1 CD conj
 |       +-- switched VBN rcmod
 |           +-- that WDT nsubjpass
 |           +-- are VBP auxpass
 +-- . . punct
Input: It can be seen that the approach that uses the Service Interface mechanism has advantages .
Parse:
seen VBN ROOT
 +-- It PRP nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- has VBZ ccomp
 |   +-- that IN mark
 |   +-- approach NN nsubj
 |   |   +-- the DT det
 |   |   +-- uses VBZ rcmod
 |   |       +-- that WDT nsubj
 |   |       +-- mechanism NN dobj
 |   |           +-- the DT det
 |   |           +-- Interface NNP nn
 |   |               +-- Service NNP nn
 |   +-- advantages NNS dobj
 +-- . . punct
Input: The intercepting module Repl P1 has an interceptor bound to service interface t that intercepts every request handled by modules P1 and all replies and notifications issued by P1 .
Parse:
has VBZ ROOT
 +-- module NN nsubj
 |   +-- The DT det
 |   +-- intercepting VBG amod
 |   +-- P1 PRP dep
 |       +-- Repl NNP nn
 +-- interceptor NN dobj
 |   +-- an DT det
 |   +-- bound VBN partmod
 |   |   +-- service VB xcomp
 |   |       +-- to TO aux
 |   |       +-- t NN dobj
 |   |           +-- interface NN nn
 |   +-- intercepts NNS rcmod
 |       +-- that WDT nsubj
 |       +-- request NN dobj
 |           +-- every DT det
 |           +-- handled VBN partmod
 |               +-- by IN prep
 |                   +-- modules NNS pobj
 |                       +-- P1 CD num
 |                       +-- and CC cc
 |                       +-- replies NNS conj
 |                           +-- all DT det
 |                           +-- and CC cc
 |                           +-- notifications NNS conj
 |                           +-- issued VBN partmod
 |                               +-- by IN prep
 |                                   +-- P1 CD pobj
 +-- . . punct
Input: The code of the module P1 can therefore remain unchanged .
Parse:
unchanged JJ ROOT
 +-- code NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- P1 NNS pobj
 |           +-- the DT det
 |           +-- module NN nn
 +-- can MD aux
 +-- therefore RB advmod
 +-- remain VB cop
 +-- . . punct
Input: In event based frameworks , the solution is to add an intermediate module Repl P1 that intercepts the requests issued to P1 and also the replies and notifications issued by P1 .
Parse:
is VBZ ROOT
 +-- In IN prep
 |   +-- frameworks NNS pobj
 |       +-- based VBN amod
 |           +-- event NN dep
 +-- , , punct
 +-- solution NN nsubj
 |   +-- the DT det
 +-- add VB xcomp
 |   +-- to TO aux
 |   +-- module NN dobj
 |       +-- an DT det
 |       +-- intermediate JJ amod
 |       +-- P1 CD num
 |       |   +-- Repl NNP nn
 |       +-- intercepts VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- requests NNS dobj
 |           |   +-- the DT det
 |           |   +-- issued VBN partmod
 |           |       +-- to IN prep
 |           |           +-- P1 CD pobj
 |           +-- and CC cc
 |           +-- also RB advmod
 |           +-- replies NNS conj
 |               +-- the DT det
 |               +-- and CC cc
 |               +-- notifications NNS conj
 |               +-- issued VBN partmod
 |                   +-- by IN prep
 |                       +-- P1 CD pobj
 +-- . . punct
Input: Although this ad hoc solution may seem similar to the servicebased approach , there is an important difference .
Parse:
is VBZ ROOT
 +-- seem VB advcl
 |   +-- Although IN mark
 |   +-- solution NN nsubj
 |   |   +-- this DT det
 |   |   +-- ad NN nn
 |   |   +-- hoc FW nn
 |   +-- may MD aux
 |   +-- similar JJ acomp
 |       +-- to IN prep
 |           +-- approach NN pobj
 |               +-- the DT det
 |               +-- servicebased JJ amod
 +-- , , punct
 +-- there EX expl
 +-- difference NN nsubj
 |   +-- an DT det
 |   +-- important JJ amod
 +-- . . punct
Input: The eventbased solution requires to slightly modify the module P1 since instead of handling event g and triggering event h , P1 must now handle different events g '' and h '' -LRB- see Fig .
Parse:
requires VBZ ROOT
 +-- solution NN nsubj
 |   +-- The DT det
 |   +-- eventbased JJ amod
 +-- modify VB xcomp
 |   +-- to TO aux
 |   +-- slightly RB advmod
 |   +-- P1 CD dobj
 |   |   +-- the DT det
 |   |   +-- module NN nn
 |   +-- handle VB advcl
 |       +-- since IN mark
 |       +-- of IN prep
 |       |   +-- instead RB advmod
 |       |   +-- handling VBG pcomp
 |       |       +-- event NN dobj
 |       |       +-- g , punct
 |       |       +-- and CC cc
 |       |       +-- triggering VBG conj
 |       |           +-- h NN dobj
 |       |               +-- event NN nn
 |       +-- , , punct
 |       +-- P1 PRP nsubj
 |       +-- must MD aux
 |       +-- now RB advmod
 |       +-- events NNS dobj
 |           +-- different JJ amod
 +-- g . punct
 +-- '' '' punct
 +-- and CC cc
 +-- h UH conj
 |   +-- '' '' punct
 |   +-- -LRB- -LRB- punct
 |   +-- see VB dep
 |       +-- Fig NNP dobj
 +-- . . punct
Input: 5 -RRB- . .
Parse:
5 LS ROOT
 +-- -RRB- -RRB- punct
 +-- . . punct
