Input: In this section we introduce some background knowledge on CPNs assuming a basic understanding of ordinary Petri Nets .
Parse:
introduce VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- knowledge NN dobj
 |   +-- some DT det
 |   +-- background NN nn
 |   +-- on IN prep
 |       +-- assuming VBG pcomp
 |           +-- CPNs NNP nsubj
 |           +-- understanding NN dobj
 |               +-- a DT det
 |               +-- basic JJ amod
 |               +-- of IN prep
 |                   +-- Nets NNPS pobj
 |                       +-- ordinary JJ amod
 |                       +-- Petri NNP nn
 +-- . . punct
Input: For technical details we refer the reader to -LRB- 16 -RRB- .
Parse:
refer VBP ROOT
 +-- For IN prep
 |   +-- details NNS pobj
 |       +-- technical JJ amod
 +-- we PRP nsubj
 +-- reader NN dobj
 |   +-- the DT det
 +-- to IN prep
 |   +-- 16 CD pobj
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: We then map NSs to CPNs and analyse their properties .
Parse:
map VB ROOT
 +-- We PRP nsubj
 +-- then RB advmod
 +-- NSs NNP dobj
 +-- to IN prep
 |   +-- CPNs NNP pobj
 +-- and CC cc
 +-- analyse VB conj
 |   +-- properties NNS dobj
 |       +-- their PRP$ poss
 +-- . . punct
Input: CPNs combine the strength of Petri nets with the strength of functional programming languages .
Parse:
combine VB ROOT
 +-- CPNs NNS nsubj
 +-- strength NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- nets VBZ pobj
 |           +-- Petri NNP nn
 +-- with IN prep
 |   +-- strength NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- languages NNS pobj
 |               +-- functional JJ amod
 |               +-- programming NN nn
 +-- . . punct
Input: On the one hand , Petri nets provide the primitives for the description of the synchronisation of concurrent processes .
Parse:
provide VBP ROOT
 +-- On IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- one CD num
 +-- , , punct
 +-- nets NNS nsubj
 |   +-- Petri NNP nn
 +-- primitives NNS dobj
 |   +-- the DT det
 +-- for IN prep
 |   +-- description NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- synchronisation NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- processes NNS pobj
 |                       +-- concurrent JJ amod
 +-- . . punct
Input: As noticed in -LRB- 16 -RRB- , CPNs have a semantics which builds upon true concurrency , instead of interleaving .
Parse:
have VBP ROOT
 +-- noticed VBN advcl
 |   +-- As IN mark
 |   +-- in IN prep
 |       +-- 16 CD pobj
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- , , punct
 +-- CPNs NNS nsubj
 +-- semantics NNS dobj
 |   +-- a DT det
 |   +-- builds VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- upon IN prep
 |           +-- concurrency NN pobj
 |               +-- true JJ amod
 |               +-- , , punct
 |               +-- of IN prep
 |                   +-- instead RB advmod
 |                   +-- interleaving VBG pobj
 +-- . . punct
Input: In our opinion , a true concurrency semantics is easier to work with because it is the way we envisage the connection between the coordination level and the normative level of a multi agent system to be .
Parse:
easier JJR ROOT
 +-- In IN prep
 |   +-- opinion NN pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- semantics NNS nsubj
 |   +-- a DT det
 |   +-- true JJ amod
 |   +-- concurrency NN nn
 +-- is VBZ cop
 +-- work VB xcomp
 |   +-- to TO aux
 |   +-- with IN prep
 +-- way NN advcl
 |   +-- because IN mark
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- the DT det
 |   +-- envisage VBP rcmod
 |       +-- we PRP nsubj
 |       +-- connection NN dobj
 |           +-- the DT det
 |           +-- between IN prep
 |               +-- level NN pobj
 |                   +-- the DT det
 |                   +-- coordination NN nn
 |                   +-- and CC cc
 |                   +-- level NN conj
 |                       +-- the DT det
 |                       +-- normative JJ amod
 |                       +-- of IN prep
 |                           +-- system NN pobj
 |                               +-- a DT det
 |                               +-- multi JJ amod
 |                               +-- agent NN nn
 |                               +-- be VB infmod
 |                                   +-- to TO aux
 +-- . . punct
Input: On the other hand , the functional programming languages used by CPNs provide the primitives for the definition of data types and the manipulation of their data values .
Parse:
provide VB ROOT
 +-- On IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- languages NNS nsubj
 |   +-- the DT det
 |   +-- functional JJ amod
 |   +-- programming NN nn
 |   +-- used VBN partmod
 |       +-- by IN prep
 |           +-- CPNs NNP pobj
 +-- primitives NNS dobj
 |   +-- the DT det
 +-- for IN prep
 |   +-- definition NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- types NNS pobj
 |       |       +-- data NNS nn
 |       +-- and CC cc
 |       +-- manipulation NN conj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- values NNS pobj
 |                   +-- their PRP$ poss
 |                   +-- data NN nn
 +-- . . punct
Input: Thus , we can readily translate expressions of a normative structure .
Parse:
translate VB ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- readily RB advmod
 +-- expressions NNS dobj
 |   +-- of IN prep
 |       +-- structure NN pobj
 |           +-- a DT det
 |           +-- normative JJ amod
 +-- . . punct
Input: Last but not least , CPNs have a well defined semantics which unambiguously defines the behaviour of each CPN .
Parse:
have VBP ROOT
 +-- least JJS advmod
 |   +-- Last JJ amod
 |   +-- but CC cc
 |   +-- not RB dep
 +-- , , punct
 +-- CPNs NNS nsubj
 +-- semantics NNS dobj
 |   +-- a DT det
 |   +-- defined VBN amod
 |   |   +-- well RB advmod
 |   +-- defines VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- unambiguously RB advmod
 |       +-- behaviour NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- CPN NNP pobj
 |                   +-- each DT det
 +-- . . punct
Input: Furthermore , CPNs have a large number of formal analysis methods and tools by which properties of CPNs can be proved .
Parse:
have VBP ROOT
 +-- Furthermore RB advmod
 +-- , , punct
 +-- CPNs NNP nsubj
 +-- number NN dobj
 |   +-- a DT det
 |   +-- large JJ amod
 |   +-- of IN prep
 |       +-- methods NNS pobj
 |           +-- formal JJ amod
 |           +-- analysis NN nn
 |           +-- and CC cc
 |           +-- tools NNS conj
 |           +-- proved VBN rcmod
 |               +-- by IN prep
 |               |   +-- which WDT pobj
 |               +-- properties NNS nsubjpass
 |               |   +-- of IN prep
 |               |       +-- CPNs NNP pobj
 |               +-- can MD aux
 |               +-- be VB auxpass
 +-- . . punct
Input: Summing up , CPNs provide us with all the necessary features to formally reason about normative structures given that an adequate mapping is provided .
Parse:
provide VB ROOT
 +-- Summing VBG partmod
 |   +-- up RP prt
 +-- , , punct
 +-- CPNs NNS nsubj
 +-- us PRP dobj
 +-- with IN prep
 |   +-- features NNS pobj
 |       +-- all PDT predet
 |       +-- the DT det
 |       +-- necessary JJ amod
 +-- reason VB xcomp
 |   +-- to TO aux
 |   +-- formally RB advmod
 |   +-- about IN prep
 |       +-- structures NNS pobj
 |           +-- normative JJ amod
 |           +-- given VBN prep
 |               +-- provided VBN pcomp
 |                   +-- that IN mark
 |                   +-- mapping NN nsubjpass
 |                   |   +-- an DT det
 |                   |   +-- adequate JJ amod
 |                   +-- is VBZ auxpass
 +-- . . punct
Input: In accordance with Petri nets , the states of a CPN are represented by means of places .
Parse:
represented VBN ROOT
 +-- In IN prep
 |   +-- accordance NN pobj
 |       +-- with IN prep
 |           +-- nets NNS pobj
 |               +-- Petri NNP nn
 +-- , , punct
 +-- states NNS nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- CPN NNP pobj
 |           +-- a DT det
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- means NNS pobj
 |       +-- of IN prep
 |           +-- places NNS pobj
 +-- . . punct
Input: But unlike Petri Nets , each place has an associated data type determining the kind of data which the place may contain .
Parse:
has VBZ ROOT
 +-- But CC cc
 +-- unlike IN prep
 |   +-- Nets NNPS pobj
 |       +-- Petri NNP nn
 +-- , , punct
 +-- place NN nsubj
 |   +-- each DT det
 +-- type NN dobj
 |   +-- an DT det
 |   +-- associated VBN amod
 |   +-- data NNS nn
 |   +-- determining VBG partmod
 |       +-- kind NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- data NNS pobj
 |           +-- contain VB rcmod
 |               +-- which WDT dobj
 |               +-- place NN nsubj
 |               |   +-- the DT det
 |               +-- may MD aux
 +-- . . punct
Input: A state of a CPN is called a marking .
Parse:
called VBN ROOT
 +-- state NN nsubjpass
 |   +-- A DT det
 |   +-- of IN prep
 |       +-- CPN NNP pobj
 |           +-- a DT det
 +-- is VBZ auxpass
 +-- marking NN xcomp
 |   +-- a DT det
 +-- . . punct
Input: It consists of a number of tokens positioned on the individual places .
Parse:
consists VBZ ROOT
 +-- It PRP nsubj
 +-- of IN prep
 |   +-- number NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |       |   +-- tokens NNS pobj
 |       +-- positioned VBN partmod
 |           +-- on IN prep
 |               +-- places NNS pobj
 |                   +-- the DT det
 |                   +-- individual JJ amod
 +-- . . punct
Input: Each token carries a data value which has the type of the corresponding place .
Parse:
carries VBZ ROOT
 +-- token NN nsubj
 |   +-- Each DT det
 +-- value NN dobj
 |   +-- a DT det
 |   +-- data NN nn
 |   +-- has VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- type NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- place NN pobj
 |                   +-- the DT det
 |                   +-- corresponding JJ amod
 +-- . . punct
Input: In general , a place may contain two or more tokens with the same data value .
Parse:
contain VB ROOT
 +-- In IN prep
 |   +-- general JJ pobj
 +-- , , punct
 +-- place NN nsubj
 |   +-- a DT det
 +-- may MD aux
 +-- tokens NNS dobj
 |   +-- two CD num
 |   |   +-- or CC cc
 |   |   +-- more JJR conj
 |   +-- with IN prep
 |       +-- value NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- data NNS nn
 +-- . . punct
Input: Thus , a marking of a CPN is a function which maps each place into a multi set2 of tokens of the correct type .
Parse:
function NN ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- marking NN nsubj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- CPN NNP pobj
 |           +-- a DT det
 +-- is VBZ cop
 +-- a DT det
 +-- maps VBZ rcmod
 |   +-- which WDT nsubj
 |   +-- place NN dobj
 |   |   +-- each DT det
 |   +-- into IN prep
 |       +-- set2 CD pobj
 |           +-- a DT det
 |           +-- multi JJ amod
 |           +-- of IN prep
 |               +-- tokens NNS pobj
 |                   +-- of IN prep
 |                       +-- type NN pobj
 |                           +-- the DT det
 |                           +-- correct JJ amod
 +-- . . punct
Input: One often refers to the token values as token colours and one also refers to the data types as colour sets .
Parse:
refers VBZ ROOT
 +-- One CD nsubj
 +-- often RB advmod
 +-- to IN prep
 |   +-- values NNS pobj
 |       +-- the DT det
 |       +-- token JJ amod
 +-- as IN prep
 |   +-- colours NNS pobj
 |       +-- token JJ amod
 +-- and CC cc
 +-- refers VBZ conj
 |   +-- one CD nsubj
 |   +-- also RB advmod
 |   +-- to IN prep
 |   |   +-- types NNS pobj
 |   |       +-- the DT det
 |   |       +-- data NNS nn
 |   +-- as IN prep
 |       +-- sets NNS pobj
 |           +-- colour NN nn
 +-- . . punct
Input: The types of a CPN can be arbitrarily complex .
Parse:
complex JJ ROOT
 +-- types NNS nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- CPN NNP pobj
 |           +-- a DT det
 +-- can MD aux
 +-- be VB cop
 +-- arbitrarily RB advmod
 +-- . . punct
Input: Actions in a CPN are represented by means of transitions .
Parse:
represented VBN ROOT
 +-- Actions NNS nsubjpass
 |   +-- in IN prep
 |       +-- CPN NNP pobj
 |           +-- a DT det
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- means NNS pobj
 |       +-- of IN prep
 |           +-- transitions NNS pobj
 +-- . . punct
Input: An incoming arc into a transition from a place indicates that the transition may remove tokens from the corresponding place while an outgoing arc indicates that the transition may add tokens .
Parse:
indicates VBZ ROOT
 +-- arc NN nsubj
 |   +-- An DT det
 |   +-- incoming JJ amod
 |   +-- into IN prep
 |       +-- transition NN pobj
 |           +-- a DT det
 |           +-- from IN prep
 |               +-- place NN pobj
 |                   +-- a DT det
 +-- remove VB ccomp
 |   +-- that IN mark
 |   +-- transition NN nsubj
 |   |   +-- the DT det
 |   +-- may MD aux
 |   +-- tokens NNS dobj
 |   +-- from IN prep
 |   |   +-- place NN pobj
 |   |       +-- the DT det
 |   |       +-- corresponding VBG amod
 |   +-- indicates VBZ advcl
 |       +-- while IN mark
 |       +-- arc NN nsubj
 |       |   +-- an DT det
 |       |   +-- outgoing JJ amod
 |       +-- add VB ccomp
 |           +-- that IN mark
 |           +-- transition NN nsubj
 |           |   +-- the DT det
 |           +-- may MD aux
 |           +-- tokens NNS dobj
 +-- . . punct
Input: The exact number of tokens and their data values are determined by the arc expressions , which are encoded using the programming language chosen for the CPN .
Parse:
determined VBN ROOT
 +-- number NN nsubjpass
 |   +-- The DT det
 |   +-- exact JJ amod
 |   +-- of IN prep
 |       +-- tokens NNS pobj
 |           +-- and CC cc
 |           +-- values NNS conj
 |               +-- their PRP$ poss
 |               +-- data NN nn
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- expressions NNS pobj
 |       +-- the DT det
 |       +-- arc JJ amod
 |       +-- , , punct
 |       +-- encoded VBN rcmod
 |           +-- which WDT nsubjpass
 |           +-- are VBP auxpass
 |           +-- using VBG xcomp
 |               +-- language NN dobj
 |                   +-- the DT det
 |                   +-- programming NN nn
 |                   +-- chosen VBN partmod
 |                       +-- for IN prep
 |                           +-- CPN NNP pobj
 |                               +-- the DT det
 +-- . . punct
Input: A transition is enabled in a CPN if and only if all the 2 A multi set -LRB- or bag -RRB- is an extension to the notion of set , allowing the possibility of multiple appearances of the same element .
Parse:
enabled VBN ROOT
 +-- transition NN nsubjpass
 |   +-- A DT det
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- CPN NN pobj
 |       +-- a DT det
 +-- if IN punct
 +-- and CC cc
 +-- extension NN conj
 |   +-- only RB advmod
 |   +-- if IN mark
 |   +-- set NN nsubj
 |   |   +-- A DT det
 |   |   |   +-- all PDT predet
 |   |   |   +-- the DT det
 |   |   |   +-- 2 CD num
 |   |   +-- multi JJ amod
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- or CC cc
 |   |   +-- bag NN conj
 |   |   +-- -RRB- -RRB- punct
 |   +-- is VBZ cop
 |   +-- an DT det
 |   +-- to IN prep
 |   |   +-- notion NN pobj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- set NN pobj
 |   +-- , , punct
 |   +-- allowing VBG partmod
 |       +-- possibility NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- appearances NNS pobj
 |                   +-- multiple JJ amod
 |                   +-- of IN prep
 |                       +-- element NN pobj
 |                           +-- the DT det
 |                           +-- same JJ amod
 +-- . . punct
Input: The Sixth Intl .
Parse:
Intl NNP ROOT
 +-- The DT det
 +-- Sixth NNP nn
 +-- . . punct
Input: Joint Conf .
Parse:
Conf NNP ROOT
 +-- Joint NNP nn
 +-- . . punct
Input: on Autonomous Agents and Multi Agent Systems -LRB- AAMAS 07 -RRB- 639 variables in the expressions of its incoming arcs are bound to some value -LRB- s -RRB- -LRB- each one of these bindings is referred to as a binding element -RRB- .
Parse:
bound VBN ROOT
 +-- on IN prep
 |   +-- Agents NNS pobj
 |       +-- Autonomous JJ amod
 |       +-- and CC cc
 |       +-- Systems NNPS conj
 |           +-- Multi NNP nn
 |           +-- Agent NNP nn
 |           +-- -LRB- -LRB- punct
 |           +-- 07 CD dep
 |           |   +-- AAMAS NNP nn
 |           +-- -RRB- -RRB- punct
 +-- variables NNS nsubjpass
 |   +-- 639 CD num
 |   +-- in IN prep
 |       +-- expressions NNS pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- arcs NNS pobj
 |                   +-- its PRP$ poss
 |                   +-- incoming JJ amod
 +-- are VBP auxpass
 +-- to IN prep
 |   +-- value NN pobj
 |       +-- some DT det
 |       +-- -LRB- -LRB- punct
 |       +-- s NNP dep
 |       +-- -RRB- -RRB- punct
 +-- referred VBN ccomp
 |   +-- -LRB- -LRB- punct
 |   +-- one CD nsubjpass
 |   |   +-- each DT det
 |   |   +-- of IN prep
 |   |       +-- bindings NNS pobj
 |   |           +-- these DT det
 |   +-- is VBZ auxpass
 |   +-- to IN prep
 |   +-- as IN prep
 |   |   +-- element NN pobj
 |   |       +-- a DT det
 |   |       +-- binding VBG amod
 |   +-- -RRB- -RRB- punct
 +-- . . punct
Input: If so , the transition may occur by removing tokens from its input places and adding tokens to its output places .
Parse:
occur VB ROOT
 +-- so RB advcl
 |   +-- If IN mark
 +-- , , punct
 +-- transition NN nsubj
 |   +-- the DT det
 +-- may MD aux
 +-- by IN prep
 |   +-- removing VBG pcomp
 |       +-- tokens NNS dobj
 |       +-- from IN prep
 |       |   +-- places NNS pobj
 |       |       +-- its PRP$ poss
 |       |       +-- input NN nn
 |       +-- and CC cc
 |       +-- adding VBG conj
 |           +-- tokens NNS dobj
 |           +-- to IN prep
 |               +-- places NNS pobj
 |                   +-- its PRP$ poss
 |                   +-- output NN nn
 +-- . . punct
Input: In addition to the arc expressions , it is possible to attach a boolean guard expression -LRB- with variables -RRB- to each transition .
Parse:
possible JJ ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 |       +-- to IN prep
 |           +-- expressions NNS pobj
 |               +-- the DT det
 |               +-- arc NN nn
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- attach VB xcomp
 |   +-- to TO aux
 |   +-- expression NN dobj
 |   |   +-- a DT det
 |   |   +-- boolean JJ amod
 |   |   +-- guard NN nn
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- with IN prep
 |   |   |   +-- variables NNS pobj
 |   |   +-- -RRB- -RRB- punct
 |   +-- to IN prep
 |       +-- transition NN pobj
 |           +-- each DT det
 +-- . . punct
Input: Putting all the elements above together we obtain a formal definition of CPN that shall be employed further ahead for mapping purposes .
Parse:
obtain VBP ROOT
 +-- Putting VBG csubj
 |   +-- elements NNS dobj
 |   |   +-- all PDT predet
 |   |   +-- the DT det
 |   |   +-- above RB advmod
 |   +-- together RB advmod
 +-- we PRP nsubj
 +-- definition NN dobj
 |   +-- a DT det
 |   +-- formal JJ amod
 |   +-- of IN prep
 |   |   +-- CPN NN pobj
 |   +-- employed VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- shall MD aux
 |       +-- be VB auxpass
 |       +-- ahead RB advmod
 |       |   +-- further RB advmod
 |       +-- for IN prep
 |           +-- purposes NNS pobj
 |               +-- mapping NN nn
 +-- . . punct
Input: Def .
Parse:
Def NNP ROOT
 +-- . . punct
Input: 10 .
Parse:
10 CD ROOT
 +-- . . punct
