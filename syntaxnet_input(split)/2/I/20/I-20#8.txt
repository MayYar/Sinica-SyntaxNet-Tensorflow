Input: We call such a subset a missing subset .
Parse:
call VBP ROOT
 +-- We PRP nsubj
 +-- subset NN dobj
 |   +-- such PDT predet
 |   +-- a DT det
 +-- subset NN dep
 |   +-- a DT det
 |   +-- missing VBG amod
 +-- . . punct
Input: The maximal flow between s and t using only the edges in the missing subset Ec is less than k .
Parse:
less JJR ROOT
 +-- flow NN nsubj
 |   +-- The DT det
 |   +-- maximal JJ nn
 |   +-- between IN prep
 |   |   +-- s POS pobj
 |   |       +-- and CC cc
 |   |       +-- t NN conj
 |   +-- using VBG partmod
 |   |   +-- edges NNS dobj
 |   |   |   +-- only RB advmod
 |   |   |   +-- the DT det
 |   |   +-- in IN prep
 |   |       +-- subset NN pobj
 |   |           +-- the DT det
 |   |           +-- missing VBG amod
 |   +-- Ec NNP dep
 +-- is VBZ cop
 +-- than IN prep
 |   +-- k CD pobj
 +-- . . punct
Input: The Sixth Intl .
Parse:
Intl NNP ROOT
 +-- The DT det
 +-- Sixth NNP nn
 +-- . . punct
Input: Joint Conf .
Parse:
Conf NNP ROOT
 +-- Joint NNP nn
 +-- . . punct
Input: on Autonomous Agents and Multi Agent Systems -LRB- AAMAS 07 -RRB- 337 Figure 1
Parse:
Figure NN ROOT
 +-- on IN prep
 |   +-- Agents NNS pobj
 |       +-- Autonomous JJ amod
 |       +-- and CC cc
 |       +-- Systems NNPS conj
 |           +-- Multi NNP nn
 |           +-- Agent NNP nn
 |           +-- -LRB- -LRB- punct
 |           +-- 07 CD dep
 |           |   +-- AAMAS NNP nn
 |           +-- -RRB- -RRB- punct
 +-- 337 CD num
 +-- 1 CD num
Input: The graph is a layer graph , with s being the vertex in the first layer , U the vertices in the second layer , V the vertices in the third , t the vertex in the fourth , and t in the fifth .
Parse:
graph NN ROOT
 +-- graph NN nsubj
 |   +-- The DT det
 +-- is VBZ cop
 +-- a DT det
 +-- layer NN nn
 +-- , , punct
 +-- with IN prep
 |   +-- vertex NN pcomp
 |       +-- s PRP nsubj
 |       +-- being VBG cop
 |       +-- the DT det
 |       +-- in IN prep
 |       |   +-- layer NN pobj
 |       |       +-- the DT det
 |       |       +-- first JJ amod
 |       +-- , , punct
 |       +-- U NNP conj
 |       |   +-- vertices NNS dobj
 |       |   |   +-- the DT det
 |       |   +-- in IN prep
 |       |       +-- layer NN pobj
 |       |           +-- the DT det
 |       |           +-- second JJ amod
 |       +-- V VB conj
 |       |   +-- vertices NNS dobj
 |       |   |   +-- the DT det
 |       |   +-- in IN prep
 |       |       +-- third JJ pobj
 |       |           +-- the DT det
 |       +-- t VBD conj
 |       |   +-- vertex NN dobj
 |       |   |   +-- the DT det
 |       |   +-- in IN prep
 |       |       +-- fourth JJ pobj
 |       |           +-- the DT det
 |       +-- and CC cc
 |       +-- t NN conj
 |           +-- in IN prep
 |               +-- fifth NN pobj
 |                   +-- the DT det
 +-- . . punct
Input: Edges in G only go between consecutive layers .
Parse:
go VB ROOT
 +-- Edges NNS nsubj
 |   +-- in IN prep
 |       +-- G NNP pobj
 +-- only RB advmod
 +-- between IN prep
 |   +-- layers NNS pobj
 |       +-- consecutive JJ amod
 +-- . . punct
Input: The maximal flow in a layer graph is limited by the total capacity of the edges between every two consecutive layers .
Parse:
limited VBN ROOT
 +-- flow NN nsubjpass
 |   +-- The DT det
 |   +-- maximal JJ amod
 |   +-- in IN prep
 |       +-- graph NN pobj
 |           +-- a DT det
 |           +-- layer NN nn
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- capacity NN pobj
 |       +-- the DT det
 |       +-- total JJ amod
 |       +-- of IN prep
 |           +-- edges NNS pobj
 |               +-- the DT det
 |               +-- between IN prep
 |                   +-- layers NNS pobj
 |                       +-- every DT det
 |                       +-- two CD num
 |                       +-- consecutive JJ amod
 +-- . . punct
Input: If any of the edges between s and U is missing , the flow is limited by -LRB- |V | ? 1 -RRB- -LRB- 1 + -RRB- < k .
Parse:
limited VBN ROOT
 +-- missing VBG advcl
 |   +-- If IN mark
 |   +-- any DT nsubj
 |   |   +-- of IN prep
 |   |       +-- edges NNS pobj
 |   |           +-- the DT det
 |   |           +-- between IN prep
 |   |               +-- s POS pobj
 |   |                   +-- and CC cc
 |   |                   +-- U NNP conj
 |   +-- is VBZ aux
 +-- , , punct
 +-- flow NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- |V FW pobj
 |       +-- -LRB- -LRB- punct
 |       +-- | SYM punct
 |       +-- ? . punct
 |       +-- 1 CD num
 |       +-- -RRB- -RRB- punct
 |       +-- + SYM dep
 |       |   +-- 1 CD number
 |       +-- k CD dep
 |           +-- < -LRB- punct
 +-- . . punct
Input: If any of the edges between V and t is missing , the flow is also limited by -LRB- |V | ? 1 -RRB- -LRB- 1 + -RRB- < k .
Parse:
limited VBN ROOT
 +-- missing VBG advcl
 |   +-- If IN mark
 |   +-- any DT nsubj
 |   |   +-- of IN prep
 |   |       +-- edges NNS pobj
 |   |           +-- the DT det
 |   |           +-- between IN prep
 |   |               +-- V NN pobj
 |   |                   +-- and CC cc
 |   |                   +-- t NN conj
 |   +-- is VBZ aux
 +-- , , punct
 +-- flow NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- also RB advmod
 +-- by IN prep
 |   +-- |V FW pobj
 |       +-- -LRB- -LRB- punct
 |       +-- | SYM punct
 |       +-- ? . punct
 |       +-- 1 CD num
 |       +-- -RRB- -RRB- punct
 |       +-- + SYM dep
 |       |   +-- 1 CD number
 |       +-- k CD dep
 |           +-- < -LRB- punct
 +-- . . punct
Input: If the edge ef is missing , there are no edges going to the last layer , and the maximal flow is 0 .
Parse:
are VBP ROOT
 +-- missing VBG advcl
 |   +-- If IN mark
 |   +-- ef NN nsubj
 |   |   +-- the DT det
 |   |   +-- edge NN nn
 |   +-- is VBZ cop
 +-- , , punct
 +-- there EX expl
 +-- edges NNS nsubj
 |   +-- no DT det
 |   +-- going VBG partmod
 |       +-- to IN prep
 |           +-- layer NN pobj
 |               +-- the DT det
 |               +-- last JJ amod
 +-- and CC cc
 +-- 0 CD conj
 |   +-- flow NN nsubj
 |   |   +-- the DT det
 |   |   +-- maximal JJ amod
 |   +-- is VBZ cop
 +-- . . punct
Input: Since such missing subsets of edges do not affect the Banzhaf index of ef -LRB- they add 0 to the sum -RRB- , from now on we will consider only non missing subsets .
Parse:
consider VB ROOT
 +-- affect VB advcl
 |   +-- Since IN mark
 |   +-- subsets NNS nsubj
 |   |   +-- such JJ amod
 |   |   +-- missing VBG amod
 |   |   +-- of IN prep
 |   |       +-- edges NNS pobj
 |   +-- do VBP aux
 |   +-- not RB neg
 |   +-- index NN dobj
 |   |   +-- the DT det
 |   |   +-- Banzhaf NNP nn
 |   |   +-- of IN prep
 |   |       +-- ef NN pobj
 |   +-- add VBP parataxis
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- they PRP nsubj
 |   |   +-- 0 CD dobj
 |   |   +-- to IN prep
 |   |   |   +-- sum NN pobj
 |   |   |       +-- the DT det
 |   |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- from IN prep
 |       +-- on IN pcomp
 |           +-- now RB advmod
 +-- we PRP nsubj
 +-- will MD aux
 +-- subsets NNS dobj
 |   +-- only RB advmod
 |   +-- missing VBG amod
 |       +-- non RB advmod
 +-- . . punct
Input: As explained in Section 4.2 , we identify the edges in G that were copied from G -LRB- the edges between U and V in G -RRB- with their counterparts in G .
Parse:
identify VBP ROOT
 +-- explained VBN advcl
 |   +-- As IN mark
 |   +-- in IN prep
 |       +-- Section NNP pobj
 |           +-- 4.2 CD num
 +-- , , punct
 +-- we PRP nsubj
 +-- edges NNS dobj
 |   +-- the DT det
 |   +-- in IN prep
 |   |   +-- G NNP pobj
 |   +-- copied VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- were VBD auxpass
 |       +-- from IN prep
 |       |   +-- G NNP pobj
 |       |       +-- -LRB- -LRB- punct
 |       |       +-- edges NNS dep
 |       |       |   +-- the DT det
 |       |       |   +-- between IN prep
 |       |       |   |   +-- U NNP pobj
 |       |       |   |       +-- and CC cc
 |       |       |   |       +-- V NNP conj
 |       |       |   +-- in IN prep
 |       |       |       +-- G NNP pobj
 |       |       +-- -RRB- -RRB- punct
 |       +-- with IN prep
 |           +-- counterparts NNS pobj
 |               +-- their PRP$ poss
 |               +-- in IN prep
 |                   +-- G NNP pobj
 +-- . . punct
Input: Each such edge -LRB- u , v -RRB- ? E represents a match between u and v in G .
Parse:
represents VBZ ROOT
 +-- edge NN nsubj
 |   +-- Each DT det
 |   +-- such JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- v NN dep
 |   |   +-- u UH discourse
 |   |   +-- , , punct
 |   +-- -RRB- -RRB- punct
 +-- ? . punct
 +-- E NNP nsubj
 +-- match NN dobj
 |   +-- a DT det
 |   +-- between IN prep
 |   |   +-- u NNP pobj
 |   |       +-- and CC cc
 |   |       +-- v VB conj
 |   +-- in IN prep
 |       +-- G NNP pobj
 +-- . . punct
Input: Ec is a perfect matching if it matches every vertex u to a single vertex v and vice versa .
Parse:
matching NN ROOT
 +-- Ec NNP nsubj
 +-- is VBZ cop
 +-- a DT det
 +-- perfect JJ amod
 +-- matches VBZ advcl
 |   +-- if IN mark
 |   +-- it PRP nsubj
 |   +-- vertex NN iobj
 |   |   +-- every DT det
 |   +-- u PRP dobj
 |   +-- to IN prep
 |       +-- v NN pobj
 |           +-- a DT det
 |           +-- single JJ amod
 |           +-- vertex NN nn
 |           +-- and CC cc
 |           +-- versa RB conj
 |               +-- vice NN nn
 +-- . . punct
Input: PROPOSITION 2 .
Parse:
PROPOSITION NN ROOT
 +-- 2 CD num
 +-- . . punct
Input: Let Ec ? E be a subset of edges that fails to match some vertex v ? V .
Parse:
Let VB ROOT
 +-- Ec NNP dobj
 +-- ? . punct
 +-- subset NN ccomp
 |   +-- E MD nsubj
 |   +-- be VB cop
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- edges NNS pobj
 |           +-- fails VBZ rcmod
 |               +-- that WDT nsubj
 |               +-- match VB xcomp
 |                   +-- to TO aux
 |                   +-- v NN dobj
 |                       +-- some DT det
 |                       +-- vertex NN nn
 |                       +-- ? . punct
 |                       +-- V NNP dep
 +-- . . punct
Input: The maximal flow between s and t using only the edges in the missing subset Ec is less than k .
Parse:
less JJR ROOT
 +-- flow NN nsubj
 |   +-- The DT det
 |   +-- maximal JJ nn
 |   +-- between IN prep
 |   |   +-- s POS pobj
 |   |       +-- and CC cc
 |   |       +-- t NN conj
 |   +-- using VBG partmod
 |   |   +-- edges NNS dobj
 |   |   |   +-- only RB advmod
 |   |   |   +-- the DT det
 |   |   +-- in IN prep
 |   |       +-- subset NN pobj
 |   |           +-- the DT det
 |   |           +-- missing VBG amod
 |   +-- Ec NNP dep
 +-- is VBZ cop
 +-- than IN prep
 |   +-- k CD pobj
 +-- . . punct
Input: We call such a set sub matching , and it is not a perfect matching .
Parse:
call VBP ROOT
 +-- We PRP nsubj
 +-- matching NN dobj
 |   +-- such PDT predet
 |   +-- a DT det
 |   +-- set NN amod
 |   +-- sub NN nn
 +-- , , punct
 +-- and CC cc
 +-- matching NN conj
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- not RB neg
 |   +-- a DT det
 |   +-- perfect JJ amod
 +-- . . punct
Input: PROOF .
Parse:
PROOF NNP ROOT
 +-- . . punct
Input: If Ec fails to match some vertex v ? V , the maximal flow that can reach the vertices in the V layer is -LRB- 1+ -RRB- -LRB- k ? 1 -RRB- < k , so this is also the maximal flow that can reach t .
Parse:
1+ CD ROOT
 +-- fails VBZ advcl
 |   +-- If IN mark
 |   +-- Ec NNP nsubj
 |   +-- match VB xcomp
 |       +-- to TO aux
 |       +-- v NN dobj
 |           +-- some DT det
 |           +-- vertex NN nn
 |           +-- ? . punct
 |           +-- V UH dep
 +-- , , punct
 +-- flow NN nsubj
 |   +-- the DT det
 |   +-- maximal JJ amod
 |   +-- reach VB rcmod
 |       +-- that WDT nsubj
 |       +-- can MD aux
 |       +-- vertices NNS dobj
 |       |   +-- the DT det
 |       +-- in IN prep
 |           +-- layer NN pobj
 |               +-- the DT det
 |               +-- V NN nn
 +-- is VBZ cop
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- k NN dep
 |   +-- ? . punct
 |   +-- 1 CD num
 +-- k CD dep
 |   +-- < -LRB- punct
 +-- so CC cc
 +-- flow NN conj
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- also RB advmod
 |   +-- the DT det
 |   +-- maximal JJ amod
 |   +-- reach VB rcmod
 |       +-- that WDT nsubj
 |       +-- can MD aux
 |       +-- t NN dobj
 +-- . . punct
Input: PROPOSITION 3 .
Parse:
PROPOSITION NN ROOT
 +-- 3 CD num
 +-- . . punct
Input: Let Ec ? E be a subset of edges that is a perfect matching in G .
Parse:
Let VB ROOT
 +-- subset NN ccomp
 |   +-- Ec NNP nsubj
 |   |   +-- ? . punct
 |   +-- E MD aux
 |   +-- be VB cop
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- edges NNS pobj
 |           +-- matching NN rcmod
 |               +-- that WDT nsubj
 |               +-- is VBZ cop
 |               +-- a DT det
 |               +-- perfect JJ amod
 |               +-- in IN prep
 |                   +-- G NNP pobj
 +-- . . punct
Input: Then the maximal flow between s and t using only the edges in Ec is exactly k .
Parse:
k CD ROOT
 +-- Then RB advmod
 +-- flow NN nsubj
 |   +-- the DT det
 |   +-- maximal JJ amod
 |   +-- between IN prep
 |   |   +-- s POS pobj
 |   |       +-- and CC cc
 |   |       +-- t NN conj
 |   +-- using VBG partmod
 |       +-- edges NNS dobj
 |           +-- only RB advmod
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- Ec NNP pobj
 +-- is VBZ cop
 +-- exactly RB advmod
 +-- . . punct
Input: PROOF .
Parse:
PROOF NNP ROOT
 +-- . . punct
Input: A flow of k is possible .
Parse:
possible JJ ROOT
 +-- flow NN nsubj
 |   +-- A DT det
 |   +-- of IN prep
 |       +-- k CD pobj
 +-- is VBZ cop
 +-- . . punct
Input: We send a flow of 1 from s to each of the vertices in U , send a flow of 1 from each vertex u ? U to its match v ? V , and send a flow of 1 from each v ? V to t .
Parse:
send VBP ROOT
 +-- We PRP nsubj
 +-- flow NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |   |   +-- 1 CD pobj
 |   +-- from IN prep
 |       +-- s POS pobj
 +-- to IN prep
 |   +-- each DT pobj
 |       +-- of IN prep
 |           +-- vertices NNS pobj
 |               +-- the DT det
 |               +-- in IN prep
 |                   +-- U NNP pobj
 +-- , , punct
 +-- send VB conj
 |   +-- flow NN dobj
 |   |   +-- a DT det
 |   |   +-- of IN prep
 |   |       +-- 1 CD pobj
 |   +-- from IN prep
 |   |   +-- v NN pobj
 |   |       +-- each DT det
 |   +-- ? . punct
 |   +-- V NN dobj
 |       +-- to IN prep
 |           +-- t VB pobj
 +-- and CC cc
 +-- . . punct
Input: t gets a total flow of exactly k , and sends it to t .
Parse:
gets VBZ ROOT
 +-- t NN nsubj
 +-- flow NN dobj
 |   +-- a DT det
 |   +-- total JJ amod
 |   +-- of IN prep
 |       +-- k CD pobj
 |           +-- exactly RB advmod
 +-- , , punct
 +-- and CC cc
 +-- sends VBZ conj
 |   +-- it PRP dobj
 |   +-- to IN prep
 |       +-- t VB pobj
 +-- . . punct
Input: A flow of more than k is not possible since there are exactly k edges of capacity 1 between the U layer and the V layer , and the maximal flow is limited by the total capacity of the edges between these two consecutive layers .
Parse:
possible JJ ROOT
 +-- flow NN nsubj
 |   +-- A DT det
 |   +-- of IN prep
 |       +-- k CD pobj
 |           +-- than IN quantmod
 |               +-- more JJR mwe
 +-- is VBZ cop
 +-- not RB neg
 +-- are VBP advcl
 |   +-- since IN mark
 |   +-- there EX expl
 |   +-- edges NNS nsubj
 |   |   +-- k CD num
 |   |   |   +-- exactly RB quantmod
 |   |   +-- of IN prep
 |   |       +-- capacity NN pobj
 |   |           +-- 1 CD num
 |   |           +-- between IN prep
 |   |               +-- layer NN pobj
 |   |                   +-- the DT det
 |   |                   +-- U NNP nn
 |   |                   +-- and CC cc
 |   |                   +-- layer NN conj
 |   |                       +-- the DT det
 |   |                       +-- V NN nn
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- limited VBN conj
 |       +-- flow NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- maximal JJ amod
 |       +-- is VBZ auxpass
 |       +-- by IN prep
 |           +-- capacity NN pobj
 |               +-- the DT det
 |               +-- total JJ amod
 |               +-- of IN prep
 |                   +-- edges NNS pobj
 |                       +-- the DT det
 |                       +-- between IN prep
 |                           +-- layers NNS pobj
 |                               +-- these DT det
 |                               +-- two CD num
 |                               +-- consecutive JJ amod
 +-- . . punct
Input: PROPOSITION 4 .
Parse:
PROPOSITION NN ROOT
 +-- 4 CD num
 +-- . . punct
Input: Let Ec ? E be a subset of edges that contains a perfect matching M ? E in G and at least one more edge ex between some vertex ua ? U and va ? V .
Parse:
subset NN ROOT
 +-- Let VB dep
 |   +-- Ec NNP dobj
 +-- ? . punct
 +-- E MD aux
 +-- be VB cop
 +-- a DT det
 +-- of IN prep
 |   +-- edges NNS pobj
 +-- contains VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- M NN dobj
 |       +-- a DT det
 |       +-- perfect JJ amod
 |       +-- matching NN nn
 |       +-- ? . punct
 |       +-- E NNP conj
 |       |   +-- in IN prep
 |       |       +-- G NNP pobj
 |       +-- and CC cc
 |       +-- ex NN conj
 |       |   +-- one CD num
 |       |   |   +-- at RB dep
 |       |   |       +-- least RBS pobj
 |       |   +-- edge NN nn
 |       |       +-- more JJR amod
 |       +-- between IN prep
 |           +-- ua NNP pobj
 |               +-- some DT det
 |               +-- vertex NN nn
 |               +-- ? . punct
 |               +-- U NNP appos
 |                   +-- and CC cc
 |                   +-- va NNP conj
 +-- V NNP dep
 +-- . . punct
Input: Then the maximal flow between s and t using only the edges in Ec is at least k+ .
Parse:
k+ NFP ROOT
 +-- Then RB advmod
 +-- flow NN nsubj
 |   +-- the DT det
 |   +-- maximal JJ nn
 |   +-- between IN prep
 |   |   +-- s POS pobj
 |   |       +-- and CC cc
 |   |       +-- t NN conj
 |   +-- using VBG partmod
 |       +-- edges NNS dobj
 |           +-- only RB advmod
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- Ec NNP pobj
 +-- is VBZ cop
 +-- least RBS advmod
 |   +-- at RB advmod
 +-- . . punct
Input: We call such a set a super matching , and it is not a perfect matching .
Parse:
call VBP ROOT
 +-- We PRP nsubj
 +-- set NN dobj
 |   +-- such PDT predet
 |   +-- a DT det
 +-- matching NN xcomp
 |   +-- a DT det
 |   +-- super NN nn
 +-- , , punct
 +-- and CC cc
 +-- matching NN conj
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- not RB neg
 |   +-- a DT det
 |   +-- perfect JJ amod
 +-- . . punct
Input: PROOF .
Parse:
PROOF NNP ROOT
 +-- . . punct
Input: A flow of k is possible , by using the edges of the perfect match as in Proposition 3 .
Parse:
possible JJ ROOT
 +-- flow NN nsubj
 |   +-- A DT det
 |   +-- of IN prep
 |       +-- k CD pobj
 +-- is VBZ cop
 +-- , , punct
 +-- by IN prep
 |   +-- using VBG pcomp
 |       +-- edges NNS dobj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- match NN pobj
 |       |           +-- the DT det
 |       |           +-- perfect JJ amod
 |       +-- as IN prep
 |           +-- in IN pcomp
 |               +-- Proposition NNP pobj
 |                   +-- 3 CD num
 +-- . . punct
Input: We send a flow of 1 from s to each of the vertices in U , send a flow of 1 from each vertex u ? U to its match v ? V , and send a flow of 1 from each v ? V to t .
Parse:
send VBP ROOT
 +-- We PRP nsubj
 +-- flow NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |   |   +-- 1 CD pobj
 |   +-- from IN prep
 |       +-- s POS pobj
 +-- to IN prep
 |   +-- each DT pobj
 |       +-- of IN prep
 |           +-- vertices NNS pobj
 |               +-- the DT det
 |               +-- in IN prep
 |                   +-- U NNP pobj
 +-- , , punct
 +-- send VB conj
 |   +-- flow NN dobj
 |   |   +-- a DT det
 |   |   +-- of IN prep
 |   |       +-- 1 CD pobj
 |   +-- from IN prep
 |   |   +-- v NN pobj
 |   |       +-- each DT det
 |   +-- ? . punct
 |   +-- V NN dobj
 |       +-- to IN prep
 |           +-- t VB pobj
 +-- and CC cc
 +-- . . punct
Input: t gets a total flow of exactly k , and sends it to t .
Parse:
gets VBZ ROOT
 +-- t NN nsubj
 +-- flow NN dobj
 |   +-- a DT det
 |   +-- total JJ amod
 |   +-- of IN prep
 |       +-- k CD pobj
 |           +-- exactly RB advmod
 +-- , , punct
 +-- and CC cc
 +-- sends VBZ conj
 |   +-- it PRP dobj
 |   +-- to IN prep
 |       +-- t VB pobj
 +-- . . punct
Input: After using the edges of the perfect matching , we send a flow of from s to ua -LRB- this is possible since the capacity of the edge -LRB- s , ua -RRB- is 1 + and we have only used up 1 -RRB- .
Parse:
send VBP ROOT
 +-- After IN prep
 |   +-- using VBG pcomp
 |       +-- edges NNS dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- matching NN pobj
 |                   +-- the DT det
 |                   +-- perfect JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- flow NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- from IN pcomp
 |           +-- s POS pcomp
 |               +-- to IN prep
 |                   +-- ua NNP pobj
 |                       +-- possible JJ dep
 |                           +-- -LRB- -LRB- punct
 |                           +-- this DT nsubj
 |                           +-- is VBZ cop
 |                           +-- 1 CD advcl
 |                           |   +-- since IN mark
 |                           |   +-- capacity NN nsubj
 |                           |   |   +-- the DT det
 |                           |   |   +-- of IN prep
 |                           |   |       +-- edge NN pobj
 |                           |   |           +-- the DT det
 |                           |   |           +-- -LRB- -LRB- punct
 |                           |   |           +-- ua NNP dep
 |                           |   |           |   +-- s NNP dep
 |                           |   |           |   +-- , , punct
 |                           |   |           +-- -RRB- -RRB- punct
 |                           |   +-- is VBZ cop
 |                           |   +-- + SYM advmod
 |                           +-- and CC cc
 |                           +-- used VBN conj
 |                           |   +-- we PRP nsubj
 |                           |   +-- have VBP aux
 |                           |   +-- only RB advmod
 |                           |   +-- up RP prt
 |                           |   +-- 1 CD dobj
 |                           +-- -RRB- -RRB- punct
 +-- . . punct
Input: We then send a flow of from ua to va .
Parse:
send VB ROOT
 +-- We PRP nsubj
 +-- then RB advmod
 +-- flow NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- from IN pcomp
 |           +-- ua NNP pobj
 +-- to IN prep
 |   +-- va NN pobj
 +-- . . punct
Input: This is possible since we have not used this edge at all it is the edge which is not a part of the perfect matching .
Parse:
possible JJ ROOT
 +-- This DT nsubj
 +-- is VBZ cop
 +-- used VBN advcl
 |   +-- since IN mark
 |   +-- we PRP nsubj
 |   +-- have VBP aux
 |   +-- not RB neg
 |   +-- edge NN dobj
 |   |   +-- this DT det
 |   +-- all RB advmod
 |       +-- at RB advmod
 |       +-- edge NN dep
 |           +-- it PRP nsubj
 |           +-- is VBZ cop
 |           +-- the DT det
 |           +-- part NN rcmod
 |               +-- which WDT nsubj
 |               +-- is VBZ cop
 |               +-- not RB neg
 |               +-- a DT det
 |               +-- of IN prep
 |                   +-- matching NN pobj
 |                       +-- the DT det
 |                       +-- perfect JJ amod
 +-- . . punct
Input: We then send a flow of from va to t .
Parse:
send VB ROOT
 +-- We PRP nsubj
 +-- then RB advmod
 +-- flow NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- from IN pcomp
 |           +-- va NN pobj
 +-- to IN prep
 |   +-- t NN pobj
 +-- . . punct
Input: Again , this is possible since we have used 1 out of the total capacity of 1 + which that edge has .
Parse:
possible JJ ROOT
 +-- Again RB advmod
 +-- , , punct
 +-- this DT nsubj
 +-- is VBZ cop
 +-- used VBN advcl
 |   +-- since IN mark
 |   +-- we PRP nsubj
 |   +-- have VBP aux
 |   +-- 1 CD dobj
 |   +-- out IN prep
 |       +-- of IN pcomp
 |           +-- capacity NN pobj
 |               +-- the DT det
 |               +-- total JJ amod
 |               +-- of IN prep
 |               |   +-- 1 CD pobj
 |               +-- + SYM punct
 |               +-- has VBZ rcmod
 |                   +-- which WDT dobj
 |                   +-- edge NN nsubj
 |                       +-- that WDT det
 +-- . . punct
Input: Now t gets a total flow of k + , and sends it all to t , so we have achieved a total flow of k + .
Parse:
gets VBZ ROOT
 +-- Now RB advmod
 +-- t NNP nsubj
 +-- flow NN dobj
 |   +-- a DT det
 |   +-- total JJ amod
 |   +-- of IN prep
 |       +-- k CD pobj
 |           +-- + SYM advmod
 +-- , , punct
 +-- and CC cc
 +-- sends VBZ conj
 |   +-- it PRP dobj
 |   |   +-- all DT det
 |   +-- to IN prep
 |   |   +-- t VB pobj
 |   +-- , , punct
 |   +-- achieved VBN advcl
 |       +-- so IN mark
 |       +-- we PRP nsubj
 |       +-- have VBP aux
 |       +-- flow NN dobj
 |       |   +-- a DT det
 |       |   +-- total JJ amod
 |       |   +-- of IN prep
 |       |       +-- k CD pobj
 |       +-- + SYM advmod
 +-- . . punct
Input: Thus , the maximal possible flow is at least k + .
Parse:
k CD ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- flow NN nsubj
 |   +-- the DT det
 |   +-- maximal JJ amod
 |   +-- possible JJ amod
 +-- is VBZ cop
 +-- least RBS dep
 |   +-- at RB advmod
 +-- + SYM dep
 +-- . . punct
Input: THEOREM 5 .
Parse:
THEOREM UH ROOT
 +-- 5 CD num
 +-- . . punct
Input: Consider a # MATCHING instance G = < U , V , E > reduced to a BANZHAF NETWORK FLOW instance G as explained in Section 4.3 .
Parse:
Consider VB ROOT
 +-- instance NN dobj
     +-- a DT det
     +-- MATCHING VBG nn
     |   +-- # NN nn
     +-- G NNP dep
         +-- = SYM prep
             +-- reduced VBN dep
                 +-- < -LRB- punct
                 +-- U NNP nsubj
                 |   +-- , , punct
                 |   +-- V NNP appos
                 |   +-- E NNP appos
                 +-- > -RRB- punct
                 +-- to IN prep
                 |   +-- G NNP pobj
                 |       +-- a DT det
                 |       +-- instance NN nn
                 |           +-- BANZHAF NNP nn
                 |           +-- NETWORK HYPH punct
                 |           +-- FLOW NNP nn
                 +-- explained VBN advcl
                 |   +-- as IN mark
                 |   +-- in IN prep
                 |       +-- Section NNP pobj
                 |           +-- 4.3 CD num
                 +-- . . punct
Input: Let v -LRB- G , k -RRB- be the network flow game defined on G with target flow k , and v -LRB- G , k+ -RRB- be the game defined with a target flow of k+ .
Parse:
Let VB ROOT
 +-- game NN ccomp
 |   +-- G NNP nsubj
 |   |   +-- v DT dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- , , punct
 |   |   +-- k CD amod
 |   |   +-- -RRB- -RRB- punct
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- network NN nn
 |   +-- flow NN nn
 |   +-- defined VBN partmod
 |   |   +-- on IN prep
 |   |       +-- G NNP pobj
 |   +-- with IN prep
 |   |   +-- flow NN pobj
 |   |       +-- target NN nn
 |   |       +-- k CD dep
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- game NN conj
 |       +-- G NNP nsubj
 |       |   +-- v NNP nn
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- , , punct
 |       |   +-- k+ NFP appos
 |       |   +-- -RRB- -RRB- punct
 |       +-- be VB cop
 |       +-- the DT det
 |       +-- defined VBN partmod
 |           +-- with IN prep
 |               +-- flow NN pobj
 |                   +-- a DT det
 |                   +-- target NN nn
 |                   +-- of IN prep
 |                       +-- k+ NN pobj
 +-- . . punct
