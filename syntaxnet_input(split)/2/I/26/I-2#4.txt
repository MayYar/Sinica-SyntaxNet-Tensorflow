Input: Since all agents are subject to similar search costs , and their perceived utilities are drawn from the same distribution function , they all share the same strategy in equilibrium .
Parse:
share VBP ROOT
 +-- subject JJ advcl
 |   +-- Since IN mark
 |   +-- agents NNS nsubj
 |   |   +-- all DT det
 |   +-- are VBP cop
 |   +-- to IN prep
 |   |   +-- costs NNS pobj
 |   |       +-- similar JJ amod
 |   |       +-- search NN nn
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- drawn VBN conj
 |       +-- utilities NNS nsubjpass
 |       |   +-- their PRP$ poss
 |       |   +-- perceived VBN amod
 |       +-- are VBP auxpass
 |       +-- from IN prep
 |           +-- function NN pobj
 |               +-- the DT det
 |               +-- same JJ amod
 |               +-- distribution NN nn
 +-- , , punct
 +-- they PRP nsubj
 |   +-- all DT det
 +-- strategy NN dobj
 |   +-- the DT det
 |   +-- same JJ amod
 |   +-- in IN prep
 |       +-- equilibrium NN pobj
 +-- . . punct
Input: A multi equilibria scenario may occur , however as we discuss in the following paragraphs since all agents share the same preferences priorities -LRB- unlike , for example , in the famous battle of the sexes scenario -RRB- we can always identify which equilibrium strategy will be used .
Parse:
occur VB ROOT
 +-- scenario NN nsubj
 |   +-- A DT det
 |   +-- multi JJ amod
 |   +-- equilibria NN nn
 +-- may MD aux
 +-- , , punct
 +-- discuss VBP advcl
 |   +-- however RB advmod
 |   +-- as IN mark
 |   +-- we PRP nsubj
 |   +-- in IN prep
 |   |   +-- paragraphs NNS pobj
 |   |       +-- the DT det
 |   |       +-- following VBG amod
 |   +-- share VBP advcl
 |       +-- since IN mark
 |       +-- agents NNS nsubj
 |       |   +-- all DT det
 |       +-- priorities NNS dobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- preferences NNS nn
 |           +-- -LRB- -LRB- punct
 |           +-- unlike JJ prep
 |           |   +-- , , punct
 |           |   +-- for IN prep
 |           |   |   +-- example NN pobj
 |           |   +-- in IN prep
 |           |       +-- battle NN pobj
 |           |           +-- the DT det
 |           |           +-- famous JJ amod
 |           |           +-- of IN prep
 |           |               +-- scenario NN pobj
 |           |                   +-- the DT det
 |           |                   +-- sexes NNS nn
 |           +-- -RRB- -RRB- punct
 |           +-- identify VB rcmod
 |               +-- we PRP nsubj
 |               +-- can MD aux
 |               +-- always RB advmod
 |               +-- used VBN ccomp
 |                   +-- strategy NN nsubjpass
 |                   |   +-- which WDT det
 |                   |   +-- equilibrium NN nn
 |                   +-- will MD aux
 |                   +-- be VB auxpass
 +-- . . punct
Input: Notice that if all agents are using the same sample size , N , then the value xN resulting from solving Equation 10 by substituting k = N and xk = xN is a stable reservation value -LRB- i.e. , none of the agents can benefit from changing just the value of xN -RRB- .
Parse:
value NN ROOT
 +-- Notice NN nsubj
 |   +-- xN FW ccomp
 |       +-- that IN mark
 |       +-- using VBG advcl
 |       |   +-- if IN mark
 |       |   +-- agents NNS nsubj
 |       |   |   +-- all DT det
 |       |   +-- are VBP aux
 |       |   +-- size NN dobj
 |       |       +-- the DT det
 |       |       +-- same JJ amod
 |       |       +-- sample NN nn
 |       |       +-- , , punct
 |       |       +-- N NNP appos
 |       +-- , , punct
 |       +-- then RB advmod
 |       +-- value NN nsubj
 |       |   +-- the DT det
 |       +-- resulting VBG partmod
 |           +-- from IN prep
 |               +-- solving VBG pcomp
 |                   +-- Equation NN dobj
 |                   |   +-- 10 CD num
 |                   +-- by IN prep
 |                       +-- substituting VBG pcomp
 |                           +-- N NNP dobj
 |                               +-- k CD nn
 |                               +-- = SYM dep
 |                               +-- and CC cc
 |                               +-- xN FW conj
 |                                   +-- xk NN nn
 |                                   +-- = SYM dep
 +-- is VBZ cop
 +-- a DT det
 +-- stable JJ amod
 +-- reservation NN nn
 +-- benefit VB appos
 |   +-- -LRB- -LRB- punct
 |   +-- i.e. FW advmod
 |   +-- , , punct
 |   +-- none NN nsubj
 |   |   +-- of IN prep
 |   |       +-- agents NNS pobj
 |   |           +-- the DT det
 |   +-- can MD aux
 |   +-- from IN prep
 |   |   +-- changing VBG pcomp
 |   |       +-- value NN dobj
 |   |           +-- just RB advmod
 |   |           +-- the DT det
 |   |           +-- of IN prep
 |   |               +-- xN NN pobj
 |   +-- -RRB- -RRB- punct
 +-- . . punct
Input: An equilibrium strategy -LRB- N , xN -RRB- can be found by identifying an N value for which no single agent has an incentive to use a different number of parallel interactions , k -LRB- and the new optimal reservation 454 The Sixth Intl .
Parse:
found VBN ROOT
 +-- strategy NN nsubjpass
 |   +-- An DT det
 |   +-- equilibrium NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- xN SYM dep
 |   |   +-- N UH discourse
 |   |   +-- , , punct
 |   +-- -RRB- -RRB- punct
 +-- can MD aux
 +-- be VB auxpass
 +-- by IN prep
 |   +-- identifying VBG pcomp
 |       +-- value NN dobj
 |           +-- an DT det
 |           +-- N JJ nn
 |           +-- has VBZ rcmod
 |           |   +-- for IN prep
 |           |   |   +-- which WDT pobj
 |           |   +-- agent NN nsubj
 |           |   |   +-- no DT det
 |           |   |   +-- single JJ amod
 |           |   +-- incentive NN dobj
 |           |       +-- an DT det
 |           |       +-- use VB infmod
 |           |           +-- to TO aux
 |           |           +-- number NN dobj
 |           |               +-- a DT det
 |           |               +-- different JJ amod
 |           |               +-- of IN prep
 |           |                   +-- interactions NNS pobj
 |           |                       +-- parallel JJ amod
 |           +-- , , punct
 |           +-- k CD num
 |           +-- -LRB- -LRB- punct
 |           +-- and CC cc
 |           +-- reservation NN conj
 |               +-- the DT det
 |               +-- new JJ amod
 |               +-- optimal JJ amod
 |               +-- 454 CD num
 |               +-- Intl NNP dep
 |                   +-- The DT det
 |                   +-- Sixth NNP nn
 +-- . . punct
Input: Joint Conf .
Parse:
Conf NNP ROOT
 +-- Joint NNP nn
 +-- . . punct
Input: on Autonomous Agents and Multi Agent Systems -LRB- AAMAS 07 -RRB- value that is associated with k according to Equation 10 -RRB- .
Parse:
on IN ROOT
 +-- Agents NNS pobj
 |   +-- Autonomous JJ amod
 |   +-- and CC cc
 |   +-- value NN conj
 |   |   +-- Systems NNPS nn
 |   |       +-- Multi NNP nn
 |   |       +-- Agent NNP nn
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- 07 CD dep
 |   |       |   +-- AAMAS RB nn
 |   |       +-- -RRB- -RRB- punct
 |   +-- associated VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- is VBZ auxpass
 |       +-- with IN prep
 |       |   +-- k CD pobj
 |       +-- according VBG prep
 |           +-- to IN pcomp
 |               +-- Equation NNP pobj
 |                   +-- 10 CD num
 +-- -RRB- -RRB- punct
 +-- . . punct
Input: While this implies an infinite solution space , we can always bound it using Equations 8 and 10 .
Parse:
bound VBN ROOT
 +-- implies VBZ advcl
 |   +-- While IN mark
 |   +-- this DT nsubj
 |   +-- space NN dobj
 |       +-- an DT det
 |       +-- infinite JJ amod
 |       +-- solution NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- always RB advmod
 +-- it PRP dobj
 +-- using VBG xcomp
 |   +-- Equations NNPS dobj
 |       +-- 8 CD num
 |       +-- and CC cc
 |       +-- 10 CD conj
 +-- . . punct
Input: Within the framework of this paper , we demonstrate such a bounding methodology for the common case were c -LRB- N -RRB- is linear7 or convex , by using the following Theorem 3 .
Parse:
demonstrate VBP ROOT
 +-- Within IN prep
 |   +-- framework NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- paper NN pobj
 |               +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- methodology NN dobj
 |   +-- such PDT predet
 |   +-- a DT det
 |   +-- bounding NN amod
 |   +-- for IN prep
 |       +-- case NN pobj
 |           +-- the DT det
 |           +-- common JJ amod
 +-- linear7 CD dep
 |   +-- were VBD cop
 |   +-- c PRP nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- N NNP dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- is VBZ cop
 |   +-- or CC cc
 |   +-- convex NN conj
 +-- by IN prep
 |   +-- using VBG pcomp
 |       +-- 3 CD dobj
 |           +-- the DT det
 |           +-- following VBG amod
 |           +-- Theorem NNP nn
 +-- . . punct
Input: THEOREM 3 .
Parse:
THEOREM UH ROOT
 +-- 3 CD num
 +-- . . punct
Input: When c -LRB- N -RRB- is linear -LRB- or convex -RRB- , then
Parse:
then RB ROOT
 +-- linear JJ dep
 |   +-- When WRB advmod
 |   +-- c NN nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- N NNP dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- is VBZ cop
 |   +-- -LRB- -LRB- punct
 |   +-- or CC cc
 |   +-- convex NN conj
 |   +-- -RRB- -RRB- punct
 +-- , , punct
Input: -LRB- b -RRB- Similarly , when all other agents sample k potential partners over a search round , if an agent '' s expected utility of using k ? 1 potential partners , Vk ? 1 -LRB- xk ? 1 -RRB- , is smaller than the expected utility when using k potential partners , Vk -LRB- xk -RRB- , then the expected utility when using N potential partners , where N < k ? 1 , is also smaller than Vk -LRB- xk -RRB- .
Parse:
Vk NFP ROOT
 +-- b LS dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- Similarly RB advmod
 +-- , , punct
 +-- sample VBP advcl
 |   +-- when WRB advmod
 |   +-- agents NNS nsubj
 |   |   +-- all DT det
 |   |   +-- other JJ amod
 |   +-- partners NNS dobj
 |   |   +-- k CD num
 |   |   +-- potential JJ amod
 |   +-- over IN prep
 |       +-- round NN pobj
 |           +-- a DT det
 |           +-- search NN nn
 +-- expected VBN dep
 |   +-- if IN mark
 |   +-- agent NN nsubj
 |   |   +-- an DT det
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- utility NN dobj
 |       +-- of IN prep
 |           +-- using VBG pcomp
 |               +-- partners NNS dobj
 |                   +-- k NNP nn
 |                   |   +-- ? . punct
 |                   |   +-- 1 CD num
 |                   +-- potential JJ amod
 +-- ? . punct
 +-- smaller JJR dep
 |   +-- xk NN nsubj
 |   |   +-- 1 CD num
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- ? . punct
 |   |   +-- 1 CD amod
 |   |   |   +-- -RRB- -RRB- punct
 |   |   +-- , , punct
 |   +-- is VBZ cop
 |   +-- than IN prep
 |   |   +-- utility NN pobj
 |   |       +-- the DT det
 |   |       +-- expected VBN amod
 |   +-- when WRB prep
 |       +-- using VBG pcomp
 |           +-- partners NNS dobj
 |               +-- k CD num
 |               +-- potential JJ amod
 |               +-- , , punct
 |               +-- Vk UH appos
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- xk NNP dep
 |               |   +-- -RRB- -RRB- punct
 |               +-- utility NN rcmod
 |                   +-- then RB advmod
 |                   +-- the DT det
 |                   +-- expected VBN amod
 |                   +-- using VBG rcmod
 |                       +-- when WRB advmod
 |                       +-- N IN prep
 |                           +-- partners NNS pobj
 |                               +-- potential JJ amod
 |                               +-- , , punct
 |                               +-- smaller JJR rcmod
 |                                   +-- where WRB advmod
 |                                   +-- N NNP nsubj
 |                                   |   +-- < -LRB- punct
 |                                   |   +-- k CD num
 |                                   |   +-- ? . punct
 |                                   |   +-- 1 CD num
 |                                   +-- , , punct
 |                                   +-- is VBZ cop
 |                                   +-- also RB advmod
 |                                   +-- than IN prep
 |                                       +-- Vk . pobj
 |                                           +-- -LRB- -LRB- punct
 |                                           +-- xk NNP dep
 |                                           +-- -RRB- -RRB- punct
 +-- . . punct
Input: Proof
Parse:
Proof NNP ROOT
Input: Since Vk -LRB- xk -RRB- = xk ? k -LRB- according to Equation 9 -RRB- , the claims are
Parse:
are VBP ROOT
 +-- = NFP advcl
 |   +-- Since IN mark
 |   +-- Vk NNP nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- xk SYM dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- xk SYM dep
 |   +-- ? . punct
 |   +-- k NN dep
 |   +-- -LRB- -LRB- punct
 |   +-- according VBG prep
 |   |   +-- to IN pcomp
 |   |       +-- Equation NNP pobj
 |   |           +-- 9 CD num
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- claims NNS nsubj
     +-- the DT det
Input: -LRB- a -RRB- We start by proving that if xk+1 < xk then xk+2 < xk .
Parse:
start VBP ROOT
 +-- a LS dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- We PRP nsubj
 +-- by IN prep
 |   +-- proving VBG pcomp
 |       +-- that IN xcomp
 |           +-- xk UH dep
 |               +-- if IN mark
 |               +-- xk+1 CD dep
 |               |   +-- < -LRB- punct
 |               |   +-- xk , punct
 |               |   +-- then RB advmod
 |               |   +-- xk+2 CD dep
 |               +-- < -LRB- punct
 +-- . . punct
Input: Assume otherwise , i.e. , xk+1 < xk and xk+2 > xk .
Parse:
Assume VB ROOT
 +-- otherwise RB advmod
 +-- , , punct
 +-- i.e. FW advmod
 +-- xk+1 CD dep
 |   +-- xk , dep
 |   |   +-- < -LRB- punct
 |   |   +-- and CC cc
 |   |   +-- xk+2 CD conj
 |   |   +-- > -RRB- punct
 |   +-- xk UH dep
 +-- . . punct
Input: Therefore , according to Equation 10 , the following holds
Parse:
holds VBZ ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- according VBG prep
 |   +-- to IN pcomp
 |       +-- Equation NNP pobj
 |           +-- 10 CD num
 +-- following NN nsubj
     +-- the DT det
Input: Since the assumption in this proof is that xk+2 > xk then the above can be transformed into
Parse:
is VBZ ROOT
 +-- Since IN prep
 |   +-- assumption NN pobj
 |       +-- the DT det
 |       +-- in IN prep
 |           +-- proof NN pobj
 |               +-- this DT det
 +-- transformed VBN ccomp
     +-- that IN mark
     +-- xk , nsubjpass
     |   +-- xk+2 LS nn
     |       +-- > -RRB- punct
     +-- then RB advmod
     +-- above RB nsubjpass
     |   +-- the DT det
     +-- can MD aux
     +-- be VB auxpass
     +-- into IN prep
Input: Now we need to prove the same for any xk+j .
Parse:
need VBP ROOT
 +-- Now RB advmod
 +-- we PRP nsubj
 +-- prove VB xcomp
 |   +-- to TO aux
 |   +-- same JJ dobj
 |   |   +-- the DT det
 |   +-- for IN prep
 |       +-- xk+j NN pobj
 |           +-- any DT det
 +-- . . punct
Input: We will prove this in two steps
Parse:
prove VB ROOT
 +-- We PRP nsubj
 +-- will MD aux
 +-- this DT dobj
 +-- in IN prep
     +-- steps NNS pobj
         +-- two CD num
Input: Second , if xk+i < xk and xk+i+1 < xk , then xk+2i+1 < xk .
Parse:
Second RB ROOT
 +-- , , punct
 +-- xk . dep
 |   +-- if IN mark
 |   +-- xk+i NNP dep
 |   |   +-- < -LRB- punct
 |   |   +-- xk FW dep
 |   |   |   +-- and CC cc
 |   |   |   +-- xk+i+1 CD conj
 |   |   +-- xk UH dep
 |   |   +-- , , punct
 |   |   +-- xk+2i+1 CD dep
 |   |       +-- then RB advmod
 |   +-- < -LRB- punct
 +-- . . punct
Input: Together these constitute the necessary induction arguments to prove the case -LRB- a -RRB- .
Parse:
constitute VBP ROOT
 +-- Together RB advmod
 +-- these DT nsubj
 +-- arguments NNS dobj
 |   +-- the DT det
 |   +-- necessary JJ amod
 |   +-- induction NN nn
 |   +-- prove VB infmod
 |       +-- to TO aux
 |       +-- case NN dobj
 |           +-- the DT det
 |           +-- a DT appos
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: We start with the even case , using a similar methodology
Parse:
start VBP ROOT
 +-- We PRP nsubj
 +-- with IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- even JJ amod
 +-- , , punct
 +-- using VBG xcomp
     +-- methodology NN dobj
         +-- a DT det
         +-- similar JJ amod
Input: According to Equation 10 , and the fact that c -LRB- i -RRB- is convex , the following holds
Parse:
holds VBZ ROOT
 +-- According VBG prep
 |   +-- to IN pcomp
 |       +-- Equation NNP pobj
 |           +-- 10 CD num
 |           +-- , , punct
 |           +-- and CC cc
 |           +-- fact NN conj
 |               +-- the DT det
 |               +-- convex NN ccomp
 |                   +-- that IN mark
 |                   +-- c NNP nsubj
 |                   |   +-- -LRB- -LRB- punct
 |                   |   +-- i PRP dep
 |                   |   +-- -RRB- -RRB- punct
 |                   +-- is VBZ cop
 +-- , , punct
 +-- following VBG nsubj
     +-- the DT det
Input: As for the odd case , we use Equation 10 once for k + i + 1 parallel interactions and once for k + 2i + 1 .
Parse:
use VBP ROOT
 +-- As IN prep
 |   +-- for IN pcomp
 |       +-- case NN pobj
 |           +-- the DT det
 |           +-- odd JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- Equation NNP dobj
 |   +-- 10 CD num
 +-- for IN prep
 |   +-- once RB advmod
 |   +-- k CD pobj
 +-- + SYM cc
 +-- + VBD conj
 |   +-- i PRP nsubj
 |   +-- interactions NNS dobj
 |   |   +-- 1 CD num
 |   |   +-- parallel JJ amod
 |   +-- and CC cc
 |   +-- once RB advmod
 |   +-- for IN conj
 |       +-- 1 CD pobj
 |           +-- k CD number
 |           +-- + SYM dep
 +-- . . punct
Input: From the convexity of ci , we obtain
Parse:
obtain VBP ROOT
 +-- From IN prep
 |   +-- convexity NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- ci NN pobj
 +-- , , punct
 +-- we PRP nsubj
Input: operating the agent per time unit -RRB- and variable costs -LRB- i.e. , cost of processing a single interaction '' s data -RRB- .
Parse:
operating VBG ROOT
 +-- agent NN dobj
 |   +-- the DT det
 |   +-- per IN prep
 |       +-- unit NN pobj
 |           +-- time NN nn
 +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- costs NNS conj
 |   +-- variable JJ amod
 |   +-- cost NN appos
 |       +-- -LRB- -LRB- punct
 |       +-- i.e. FW advmod
 |       +-- , , punct
 |       +-- of IN prep
 |       |   +-- processing VBG pcomp
 |       |       +-- data NNS dobj
 |       |           +-- interaction NN poss
 |       |               +-- a DT det
 |       |               +-- single JJ amod
 |       |               +-- '' '' punct
 |       |               +-- s POS possessive
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: This time the integrated term in Equation 15 can be re written as Gk -LRB- y -RRB- k k ? 1 -LRB- 1 ? Gk -LRB- y -RRB- i k ? 1 -RRB- -LRB- Gk -LRB- y -RRB- i+1 k ? 1 ? 1 -RRB- which is obviously negative , contradicting the initial assumption , thus xk+i+1 < xk .
Parse:
written VBN ROOT
 +-- time NN nsubjpass
 |   +-- This DT det
 +-- term NN nsubjpass
 |   +-- the DT det
 |   +-- integrated VBN amod
 |   +-- in IN prep
 |       +-- Equation NNP pobj
 |           +-- 15 CD num
 +-- can MD aux
 +-- be VB auxpass
 +-- re RB advmod
 +-- as IN prep
 |   +-- k CD pobj
 |       +-- Gk . nn
 |       +-- y LS dep
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- k CD number
 |       +-- ? . punct
 |       +-- 1 CD dep
 |       |   +-- 1 CD num
 |       |   +-- -LRB- -LRB- punct
 |       +-- Gk UH dep
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- y NNP dep
 |       |   +-- -RRB- -RRB- punct
 |       |   +-- i PRP dep
 |       |       +-- k VBP dep
 |       |           +-- ? . punct
 |       |           +-- 1 LS dep
 |       +-- -RRB- -RRB- punct
 |       +-- -LRB- -LRB- punct
 |       +-- k NN dep
 |       |   +-- Gk UH nn
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- y NNP nn
 |       |   +-- -RRB- -RRB- punct
 |       |   +-- i+1 CD num
 |       |   +-- ? . punct
 |       |   +-- 1 CD num
 |       |   +-- 1 LS num
 |       +-- negative JJ rcmod
 |           +-- which WDT nsubj
 |           +-- is VBZ cop
 |           +-- obviously RB advmod
 +-- , , punct
 +-- contradicting VBG xcomp
 |   +-- assumption NN dobj
 |   |   +-- the DT det
 |   |   +-- initial JJ amod
 |   +-- , , punct
 |   +-- thus RB advmod
 |   +-- xk+i+1 CD dep
 |       +-- xk NFP dep
 |           +-- < -LRB- punct
 +-- . . punct
Input: Now using induction one can prove that if xk+1 < xk then xk+i < xk .
Parse:
prove VB ROOT
 +-- Now RB advmod
 +-- using VBG csubj
 |   +-- induction NN iobj
 |   +-- one PRP dobj
 +-- can MD aux
 +-- that IN prep
 |   +-- xk UH dep
 |       +-- if IN mark
 |       +-- xk+1 LS dep
 |       +-- < -LRB- punct
 |       +-- xk , dep
 |       +-- then RB advmod
 |       +-- xk+i FW dep
 +-- . . punct
Input: This concludes part -LRB- a -RRB- of the proof .
Parse:
concludes VBZ ROOT
 +-- This DT nsubj
 +-- part NN dobj
 |   +-- a LS appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- of IN prep
 |       +-- proof NN pobj
 |           +-- the DT det
 +-- . . punct
Input: The proof for part -LRB- b -RRB- of the theorem is obtained in a similar manner .
Parse:
obtained VBN ROOT
 +-- proof NN nsubjpass
 |   +-- The DT det
 |   +-- for IN prep
 |   |   +-- part NN pobj
 |   +-- -LRB- -LRB- punct
 |   +-- b LS dep
 |   +-- -RRB- -RRB- punct
 |   +-- of IN prep
 |       +-- theorem NN pobj
 |           +-- the DT det
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- manner NN pobj
 |       +-- a DT det
 |       +-- similar JJ amod
 +-- . . punct
Input: In this case
Parse:
In IN ROOT
 +-- case NN pobj
     +-- this DT det
Input: The above theorem supplies us with a powerful tool for eliminating non equilibrium N values .
Parse:
supplies VBZ ROOT
 +-- theorem FW nsubj
 |   +-- The DT det
 |   +-- above JJ amod
 +-- us PRP dobj
 +-- with IN prep
 |   +-- tool NN pobj
 |       +-- a DT det
 |       +-- powerful JJ amod
 |       +-- for IN prep
 |           +-- eliminating VBG pcomp
 |               +-- values NNS dobj
 |                   +-- equilibrium NN nn
 |                   |   +-- non NN nn
 |                   +-- N NNP nn
 +-- . . punct
Input: It suggests that we can check the stability of a sample size N and the appropriate reservation value xN simply by calculating the optimal reservation values of a single agent when deviating towards using samples of sizes N ? 1 and N + 1 -LRB- keeping the other agents with strategy -LRB- N , xN -RRB- -RRB- .
Parse:
suggests VBZ ROOT
 +-- It PRP nsubj
 +-- check VB ccomp
 |   +-- that IN mark
 |   +-- we PRP nsubj
 |   +-- can MD aux
 |   +-- stability NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |   |   +-- size NN pobj
 |   |   |       +-- a DT det
 |   |   |       +-- sample NN nn
 |   |   |       +-- N NNP appos
 |   |   +-- and CC cc
 |   |   +-- value NN conj
 |   |       +-- the DT det
 |   |       +-- appropriate JJ amod
 |   |       +-- reservation NN nn
 |   |       +-- xN , punct
 |   +-- by IN prep
 |       +-- simply RB advmod
 |       +-- calculating VBG pcomp
 |           +-- values NNS dobj
 |           |   +-- the DT det
 |           |   +-- optimal JJ amod
 |           |   +-- reservation NN nn
 |           |   +-- of IN prep
 |           |       +-- agent NN pobj
 |           |           +-- a DT det
 |           |           +-- single JJ amod
 |           +-- deviating VBG advcl
 |           |   +-- when WRB advmod
 |           |   +-- towards IN prep
 |           |       +-- using VBG pcomp
 |           |           +-- samples NNS dobj
 |           |               +-- of IN prep
 |           |                   +-- sizes NNS pobj
 |           +-- N NNP dobj
 |           |   +-- ? . punct
 |           |   +-- 1 CD num
 |           |   +-- and CC cc
 |           |   +-- N NN conj
 |           |       +-- + SYM dep
 |           |       +-- 1 CD num
 |           +-- -LRB- -LRB- punct
 |           +-- keeping VBG dep
 |           |   +-- agents NNS dobj
 |           |   |   +-- the DT det
 |           |   |   +-- other JJ amod
 |           |   +-- with IN prep
 |           |       +-- strategy NN pobj
 |           |           +-- -LRB- -LRB- punct
 |           |           +-- N NNP dep
 |           |           |   +-- , , punct
 |           |           |   +-- xN NN appos
 |           |           +-- -RRB- -RRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: If both the appropriate reservation values associated with the two latter sample sizes are smaller than xN then according to Theorems 3 the same holds when deviating to any other sample size k .
Parse:
smaller JJR ROOT
 +-- If IN mark
 +-- values NNS nsubj
 |   +-- both DT predet
 |   +-- the DT det
 |   +-- appropriate JJ amod
 |   +-- reservation NN nn
 |   +-- associated VBN partmod
 |       +-- with IN prep
 |           +-- sizes NNS pobj
 |               +-- the DT det
 |               +-- two CD num
 |               +-- sample NN nn
 |                   +-- latter JJ amod
 +-- are VBP cop
 +-- than IN prep
 |   +-- xN $ pobj
 +-- then RB advmod
 +-- according VBG prep
 |   +-- to IN pcomp
 |       +-- 3 CD pobj
 |           +-- Theorems NNP nn
 |           +-- holds VBZ rcmod
 |               +-- same JJ nsubj
 |               |   +-- the DT det
 |               +-- deviating VBG advcl
 |                   +-- when WRB advmod
 |                   +-- to IN prep
 |                       +-- size NN pobj
 |                           +-- any DT det
 |                           +-- other JJ amod
 |                           +-- sample NN nn
 |                           +-- k CD num
 +-- . . punct
Input: The above process can be further simplified by using VN+1 -LRB- xN -RRB- > xN and VN ? 1 -LRB- xN -RRB- > xN as the two elimination rules .
Parse:
simplified VBN ROOT
 +-- process NN nsubjpass
 |   +-- The DT det
 |   +-- above JJ amod
 +-- can MD aux
 +-- be VB auxpass
 +-- further RBR advmod
 +-- by IN prep
 |   +-- using VBG pcomp
 |       +-- xN NFP dobj
 |       |   +-- VN+1 CD nn
 |       |       +-- -LRB- -LRB- punct
 |       |       +-- xN SYM dep
 |       |       +-- -RRB- -RRB- punct
 |       |       +-- xN NN dep
 |       |       +-- ? , punct
 |       |       +-- 1 CD num
 |       |       +-- > -RRB- punct
 |       +-- as IN prep
 |           +-- rules NNS pobj
 |               +-- the DT det
 |               +-- two CD num
 |               +-- elimination NN nn
 +-- . . punct
Input: This derives from Theorem 3 and the properties of the function VN -LRB- x -RRB- found in Theorem 2 .
Parse:
derives VBZ ROOT
 +-- This DT nsubj
 +-- from IN prep
 |   +-- Theorem NNP pobj
 |       +-- 3 CD num
 |       +-- and CC cc
 |       +-- properties NNS conj
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- VN UH pobj
 |           |       +-- the DT det
 |           |       +-- function NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- x SYM dep
 |           +-- -RRB- -RRB- punct
 |           +-- found VBN partmod
 |               +-- in IN prep
 |                   +-- Theorem NNP pobj
 |                       +-- 2 CD num
 +-- . . punct
Input: Notice that a multi equilibria scenario may occur , however can easily be resolved .
Parse:
resolved VBN ROOT
 +-- Notice NN nsubjpass
 |   +-- occur VB ccomp
 |       +-- that IN mark
 |       +-- scenario NN nsubj
 |       |   +-- a DT det
 |       |   +-- multi JJ amod
 |       |   +-- equilibria NN nn
 |       +-- may MD aux
 +-- , , punct
 +-- however RB advmod
 +-- can MD aux
 +-- easily RB advmod
 +-- be VB auxpass
 +-- . . punct
Input: If several strategies satisfy the stability condition defined above , then the agents will always prefer the one associated with the highest expected utility .
Parse:
prefer VB ROOT
 +-- satisfy VBP advcl
 |   +-- If IN mark
 |   +-- strategies NNS nsubj
 |   |   +-- several JJ amod
 |   +-- condition NN dobj
 |       +-- the DT det
 |       +-- stability NN nn
 |       +-- defined VBN partmod
 |           +-- above IN advmod
 +-- , , punct
 +-- then RB advmod
 +-- agents NNS nsubj
 |   +-- the DT det
 +-- will MD aux
 +-- always RB advmod
 +-- one CD dobj
 |   +-- the DT det
 |   +-- associated VBN partmod
 |       +-- with IN prep
 |           +-- utility NN pobj
 |               +-- the DT det
 |               +-- highest JJS amod
 |               +-- expected VBN amod
 +-- . . punct
Input: Therefore an algorithm that goes over the different N values and checks them according to the rules above can be applied , assuming that we can bound the interval for searching the equilibrium N .
Parse:
applied VBN ROOT
 +-- Therefore RB advmod
 +-- algorithm NN nsubjpass
 |   +-- an DT det
 |   +-- goes VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- over IN prep
 |       |   +-- values NNS pobj
 |       |       +-- the DT det
 |       |       +-- different JJ amod
 |       |       +-- N NN nn
 |       +-- and CC cc
 |       +-- checks VBZ conj
 |           +-- them PRP dobj
 |           +-- according VBG prep
 |               +-- to IN pcomp
 |                   +-- rules NNS pobj
 |                       +-- the DT det
 |                       +-- above IN advmod
 +-- can MD aux
 +-- be VB auxpass
 +-- , , punct
 +-- assuming VBG xcomp
 |   +-- bound VB ccomp
 |       +-- that IN mark
 |       +-- we PRP nsubj
 |       +-- can MD aux
 |       +-- interval NN dobj
 |       |   +-- the DT det
 |       +-- for IN prep
 |           +-- searching VBG pcomp
 |               +-- equilibrium NN dobj
 |                   +-- the DT det
 |                   +-- N NNP appos
 +-- . . punct
Input: The following Theorem 4 suggests such an upper bound .
Parse:
suggests VBZ ROOT
 +-- following VBG nsubj
 |   +-- The DT det
 |   +-- Theorem RB advmod
 |   +-- 4 CD num
 +-- bound NN dobj
 |   +-- such PDT predet
 |   +-- an DT det
 |   +-- upper JJ amod
 +-- . . punct
Input: THEOREM 4 .
Parse:
THEOREM UH ROOT
 +-- 4 CD dep
 +-- . . punct
Input: An upper bound for the equilibrium number of partners to be considered over a search round is the solution of the equation
Parse:
solution NN ROOT
 +-- upper JJ nsubj
 |   +-- An DT det
 |   +-- bound VBN partmod
 |       +-- considered VBN advcl
 |           +-- for IN mark
 |           +-- number NN nsubjpass
 |           |   +-- the DT det
 |           |   +-- equilibrium NN nn
 |           |   +-- of IN prep
 |           |       +-- partners NNS pobj
 |           +-- to TO aux
 |           +-- be VB auxpass
 |           +-- over IN prep
 |               +-- round NN pobj
 |                   +-- a DT det
 |                   +-- search NN nn
 +-- is VBZ cop
 +-- the DT det
 +-- of IN prep
     +-- equation NN pobj
         +-- the DT det
Input: Proof
Parse:
Proof NNP ROOT
Input: From Equation 7
Parse:
From IN ROOT
 +-- Equation NN pobj
     +-- 7 CD num
Input: Hence if A -LRB- N -RRB- ? c -LRB- N -RRB- < 0 , then A -LRB- N , x -RRB- ? c -LRB- N -RRB- < 0 ? x and VN -LRB- x -RRB- < 0 ? x .
Parse:
Hence RB ROOT
 +-- if IN prep
 |   +-- A DT pobj
 |       +-- -LRB- -LRB- punct
 |       +-- N NN dep
 |       +-- -RRB- -RRB- punct
 |       +-- ? , punct
 |       +-- x $ appos
 |           +-- N NNP nn
 |           |   +-- c NN dep
 |           |   |   +-- N NNP nn
 |           |   |       +-- c NN dep
 |           |   |       +-- -LRB- -LRB- punct
 |           |   |       +-- -RRB- -RRB- punct
 |           |   |       +-- < -LRB- dep
 |           |   |       +-- 0 NFP punct
 |           |   |       +-- , , punct
 |           |   |       +-- A DT dep
 |           |   |       |   +-- then RB advmod
 |           |   |       +-- N NNP dep
 |           |   |       |   +-- -LRB- -LRB- punct
 |           |   |       |   +-- , , punct
 |           |   |       |   +-- x SYM appos
 |           |   |       |   +-- -RRB- -RRB- punct
 |           |   |       +-- ? , punct
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- -RRB- -RRB- punct
 |           +-- < -LRB- punct
 |           +-- 0 NFP punct
 |           +-- ? , punct
 |           +-- and CC cc
 |           +-- VN FW conj
 |               +-- -LRB- -LRB- punct
 |               +-- x SYM dep
 |               +-- -RRB- -RRB- punct
 |               +-- < -LRB- punct
 |               +-- 0 NFP punct
 |               +-- ? . punct
 |               +-- x NFP punct
 +-- . . punct
Input: Next we prove that if A -LRB- N -RRB- ? c -LRB- N -RRB- gets negative , it stays negative .
Parse:
prove VBP ROOT
 +-- Next JJ advmod
 +-- we PRP nsubj
 +-- negative JJ ccomp
 |   +-- that IN mark
 |   +-- negative JJ advcl
 |   |   +-- if IN mark
 |   |   +-- A DT nsubj
 |   |   |   +-- -LRB- -LRB- punct
 |   |   |   +-- N NNP dep
 |   |   |   +-- -RRB- -RRB- punct
 |   |   |   +-- ? , punct
 |   |   |   +-- N NNP appos
 |   |   |       +-- c NN nn
 |   |   |       +-- -LRB- -LRB- punct
 |   |   |       +-- -RRB- -RRB- punct
 |   |   +-- gets VBZ dep
 |   +-- , , punct
 |   +-- it PRP nsubj
 |   +-- stays VBZ cop
 +-- . . punct
Input: Recalling that for any g -LRB- y -RRB-
Parse:
Recalling VBG ROOT
 +-- that IN dobj
 +-- for IN prep
     +-- g NN pobj
         +-- any DT det
         +-- -LRB- -LRB- punct
         +-- y NNP dep
         +-- -RRB- -RRB- punct
Input: Therefore A -LRB- N -RRB- is concave .
Parse:
concave JJ ROOT
 +-- Therefore RB advmod
 +-- N NNP nsubj
 |   +-- A DT det
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- . . punct
Input: Since c -LRB- N -RRB- is convex , ? c -LRB- N -RRB- is concave , and a sum of concave functions is concave , we obtain that The Sixth Intl .
Parse:
obtain VBP ROOT
 +-- convex NN advcl
 |   +-- Since IN mark
 |   +-- c NNP nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- N NN dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- is VBZ cop
 |   +-- , , punct
 |   +-- ? . punct
 |   +-- concave JJ conj
 |   |   +-- N NNP nsubj
 |   |   |   +-- c UH nn
 |   |   |   +-- -LRB- -LRB- punct
 |   |   |   +-- -RRB- -RRB- punct
 |   |   +-- is VBZ cop
 |   +-- and CC cc
 |   +-- concave VBN conj
 |       +-- sum NN nsubj
 |       |   +-- a DT det
 |       |   +-- of IN prep
 |       |       +-- functions NNS pobj
 |       |           +-- concave NN nn
 |       +-- is VBZ cop
 +-- , , punct
 +-- we PRP nsubj
 +-- that IN prep
 |   +-- Intl NNP pobj
 |       +-- The DT det
 |       +-- Sixth NNP nn
 +-- . . punct
Input: Joint Conf .
Parse:
Conf NNP ROOT
 +-- Joint NNP nn
 +-- . . punct
Input: on Autonomous Agents and Multi Agent Systems -LRB- AAMAS 07 -RRB- 455 A -LRB- N -RRB- ? c -LRB- N -RRB- is concave .
Parse:
concave JJ ROOT
 +-- on IN prep
 |   +-- Agents NNS pobj
 |       +-- Autonomous JJ amod
 |       +-- and CC cc
 |       +-- Systems NNPS conj
 |           +-- Multi NNP nn
 |           +-- Agent NNP nn
 |           +-- -LRB- -LRB- punct
 |           +-- AAMAS NNP dep
 |           |   +-- 07 CD num
 |           +-- -RRB- -RRB- punct
 |           +-- A NNP conj
 |           |   +-- 455 CD num
 |           |   +-- N NNP appos
 |           |       +-- -LRB- -LRB- punct
 |           |       +-- -RRB- -RRB- punct
 |           +-- ? , punct
 |           +-- N NNP conj
 |               +-- c NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- . . punct
Input: This guarantees that once the concave expression A -LRB- N -RRB- ? c -LRB- N -RRB- shifts from a positive value to a negative one -LRB- with the increase in N -RRB- , it can not become positive again .
Parse:
guarantees VBZ ROOT
 +-- This DT nsubj
 +-- positive JJ ccomp
 |   +-- that IN mark
 |   +-- shifts VBZ advcl
 |   |   +-- once IN mark
 |   |   +-- A NNP nsubj
 |   |   |   +-- the DT det
 |   |   |   +-- concave NN nn
 |   |   |   +-- expression NN nn
 |   |   |   +-- -LRB- -LRB- punct
 |   |   |   +-- N NN dep
 |   |   |   +-- -RRB- -RRB- punct
 |   |   |   +-- ? , punct
 |   |   |   +-- N NNP appos
 |   |   |       +-- c NN nn
 |   |   |       +-- -LRB- -LRB- punct
 |   |   |       +-- -RRB- -RRB- punct
 |   |   +-- from IN prep
 |   |   |   +-- value NN pobj
 |   |   |       +-- a DT det
 |   |   |       +-- positive JJ amod
 |   |   +-- to IN prep
 |   |       +-- one NN pobj
 |   |           +-- a DT det
 |   |           +-- negative JJ amod
 |   |           +-- -LRB- -LRB- punct
 |   |           +-- with IN prep
 |   |           |   +-- increase NN pobj
 |   |           |       +-- the DT det
 |   |           |       +-- in IN prep
 |   |           |           +-- N NNP pobj
 |   |           +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- it PRP nsubj
 |   +-- can MD aux
 |   +-- not RB neg
 |   +-- become VB cop
 |   +-- again RB advmod
 +-- . . punct
Input: Therefore , having N ? such that A -LRB- N ? -RRB- = c -LRB- N ? -RRB- , and A -LRB- N ? ? -RRB- > c -LRB- N ? ? -RRB- for some N ? ? < N ? , is an upper bound for N , i.e. , VN -LRB- x -RRB- < 0 ? N ? N ? .
Parse:
having VBG ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- c NN dobj
 |   +-- N NNP nn
 |   |   +-- ? . punct
 |   |   +-- A NNP conj
 |   |   |   +-- such JJ amod
 |   |   |   +-- that IN nn
 |   |   |   +-- N NNP appos
 |   |   |       +-- -LRB- -LRB- punct
 |   |   |       +-- ? . punct
 |   |   |       +-- -RRB- -RRB- punct
 |   |   +-- = SYM punct
 |   +-- -LRB- -LRB- punct
 |   +-- N NNP dep
 |   |   +-- ? . punct
 |   +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- N NNP conj
 |   +-- A DT det
 |   +-- -LRB- -LRB- punct
 |   +-- ? . punct
 |   +-- -RRB- -RRB- punct
 |   +-- > VBZ prep
 |   |   +-- c NN pobj
 |   +-- N NNP dep
 |   +-- for IN prep
 |       +-- N NN pobj
 |           +-- some DT det
 +-- ? . punct
 +-- < -LRB- punct
 +-- N NN dobj
 +-- bound VBN dep
 |   +-- is VBZ cop
 |   +-- an DT det
 |   +-- upper JJ amod
 |   +-- for IN prep
 |       +-- N NNP pobj
 +-- i.e. FW advmod
 +-- VN UH dobj
 |   +-- -LRB- -LRB- punct
 |   +-- x SYM dep
 |   +-- -RRB- -RRB- punct
 |   +-- < -LRB- punct
 |   +-- N NNP dep
 |   +-- ? . punct
 +-- . . punct
Input: The condition we specify for N ? ? is merely for ensuring that VN is switching from a positive value to a negative one -LRB- and not vice versa -RRB- and is trivial to implement .
Parse:
is VBZ ROOT
 +-- condition NN nsubj
 |   +-- The DT det
 |   +-- specify VBP rcmod
 |       +-- we PRP nsubj
 |       +-- for IN prep
 |       |   +-- N NNP pobj
 |       +-- ? . punct
 +-- ? , punct
 +-- merely RB advmod
 +-- for IN prep
 |   +-- ensuring VBG pcomp
 |       +-- switching VBG ccomp
 |           +-- that IN mark
 |           +-- VN FW nsubj
 |           +-- is VBZ aux
 |           +-- from IN prep
 |           |   +-- value NN pobj
 |           |       +-- a DT det
 |           |       +-- positive JJ amod
 |           +-- to IN prep
 |           |   +-- one CD pobj
 |           |       +-- a DT det
 |           |       +-- negative JJ amod
 |           |       +-- -LRB- -LRB- punct
 |           |       +-- and CC cc
 |           |       +-- not RB conj
 |           |       +-- versa RB dep
 |           |       |   +-- vice NN nn
 |           |       +-- -RRB- -RRB- punct
 |           +-- and CC cc
 |           +-- trivial JJ conj
 |               +-- is VBZ cop
 |               +-- implement VB xcomp
 |                   +-- to TO aux
 +-- . . punct
Input: Given the existence of the upper bound , we can design an algorithm for finding the equilibrium strategy -LRB- if one exists -RRB- .
Parse:
design VB ROOT
 +-- Given VBN prep
 |   +-- existence NN dep
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- upper JJ pobj
 |               +-- the DT det
 |               +-- bound VBN partmod
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- algorithm NN dobj
 |   +-- an DT det
 |   +-- for IN prep
 |       +-- finding VBG pcomp
 |           +-- strategy NN dobj
 |               +-- the DT det
 |               +-- equilibrium NN nn
 |               +-- exists VBZ dep
 |                   +-- -LRB- -LRB- punct
 |                   +-- if IN mark
 |                   +-- one CD nsubj
 |                   +-- -RRB- -RRB- punct
 +-- . . punct
Input: The algorithm extracts the upper bound , ? N , for the equilibrium number of parallel interactions according to Theorem 4 .
Parse:
extracts VBZ ROOT
 +-- algorithm NN nsubj
 |   +-- The DT det
 +-- upper JJ dobj
 |   +-- the DT det
 |   +-- bound VBN partmod
 |       +-- , , punct
 |       +-- ? , punct
 |       +-- N NNP dobj
 |       +-- for IN prep
 |       |   +-- number NN pobj
 |       |       +-- the DT det
 |       |       +-- equilibrium NN nn
 |       |       +-- of IN prep
 |       |           +-- interactions NNS pobj
 |       |               +-- parallel JJ amod
 |       +-- according VBG prep
 |           +-- to IN pcomp
 |               +-- Theorem NNP pobj
 |                   +-- 4 CD num
 +-- . . punct
Input: Out of the set of values satisfying the stability condition defined above , the algorithm chooses the one associated with the highest reservation value according to Equation 10 .
Parse:
chooses VBZ ROOT
 +-- Out IN prep
 |   +-- of IN pcomp
 |       +-- set NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- values NNS pobj
 |                   +-- satisfying VBG partmod
 |                       +-- condition NN dobj
 |                           +-- the DT det
 |                           +-- stability NN nn
 |                           +-- defined VBN partmod
 |                               +-- above IN advmod
 +-- , , punct
 +-- algorithm NN nsubj
 |   +-- the DT det
 +-- one CD dobj
 |   +-- the DT det
 |   +-- associated VBN partmod
 |       +-- with IN prep
 |           +-- value NN pobj
 |               +-- the DT det
 |               +-- highest JJS amod
 |               +-- reservation NN nn
 +-- according VBG prep
 |   +-- to IN pcomp
 |       +-- Equation NNP pobj
 |           +-- 10 CD num
 +-- . . punct
Input: This is the equilibrium associated with the highest expected utility to all agents according to Theorem 2 .
Parse:
equilibrium NN ROOT
 +-- This DT nsubj
 +-- is VBZ cop
 +-- the DT det
 +-- associated VBN partmod
 |   +-- with IN prep
 |   |   +-- utility NN pobj
 |   |       +-- the DT det
 |   |       +-- highest JJS amod
 |   |       +-- expected VBN amod
 |   +-- to IN prep
 |   |   +-- agents NNS pobj
 |   |       +-- all DT det
 |   +-- according VBG prep
 |       +-- to IN pcomp
 |           +-- Theorem NNP pobj
 |               +-- 2 CD num
 +-- . . punct
Input: 0.1875 0.39 0.41 0.43 0.45 0.47 0.49 2 3 4 5 6 7 8 9 10 11 12 13 expected utility VN -LRB- x -RRB- num ber ofparallelinteractions VN+ 1 -LRB- XN -RRB- VN -LRB- XN -RRB- VN 1 -LRB- XN -RRB- enlarged Figure 2
Parse:
12 CD ROOT
 +-- 0.1875 CD number
 +-- 0.39 CD number
 +-- 0.41 CD number
 +-- 0.43 CD number
 +-- 0.45 CD number
 +-- 0.47 CD number
 +-- 0.49 CD number
 +-- 2 CD number
 +-- 3 CD number
 +-- 4 CD dep
 +-- 5 CD number
 +-- 6 CD number
 +-- 7 CD dep
 +-- 8 CD number
 +-- 9 CD number
 +-- 10 CD number
 +-- 11 CD number
 +-- 13 CD dep
     +-- expected VBN partmod
         +-- VN NNP xcomp
             +-- utility NN nn
             +-- ofparallelinteractions NNS dep
                 +-- -LRB- -LRB- punct
                 +-- x SYM punct
                 +-- -RRB- -RRB- punct
                 +-- num NN nn
                 +-- ber NN nn
                 +-- VN+ SYM dep
                 |   +-- 1 CD dep
                 |       +-- XN NN dep
                 |       |   +-- -LRB- -LRB- punct
                 |       |   +-- -RRB- -RRB- punct
                 |       +-- VN UH dep
                 |       |   +-- -LRB- -LRB- punct
                 |       |   +-- XN SYM dep
                 |       |   +-- -RRB- -RRB- punct
                 |       +-- VN NNP dep
                 |           +-- 1 CD num
                 |           +-- XN SYM appos
                 |               +-- -LRB- -LRB- punct
                 |               +-- -RRB- -RRB- punct
                 +-- Figure NN dep
                     +-- enlarged VBN amod
                     +-- 2 CD num
Input: The cost function used is c -LRB- N -RRB- = 0.2 + 0.02N .
Parse:
c $ ROOT
 +-- function NN nsubj
 |   +-- The DT det
 |   +-- cost NN nn
 |   +-- used VBN partmod
 +-- is VBZ cop
 +-- N NNP dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- = SYM dep
 +-- 0.2 CD number
 +-- + SYM number
 +-- 0.02N CD number
 +-- . . punct
Input: The graph depicts a single agent '' s expected utility when all other agents are using N parallel interactions -LRB- on the horizontal axis -RRB- and the appropriate reservation value xN -LRB- calculated according to Equation 10 -RRB- .
Parse:
depicts VBZ ROOT
 +-- graph NN nsubj
 |   +-- The DT det
 +-- utility NN dobj
 |   +-- agent NN poss
 |   |   +-- a DT det
 |   |   +-- single JJ amod
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- expected VBN amod
 +-- using VBG advcl
 |   +-- when WRB advmod
 |   +-- agents NNS nsubj
 |   |   +-- all DT det
 |   |   +-- other JJ amod
 |   +-- are VBP aux
 |   +-- interactions NNS dobj
 |   |   +-- N NNP nn
 |   |   +-- parallel JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- on IN prep
 |   |   +-- axis NN pobj
 |   |       +-- the DT det
 |   |       +-- horizontal JJ amod
 |   +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- xN NNP conj
 |   +-- the DT det
 |   +-- value NN nn
 |   |   +-- appropriate JJ amod
 |   |   +-- reservation NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- calculated VBN partmod
 |   |   +-- according VBG prep
 |   |       +-- to IN pcomp
 |   |           +-- Equation NNP pobj
 |   |               +-- 10 CD num
 |   +-- -RRB- -RRB- punct
 +-- . . punct
Input: The different curves depict the expected utility of the agent when it uses a strategy
Parse:
depict VBP ROOT
 +-- curves NNS nsubj
 |   +-- The DT det
 |   +-- different JJ amod
 +-- utility NN dobj
 |   +-- the DT det
 |   +-- expected VBN amod
 |   +-- of IN prep
 |       +-- agent NN pobj
 |           +-- the DT det
 +-- uses VBZ advcl
     +-- when WRB advmod
     +-- it PRP nsubj
     +-- strategy NN dobj
         +-- a DT det
Input: According to the discussion following Theorem 3 , a stable equilibrium satisfies
Parse:
satisfies NNS ROOT
 +-- According VBG prep
 |   +-- to IN pcomp
 |       +-- discussion NN pobj
 |           +-- the DT det
 |           +-- following VBG prep
 |               +-- Theorem NNP pobj
 |                   +-- 3 CD num
 +-- , , punct
 +-- equilibrium NN nsubj
     +-- a DT det
     +-- stable JJ amod
Input: The strategy satisfying the latter condition in our example is -LRB- 9 , 0.437 -RRB- . .
Parse:
0.437 CD ROOT
 +-- strategy NN nsubj
 |   +-- The DT det
 |   +-- satisfying VBG partmod
 |       +-- condition NN dobj
 |       |   +-- the DT det
 |       |   +-- latter JJ amod
 |       +-- in IN prep
 |           +-- example NN pobj
 |               +-- our PRP$ poss
 +-- is VBZ cop
 +-- -LRB- -LRB- punct
 +-- 9 CD num
 +-- , , punct
 +-- -RRB- -RRB- punct
 +-- . . punct
