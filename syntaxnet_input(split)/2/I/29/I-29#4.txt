Input: Our solution framework combines two basic principles for coping with the problem of managing multi agent schedules in an uncertain and time stressed execution environment .
Parse:
combines VBZ ROOT
 +-- framework NN nsubj
 |   +-- Our PRP$ poss
 |   +-- solution NN nn
 +-- principles NNS dobj
 |   +-- two CD num
 |   +-- basic JJ amod
 |   +-- for IN prep
 |       +-- coping VBG pcomp
 |           +-- with IN prep
 |               +-- problem NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- managing VBG pcomp
 |                           +-- schedules NNS dobj
 |                           |   +-- multi JJ amod
 |                           |   +-- agent NN nn
 |                           +-- in IN prep
 |                               +-- environment NN pobj
 |                                   +-- an DT det
 |                                   +-- uncertain JJ amod
 |                                   |   +-- and CC cc
 |                                   |   +-- time NN conj
 |                                   +-- stressed VBD amod
 |                                   +-- execution NN nn
 +-- . . punct
Input: First is the use of a STN based flexible times representation of solution constraints , which allows execution to be driven by a set of schedules rather than a single point solution .
Parse:
is VBZ ROOT
 +-- First RB advmod
 +-- use NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- representation NN pobj
 |           +-- a DT det
 |           +-- times NNS nn
 |           |   +-- based VBN amod
 |           |   |   +-- STN NNP dep
 |           |   +-- flexible JJ amod
 |           +-- of IN prep
 |               +-- constraints NNS pobj
 |                   +-- solution NN nn
 |                   +-- , , punct
 |                   +-- allows VBZ rcmod
 |                       +-- which WDT nsubj
 |                       +-- driven VBN xcomp
 |                           +-- execution NN nsubjpass
 |                           +-- to TO aux
 |                           +-- be VB auxpass
 |                           +-- by IN prep
 |                               +-- set NN pobj
 |                                   +-- a DT det
 |                                   +-- of IN prep
 |                                   |   +-- schedules NNS pobj
 |                                   +-- rather RB cc
 |                                   |   +-- than IN mwe
 |                                   +-- solution NN conj
 |                                       +-- a DT det
 |                                       +-- single JJ amod
 |                                       +-- point NN nn
 +-- . . punct
Input: This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision .
Parse:
provides VBZ ROOT
 +-- This DT nsubj
 +-- hedge NN dobj
 |   +-- a DT det
 |   +-- basic JJ amod
 |   +-- against IN prep
 |       +-- uncertainty NN pobj
 |           +-- temporal JJ amod
 +-- and CC cc
 +-- used VBN conj
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- modulate VB xcomp
 |       +-- to TO aux
 |       +-- need NN dobj
 |           +-- the DT det
 |           +-- for IN prep
 |               +-- revision NN pobj
 |                   +-- solution NN nn
 +-- . . punct
Input: The second principle is to first respond locally to exceptional events , and then , as time permits , explore nonlocal options -LRB- i.e. , options involving change by 2 or more agents -RRB- for global solution improvement .
Parse:
is VBZ ROOT
 +-- principle NN nsubj
 |   +-- The DT det
 |   +-- second JJ amod
 +-- respond VB xcomp
 |   +-- to TO aux
 |   +-- first RB advmod
 |   +-- locally RB advmod
 |   +-- to IN prep
 |   |   +-- events NNS pobj
 |   |       +-- exceptional JJ amod
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- explore VB conj
 |       +-- then RB advmod
 |       +-- , , punct
 |       +-- permits VBZ advcl
 |       |   +-- as IN mark
 |       |   +-- time NN nsubj
 |       +-- options NNS dobj
 |           +-- nonlocal JJ amod
 |           +-- options NNS appos
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- i.e. FW advmod
 |           |   +-- , , punct
 |           |   +-- involving VBG partmod
 |           |   |   +-- change NN dobj
 |           |   |       +-- by IN prep
 |           |   |           +-- agents NNS pobj
 |           |   |               +-- 2 CD num
 |           |   |                   +-- or CC cc
 |           |   |                   +-- more JJR conj
 |           |   +-- -RRB- -RRB- punct
 |           +-- for IN prep
 |               +-- improvement NN pobj
 |                   +-- solution NN nn
 |                       +-- global JJ amod
 +-- . . punct
Input: This provides a means for keeping pace with execution , and for tying the amount of effort spent in more global multi agent solution improvement to the time available .
Parse:
provides VBZ ROOT
 +-- This DT nsubj
 +-- means NNS dobj
 |   +-- a DT det
 |   +-- for IN prep
 |       +-- keeping VBG pcomp
 |       |   +-- pace NN dobj
 |       |   +-- with IN prep
 |       |       +-- execution NN pobj
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- for IN conj
 |           +-- tying VBG pcomp
 |               +-- amount NN dobj
 |               |   +-- the DT det
 |               |   +-- of IN prep
 |               |   |   +-- effort NN pobj
 |               |   +-- spent VBN partmod
 |               |       +-- in IN prep
 |               |           +-- improvement NN pobj
 |               |               +-- solution NN nn
 |               |                   +-- more RBR amod
 |               |                   +-- agent NN nn
 |               |                       +-- global JJ amod
 |               |                       +-- multi JJ amod
 |               +-- to IN prep
 |                   +-- time NN pobj
 |                       +-- the DT det
 |                       +-- available JJ amod
 +-- . . punct
Input: Both local and non local problem solving time is further minimized by the use of a core incremental scheduling procedure .
Parse:
minimized VBN ROOT
 +-- problem NN nsubjpass
 |   +-- local JJ amod
 |   +-- solving VBG partmod
 |       +-- time NN dobj
 +-- is VBZ auxpass
 +-- further RBR advmod
 +-- by IN prep
 |   +-- use NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- procedure NN pobj
 |               +-- a DT det
 |               +-- core NN amod
 |               +-- incremental JJ amod
 |               +-- scheduling NN nn
 +-- . . punct
Input: Figure 3
Parse:
Figure NN ROOT
 +-- 3 CD num
Input: Our solution framework is made concrete in the agent architecture depicted in Figure 3 .
Parse:
made VBN ROOT
 +-- framework NN nsubjpass
 |   +-- Our PRP$ poss
 |   +-- solution NN nn
 +-- is VBZ auxpass
 +-- concrete JJ acomp
 +-- in IN prep
 |   +-- architecture NN pobj
 |       +-- the DT det
 |       +-- agent NN nn
 |       +-- depicted VBN partmod
 |           +-- in IN prep
 |               +-- Figure NN pobj
 |                   +-- 3 CD num
 +-- . . punct
Input: In its most basic form , an agent comprises four principal components an Executor , a Scheduler , a Distributed State Manager -LRB- DSM -RRB- , and an Options Manager all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN .
Parse:
comprises VBZ ROOT
 +-- In IN prep
 |   +-- form NN pobj
 |       +-- its PRP$ poss
 |       +-- basic JJ amod
 |           +-- most RBS advmod
 +-- , , punct
 +-- agent NN nsubj
 |   +-- an DT det
 +-- components NNS dobj
 |   +-- four CD num
 |   +-- principal JJ amod
 |   +-- Executor NN dep
 |   |   +-- an DT det
 |   +-- , , punct
 |   +-- Scheduler NNP conj
 |   |   +-- a DT det
 |   +-- Manager NNP conj
 |   |   +-- an DT det
 |   |   +-- Options NNPS nn
 |   |   +-- share VBP rcmod
 |   |       +-- of IN nsubj
 |   |       |   +-- all DT dep
 |   |       |   +-- which WDT pobj
 |   |       +-- model NN dobj
 |   |           +-- a DT det
 |   |           +-- common JJ amod
 |   |           +-- of IN prep
 |   |               +-- problem NN pobj
 |   |                   +-- the DT det
 |   |                   +-- current JJ amod
 |   |                   +-- and CC cc
 |   |                   +-- state NN conj
 |   |                   |   +-- solution NN nn
 |   |                   +-- couples VBZ rcmod
 |   |                       +-- that IN nsubj
 |   |                       +-- representation NN dobj
 |   |                       |   +-- a DT det
 |   |                       |   +-- domainlevel JJ amod
 |   |                       |   +-- of IN prep
 |   |                       |       +-- structure NN pobj
 |   |                       |           +-- the DT det
 |   |                       |           +-- subjective JJ amod
 |   |                       |           +-- taems NNS nn
 |   |                       |           |   +-- c NN nn
 |   |                       |           +-- task NN nn
 |   |                       +-- to IN prep
 |   |                           +-- STN NN pobj
 |   |                               +-- an DT det
 |   |                               +-- underlying VBG amod
 |   +-- and CC cc
 +-- . . punct
Input: At any point during operation , the currently installed schedule dictates the timing and sequence of domain level activities that will be initiated by the agent .
Parse:
dictates VBZ ROOT
 +-- At IN prep
 |   +-- point NN pobj
 |       +-- any DT det
 |       +-- during IN prep
 |           +-- operation NN pobj
 +-- , , punct
 +-- schedule NN nsubj
 |   +-- the DT det
 |   +-- installed VBN amod
 |       +-- currently RB advmod
 +-- timing NN dobj
 |   +-- the DT det
 |   +-- and CC cc
 |   +-- sequence NN conj
 |   +-- of IN prep
 |       +-- activities NNS pobj
 |           +-- level NN nn
 |           |   +-- domain NN nn
 |           +-- initiated VBN rcmod
 |               +-- that WDT nsubjpass
 |               +-- will MD aux
 |               +-- be VB auxpass
 |               +-- by IN prep
 |                   +-- agent NN pobj
 |                       +-- the DT det
 +-- . . punct
Input: The Executor , running in its own thread , continually monitors the enabling conditions of various pending activities , and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied .
Parse:
monitors VBZ ROOT
 +-- Executor NNP nsubj
 |   +-- The DT det
 +-- , , punct
 +-- running VBG partmod
 |   +-- in IN prep
 |       +-- thread NN pobj
 |           +-- its PRP$ poss
 |           +-- own JJ amod
 +-- continually RB advmod
 +-- conditions NNS dobj
 |   +-- the DT det
 |   +-- enabling VBG amod
 |   +-- of IN prep
 |       +-- activities NNS pobj
 |           +-- various JJ amod
 |           +-- pending VBG amod
 +-- and CC cc
 +-- activates VBZ conj
 |   +-- activity NN dobj
 |   |   +-- the DT det
 |   |   +-- next JJ amod
 |   |   +-- pending VBG amod
 |   +-- soon RB advmod
 |       +-- as RB advmod
 |       +-- satisfied JJ ccomp
 |           +-- as IN mark
 |           +-- all DT nsubjpass
 |           |   +-- of IN prep
 |           |       +-- constraints NNS pobj
 |           |           +-- its PRP$ poss
 |           |           +-- causal NN amod
 |           |               +-- and CC cc
 |           |               +-- temporal JJ conj
 |           +-- are VBP auxpass
 +-- . . punct
Input: When execution results are received back from the environment and or changes to assumed external constraints are received from other agents , the agent '' s model of current state is updated .
Parse:
updated VBN ROOT
 +-- received VBN advcl
 |   +-- When WRB advmod
 |   +-- results NNS nsubjpass
 |   |   +-- execution NN nn
 |   +-- are VBP auxpass
 |   +-- back RB advmod
 |   |   +-- from IN prep
 |   |       +-- environment NN pobj
 |   |           +-- the DT det
 |   +-- or CC cc
 |   |   +-- and CC cc
 |   +-- received VBN conj
 |       +-- changes NNS nsubjpass
 |       |   +-- assumed VBN infmod
 |       |       +-- to TO aux
 |       |       +-- constraints NNS dobj
 |       |           +-- external JJ amod
 |       +-- are VBP auxpass
 |       +-- from IN prep
 |           +-- agents NNS pobj
 |               +-- other JJ amod
 +-- , , punct
 +-- model NN nsubjpass
 |   +-- agent NN poss
 |   |   +-- the DT det
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- of IN prep
 |       +-- state NN pobj
 |           +-- current JJ amod
 +-- is VBZ auxpass
 +-- . . punct
Input: In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved , the Scheduler , running on a separate thread , is invoked to revise the current solution and install a new schedule .
Parse:
invoked VBN ROOT
 +-- In IN prep
 |   +-- cases NNS pobj
 |       +-- leads VBZ rcmod
 |           +-- where WRB advmod
 |           +-- update NN nsubj
 |           |   +-- this DT det
 |           +-- to IN prep
 |           |   +-- inconsistency NN pobj
 |           |       +-- in IN prep
 |           |           +-- STN NNP pobj
 |           |               +-- the DT det
 |           +-- or CC cc
 |           +-- recognized VBN conj
 |               +-- it PRP nsubjpass
 |               +-- is VBZ auxpass
 |               +-- otherwise RB advmod
 |               +-- improved VBN ccomp
 |                   +-- that IN mark
 |                   +-- schedule NN nsubj
 |                   |   +-- the DT det
 |                   |   +-- current JJ amod
 |                   |   +-- local JJ amod
 |                   +-- might MD aux
 |                   +-- now RB advmod
 |                   +-- be VB auxpass
 +-- , , punct
 +-- Scheduler NNP nsubj
 |   +-- the DT det
 +-- running VBG partmod
 |   +-- on IN prep
 |       +-- thread NN pobj
 |           +-- a DT det
 |           +-- separate JJ amod
 +-- is VBZ auxpass
 +-- revise VB xcomp
 |   +-- to TO aux
 |   +-- solution NN dobj
 |   |   +-- the DT det
 |   |   +-- current JJ amod
 |   +-- and CC cc
 |   +-- install VB conj
 |       +-- schedule NN dobj
 |           +-- a DT det
 |           +-- new JJ amod
 +-- . . punct
Input: Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler , the DSM is invoked to communicate these changes to interested agents -LRB- i.e. , those agents that share dependencies and have overlapping subjective views -RRB- .
Parse:
invoked VBN ROOT
 +-- change VBP advcl
 |   +-- Whenever WRB advmod
 |   +-- constraints NNS nsubj
 |   |   +-- local JJ amod
 |   |   +-- schedule NN nn
 |   +-- in IN prep
 |       +-- either CC dep
 |       +-- response NN pobj
 |       |   +-- to IN prep
 |       |       +-- update NN pobj
 |       |           +-- a DT det
 |       |           +-- current JJ amod
 |       |           +-- state NN nn
 |       +-- or CC cc
 |       +-- through IN conj
 |           +-- manipulation NN pobj
 |               +-- by IN prep
 |                   +-- Scheduler NNP pobj
 |                       +-- the DT det
 +-- , , punct
 +-- DSM NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- communicate VB xcomp
 |   +-- to TO aux
 |   +-- changes NNS dobj
 |   |   +-- these DT det
 |   +-- to IN prep
 |       +-- agents NNS pobj
 |           +-- interested JJ amod
 |           +-- i.e. FW appos
 |               +-- -LRB- -LRB- punct
 |               +-- , , punct
 |               +-- agents NNS appos
 |               |   +-- those DT det
 |               |   +-- share VBP rcmod
 |               |       +-- that WDT nsubj
 |               |       +-- dependencies NNS dobj
 |               |       +-- and CC cc
 |               |       +-- overlapping VBG conj
 |               |           +-- have VBP aux
 |               |           +-- views NNS dobj
 |               |               +-- subjective JJ amod
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: After responding locally to a given state update and communicating consequences , the agent will use any remaining computation time to explore possibilities for improvement through joint change .
Parse:
use VB ROOT
 +-- After IN prep
 |   +-- responding VBG pcomp
 |       +-- locally RB advmod
 |       +-- to IN prep
 |           +-- update NN pobj
 |               +-- a DT det
 |               +-- given VBN amod
 |               +-- state NN nn
 |               +-- and CC cc
 |               +-- consequences NNS conj
 |                   +-- communicating JJ amod
 +-- , , punct
 +-- agent NN nsubj
 |   +-- the DT det
 +-- will MD aux
 +-- time NN dobj
 |   +-- any DT det
 |   +-- remaining VBG amod
 |   +-- computation NN nn
 +-- explore VB xcomp
 |   +-- to TO aux
 |   +-- possibilities NNS dobj
 |       +-- for IN prep
 |           +-- improvement NN pobj
 |               +-- through IN prep
 |                   +-- change NN pobj
 |                       +-- joint JJ amod
 +-- . . punct
Input: The Option Manager utilizes the Scheduler -LRB- in this case in hypothetical mode -RRB- to generate one or more non local options , i.e. , identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule .
Parse:
utilizes VBZ ROOT
 +-- Manager NNP nsubj
 |   +-- The DT det
 |   +-- Option NN nn
 +-- Scheduler NNP dobj
 |   +-- the DT det
 +-- -LRB- -LRB- punct
 +-- in IN prep
 |   +-- case NN pobj
 |       +-- this DT det
 |       +-- in IN prep
 |           +-- mode NN pobj
 |               +-- hypothetical JJ amod
 +-- -RRB- -RRB- punct
 +-- generate VB xcomp
 |   +-- to TO aux
 |   +-- options NNS dobj
 |       +-- one CD num
 |       |   +-- or CC cc
 |       |   +-- more JJR conj
 |       +-- local JJ amod
 |       |   +-- non FW advmod
 |       +-- , , punct
 |       +-- i.e. FW advmod
 |       +-- identifying VBG partmod
 |           +-- changes NNS dobj
 |               +-- to IN prep
 |                   +-- schedule NN pobj
 |                       +-- the DT det
 |                       +-- of IN prep
 |                           +-- agents NNS pobj
 |                               +-- one CD num
 |                               |   +-- or CC cc
 |                               |   +-- more JJR conj
 |                               +-- other JJ amod
 |                               +-- enable VB rcmod
 |                                   +-- that WDT nsubj
 |                                   +-- will MD aux
 |                                   +-- agent NN dobj
 |                                   |   +-- the DT det
 |                                   |   +-- local JJ amod
 |                                   +-- raise VB xcomp
 |                                       +-- to TO aux
 |                                       +-- quality NN dobj
 |                                           +-- the DT det
 |                                           +-- of IN prep
 |                                               +-- schedule NN pobj
 |                                                   +-- its PRP$ poss
 +-- . . punct
Input: These options are formulated and communicated as queries to the appropriate remote agents , who in turn hypothetically evaluate the impact of proposed changes from their local perspective .
Parse:
formulated VBN ROOT
 +-- options NNS nsubjpass
 |   +-- These DT det
 +-- are VBP auxpass
 +-- and CC cc
 +-- communicated VBN conj
 +-- as IN prep
 |   +-- queries NNS pobj
 |       +-- to IN prep
 |           +-- agents NNS pobj
 |               +-- the DT det
 |               +-- appropriate JJ amod
 |               +-- remote JJ amod
 |               +-- , , punct
 |               +-- evaluate VBP rcmod
 |                   +-- who WP nsubj
 |                   +-- in IN prep
 |                   |   +-- turn NN pobj
 |                   +-- hypothetically RB advmod
 |                   +-- impact NN dobj
 |                       +-- the DT det
 |                       +-- of IN prep
 |                           +-- changes NNS pobj
 |                               +-- proposed VBN amod
 |                               +-- from IN prep
 |                                   +-- perspective NN pobj
 |                                       +-- their PRP$ poss
 |                                       +-- local JJ amod
 +-- . . punct
Input: In those cases where global improvement is verified , joint changes are committed to .
Parse:
committed VBN ROOT
 +-- In IN prep
 |   +-- cases NNS pobj
 |       +-- those DT det
 |       +-- verified VBN rcmod
 |           +-- where WRB advmod
 |           +-- improvement NN nsubjpass
 |           |   +-- global JJ amod
 |           +-- is VBZ auxpass
 +-- , , punct
 +-- changes NNS nsubjpass
 |   +-- joint JJ amod
 +-- are VBP auxpass
 +-- to IN prep
 +-- . . punct
Input: In the following sections we consider the mechanics of these components in more detail. .
Parse:
consider VBP ROOT
 +-- In IN prep
 |   +-- sections NNS pobj
 |       +-- the DT det
 |       +-- following JJ amod
 +-- we PRP nsubj
 +-- mechanics NNS dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- components NNS pobj
 |   |       +-- these DT det
 |   +-- in IN prep
 |       +-- detail. NNS pobj
 |           +-- more RBR amod
 +-- . . punct
