Input: Recently , Dietrich and List -LRB- 5 -RRB- showed that preference aggregation can be embedded in judgment aggregation .
Parse:
showed VBD ROOT
 +-- Recently RB advmod
 +-- , , punct
 +-- Dietrich NNP nsubj
 |   +-- and CC cc
 |   +-- 5 CD conj
 |       +-- List NN dep
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- embedded VBN ccomp
 |   +-- that IN mark
 |   +-- aggregation NN nsubjpass
 |   |   +-- preference NN nn
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- in IN prep
 |       +-- aggregation NN pobj
 |           +-- judgment NN nn
 +-- . . punct
Input: In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation .
Parse:
show VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- used VBN ccomp
 |   +-- that IN mark
 |   +-- logic NN nsubjpass
 |   |   +-- our PRP$ poss
 |   |   +-- judgment NN nn
 |   |   +-- aggregation NN nn
 |   +-- also RB advmod
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- reason VB xcomp
 |       +-- to TO aux
 |       +-- about IN prep
 |           +-- aggregation NN pobj
 |               +-- preference NN nn
 +-- . . punct
Input: Given a set K of alternatives , -LRB- 5 -RRB- defines a simple predicate logic LK with language L -LRB- LK -RRB- as follows
Parse:
defines VBZ ROOT
 +-- Given VBN prep
 |   +-- K NN dep
 |       +-- a DT det
 |       +-- set VBN amod
 |       +-- of IN prep
 |           +-- alternatives NNS pobj
 +-- , , punct
 +-- 5 CD nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- logic NN dobj
 |   +-- a DT det
 |   +-- simple JJ amod
 |   +-- predicate NN nn
 |   +-- LK , punct
 |   +-- with IN prep
 |       +-- L NNP pobj
 |           +-- language NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- LK NN dep
 |           +-- -RRB- -RRB- punct
 +-- follows VBZ advcl
     +-- as IN mark
Input: .
Parse:
. . ROOT
Input: . , a binary identity predicate = , a binary predicate P for strict preference , and the usual propositional and first order connectives ? Z is the collection of the following axioms
Parse:
collection NN ROOT
 +-- . . punct
 +-- , , punct
 +-- predicate NN nsubj
 |   +-- a DT det
 |   +-- binary JJ amod
 |   +-- identity NN nn
 |   +-- = , punct
 |   +-- , , punct
 |   +-- P NN conj
 |   |   +-- a DT det
 |   |   +-- binary JJ amod
 |   |   +-- predicate NN nn
 |   |   +-- for IN prep
 |   |       +-- preference NN pobj
 |   |           +-- strict JJ amod
 |   +-- and CC cc
 |   +-- connectives NNS conj
 |   |   +-- the DT det
 |   |   +-- usual JJ amod
 |   |   +-- propositional JJ amod
 |   |       +-- and CC cc
 |   |       +-- order NN conj
 |   |           +-- first JJ amod
 |   +-- ? . punct
 |   +-- Z NN conj
 +-- is VBZ cop
 +-- the DT det
 +-- of IN prep
     +-- axioms NNS pobj
         +-- the DT det
         +-- following VBG amod
Input: .
Parse:
. . ROOT
Input: .
Parse:
. . ROOT
Input: , An -RRB- = A , where A is the consistent and complete judgment set corresponding to F -LRB- L1 , .
Parse:
A NNP ROOT
 +-- , , punct
 +-- An DT nn
 +-- -RRB- -RRB- punct
 +-- = : nn
 +-- set NN rcmod
 |   +-- where WRB advmod
 |   +-- A NN nsubj
 |   +-- is VBZ cop
 |   +-- the DT det
 |   +-- consistent JJ amod
 |   |   +-- and CC cc
 |   |   +-- complete JJ conj
 |   +-- judgment NN nn
 |   +-- corresponding VBG dobj
 |       +-- to IN prep
 |           +-- F NNP pobj
 |               +-- -LRB- -LRB- punct
 |               +-- L1 CD num
 +-- . . punct
Input: .
Parse:
. . ROOT
Input: .
Parse:
. . ROOT
Input: , Ln -RRB- where Li is the preference relation corresponding to the consistent and complete judgment set Ai .
Parse:
Ln NFP ROOT
 +-- , , punct
 +-- -RRB- -RRB- punct
 +-- relation NN rcmod
 |   +-- where WRB advmod
 |   +-- Li NNP nsubj
 |   +-- is VBZ cop
 |   +-- the DT det
 |   +-- preference NN nn
 |   +-- corresponding VBG partmod
 |       +-- to IN prep
 |           +-- judgment NN pobj
 |               +-- the DT det
 |               +-- consistent JJ amod
 |               |   +-- and CC cc
 |               |   +-- complete JJ conj
 |               +-- set VBN partmod
 |                   +-- Ai NNP dobj
 +-- . . punct
Input: Thus we can use jal to reason about preference aggregation as follows .
Parse:
use VB ROOT
 +-- Thus RB advmod
 +-- we PRP nsubj
 +-- can MD aux
 +-- jal NN dobj
 +-- reason VB xcomp
 |   +-- to TO aux
 |   +-- about IN prep
 |   |   +-- aggregation NN pobj
 |   |       +-- preference NN nn
 |   +-- follows VBZ advcl
 |       +-- as IN mark
 +-- . . punct
