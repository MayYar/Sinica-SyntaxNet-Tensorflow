Input: Intelligent agents that are intended to work in dynamic environments must be able to gracefully handle unsuccessful tasks and plans .
Parse:
able JJ ROOT
 +-- agents NNS nsubj
 |   +-- Intelligent JJ amod
 |   +-- intended VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- are VBP auxpass
 |       +-- work VB xcomp
 |           +-- to TO aux
 |           +-- in IN prep
 |               +-- environments NNS pobj
 |                   +-- dynamic JJ amod
 +-- must MD aux
 +-- be VB cop
 +-- handle VB xcomp
 |   +-- to TO aux
 |   +-- gracefully RB advmod
 |   +-- tasks NNS dobj
 |       +-- unsuccessful JJ amod
 |       +-- and CC cc
 |       +-- plans NNS conj
 +-- . . punct
Input: In addition , such agents should be able to make rational decisions about an appropriate course of action , which may include aborting a task or plan , either as a result of the agent '' s own deliberations , or potentially at the request of another agent .
Parse:
able JJ ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- agents NNS nsubj
 |   +-- such JJ amod
 +-- should MD aux
 +-- be VB cop
 +-- make VB xcomp
 |   +-- to TO aux
 |   +-- decisions NNS dobj
 |   |   +-- rational JJ amod
 |   +-- about IN prep
 |   |   +-- course NN pobj
 |   |       +-- an DT det
 |   |       +-- appropriate JJ amod
 |   |       +-- of IN prep
 |   |       |   +-- action NN pobj
 |   |       +-- , , punct
 |   |       +-- include VB rcmod
 |   |           +-- which WDT nsubj
 |   |           +-- may MD aux
 |   |           +-- aborting VBG xcomp
 |   |               +-- task NN dobj
 |   |                   +-- a DT det
 |   |                   +-- or CC cc
 |   |                   +-- plan NN conj
 |   +-- , , punct
 |   +-- as IN prep
 |       +-- either CC preconj
 |       +-- result NN pobj
 |       |   +-- a DT det
 |       |   +-- of IN prep
 |       |       +-- deliberations NNS pobj
 |       |           +-- agent NN poss
 |       |           |   +-- the DT det
 |       |           |   +-- '' '' punct
 |       |           |   +-- s POS possessive
 |       |           +-- own JJ amod
 |       +-- , , punct
 |       +-- or CC cc
 |       +-- at IN conj
 |           +-- potentially RB advmod
 |           +-- request NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- agent NN pobj
 |                       +-- another DT det
 +-- . . punct
Input: In this paper we investigate the incorporation of aborts into a BDI style architecture .
Parse:
investigate VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- incorporation NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- aborts NNS pobj
 |   +-- into IN prep
 |       +-- architecture NN pobj
 |           +-- a DT det
 |           +-- BDI NNP nn
 |           +-- style NN nn
 +-- . . punct
Input: We discuss some conditions under which aborting a task or plan is appropriate , and how to determine the consequences of such a decision .
Parse:
discuss VBP ROOT
 +-- We PRP nsubj
 +-- conditions NNS dobj
 |   +-- some DT det
 |   +-- appropriate JJ rcmod
 |       +-- under IN prep
 |       |   +-- which WDT pobj
 |       +-- aborting VBG csubj
 |       |   +-- task NN dobj
 |       |       +-- a DT det
 |       |       +-- or CC cc
 |       |       +-- plan NN conj
 |       +-- is VBZ cop
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- determine VB conj
 |           +-- how WRB advmod
 |           +-- to TO aux
 |           +-- consequences NNS dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- decision NN pobj
 |                       +-- such PDT predet
 |                       +-- a DT det
 +-- . . punct
Input: We augment each plan with an optional abort method , analogous to the failure method found in some agent programming languages .
Parse:
augment VBP ROOT
 +-- We PRP nsubj
 +-- plan NN dobj
 |   +-- each DT det
 +-- with IN prep
 |   +-- method NN pobj
 |       +-- an DT det
 |       +-- optional JJ amod
 |       +-- abort NN nn
 |       +-- , , punct
 |       +-- analogous JJ amod
 |           +-- to IN prep
 |               +-- method NN pobj
 |                   +-- the DT det
 |                   +-- failure NN nn
 |                   +-- found VBN partmod
 |                       +-- in IN prep
 |                           +-- languages NNS pobj
 |                               +-- some DT det
 |                               +-- programming NN nn
 |                                   +-- agent NN nn
 +-- . . punct
Input: We provide an operational semantics for the execution cycle in the presence of aborts in the abstract agent language CAN , which enables us to specify a BDI based execution model without limiting our attention to a particular agent system -LRB- such as JACK , Jadex , Jason , or SPARK -RRB- .
Parse:
provide VBP ROOT
 +-- We PRP nsubj
 +-- semantics NNS dobj
 |   +-- an DT det
 |   +-- operational JJ amod
 |   +-- for IN prep
 |       +-- cycle NN pobj
 |           +-- the DT det
 |           +-- execution NN nn
 |           +-- in IN prep
 |               +-- presence NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                   |   +-- aborts NNS pobj
 |                   +-- in IN prep
 |                       +-- language NN pobj
 |                           +-- the DT det
 |                           +-- agent NN nn
 |                           |   +-- abstract JJ amod
 |                           +-- CAN NNP appos
 |                           +-- , , punct
 |                           +-- enables VBZ rcmod
 |                               +-- which WDT nsubj
 |                               +-- us PRP dobj
 |                               +-- specify VB xcomp
 |                                   +-- to TO aux
 |                                   +-- model NN dobj
 |                                   |   +-- a DT det
 |                                   |   +-- based VBN amod
 |                                   |   |   +-- BDI NNP dep
 |                                   |   +-- execution NN nn
 |                                   +-- without IN prep
 |                                       +-- limiting VBG pcomp
 |                                           +-- attention NN dobj
 |                                           |   +-- our PRP$ poss
 |                                           +-- to IN prep
 |                                               +-- system NN pobj
 |                                                   +-- a DT det
 |                                                   +-- particular JJ amod
 |                                                   +-- agent NN nn
 |                                                   +-- -LRB- -LRB- punct
 |                                                   +-- as IN prep
 |                                                   |   +-- such JJ mwe
 |                                                   |   +-- JACK NNP pobj
 |                                                   |       +-- , , punct
 |                                                   |       +-- Jadex NNP conj
 |                                                   |       +-- Jason NNP conj
 |                                                   |       +-- or CC cc
 |                                                   |       +-- SPARK NNP conj
 |                                                   +-- -RRB- -RRB- punct
 +-- . . punct
Input: A key technical challenge we address is the presence of parallel execution threads and of sub tasks , which require the agent to ensure that the abort methods for each plan are carried out in an appropriate sequence .
Parse:
presence NN ROOT
 +-- challenge NN nsubj
 |   +-- A DT det
 |   +-- key JJ amod
 |   +-- technical JJ amod
 |   +-- address VBP rcmod
 |       +-- we PRP nsubj
 +-- is VBZ cop
 +-- the DT det
 +-- of IN prep
 |   +-- threads NNS pobj
 |   |   +-- parallel JJ amod
 |   |   +-- execution NN nn
 |   +-- and CC cc
 |   +-- of IN conj
 |       +-- tasks NNS pobj
 |           +-- sub NN nn
 |           +-- , , punct
 |           +-- require VBP rcmod
 |               +-- which WDT nsubj
 |               +-- agent NN dobj
 |               |   +-- the DT det
 |               +-- ensure VB xcomp
 |                   +-- to TO aux
 |                   +-- carried VBN ccomp
 |                       +-- that IN mark
 |                       +-- methods NNS nsubjpass
 |                       |   +-- the DT det
 |                       |   +-- abort JJ amod
 |                       |   +-- for IN prep
 |                       |       +-- plan NN pobj
 |                       |           +-- each DT det
 |                       +-- are VBP auxpass
 |                       +-- out RP prt
 |                       +-- in IN prep
 |                           +-- sequence NN pobj
 |                               +-- an DT det
 |                               +-- appropriate JJ amod
 +-- . . punct
Input: I.2.11 -LRB- ARTIFICIAL INTELLIGENCE -RRB-
Parse:
INTELLIGENCE NN ROOT
 +-- I.2.11 LS dep
 +-- -LRB- -LRB- punct
 +-- ARTIFICIAL NNP nn
 +-- -RRB- -RRB- punct
