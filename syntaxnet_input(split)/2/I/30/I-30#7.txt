Input: We implemented the greedy distributed allocation protocol -LRB- GDAP -RRB- , the optimal allocation algorithm -LRB- OPT -RRB- , and the upper bound algorithm in Java , and tested them on a Linux PC .
Parse:
implemented VBD ROOT
 +-- We PRP nsubj
 +-- protocol NN dobj
 |   +-- the DT det
 |   +-- distributed VBN amod
 |   |   +-- greedy JJ dep
 |   +-- allocation NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- GDAP NNP dep
 |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- algorithm NNP conj
 |   |   +-- the DT det
 |   |   +-- allocation NN nn
 |   |   |   +-- optimal JJ amod
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- OPT NNP dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- and CC cc
 |   +-- algorithm NN conj
 |       +-- the DT det
 |       +-- upper JJ amod
 |       +-- bound VBN amod
 |       +-- in IN prep
 |           +-- Java NNP pobj
 +-- , , punct
 +-- and CC cc
 +-- tested VBD conj
 |   +-- them PRP dobj
 |   +-- on IN prep
 |       +-- PC NN pobj
 |           +-- a DT det
 |           +-- Linux NNP nn
 +-- . . punct
Input: The purpose of these experiments is to study the performance of the distributed algorithm in different problem settings using different social networks .
Parse:
is VBZ ROOT
 +-- purpose NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- experiments NNS pobj
 |           +-- these DT det
 +-- study VB xcomp
 |   +-- to TO aux
 |   +-- performance NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- algorithm NN pobj
 |   |           +-- the DT det
 |   |           +-- distributed VBN amod
 |   +-- in IN prep
 |       +-- settings NNS pobj
 |           +-- different JJ amod
 |           +-- problem NN nn
 |           +-- using VBG partmod
 |               +-- networks NNS dobj
 |                   +-- different JJ amod
 |                   +-- social JJ amod
 +-- . . punct
Input: The perThe Sixth Intl .
Parse:
perThe NN ROOT
 +-- The DT det
 +-- Intl NNP dep
 |   +-- Sixth NNP nn
 +-- . . punct
Input: Joint Conf .
Parse:
Conf NNP ROOT
 +-- Joint NNP nn
 +-- . . punct
Input: on Autonomous Agents and Multi Agent Systems -LRB- AAMAS 07 -RRB- 503 0.7 0.8 0.9 1 1.1 1.2 1.3 1.4 0.4 0.6 0.8 1 1.2 1.4 1.6 Rewardrelativetooptimal Resource ratio small world upper bound random upper bound scale free upper bound small world GDAP random GDAP scale free GDAP Figure 2
Parse:
Figure NN ROOT
 +-- on IN prep
 |   +-- Agents NNS pobj
 |       +-- Autonomous JJ amod
 |       +-- and CC cc
 |       +-- Systems NNPS conj
 |           +-- Multi NNP nn
 |           +-- Agent NNP nn
 |           +-- -LRB- -LRB- punct
 |           +-- 07 CD dep
 |           |   +-- AAMAS NNP nn
 |           +-- -RRB- -RRB- punct
 +-- 503 CD num
 +-- 0.7 CD num
 +-- 0.8 CD num
 +-- 0.9 CD num
 +-- 1 CD num
 +-- 1.1 CD num
 +-- 1.2 CD num
 +-- 1.3 CD num
 +-- 1.4 CD num
 +-- 0.4 CD num
 +-- 0.6 CD num
 +-- scale NN nn
 |   +-- 0.8 CD num
 |   +-- scale NN nn
 |   |   +-- 1.4 CD num
 |   |   |   +-- 1 CD number
 |   |   |   +-- 1.2 CD number
 |   |   +-- ratio NN nn
 |   |   |   +-- 1.6 CD num
 |   |   |   +-- Rewardrelativetooptimal NNP nn
 |   |   |   +-- Resource NN nn
 |   |   +-- small JJ amod
 |   |   +-- world NN dep
 |   |   +-- upper JJ amod
 |   |   +-- bound VBN amod
 |   |   +-- random JJ amod
 |   |   +-- bound JJ amod
 |   +-- free JJ amod
 |   +-- bound VBN amod
 |   |   +-- upper JJ advmod
 |   +-- world NN nn
 |   |   +-- small JJ amod
 |   +-- GDAP NNP nn
 |   +-- random JJ amod
 |   +-- GDAP , nn
 +-- GDAP NNP nn
 |   +-- free JJ amod
 +-- 2 CD num
Input: 0 5 10 15 20 25 30 0 2 4 6 8 10 12 14 16 18 Numberofagents Degree small world random scale free Figure 3
Parse:
Figure NN ROOT
 +-- 0 NFP punct
 +-- 5 CD number
 +-- 10 CD number
 +-- 15 CD number
 +-- 20 CD number
 +-- 25 CD number
 +-- 30 CD number
 +-- 0 CD number
 +-- 2 CD number
 +-- 4 CD number
 +-- 6 CD number
 +-- 8 CD number
 +-- 12 CD num
 +-- free JJ amod
 |   +-- scale NN npadvmod
 |       +-- 14 CD num
 |       +-- 16 CD num
 |       +-- Numberofagents NNS nn
 |       |   +-- 18 CD num
 |       +-- Degree NNP nn
 |       +-- small JJ amod
 |       +-- world NN nn
 |       +-- random JJ amod
 +-- 3 CD num
Input: formance measurements are the solution quality and computation time , where the solution quality is computed as follows .
Parse:
time NN ROOT
 +-- measurements NNS nsubj
 |   +-- formance NN nn
 +-- are VBP cop
 +-- the DT det
 +-- solution NN nn
 +-- quality NN nn
 |   +-- and CC cc
 |   +-- computation NN conj
 +-- , , punct
 +-- computed VBN rcmod
 |   +-- where WRB advmod
 |   +-- quality NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- solution NN nn
 |   +-- is VBZ auxpass
 |   +-- follows VBZ advcl
 |       +-- as IN mark
 +-- . . punct
Input: When the number of tasks is small , we compare the output of the distributed algorithm with the optimal solution , i.e. , SQ = GDAP OP T , but if it is not feasible to compute the optimal solution , we use the value returned by the upper bound algorithm for evaluation , i.e. , SQ = GDAP UB .
Parse:
compare VBP ROOT
 +-- small JJ advcl
 |   +-- When WRB advmod
 |   +-- number NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- tasks NNS pobj
 |   +-- is VBZ cop
 +-- , , punct
 +-- we PRP nsubj
 +-- output NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- algorithm NN pobj
 |           +-- the DT det
 |           +-- distributed VBN amod
 +-- with IN prep
 |   +-- solution NN pobj
 |       +-- the DT det
 |       +-- optimal JJ amod
 |       +-- , , punct
 |       +-- T NNP appos
 |           +-- i.e. FW advmod
 |           +-- , , punct
 |           +-- SQ NN dep
 |           +-- = SYM dep
 |           +-- GDAP GW nn
 |           +-- OP NNP nn
 +-- but CC cc
 +-- use VBP conj
 |   +-- feasible JJ advcl
 |   |   +-- if IN mark
 |   |   +-- it PRP nsubj
 |   |   +-- is VBZ cop
 |   |   +-- not RB neg
 |   |   +-- compute VB xcomp
 |   |       +-- to TO aux
 |   |       +-- solution NN dobj
 |   |           +-- the DT det
 |   |           +-- optimal JJ amod
 |   +-- , , punct
 |   +-- we PRP nsubj
 |   +-- value NN dobj
 |   |   +-- the DT det
 |   |   +-- returned VBN partmod
 |   |       +-- by IN prep
 |   |           +-- algorithm NN pobj
 |   |               +-- the DT det
 |   |               +-- upper JJ amod
 |   |               +-- bound VBN amod
 |   +-- for IN prep
 |       +-- evaluation NN pobj
 |           +-- , , punct
 |           +-- i.e. FW conj
 |           +-- UB NNP conj
 |               +-- SQ NN nn
 |               +-- = SYM dep
 |               +-- GDAP NNP nn
 +-- . . punct
Input: To see whether the latter is a good measure , we also compare the quality of the upper bound to the optimal solution for smaller problems .
Parse:
compare VBP ROOT
 +-- see VB advcl
 |   +-- To TO aux
 |   +-- measure NN ccomp
 |       +-- whether IN mark
 |       +-- latter NN nsubj
 |       |   +-- the DT det
 |       +-- is VBZ cop
 |       +-- a DT det
 |       +-- good JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- also RB advmod
 +-- quality NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- upper JJ pobj
 |           +-- the DT det
 |           +-- bound VBN partmod
 |               +-- to IN prep
 |                   +-- solution NN pobj
 |                       +-- the DT det
 |                       +-- optimal JJ amod
 |                       +-- for IN prep
 |                           +-- problems NNS pobj
 |                               +-- smaller JJR amod
 +-- . . punct
Input: In the following , we describe the setup of all experiments , and present the results .
Parse:
describe VBP ROOT
 +-- In IN prep
 |   +-- following VBG pobj
 |       +-- the DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- setup NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- experiments NNS pobj
 |           +-- all DT det
 +-- and CC cc
 +-- present VB conj
 |   +-- results NNS dobj
 |       +-- the DT det
 +-- . . punct
Input: 5.1 Experimental settings We consider several experimental environments .
Parse:
settings NNS ROOT
 +-- 5.1 CD num
 +-- Experimental JJ amod
 +-- consider VBP rcmod
 |   +-- We PRP nsubj
 |   +-- environments NNS dobj
 |       +-- several JJ amod
 |       +-- experimental JJ amod
 +-- . . punct
Input: In all environments the agents are connected by a social network .
Parse:
connected VBN ROOT
 +-- In IN prep
 |   +-- environments NNS pobj
 |       +-- all DT det
 +-- agents NNS nsubjpass
 |   +-- the DT det
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- network NN pobj
 |       +-- a DT det
 |       +-- social JJ amod
 +-- . . punct
Input: In the experiments , three different networks are used to simulate the social relationships among agents in potential realworld problems .
Parse:
used VBN ROOT
 +-- In IN prep
 |   +-- experiments NNS pobj
 |       +-- the DT det
 +-- , , punct
 +-- networks NNS nsubjpass
 |   +-- three CD num
 |   +-- different JJ amod
 +-- are VBP auxpass
 +-- simulate VB xcomp
 |   +-- to TO aux
 |   +-- relationships NNS dobj
 |   |   +-- the DT det
 |   |   +-- social JJ amod
 |   |   +-- among IN prep
 |   |       +-- agents NNS pobj
 |   +-- in IN prep
 |       +-- problems NNS pobj
 |           +-- potential JJ amod
 |           +-- realworld NN nn
 +-- . . punct
Input: Small world networks are networks where most neighbors of an agent are also connected to each other .
Parse:
networks NNS ROOT
 +-- networks NNS nsubj
 |   +-- Small JJ amod
 |   +-- world NN nn
 +-- are VBP cop
 +-- connected VBN rcmod
 |   +-- where WRB advmod
 |   +-- neighbors NNS nsubjpass
 |   |   +-- most JJS amod
 |   |   +-- of IN prep
 |   |       +-- agent NN pobj
 |   |           +-- an DT det
 |   +-- are VBP auxpass
 |   +-- also RB advmod
 |   +-- to IN prep
 |       +-- other JJ pobj
 |           +-- each DT det
 +-- . . punct
Input: For the experiments we use a method for generating random small world networks proposed by Watts et al .
Parse:
use VBP ROOT
 +-- For IN prep
 |   +-- experiments NNS pobj
 |       +-- the DT det
 +-- we PRP nsubj
 +-- method NN dobj
 |   +-- a DT det
 |   +-- for IN prep
 |       +-- generating VBG pcomp
 |           +-- networks NNS dobj
 |               +-- random JJ amod
 |               +-- small JJ amod
 |               +-- world NN nn
 |               +-- proposed VBN partmod
 |                   +-- by IN prep
 |                       +-- al NNP pobj
 |                           +-- Watts NNP nn
 |                           +-- et NNP nn
 +-- . . punct
Input: -LRB- 22 -RRB- , with a fixed rewiring probability p = 0.05 .
Parse:
22 LS ROOT
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- , , punct
 +-- with IN prep
 |   +-- p NN pobj
 |       +-- a DT det
 |       +-- rewiring VBG nn
 |       |   +-- fixed VBN amod
 |       +-- probability NN nn
 |       +-- = SYM dep
 |       +-- 0.05 CD num
 +-- . . punct
Input: Scale free networks have the property that a couple of nodes have many connections , and many nodes have only a small number of connections .
Parse:
have VBP ROOT
 +-- networks NNS nsubj
 |   +-- free JJ amod
 |       +-- Scale NN npadvmod
 +-- property NN dobj
 |   +-- the DT det
 |   +-- have VBP rcmod
 |       +-- that WDT dobj
 |       +-- couple NN nsubj
 |       |   +-- a DT det
 |       |   +-- of IN prep
 |       |       +-- nodes NNS pobj
 |       +-- connections NNS dobj
 |           +-- many JJ amod
 +-- , , punct
 +-- and CC cc
 +-- have VBP conj
 |   +-- nodes NNS nsubj
 |   |   +-- many JJ amod
 |   +-- number NN dobj
 |       +-- only RB advmod
 |       +-- a DT det
 |       +-- small JJ amod
 |       +-- of IN prep
 |           +-- connections NNS pobj
 +-- . . punct
Input: To generate these we use the implementation in the JUNG library of the generator proposed by Barab ? asi and Albert -LRB- 3 -RRB- .
Parse:
use VBP ROOT
 +-- generate VB dep
 |   +-- To TO aux
 |   +-- these DT dobj
 +-- we PRP nsubj
 +-- implementation NN dobj
 |   +-- the DT det
 +-- in IN prep
 |   +-- library NN pobj
 |       +-- the DT det
 |       +-- JUNG JJ amod
 |       +-- of IN prep
 |           +-- generator NN pobj
 |               +-- the DT det
 |               +-- proposed VBN partmod
 |                   +-- by IN prep
 |                       +-- Barab NNP pobj
 |                           +-- ? . punct
 |                           +-- asi UH conj
 |                           +-- and CC cc
 |                           +-- Albert NNP conj
 |                               +-- -LRB- -LRB- punct
 |                               +-- 3 CD dep
 |                               +-- -RRB- -RRB- punct
 +-- . . punct
Input: We also generate random networks as follows .
Parse:
generate VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- networks NNS dobj
 |   +-- random JJ amod
 +-- follows VBZ advcl
 |   +-- as IN mark
 +-- . . punct
Input: First we connect each agent to another agent such that all agents are connected .
Parse:
connect VBP ROOT
 +-- First RB advmod
 +-- we PRP nsubj
 +-- agent NN dobj
 |   +-- each DT det
 +-- to IN prep
 |   +-- agent NN pobj
 |       +-- another DT det
 |       +-- such JJ amod
 |           +-- connected VBN ccomp
 |               +-- that IN mark
 |               +-- agents NNS nsubjpass
 |               |   +-- all DT det
 |               +-- are VBP auxpass
 +-- . . punct
Input: Next , we randomly add connections until the desired average degree has been reached .
Parse:
add VBP ROOT
 +-- Next RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- randomly RB advmod
 +-- connections NNS dobj
 +-- reached VBN advcl
 |   +-- until IN mark
 |   +-- degree NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- desired VBN amod
 |   |   +-- average JJ amod
 |   +-- has VBZ aux
 |   +-- been VBN auxpass
 +-- . . punct
Input: We now describe the different settings used in our experiments with both small and large scale problems .
Parse:
describe VBP ROOT
 +-- We PRP nsubj
 +-- now RB advmod
 +-- settings NNS dobj
 |   +-- the DT det
 |   +-- different JJ amod
 |   +-- used VBN partmod
 |       +-- in IN prep
 |           +-- experiments NNS pobj
 |               +-- our PRP$ poss
 |               +-- with IN prep
 |                   +-- problems NNS pobj
 |                       +-- small JJ amod
 |                       |   +-- both CC preconj
 |                       |   +-- and CC cc
 |                       |   +-- large JJ conj
 |                       +-- scale NN nn
 +-- . . punct
Input: Setting 1 .
Parse:
Setting VBG ROOT
 +-- 1 CD dobj
 +-- . . punct
Input: The number of agents is 40 , and the number of tasks is 20 .
Parse:
40 CD ROOT
 +-- number NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- agents NNS pobj
 +-- is VBZ cop
 +-- , , punct
 +-- and CC cc
 +-- 20 CD conj
 |   +-- number NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- tasks NNS pobj
 |   +-- is VBZ cop
 +-- . . punct
Input: The number of different resource types is bounded by 5 , and the average number of resources required by a task is 30 .
Parse:
bounded VBN ROOT
 +-- number NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- types NNS pobj
 |           +-- different JJ amod
 |           +-- resource NN nn
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- 5 CD pobj
 +-- , , punct
 +-- and CC cc
 +-- 30 CD conj
 |   +-- number NN nsubj
 |   |   +-- the DT det
 |   |   +-- average JJ amod
 |   |   +-- of IN prep
 |   |       +-- resources NNS pobj
 |   |           +-- required VBN partmod
 |   |               +-- by IN prep
 |   |                   +-- task NN pobj
 |   |                       +-- a DT det
 |   +-- is VBZ cop
 +-- . . punct
Input: Consequently , the total number of resources required by the tasks is fixed .
Parse:
fixed VBN ROOT
 +-- Consequently RB advmod
 +-- , , punct
 +-- number NN nsubjpass
 |   +-- the DT det
 |   +-- total JJ amod
 |   +-- of IN prep
 |       +-- resources NNS pobj
 |           +-- required VBN partmod
 |               +-- by IN prep
 |                   +-- tasks NNS pobj
 |                       +-- the DT det
 +-- is VBZ auxpass
 +-- . . punct
Input: However , the resources available to the agents are varied .
Parse:
varied VBN ROOT
 +-- However RB advmod
 +-- , , punct
 +-- resources NNS nsubjpass
 |   +-- the DT det
 |   +-- available JJ amod
 |       +-- to IN prep
 |           +-- agents NNS pobj
 |               +-- the DT det
 +-- are VBP auxpass
 +-- . . punct
Input: We define the resource ratio to refer to the ratio between the total number of available resources and the total number of required resources .
Parse:
define VBP ROOT
 +-- We PRP nsubj
 +-- ratio NN dobj
 |   +-- the DT det
 |   +-- resource NN nn
 |   +-- refer VB infmod
 |       +-- to TO aux
 |       +-- to IN prep
 |           +-- ratio NN pobj
 |               +-- the DT det
 |               +-- between IN prep
 |                   +-- number NN pobj
 |                       +-- the DT det
 |                       +-- total JJ amod
 |                       +-- of IN prep
 |                       |   +-- resources NNS pobj
 |                       |       +-- available JJ amod
 |                       +-- and CC cc
 |                       +-- number NN conj
 |                           +-- the DT det
 |                           +-- total JJ amod
 |                           +-- of IN prep
 |                               +-- resources NNS pobj
 |                                   +-- required VBN amod
 +-- . . punct
Input: Resources are allocated uniformly to the agents .
Parse:
allocated VBN ROOT
 +-- Resources NNS nsubjpass
 +-- are VBP auxpass
 +-- uniformly RB advmod
 +-- to IN prep
 |   +-- agents NNS pobj
 |       +-- the DT det
 +-- . . punct
Input: The average degrees of the networks may also change .
Parse:
change VB ROOT
 +-- degrees NNS nsubj
 |   +-- The DT det
 |   +-- average JJ amod
 |   +-- of IN prep
 |       +-- networks NNS pobj
 |           +-- the DT det
 +-- may MD aux
 +-- also RB advmod
 +-- . . punct
Input: In this setting the task benefits are distributed normally around the number of resources required .
Parse:
distributed VBN ROOT
 +-- In IN prep
 |   +-- setting VBG pobj
 |       +-- this DT det
 +-- benefits NNS nsubjpass
 |   +-- the DT det
 |   +-- task NN nn
 +-- are VBP auxpass
 +-- normally RB advmod
 +-- around IN prep
 |   +-- number NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- resources NNS pobj
 |               +-- required VBN partmod
 +-- . . punct
Input: Setting 2 .
Parse:
Setting VBG ROOT
 +-- 2 CD dobj
 +-- . . punct
Input: This setting is similar to Setting 1 , but here we let the benefits of the tasks vary dramatically 40 % of the tasks have around 10 times higher benefit than the other 60 % of the tasks .
Parse:
similar JJ ROOT
 +-- setting NN nsubj
 |   +-- This DT det
 +-- is VBZ cop
 +-- to IN prep
 |   +-- Setting VBG pcomp
 |       +-- 1 CD dobj
 +-- , , punct
 +-- but CC cc
 +-- let VBP conj
 |   +-- here RB advmod
 |   +-- we PRP nsubj
 |   +-- vary VBP ccomp
 |       +-- benefits NNS nsubj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- tasks NNS pobj
 |       |           +-- the DT det
 |       +-- dramatically RB advmod
 |       +-- have VBP ccomp
 |           +-- % NN nsubj
 |           |   +-- 40 CD num
 |           |   +-- of IN prep
 |           |       +-- tasks NNS pobj
 |           |           +-- the DT det
 |           +-- benefit NN dobj
 |               +-- times NNS num
 |               |   +-- around RB quantmod
 |               |   +-- 10 CD number
 |               |   +-- higher JJR quantmod
 |               +-- than IN prep
 |                   +-- % NN pobj
 |                       +-- the DT det
 |                       +-- other JJ amod
 |                       +-- 60 CD num
 |                       +-- of IN prep
 |                           +-- tasks NNS pobj
 |                               +-- the DT det
 +-- . . punct
Input: Setting 3 .
Parse:
Setting VBG ROOT
 +-- 3 CD dobj
 +-- . . punct
Input: This setting is for large scale problems .
Parse:
is VBZ ROOT
 +-- setting NN nsubj
 |   +-- This DT det
 +-- for IN prep
 |   +-- problems NNS pobj
 |       +-- large JJ amod
 |       +-- scale NN nn
 +-- . . punct
Input: The ratio between the number of agents and the number of tasks is set to 5 3 , and the number of agents varies from 100 to 2000 .
Parse:
set VBN ROOT
 +-- ratio NN nsubjpass
 |   +-- The DT det
 |   +-- between IN prep
 |       +-- number NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- agents NNS pobj
 |           +-- and CC cc
 |           +-- number NN conj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- tasks NNS pobj
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- 3 CD pobj
 |       +-- 5 CD number
 +-- , , punct
 +-- and CC cc
 +-- varies VBZ conj
 |   +-- number NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- agents NNS pobj
 |   +-- from IN prep
 |       +-- 100 CD pobj
 |       +-- to IN prep
 |           +-- 2000 CD pobj
 +-- . . punct
Input: We also fix the resource ratio to 1.2 and the average degree to 6 .
Parse:
fix VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- ratio NN dobj
 |   +-- the DT det
 |   +-- resource NN nn
 |   +-- to IN prep
 |   |   +-- 1.2 CD pobj
 |   +-- and CC cc
 |   +-- degree NN conj
 |       +-- the DT det
 |       +-- average JJ amod
 |       +-- to IN prep
 |           +-- 6 CD pobj
 +-- . . punct
Input: The number of different resource types is 20 , and the average resource requirement of a tasks is 100 .
Parse:
20 CD ROOT
 +-- number NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- types NNS pobj
 |           +-- different JJ amod
 |           +-- resource NN nn
 +-- is VBZ cop
 +-- , , punct
 +-- and CC cc
 +-- 100 CD conj
 |   +-- requirement NN nsubj
 |   |   +-- the DT det
 |   |   +-- average JJ amod
 |   |   +-- resource NN nn
 |   |   +-- of IN prep
 |   |       +-- tasks NNS pobj
 |   |           +-- a DT det
 |   +-- is VBZ cop
 +-- . . punct
Input: The task benefits are again normally distributed .
Parse:
distributed VBN ROOT
 +-- benefits NNS nsubjpass
 |   +-- The DT det
 |   +-- task NN nn
 +-- are VBP auxpass
 +-- again RB advmod
 +-- normally RB advmod
 +-- . . punct
Input: 5.2 Experimental results The experiments are done with the three different settings in the three different networks mentioned before , where each recorded data is the average over 20 random instances .
Parse:
results NNS ROOT
 +-- 5.2 CD num
 +-- Experimental JJ amod
 +-- done VBN dep
 |   +-- experiments NNS nsubjpass
 |   |   +-- The DT det
 |   +-- are VBP auxpass
 |   +-- with IN prep
 |       +-- settings NNS pobj
 |           +-- the DT det
 |           +-- three CD num
 |           +-- different JJ amod
 |           +-- in IN prep
 |               +-- networks NNS pobj
 |                   +-- the DT det
 |                   +-- three CD num
 |                   +-- different JJ amod
 |                   +-- mentioned VBN partmod
 |                   |   +-- before RB advmod
 |                   +-- , , punct
 |                   +-- average NN rcmod
 |                       +-- where WRB advmod
 |                       +-- data NN nsubj
 |                       |   +-- each DT det
 |                       |   +-- recorded VBN amod
 |                       +-- is VBZ cop
 |                       +-- the DT det
 |                       +-- instances NNS dobj
 |                           +-- 20 CD num
 |                           |   +-- over IN quantmod
 |                           +-- random JJ amod
 +-- . . punct
Input: 5.2.1 Experiment 1 Experimental setting 1 is used for this set of experiments .
Parse:
used VBN ROOT
 +-- setting NN nsubjpass
 |   +-- 5.2.1 CD num
 |   +-- Experiment JJ amod
 |   +-- 1 CD num
 |   +-- Experimental JJ amod
 +-- is VBZ auxpass
 +-- for IN prep
 |   +-- set NN pobj
 |       +-- this DT det
 |       +-- of IN prep
 |           +-- experiments NNS pobj
 +-- . . punct
Input: We would like to see how the GDAP behaves in the different networks when the number of resources available to the agents is changing .
Parse:
like VB ROOT
 +-- We PRP nsubj
 +-- would MD aux
 +-- see VB xcomp
 |   +-- to TO aux
 |   +-- behaves VBZ ccomp
 |       +-- how WRB advmod
 |       +-- GDAP NNP nsubj
 |       |   +-- the DT det
 |       +-- in IN prep
 |       |   +-- networks NNS pobj
 |       |       +-- the DT det
 |       |       +-- different JJ amod
 |       +-- changing VBG advcl
 |           +-- when WRB advmod
 |           +-- number NN nsubj
 |           |   +-- the DT det
 |           |   +-- of IN prep
 |           |       +-- resources NNS pobj
 |           |           +-- available JJ amod
 |           |               +-- to IN prep
 |           |                   +-- agents NNS pobj
 |           |                       +-- the DT det
 |           +-- is VBZ aux
 +-- . . punct
Input: We also study the behavior of our upper bound algorithm .
Parse:
study VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- behavior NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- algorithm NN pobj
 |           +-- our PRP$ poss
 |           +-- upper JJ amod
 |           +-- bound VBN amod
 +-- . . punct
Input: For this experiment we fix the average number of neighbors -LRB- degree -RRB- in each network type to six .
Parse:
fix VBP ROOT
 +-- For IN prep
 |   +-- experiment NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- number NN dobj
 |   +-- the DT det
 |   +-- average JJ amod
 |   +-- of IN prep
 |   |   +-- neighbors NNS pobj
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- degree NN dep
 |   |       +-- -RRB- -RRB- punct
 |   +-- in IN prep
 |       +-- type NN pobj
 |           +-- each DT det
 |           +-- network NN nn
 +-- to IN prep
 |   +-- six CD pobj
 +-- . . punct
Input: In Figure 2 we see how the quality of both the upper bound and the GDAP algorithm depends on the resource ratio .
Parse:
see VBP ROOT
 +-- In IN prep
 |   +-- Figure NN pobj
 |       +-- 2 CD num
 +-- we PRP nsubj
 +-- depends VBZ ccomp
 |   +-- how WRB advmod
 |   +-- quality NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- bound VBN pobj
 |   |           +-- both CC preconj
 |   |           +-- the DT det
 |   |           +-- upper JJ amod
 |   |           +-- and CC cc
 |   |           +-- algorithm NNP conj
 |   |               +-- the DT det
 |   |               +-- GDAP NNP nn
 |   +-- on IN prep
 |       +-- ratio NN pobj
 |           +-- the DT det
 |           +-- resource NN nn
 +-- . . punct
Input: Remarkably , for lower resource ratios our GDAP is much closer to the optimal allocation than the upper bound .
Parse:
closer JJR ROOT
 +-- Remarkably RB advmod
 +-- , , punct
 +-- for IN prep
 |   +-- ratios VBZ pobj
 |       +-- lower JJR amod
 |       +-- resource NN nn
 +-- GDAP NNP nsubj
 |   +-- our PRP$ poss
 +-- is VBZ cop
 +-- much RB advmod
 +-- to IN prep
 |   +-- allocation NN pobj
 |       +-- the DT det
 |       +-- optimal JJ amod
 +-- bound VBN ccomp
 |   +-- than IN mark
 |   +-- upper JJ nsubj
 |       +-- the DT det
 +-- . . punct
Input: When the resource ratio grows above 1.5 , the graphs of the upper bound and the GDAP converge , meaning that both are really close to the optimal solution .
Parse:
bound VBN ROOT
 +-- grows VBZ advcl
 |   +-- When WRB advmod
 |   +-- ratio NN nsubj
 |   |   +-- the DT det
 |   |   +-- resource NN nn
 |   +-- above IN prep
 |       +-- 1.5 CD pobj
 +-- , , punct
 +-- graphs NNS nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- upper JJ pobj
 |           +-- the DT det
 +-- and CC cc
 +-- converge NN conj
 |   +-- GDAP NNP nsubj
 |       +-- the DT det
 +-- meaning VBG partmod
 |   +-- close JJ ccomp
 |       +-- that IN mark
 |       +-- both DT nsubj
 |       +-- are VBP cop
 |       +-- really RB advmod
 |       +-- to IN prep
 |           +-- solution NN pobj
 |               +-- the DT det
 |               +-- optimal JJ amod
 +-- . . punct
Input: This can be explained by the fact that when plenty of resources are available , all tasks can be allocated without any conflicts .
Parse:
explained VBN ROOT
 +-- This DT nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- by IN prep
 |   +-- fact NN pobj
 |       +-- the DT det
 |       +-- allocated VBN ccomp
 |           +-- that IN mark
 |           +-- available JJ advcl
 |           |   +-- when WRB advmod
 |           |   +-- plenty NN nsubj
 |           |   |   +-- of IN prep
 |           |   |       +-- resources NNS pobj
 |           |   +-- are VBP cop
 |           +-- , , punct
 |           +-- tasks NNS nsubjpass
 |           |   +-- all DT det
 |           +-- can MD aux
 |           +-- be VB auxpass
 |           +-- without IN prep
 |               +-- conflicts NNS pobj
 |                   +-- any DT det
 +-- . . punct
Input: However , when resources are very scarce , the upper bound is much too optimistic , because it is based on the allocation of sub tasks per resource type , and does not reason about how many of the tasks can actually be allocated completely .
Parse:
optimistic JJ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- scarce JJ advcl
 |   +-- when WRB advmod
 |   +-- resources NNS nsubj
 |   +-- are VBP cop
 |   +-- very RB advmod
 +-- upper JJ nsubj
 |   +-- the DT det
 |   +-- bound VBN partmod
 +-- is VBZ cop
 +-- much RB advmod
 +-- too RB advmod
 +-- based VBN advcl
 |   +-- because IN mark
 |   +-- it PRP nsubjpass
 |   +-- is VBZ auxpass
 |   +-- on IN prep
 |   |   +-- allocation NN pobj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- tasks NNS pobj
 |   |               +-- sub NN nn
 |   |               +-- per IN prep
 |   |                   +-- type NN pobj
 |   |                       +-- resource NN nn
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- reason VB conj
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- about IN prep
 |           +-- allocated VBN pcomp
 |               +-- how WRB advmod
 |               +-- many JJ nsubjpass
 |               |   +-- of IN prep
 |               |       +-- tasks NNS pobj
 |               |           +-- the DT det
 |               +-- can MD aux
 |               +-- actually RB advmod
 |               +-- be VB auxpass
 |               +-- completely RB advmod
 +-- . . punct
Input: We also notice from the graph that the solution quality of the GDAP on all three networks is quite high -LRB- over 0.8 -RRB- when the available resource is very limited -LRB- 0.3 -RRB- .
Parse:
notice VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- from IN prep
 |   +-- graph NN pobj
 |       +-- the DT det
 +-- high JJ ccomp
 |   +-- that IN mark
 |   +-- quality NN nsubj
 |   |   +-- the DT det
 |   |   +-- solution NN nn
 |   |   +-- of IN prep
 |   |   |   +-- GDAP NNP pobj
 |   |   |       +-- the DT det
 |   |   +-- on IN prep
 |   |       +-- networks NNS pobj
 |   |           +-- all DT det
 |   |           +-- three CD num
 |   +-- is VBZ cop
 |   +-- quite RB advmod
 |   +-- -LRB- -LRB- punct
 |   +-- over IN prep
 |   |   +-- 0.8 CD pobj
 |   +-- -RRB- -RRB- punct
 |   +-- limited JJ advcl
 |       +-- when WRB advmod
 |       +-- resource NN nsubj
 |       |   +-- the DT det
 |       |   +-- available JJ amod
 |       +-- is VBZ cop
 |       +-- very RB advmod
 |       +-- 0.3 CD dobj
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: It drops below 0.8 with the increased ratio and goes up again once there are plenty of resources available -LRB- resource ratio 0.9 -RRB- .
Parse:
drops VBZ ROOT
 +-- It PRP nsubj
 +-- below IN prep
 |   +-- 0.8 CD pobj
 +-- with IN prep
 |   +-- ratio NN pobj
 |       +-- the DT det
 |       +-- increased VBN amod
 +-- and CC cc
 +-- goes VBZ conj
 |   +-- up RP advmod
 |   +-- again RB advmod
 |   +-- are VBP advcl
 |       +-- once RB mark
 |       +-- there EX expl
 |       +-- plenty NN nsubj
 |           +-- of IN prep
 |           |   +-- resources NNS pobj
 |           +-- available JJ amod
 |               +-- ratio NN dep
 |                   +-- -LRB- -LRB- punct
 |                   +-- resource NN nn
 |                   +-- 0.9 CD num
 |                   +-- -RRB- -RRB- punct
 +-- . . punct
Input: Clearly , if 504 The Sixth Intl .
Parse:
Intl NNP ROOT
 +-- Clearly RB advmod
 +-- , , punct
 +-- if IN dep
 +-- 504 CD num
 +-- The DT det
 +-- Sixth NNP nn
 +-- . . punct
Input: Joint Conf .
Parse:
Conf NNP ROOT
 +-- Joint NNP nn
 +-- . . punct
Input: on Autonomous Agents and Multi Agent Systems -LRB- AAMAS 07 -RRB- 0.7 0.8 0.9 1 1.1 1.2 1.3 1.4 2 4 6 8 10 12 14 16 Rewardrelativetooptimal Degree small world upper bound random upper bound scale free upper bound small world GDAP random GDAP scale free GDAP Figure 4
Parse:
Figure NN ROOT
 +-- on IN prep
 |   +-- Agents NNS pobj
 |       +-- Autonomous JJ amod
 |       +-- and CC cc
 |       +-- Systems NNPS conj
 |           +-- Multi NNP nn
 |           +-- Agent NNP nn
 |           +-- -LRB- -LRB- punct
 |           +-- 07 CD dep
 |           |   +-- AAMAS NNP nn
 |           +-- -RRB- -RRB- punct
 +-- GDAP NN nsubj
 |   +-- 12 CD num
 |   |   +-- 0.7 CD number
 |   |   +-- 0.8 CD number
 |   |   +-- 0.9 CD number
 |   |   +-- 1 CD number
 |   |   +-- 1.1 CD number
 |   |   +-- 1.2 CD number
 |   |   +-- 1.3 CD dep
 |   |   +-- 1.4 CD number
 |   |   +-- 2 CD dep
 |   |   +-- 4 CD number
 |   |   +-- 6 CD dep
 |   |   +-- 8 CD number
 |   |   +-- 10 CD number
 |   +-- scale NN nn
 |   |   +-- free JJ amod
 |   |   +-- world NN nn
 |   |   |   +-- upper JJ amod
 |   |   |   +-- bound VBN amod
 |   |   |   +-- small JJ amod
 |   |   +-- GDAP NNP nn
 |   |   +-- random JJ amod
 |   |   +-- GDAP , punct
 |   +-- free JJ amod
 +-- 4 CD num
Input: resources are really scarce , only a few tasks can be successfully allocated even by the optimal algorithm .
Parse:
scarce JJ ROOT
 +-- resources NNS nsubj
 +-- are VBP cop
 +-- really RB advmod
 +-- , , punct
 +-- allocated VBN ccomp
 |   +-- tasks NNS nsubjpass
 |   |   +-- few JJ num
 |   |       +-- only RB quantmod
 |   |       +-- a DT quantmod
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- successfully RB advmod
 |   +-- by IN prep
 |       +-- even RB advmod
 |       +-- algorithm NN pobj
 |           +-- the DT det
 |           +-- optimal JJ amod
 +-- . . punct
Input: Therefore , the GDAP is able to give quite a good allocation .
Parse:
able JJ ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- GDAP NNP nsubj
 |   +-- the DT det
 +-- is VBZ cop
 +-- give VB xcomp
 |   +-- to TO aux
 |   +-- allocation NN dobj
 |       +-- quite PDT predet
 |       +-- a DT det
 |       +-- good JJ amod
 +-- . . punct
Input: Although the differences are minor , it can also be seen that the results for the small world network are consistently slightly better than those of random networks , which in turn outperform scale free networks .
Parse:
seen VBN ROOT
 +-- minor JJ advcl
 |   +-- Although IN mark
 |   +-- differences NNS nsubj
 |   |   +-- the DT det
 |   +-- are VBP cop
 +-- , , punct
 +-- it PRP nsubjpass
 +-- can MD aux
 +-- also RB advmod
 +-- be VB auxpass
 +-- better JJR ccomp
 |   +-- that IN mark
 |   +-- results NNS nsubj
 |   |   +-- the DT det
 |   |   +-- for IN prep
 |   |       +-- network NN pobj
 |   |           +-- the DT det
 |   |           +-- small JJ amod
 |   |           +-- world NN nn
 |   +-- are VBP cop
 |   +-- consistently RB advmod
 |   +-- slightly RB advmod
 |   +-- than IN prep
 |       +-- those DT pobj
 |           +-- of IN prep
 |           |   +-- networks NNS pobj
 |           |       +-- random JJ amod
 |           +-- , , punct
 |           +-- scale NN rcmod
 |               +-- which WDT nsubj
 |               +-- in IN prep
 |               |   +-- turn NN pobj
 |               +-- outperform NN nn
 |               +-- networks NNS dobj
 |                   +-- free JJ amod
 +-- . . punct
Input: This can be understood by looking at the distribution of the agents '' degree , as shown in Figure 3 .
Parse:
understood VBN ROOT
 +-- This DT nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- by IN prep
 |   +-- looking VBG pcomp
 |       +-- at IN prep
 |       |   +-- distribution NN pobj
 |       |       +-- the DT det
 |       |       +-- of IN prep
 |       |           +-- degree NN pobj
 |       |               +-- the DT det
 |       |               +-- agents NNS nn
 |       |               +-- '' '' punct
 |       +-- , , punct
 |       +-- shown VBN advcl
 |           +-- as IN mark
 |           +-- in IN prep
 |               +-- Figure NN pobj
 |                   +-- 3 CD num
 +-- . . punct
Input: In this experiment , in the small world network almost every manager has a degree of six .
Parse:
has VBZ ROOT
 +-- In IN prep
 |   +-- experiment NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- in IN prep
 |   +-- network NN pobj
 |       +-- the DT det
 |       +-- small JJ amod
 |       +-- world NN nn
 +-- manager NN nsubj
 |   +-- almost RB advmod
 |   +-- every DT det
 +-- degree NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- six CD pobj
 +-- . . punct
Input: In random networks , the degree varies between one and about ten .
Parse:
varies VBZ ROOT
 +-- In IN prep
 |   +-- networks NNS pobj
 |       +-- random JJ amod
 +-- , , punct
 +-- degree NN nsubj
 |   +-- the DT det
 +-- between IN prep
 |   +-- one CD pobj
 |       +-- and CC cc
 |       +-- ten CD conj
 |           +-- about RB amod
 +-- . . punct
Input: However , in the scale free network , most nodes have only three or four connections , and only a very few have up to twenty connections .
Parse:
have VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- network NN pobj
 |       +-- the DT det
 |       +-- scale NN nn
 |       +-- free JJ amod
 +-- nodes NNS nsubj
 |   +-- most JJS amod
 +-- connections NNS dobj
 |   +-- three CD num
 |       +-- only RB advmod
 |       +-- or CC cc
 |       +-- four CD conj
 +-- and CC cc
 +-- have VBP conj
 |   +-- few JJ nsubj
 |   |   +-- only RB advmod
 |   |   +-- a DT det
 |   |   +-- very RB advmod
 |   +-- connections NNS dobj
 |       +-- twenty CD num
 |           +-- to IN quantmod
 |               +-- up IN dep
 +-- . . punct
Input: As we will see in the next experiment , having more connections means getting better results .
Parse:
means VBZ ROOT
 +-- see VB advcl
 |   +-- As IN mark
 |   +-- we PRP nsubj
 |   +-- will MD aux
 |   +-- in IN prep
 |       +-- experiment NN pobj
 |           +-- the DT det
 |           +-- next JJ amod
 +-- , , punct
 +-- having VBG csubj
 |   +-- connections NNS dobj
 |       +-- more JJR amod
 +-- getting VBG xcomp
 |   +-- results NNS dobj
 |       +-- better JJR amod
 +-- . . punct
Input: For the next experiment we fix the resource ratio to 1.0 and study the quality of both the upper bound and the GDAP algorithm related to the degree of the social network .
Parse:
fix VBP ROOT
 +-- For IN prep
 |   +-- experiment NN pobj
 |       +-- the DT det
 |       +-- next JJ amod
 +-- we PRP nsubj
 +-- ratio NN dobj
 |   +-- the DT det
 |   +-- resource NN nn
 +-- to IN prep
 |   +-- 1.0 CD pobj
 +-- and CC cc
 +-- study VB conj
 |   +-- quality NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- bound VBN pobj
 |               +-- both CC preconj
 |               +-- the DT det
 |               +-- upper JJ amod
 |               +-- and CC cc
 |               +-- GDAP NNP conj
 |                   +-- the DT det
 |                   +-- related VBN partmod
 |                       +-- algorithm RB advmod
 |                       +-- to IN prep
 |                           +-- degree NN pobj
 |                               +-- the DT det
 |                               +-- of IN prep
 |                                   +-- network NN pobj
 |                                       +-- the DT det
 |                                       +-- social JJ amod
 +-- . . punct
Input: The result can be found in Figure 4 .
Parse:
found VBN ROOT
 +-- result NN nsubjpass
 |   +-- The DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- Figure NN pobj
 |       +-- 4 CD num
 +-- . . punct
Input: In this figure we can see that a high average degree also leads to convergence of the upper bound and the GDAP .
Parse:
see VB ROOT
 +-- In IN prep
 |   +-- figure NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- can MD aux
 +-- leads VBZ ccomp
 |   +-- that IN mark
 |   +-- degree NN nsubj
 |   |   +-- a DT det
 |   |   +-- high JJ amod
 |   |   +-- average NN nn
 |   +-- also RB advmod
 |   +-- to IN prep
 |       +-- convergence NN pobj
 |           +-- of IN prep
 |               +-- bound VBN pobj
 |                   +-- the DT det
 |                   +-- upper JJ amod
 |                   +-- and CC cc
 |                   +-- GDAP NNP conj
 |                       +-- the DT det
 +-- . . punct
Input: Obviously , when managers have many connections , it becomes easier to allocate tasks .
Parse:
easier JJR ROOT
 +-- Obviously RB advmod
 +-- , , punct
 +-- have VBP advcl
 |   +-- when WRB advmod
 |   +-- managers NNS nsubj
 |   +-- connections NNS dobj
 |       +-- many JJ amod
 +-- it PRP nsubj
 +-- becomes VBZ cop
 +-- allocate VB xcomp
 |   +-- to TO aux
 |   +-- tasks NNS dobj
 +-- . . punct
Input: An exception is , similar to what we have seen in Figure 2 , that the solution of the GDAP is also very good if the connections are extremely limited -LRB- degree 2 -RRB- , due to the fact that the number of possibly allocated tasks is very small .
Parse:
similar JJ ROOT
 +-- exception NN nsubj
 |   +-- An DT det
 +-- is VBZ cop
 +-- , , punct
 +-- to IN prep
 |   +-- seen VBN pcomp
 |       +-- what WP dobj
 |       +-- we PRP nsubj
 |       +-- have VBP aux
 |       +-- in IN prep
 |           +-- Figure NNP pobj
 |               +-- 2 CD num
 +-- good JJ ccomp
 |   +-- that IN mark
 |   +-- solution NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- GDAP NNP pobj
 |   |           +-- the DT det
 |   +-- is VBZ cop
 |   +-- also RB advmod
 |   +-- very RB advmod
 |   +-- limited JJ dep
 |   |   +-- if IN mark
 |   |   +-- connections NNS nsubj
 |   |   |   +-- the DT det
 |   |   +-- are VBP cop
 |   |   +-- extremely RB advmod
 |   +-- degree NN dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- 2 CD num
 |   |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- to IN prep
 |       +-- due IN mwe
 |       +-- fact NN pobj
 |           +-- the DT det
 |           +-- small JJ ccomp
 |               +-- that IN mark
 |               +-- number NN nsubj
 |               |   +-- the DT det
 |               |   +-- of IN prep
 |               |       +-- tasks NNS pobj
 |               |           +-- allocated VBN amod
 |               |               +-- possibly RB advmod
 |               +-- is VBZ cop
 |               +-- very RB advmod
 +-- . . punct
Input: Again we see that the upper bound is not that good for problems where resources are hard to reach , i.e .
Parse:
see VBP ROOT
 +-- Again RB advmod
 +-- we PRP nsubj
 +-- good JJ ccomp
 |   +-- that IN mark
 |   +-- bound NN nsubj
 |   |   +-- the DT det
 |   |   +-- upper JJ amod
 |   +-- is VBZ cop
 |   +-- not RB neg
 |   +-- that DT advmod
 |   +-- for IN prep
 |       +-- problems NNS pobj
 |           +-- hard JJ rcmod
 |               +-- where WRB advmod
 |               +-- resources NNS nsubj
 |               +-- are VBP cop
 |               +-- reach VB ccomp
 |               |   +-- to TO aux
 |               +-- , , punct
 |               +-- i.e NN dep
 +-- . . punct
Input: in social networks with a low average degree.2 Since the solution quality clearly depends on the resource ratio as well as on the degree of the social network , we study the effect of changing both , to see whether they influence each other .
Parse:
study VBP ROOT
 +-- in IN prep
 |   +-- networks NNS pobj
 |       +-- social JJ amod
 |       +-- with IN prep
 |           +-- degree.2 CD pobj
 |               +-- a DT det
 |               +-- low JJ amod
 |               +-- average JJ amod
 +-- depends VBZ advcl
 |   +-- Since IN mark
 |   +-- quality NN nsubj
 |   |   +-- the DT det
 |   |   +-- solution NN nn
 |   +-- clearly RB advmod
 |   +-- on IN prep
 |       +-- ratio NN pobj
 |       |   +-- the DT det
 |       |   +-- resource NN nn
 |       +-- well RB cc
 |       |   +-- as RB advmod
 |       |   +-- as IN mwe
 |       +-- on IN conj
 |           +-- degree NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- network NN pobj
 |                       +-- the DT det
 |                       +-- social JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- effect NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- changing VBG pcomp
 |           +-- both DT dobj
 +-- see VB xcomp
 |   +-- to TO aux
 |   +-- influence VBP ccomp
 |       +-- whether IN mark
 |       +-- they PRP nsubj
 |       +-- other JJ dobj
 |           +-- each DT det
 +-- . . punct
Input: Figure 5 shows how the solution quality depends on both the resource ratio and the network degree .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 5 CD num
 +-- depends VBZ ccomp
 |   +-- how WRB advmod
 |   +-- quality NN nsubj
 |   |   +-- the DT det
 |   |   +-- solution NN nn
 |   +-- on IN prep
 |       +-- ratio NN pobj
 |           +-- both CC preconj
 |           +-- the DT det
 |           +-- resource NN nn
 |           +-- and CC cc
 |           +-- degree NN conj
 |               +-- the DT det
 |               +-- network NN nn
 +-- . . punct
Input: This graph confirms the results that the GDAP performs better for problems with higher degree and higher resource ratio .
Parse:
confirms VBZ ROOT
 +-- graph NN nsubj
 |   +-- This DT det
 +-- results NNS dobj
 |   +-- the DT det
 |   +-- performs VBZ rcmod
 |       +-- that IN dobj
 |       +-- GDAP NNP nsubj
 |       |   +-- the DT det
 |       +-- better JJR advmod
 |       +-- for IN prep
 |           +-- problems NNS pobj
 |               +-- with IN prep
 |                   +-- degree NN pobj
 |                       +-- higher JJR amod
 |                       +-- and CC cc
 |                       +-- ratio NN conj
 |                           +-- higher JJR amod
 |                           +-- resource NN nn
 +-- . . punct
Input: However , it is now also more clear that it performs better for very low degree and resource availability .
Parse:
clear JJ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- now RB advmod
 +-- also RB advmod
 +-- more RBR advmod
 +-- performs VBZ ccomp
 |   +-- that IN mark
 |   +-- it PRP nsubj
 |   +-- better JJR advmod
 |   +-- for IN prep
 |   |   +-- degree NN pobj
 |   |       +-- low JJ amod
 |   |           +-- very RB advmod
 |   +-- and CC cc
 |   +-- resource VB conj
 |       +-- availability NN dobj
 +-- . . punct
Input: For this experiment with 40 agents and 20 tasks , the worst performance is met for instances with degree six and resource ratio 0.6 to instances with degree twelve and resource ratio 0.3 .
Parse:
met VBN ROOT
 +-- For IN prep
 |   +-- experiment NN pobj
 |       +-- this DT det
 |       +-- with IN prep
 |           +-- agents NNS pobj
 |               +-- 40 CD num
 |               +-- and CC cc
 |               +-- tasks NNS conj
 |                   +-- 20 CD num
 +-- , , punct
 +-- performance NN nsubjpass
 |   +-- the DT det
 |   +-- worst JJS amod
 +-- is VBZ auxpass
 +-- for IN prep
 |   +-- instances NNS pobj
 |       +-- with IN prep
 |       |   +-- ratio NN pobj
 |       |       +-- degree NN nn
 |       |       |   +-- six CD num
 |       |       |   +-- and CC cc
 |       |       |   +-- resource NN conj
 |       |       +-- 0.6 CD num
 |       +-- to IN prep
 |           +-- instances NNS pobj
 |               +-- with IN prep
 |                   +-- twelve CD pobj
 |                       +-- degree NN nn
 |                       +-- and CC cc
 |                       +-- ratio NN conj
 |                           +-- resource NN nn
 |                           +-- 0.3 CD num
 +-- . . punct
Input: But even for those instances , the performance lies above 0.7 .
Parse:
lies VBZ ROOT
 +-- But CC cc
 +-- for IN prep
 |   +-- even RB advmod
 |   +-- instances NNS pobj
 |       +-- those DT det
 +-- , , punct
 +-- performance NN nsubj
 |   +-- the DT det
 +-- above IN prep
 |   +-- 0.7 CD pobj
 +-- . . punct
Input: 2 The consistent standard deviation of about 15 % over the 20 problem instances is not displayed as error bars in these first graphs , because it would obfuscate the interesting correlations that can now be seen .
Parse:
displayed VBN ROOT
 +-- 2 LS dep
 +-- deviation NN nsubjpass
 |   +-- The DT det
 |   +-- consistent JJ amod
 |   +-- standard JJ amod
 |   +-- of IN prep
 |   |   +-- % NN pobj
 |   |       +-- 15 CD num
 |   |           +-- about RB quantmod
 |   +-- over IN prep
 |       +-- instances NNS pobj
 |           +-- the DT det
 |           +-- problem NN nn
 |               +-- 20 CD num
 +-- is VBZ auxpass
 +-- not RB neg
 +-- as IN prep
 |   +-- bars NNS pobj
 |       +-- error NN nn
 |       +-- in IN prep
 |           +-- graphs NNS pobj
 |               +-- these DT det
 |               +-- first JJ amod
 +-- , , punct
 +-- obfuscate VB advcl
 |   +-- because IN mark
 |   +-- it PRP nsubj
 |   +-- would MD aux
 |   +-- correlations NNS dobj
 |       +-- the DT det
 |       +-- interesting JJ amod
 |       +-- seen VBN rcmod
 |           +-- that WDT nsubjpass
 |           +-- can MD aux
 |           +-- now RB advmod
 |           +-- be VB auxpass
 +-- . . punct
Input: 4 6 8 10 12 14 16 0.4 0.6 0.8 1 1.2 1.4 1.6 0.7 0.75 0.8 0.85 0.9 0.95 1 Relative reward small world Average degree Resource ratio Relative reward Figure 5
Parse:
Figure NN ROOT
 +-- 4 CD number
 +-- 6 CD number
 +-- 8 CD number
 +-- 10 CD number
 +-- 12 CD number
 +-- 14 CD number
 +-- 16 CD number
 +-- 0.4 CD number
 +-- 0.6 CD number
 +-- 0.8 CD number
 +-- 1 CD number
 +-- 1.2 CD number
 +-- 1.4 CD number
 +-- 1.6 CD number
 +-- 0.7 CD number
 +-- 0.75 CD num
 +-- 0.8 CD num
 +-- 0.85 CD num
 +-- 0.9 CD num
 +-- ratio NN nn
 |   +-- 0.95 CD num
 |   +-- reward NN nn
 |   |   +-- 1 CD num
 |   |   +-- Relative JJ amod
 |   +-- small JJ amod
 |   +-- degree NN nn
 |   |   +-- world NN nn
 |   |   +-- Average JJ amod
 |   +-- Resource NN nn
 +-- reward NN nn
 |   +-- Relative JJ amod
 +-- 5 CD num
Input: 5.2.2 Experiment 2 To study the robustness of the GDAP against different problem settings , we generate instances where the task benefit distribution is different
Parse:
generate VBP ROOT
 +-- 5.2.2 CD nsubj
 |   +-- Experiment VB dep
 |       +-- 2 CD dobj
 |       +-- study VB xcomp
 |           +-- To TO aux
 |           +-- robustness NN dobj
 |           |   +-- the DT det
 |           |   +-- of IN prep
 |           |       +-- GDAP NNP pobj
 |           |           +-- the DT det
 |           +-- against IN prep
 |               +-- settings NNS pobj
 |                   +-- different JJ amod
 |                   +-- problem NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- instances NNS dobj
     +-- different JJ rcmod
         +-- where WRB advmod
         +-- distribution NN nsubj
         |   +-- the DT det
         |   +-- benefit NN nn
         |       +-- task NN nn
         +-- is VBZ cop
Input: The effect of this different distribution can be seen in Figure 6 .
Parse:
seen VBN ROOT
 +-- effect NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- distribution NN pobj
 |           +-- this DT det
 |           +-- different JJ amod
 +-- can MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- Figure NN pobj
 |       +-- 6 CD num
 +-- . . punct
Input: These two graphs show that the results for the skewed task benefit distribution are slightly better on average , both when varying the resource ratio , and when varying the average degree of the network .
Parse:
show VBP ROOT
 +-- graphs NNS nsubj
 |   +-- These DT det
 |   +-- two CD num
 +-- better JJR ccomp
 |   +-- that IN mark
 |   +-- results NNS nsubj
 |   |   +-- the DT det
 |   |   +-- for IN prep
 |   |       +-- distribution NN pobj
 |   |           +-- the DT det
 |   |           +-- skewed JJ amod
 |   |           +-- benefit NN nn
 |   |               +-- task NN nn
 |   +-- are VBP cop
 |   +-- slightly RB advmod
 |   +-- on IN prep
 |   |   +-- average JJ pobj
 |   +-- , , punct
 |   +-- varying VBG advcl
 |   |   +-- both CC preconj
 |   |   +-- when WRB advmod
 |   |   +-- ratio NN dobj
 |   |       +-- the DT det
 |   |       +-- resource NN nn
 |   +-- and CC cc
 |   +-- varying VBG conj
 |       +-- when WRB advmod
 |       +-- degree NN dobj
 |           +-- the DT det
 |           +-- average JJ amod
 |           +-- of IN prep
 |               +-- network NN pobj
 |                   +-- the DT det
 +-- . . punct
Input: We argue that this can be explained by the greedy nature of GDAP , which causes the tasks with high efficiency to be allocated first , and makes the algorithm perform better in this heterogeneous setting .
Parse:
argue VBP ROOT
 +-- We PRP nsubj
 +-- explained VBN ccomp
 |   +-- that IN mark
 |   +-- this DT nsubjpass
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- by IN prep
 |   |   +-- nature NN pobj
 |   |       +-- the DT det
 |   |       +-- greedy JJ amod
 |   |       +-- of IN prep
 |   |           +-- GDAP NNP pobj
 |   |               +-- , , punct
 |   |               +-- causes VBZ rcmod
 |   |                   +-- which WDT nsubj
 |   |                   +-- tasks NNS dobj
 |   |                       +-- the DT det
 |   |                       +-- with IN prep
 |   |                       |   +-- efficiency NN pobj
 |   |                       |       +-- high JJ amod
 |   |                       +-- allocated VBN infmod
 |   |                           +-- to TO aux
 |   |                           +-- be VB auxpass
 |   |                           +-- first RB advmod
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- makes VBZ conj
 |       +-- perform VB xcomp
 |           +-- algorithm NN nsubj
 |           |   +-- the DT det
 |           +-- better JJR advmod
 |           +-- in IN prep
 |               +-- setting NN pobj
 |                   +-- this DT det
 |                   +-- heterogeneous JJ amod
 +-- . . punct
Input: 5.2.3 Experiment 3 The purpose of this final experiment is to test whether the algorithm can be scaled to large problems , like applications running on the internet .
Parse:
Experiment VB ROOT
 +-- 5.2.3 CD nsubj
 +-- is VBZ ccomp
 |   +-- purpose NN nsubj
 |   |   +-- 3 CD num
 |   |   +-- The DT det
 |   |   +-- of IN prep
 |   |       +-- experiment NN pobj
 |   |           +-- this DT det
 |   |           +-- final JJ amod
 |   +-- test VB xcomp
 |       +-- to TO aux
 |       +-- scaled VBN ccomp
 |           +-- whether IN mark
 |           +-- algorithm NN nsubjpass
 |           |   +-- the DT det
 |           +-- can MD aux
 |           +-- be VB auxpass
 |           +-- to IN prep
 |               +-- problems NNS pobj
 |                   +-- large JJ amod
 |                   +-- , , punct
 |                   +-- like IN prep
 |                       +-- applications NNS pobj
 |                           +-- running VBG partmod
 |                               +-- on IN prep
 |                                   +-- internet NN pobj
 |                                       +-- the DT det
 +-- . . punct
Input: We therefore generate instances where the number of agents varies from 100 to 2000 , and simultaneously increase the number of tasks from 166 to 3333 -LRB- Setting 3 -RRB- .
Parse:
generate VBP ROOT
 +-- We PRP nsubj
 +-- therefore RB advmod
 +-- instances NNS dobj
 |   +-- varies VBZ rcmod
 |       +-- where WRB advmod
 |       +-- number NN nsubj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- agents NNS pobj
 |       +-- from IN prep
 |       |   +-- 100 CD pobj
 |       |   +-- to IN prep
 |       |       +-- 2000 CD pobj
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- simultaneously RB advmod
 |       +-- increase VB conj
 |           +-- number NN dobj
 |           |   +-- the DT det
 |           |   +-- of IN prep
 |           |       +-- tasks NNS pobj
 |           +-- from IN prep
 |           |   +-- 166 CD pobj
 |           |   +-- to IN prep
 |           |       +-- 3333 CD pobj
 |           +-- Setting VBG partmod
 |               +-- -LRB- -LRB- punct
 |               +-- 3 CD dobj
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: Figure 7 shows the run time for these instances on a Linux machine with an AMD Opteron 2.4 GHz processor .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 7 CD num
 +-- time NN dobj
 |   +-- the DT det
 |   +-- run NN nn
 |   +-- for IN prep
 |       +-- instances NNS pobj
 |           +-- these DT det
 |           +-- on IN prep
 |               +-- machine NN pobj
 |                   +-- a DT det
 |                   +-- Linux NNP nn
 |                   +-- with IN prep
 |                       +-- processor NN pobj
 |                           +-- an DT det
 |                           +-- AMD NNP nn
 |                           +-- Opteron NNP nn
 |                           +-- 2.4 CD num
 |                           +-- GHz NNP nn
 +-- . . punct
Input: These graphs confirm the theoretical analysis from the previous section , saying that both the upper bound and the GDAP are polynomial .
Parse:
confirm VBP ROOT
 +-- graphs NNS nsubj
 |   +-- These DT det
 +-- analysis NN dobj
 |   +-- the DT det
 |   +-- theoretical JJ amod
 |   +-- from IN prep
 |       +-- section NN pobj
 |           +-- the DT det
 |           +-- previous JJ amod
 +-- , , punct
 +-- saying VBG partmod
 |   +-- bound VBN ccomp
 |       +-- that IN mark
 |       +-- both CC preconj
 |       +-- the DT det
 |       +-- upper JJ amod
 |       +-- and CC cc
 |       +-- polynomial JJ conj
 |           +-- GDAP NNP nsubj
 |           |   +-- the DT det
 |           +-- are VBP cop
 +-- . . punct
Input: In fact , the graphs show that the GDAP almost behaves linearly .
Parse:
show VBP ROOT
 +-- In IN prep
 |   +-- fact NN pobj
 +-- , , punct
 +-- graphs NNS nsubj
 |   +-- the DT det
 +-- behaves VBZ ccomp
 |   +-- that IN mark
 |   +-- GDAP NNP nsubj
 |   |   +-- the DT det
 |   +-- almost RB advmod
 |   +-- linearly RB advmod
 +-- . . punct
Input: Here we see that the locality of the GDAP really helps in reducing the computation time .
Parse:
see VBP ROOT
 +-- Here RB advmod
 +-- we PRP nsubj
 +-- helps VBZ ccomp
 |   +-- that IN mark
 |   +-- locality NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- GDAP NNP pobj
 |   |           +-- the DT det
 |   +-- really RB advmod
 |   +-- in IN prep
 |       +-- reducing VBG pcomp
 |           +-- time NN dobj
 |               +-- the DT det
 |               +-- computation NN nn
 +-- . . punct
Input: Also note that the GDAP requires even less computation time than the upper bound .
Parse:
note VB ROOT
 +-- Also RB advmod
 +-- requires VBZ ccomp
 |   +-- that IN mark
 |   +-- GDAP NNP nsubj
 |   |   +-- the DT det
 |   +-- time NN dobj
 |       +-- less JJR amod
 |       |   +-- even RB advmod
 |       +-- computation NN nn
 |       +-- bound VBN dep
 |           +-- than IN mark
 |           +-- upper JJ nsubj
 |               +-- the DT det
 +-- . . punct
Input: The quality of the GDAP for these large instances can not be compared to the optimal solution .
Parse:
be VB ROOT
 +-- quality NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |   |   +-- GDAP NNP pobj
 |   |       +-- the DT det
 |   +-- for IN prep
 |       +-- instances NNS pobj
 |           +-- these DT det
 |           +-- large JJ amod
 +-- can MD aux
 +-- not RB neg
 +-- compared VBN prep
 |   +-- to IN pcomp
 |       +-- solution NN pobj
 |           +-- the DT det
 |           +-- optimal JJ amod
 +-- . . punct
Input: Therefore , in Figure 8 the upper bound is used instead .
Parse:
used VBN ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- Figure NNP pobj
 |       +-- 8 CD num
 +-- upper JJ nsubjpass
 |   +-- the DT det
 |   +-- bound VBN partmod
 +-- is VBZ auxpass
 +-- instead RB advmod
 +-- . . punct
Input: This result shows that the GDAP behaves stably and consistently well with the increasing problem size .
Parse:
shows VBZ ROOT
 +-- result NN nsubj
 |   +-- This DT det
 +-- behaves VBZ ccomp
 |   +-- that IN mark
 |   +-- GDAP NNP nsubj
 |   |   +-- the DT det
 |   +-- well RB advmod
 |   |   +-- stably RB advmod
 |   |       +-- and CC cc
 |   |       +-- consistently RB conj
 |   +-- with IN prep
 |       +-- size NN pobj
 |           +-- the DT det
 |           +-- increasing VBG amod
 |           +-- problem NN nn
 +-- . . punct
Input: It also shows once more that the GDAP performs better in a small world network. .
Parse:
shows VBZ ROOT
 +-- It PRP nsubj
 +-- also RB advmod
 +-- more JJR advmod
 |   +-- once IN advmod
 +-- performs VBZ ccomp
 |   +-- that IN mark
 |   +-- GDAP NNP nsubj
 |   |   +-- the DT det
 |   +-- better JJR advmod
 |   +-- in IN prep
 |       +-- network. NN pobj
 |           +-- a DT det
 |           +-- small JJ amod
 |           +-- world NN nn
 +-- . . punct
