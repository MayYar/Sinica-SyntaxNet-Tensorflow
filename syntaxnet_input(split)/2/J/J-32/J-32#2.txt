Input: Graphical games were introduced in the papers of Kearns et al .
Parse:
introduced VBN ROOT
 +-- games NNS nsubjpass
 |   +-- Graphical JJ amod
 +-- were VBD auxpass
 +-- in IN prep
 |   +-- papers NNS pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- al NNP pobj
 |               +-- Kearns NNPS nn
 |               +-- et NNP nn
 +-- . . punct
Input: -LRB- 8 -RRB- and Littman et al .
Parse:
8 CD ROOT
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- al NNP conj
 |   +-- Littman NNP nn
 |   +-- et FW nn
 +-- . . punct
Input: -LRB- 9 -RRB- as a succinct representation of games with a large number of players .
Parse:
as IN ROOT
 +-- 9 LS dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- representation NN pobj
 |   +-- a DT det
 |   +-- succinct JJ amod
 |   +-- of IN prep
 |       +-- games NNS pobj
 |           +-- with IN prep
 |               +-- number NN pobj
 |                   +-- a DT det
 |                   +-- large JJ amod
 |                   +-- of IN prep
 |                       +-- players NNS pobj
 +-- . . punct
Input: The classical normal form -LRB- or matrix form -RRB- representation has a size that is exponential in the number of players , making it unsuitable for large scale distributed games .
Parse:
has VBZ ROOT
 +-- representation NN nsubj
 |   +-- The DT det
 |   +-- classical JJ amod
 |   +-- form NN nn
 |       +-- normal JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- or CC cc
 |       +-- form NN conj
 |       |   +-- matrix NN nn
 |       +-- -RRB- -RRB- punct
 +-- size NN dobj
 |   +-- a DT det
 |   +-- exponential JJ rcmod
 |       +-- that WDT nsubj
 |       +-- is VBZ cop
 |       +-- in IN prep
 |           +-- number NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- players NNS pobj
 +-- , , punct
 +-- making VBG partmod
 |   +-- unsuitable JJ xcomp
 |       +-- it PRP nsubj
 |       +-- for IN prep
 |           +-- games NNS pobj
 |               +-- scale NN nn
 |               |   +-- large JJ amod
 |               +-- distributed VBN amod
 +-- . . punct
Input: A graphical game associates each player with a vertex of an underlying graph G , and the payoff to that player is a function of the actions chosen by himself and his neighbours in G ; if G has low degree , this is a concise way to represent a game with many players .
Parse:
associates VBZ ROOT
 +-- game NN nsubj
 |   +-- A DT det
 |   +-- graphical JJ amod
 +-- player NN dobj
 |   +-- each DT det
 +-- with IN prep
 |   +-- vertex NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- G NNP pobj
 |               +-- an DT det
 |               +-- underlying VBG amod
 |               +-- graph NN nn
 +-- , , punct
 +-- and CC cc
 +-- function NN conj
 |   +-- payoff NN nsubj
 |   |   +-- the DT det
 |   |   +-- to IN prep
 |   |       +-- player NN pobj
 |   |           +-- that DT det
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- actions NNS pobj
 |           +-- the DT det
 |           +-- chosen VBN partmod
 |               +-- by IN prep
 |                   +-- himself PRP pobj
 |                       +-- and CC cc
 |                       +-- neighbours NNS conj
 |                           +-- his PRP$ poss
 |                           +-- in IN prep
 |                               +-- G NNP pobj
 +-- ; : punct
 +-- way NN parataxis
 |   +-- has VBZ advcl
 |   |   +-- if IN mark
 |   |   +-- G NNP nsubj
 |   |   +-- degree NN dobj
 |   |       +-- low JJ amod
 |   +-- , , punct
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- concise JJ amod
 |   +-- represent VB infmod
 |       +-- to TO aux
 |       +-- game NN dobj
 |       |   +-- a DT det
 |       +-- with IN prep
 |           +-- players NNS pobj
 |               +-- many JJ amod
 +-- . . punct
Input: The papers -LRB- 8 , 9 -RRB- give a dynamic programming algorithm for finding Nash equilibria in graphical games where there are two actions per player and G is a tree .
Parse:
give VBP ROOT
 +-- papers NNS nsubj
 |   +-- The DT det
 |   +-- -LRB- -LRB- punct
 |   +-- 8 CD dep
 |   |   +-- , , punct
 |   |   +-- 9 CD amod
 |   +-- -RRB- -RRB- punct
 +-- algorithm NN dobj
 |   +-- a DT det
 |   +-- dynamic JJ amod
 |   +-- programming NN nn
 |   +-- for IN prep
 |       +-- finding VBG pcomp
 |           +-- equilibria NN dobj
 |           |   +-- Nash NNP nn
 |           +-- in IN prep
 |               +-- games NNS pobj
 |                   +-- graphical JJ amod
 |                   +-- are VBP rcmod
 |                       +-- where WRB advmod
 |                       +-- there EX expl
 |                       +-- tree NN ccomp
 |                           +-- actions NNS nsubj
 |                           |   +-- two CD num
 |                           |   +-- per IN prep
 |                           |       +-- player NN pobj
 |                           |           +-- and CC cc
 |                           |           +-- G NNP conj
 |                           +-- is VBZ cop
 |                           +-- a DT det
 +-- . . punct
Input: The first of these papers describes a generic algorithm for this problem that can be specialized in two ways
Parse:
describes VBZ ROOT
 +-- first JJ nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- papers NNS pobj
 |           +-- these DT det
 +-- algorithm NN dobj
     +-- a DT det
     +-- generic JJ amod
     +-- for IN prep
     |   +-- problem NN pobj
     |       +-- this DT det
     +-- specialized VBN rcmod
         +-- that WDT nsubjpass
         +-- can MD aux
         +-- be VB auxpass
         +-- in IN prep
             +-- ways NNS pobj
                 +-- two CD num
Input: In -LRB- 9 -RRB- , the authors propose a modification to the latter algorithm that aims to find a single Nash equilibrium in polynomial time .
Parse:
propose VBP ROOT
 +-- In IN prep
 |   +-- 9 CD pobj
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- authors NNS nsubj
 |   +-- the DT det
 +-- modification NN dobj
 |   +-- a DT det
 |   +-- to IN prep
 |       +-- algorithm NN pobj
 |           +-- the DT det
 |           +-- latter JJ amod
 |           +-- aims VBZ rcmod
 |               +-- that WDT nsubj
 |               +-- find VB xcomp
 |                   +-- to TO aux
 |                   +-- equilibrium NN dobj
 |                       +-- a DT det
 |                       +-- single JJ amod
 |                       +-- Nash NNP nn
 |                       +-- in IN prep
 |                           +-- time NN pobj
 |                               +-- polynomial JJ amod
 +-- . . punct
Input: This does not quite work , as we show in Section 3 , though it introduces a useful idea .
Parse:
work VB ROOT
 +-- This DT nsubj
 +-- does VBZ aux
 +-- not RB neg
 +-- quite RB advmod
 +-- , , punct
 +-- show VBP advcl
 |   +-- as IN mark
 |   +-- we PRP nsubj
 |   +-- in IN prep
 |   |   +-- Section NN pobj
 |   |       +-- 3 CD num
 |   +-- , , punct
 |   +-- introduces VBZ advcl
 |       +-- though IN mark
 |       +-- it PRP nsubj
 |       +-- idea NN dobj
 |           +-- a DT det
 |           +-- useful JJ amod
 +-- . . punct
Input: 1.1 Background The generic algorithm of -LRB- 8 -RRB- consists of two phases which we will refer to as the upstream pass and the downstream pass ; 1 the former starts at the leaves of the tree and ends at the root , while the latter starts at the root and ends at the leaves .
Parse:
Background NN ROOT
 +-- 1.1 CD num
 +-- algorithm NN dobj
 |   +-- The DT det
 |   +-- generic JJ amod
 |   +-- of IN prep
 |       +-- consists VBZ pobj
 |           +-- -LRB- -LRB- punct
 |           +-- 8 CD num
 |           +-- -RRB- -RRB- punct
 |           +-- of IN prep
 |               +-- phases NNS pobj
 |                   +-- two CD num
 |                   +-- refer VB rcmod
 |                   |   +-- which WDT pobj
 |                   |   +-- we PRP nsubj
 |                   |   +-- will MD aux
 |                   |   +-- to IN prep
 |                   |   +-- as IN prep
 |                   |       +-- pass NN pobj
 |                   |           +-- the DT det
 |                   |           +-- upstream NN nn
 |                   |           +-- and CC cc
 |                   |           +-- pass NN conj
 |                   |               +-- the DT det
 |                   |               +-- downstream JJ amod
 |                   +-- ; : punct
 |                   +-- starts VBZ dep
 |                       +-- 1 CD num
 |                       +-- the DT det
 |                       +-- former JJ amod
 |                       +-- at IN prep
 |                       |   +-- leaves NNS pobj
 |                       |       +-- the DT det
 |                       |       +-- of IN prep
 |                       |           +-- tree NN pobj
 |                       |               +-- the DT det
 |                       +-- and CC cc
 |                       +-- ends VBZ conj
 |                           +-- at IN prep
 |                           |   +-- root NN pobj
 |                           |       +-- the DT det
 |                           +-- , , punct
 |                           +-- starts VBZ advcl
 |                               +-- while IN mark
 |                               +-- latter JJ nsubj
 |                               |   +-- the DT det
 |                               +-- at IN prep
 |                               |   +-- root NN pobj
 |                               |       +-- the DT det
 |                               +-- and CC cc
 |                               +-- ends VBZ conj
 |                                   +-- at IN prep
 |                                       +-- leaves NNS pobj
 |                                           +-- the DT det
 +-- . . punct
Input: It is assumed that each player has two pure strategies -LRB- actions -RRB- , which are denoted by 0 and 1 ; it follows that any mixed strategy can be represented as a single number x ? -LRB- 0 , 1 -RRB- , where x is the probability that the player selects 1 .
Parse:
assumed VBN ROOT
 +-- It PRP nsubjpass
 +-- is VBZ auxpass
 +-- has VBZ ccomp
 |   +-- that IN mark
 |   +-- player NN nsubj
 |   |   +-- each DT det
 |   +-- strategies NNS dobj
 |       +-- two CD num
 |       +-- pure JJ amod
 |       +-- actions NNS appos
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- denoted VBN rcmod
 |           +-- which WDT nsubjpass
 |           +-- are VBP auxpass
 |           +-- by IN prep
 |               +-- 0 CD pobj
 |                   +-- and CC cc
 |                   +-- 1 CD conj
 +-- ; : punct
 +-- follows VBZ parataxis
 |   +-- it PRP nsubj
 |   +-- represented VBN ccomp
 |       +-- that IN mark
 |       +-- strategy NN nsubjpass
 |       |   +-- any DT det
 |       |   +-- mixed JJ amod
 |       +-- can MD aux
 |       +-- be VB auxpass
 |       +-- as IN prep
 |           +-- number NN pobj
 |               +-- a DT det
 |               +-- single JJ amod
 |               +-- x SYM prep
 |               |   +-- ? . punct
 |               +-- -LRB- -LRB- punct
 |               +-- 0 CD dep
 |               |   +-- , , punct
 |               |   +-- 1 CD num
 |               +-- -RRB- -RRB- punct
 |               +-- , , punct
 |               +-- is VBZ rcmod
 |                   +-- where WRB advmod
 |                   +-- x `` punct
 |                   +-- probability NN nsubj
 |                       +-- the DT det
 |                       +-- selects VBZ rcmod
 |                           +-- that WDT dobj
 |                           +-- player NN nsubj
 |                           |   +-- the DT det
 |                           +-- 1 CD dobj
 +-- . . punct
Input: During the upstream pass , each vertex V computes the set of its potential best responses to every mixed strategy w of its parent W ; a strategy v is a potential best response to w if 1 Note that the terminology upstream and downstream are reversed in -LRB- 8 , 9 -RRB- our trees are rooted at the top .
Parse:
computes VBZ ROOT
 +-- During IN prep
 |   +-- pass NN pobj
 |       +-- the DT det
 |       +-- upstream JJ nn
 +-- , , punct
 +-- V NN nsubj
 |   +-- each DT det
 |   +-- vertex NN nn
 +-- set NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- responses NNS pobj
 |           +-- its PRP$ poss
 |           +-- potential JJ amod
 |           +-- best JJS amod
 +-- to IN prep
 |   +-- strategy NN pobj
 |       +-- every DT det
 |       +-- mixed JJ amod
 |       +-- w IN prep
 |           +-- of IN pcomp
 |               +-- parent NN pobj
 |                   +-- its PRP$ poss
 |                   +-- W NN appos
 +-- ; : punct
 +-- response NN parataxis
 |   +-- strategy NN nsubj
 |   |   +-- a DT det
 |   |   +-- v NN amod
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- potential JJ amod
 |   +-- best JJS amod
 |   +-- to IN prep
 |   |   +-- w IN pobj
 |   +-- Note NN advcl
 |       +-- if IN mark
 |       +-- 1 CD num
 |       +-- reversed VBN ccomp
 |           +-- that IN mark
 |           +-- upstream NN nsubjpass
 |           |   +-- the DT det
 |           |   +-- terminology NN nn
 |           |   +-- and CC cc
 |           |   +-- downstream JJ conj
 |           +-- are VBP auxpass
 |           +-- in IN prep
 |           |   +-- 8 CD pobj
 |           |       +-- -LRB- -LRB- punct
 |           |       +-- , , punct
 |           |       +-- 9 CD num
 |           |       +-- -RRB- -RRB- punct
 |           +-- rooted VBN ccomp
 |               +-- trees NNS nsubjpass
 |               |   +-- our PRP$ poss
 |               +-- are VBP auxpass
 |               +-- at IN prep
 |                   +-- top NN pobj
 |                       +-- the DT det
 +-- . . punct
Input: 100 there is a Nash equilibrium in the graphical game downstream of V -LRB- inclusive -RRB- given that W plays w -LRB- for a more technical definition , the reader is referred to Section 2 -RRB- .
Parse:
is VBZ ROOT
 +-- 100 CD dep
 +-- there EX expl
 +-- equilibrium NN nsubj
 |   +-- a DT det
 |   +-- Nash NNP nn
 +-- in IN prep
 |   +-- game NN pobj
 |       +-- the DT det
 |       +-- graphical JJ amod
 +-- downstream RB advmod
 |   +-- of IN prep
 |       +-- inclusive JJ pobj
 |           +-- V NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- given VBN prep
 |   +-- plays VBZ pcomp
 |       +-- that DT mark
 |       +-- W NNP nsubj
 |       +-- w RB advmod
 |       +-- -LRB- -LRB- punct
 |       +-- referred VBN parataxis
 |       |   +-- for IN prep
 |       |   |   +-- definition NN pobj
 |       |   |       +-- a DT det
 |       |   |       +-- technical JJ amod
 |       |   |           +-- more RBR advmod
 |       |   +-- , , punct
 |       |   +-- reader NN nsubjpass
 |       |   |   +-- the DT det
 |       |   +-- is VBZ auxpass
 |       |   +-- to IN prep
 |       |       +-- Section NN pobj
 |       |           +-- 2 CD num
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: The output of this stage can be viewed as a -LRB- continuous -RRB- table T -LRB- w , v -RRB- , where T -LRB- w , v -RRB- = 1 if and only if v is a potential best response to w ; we refer to this table as the best response policy for V .
Parse:
viewed VBN ROOT
 +-- output NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- stage NN pobj
 |           +-- this DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- as IN prep
 |   +-- T NN pobj
 |       +-- a DT det
 |       +-- table NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- continuous JJ amod
 |           +-- -RRB- -RRB- punct
 +-- v NN dep
 |   +-- -LRB- -LRB- punct
 |   +-- w RB dep
 |   +-- , , punct
 |   +-- -RRB- -RRB- punct
 |   +-- where WRB dep
 |   |   +-- T NNP dep
 |   |       +-- v NN dep
 |   |       |   +-- -LRB- -LRB- punct
 |   |       |   +-- w RB advmod
 |   |       |   +-- , , punct
 |   |       |   +-- -RRB- -RRB- punct
 |   |       +-- = SYM dep
 |   |       |   +-- 1 CD num
 |   |       +-- if IN dep
 |   +-- and CC cc
 |   +-- response NN conj
 |       +-- only RB advmod
 |       +-- if IN mark
 |       +-- v EX nsubj
 |       +-- is VBZ cop
 |       +-- a DT det
 |       +-- potential JJ amod
 |       +-- best JJS amod
 |       +-- to IN prep
 |           +-- w RB pcomp
 +-- ; : punct
 +-- refer VBP parataxis
 |   +-- we PRP nsubj
 |   +-- to IN prep
 |   |   +-- table NN pobj
 |   |       +-- this DT det
 |   +-- as IN prep
 |       +-- policy NN pobj
 |           +-- the DT det
 |           +-- best JJS amod
 |           +-- response NN nn
 |           +-- for IN prep
 |               +-- V NN pobj
 +-- . . punct
Input: The generic algorithm does not address the problem of representing the best response policy ; in fact , the most important difference between the two instantiations of the generic algorithm described in -LRB- 8 -RRB- is in their approach to this issue .
Parse:
address VB ROOT
 +-- algorithm NN nsubj
 |   +-- The DT det
 |   +-- generic JJ amod
 +-- does VBZ aux
 +-- not RB neg
 +-- problem NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- representing VBG pcomp
 |           +-- policy NN dobj
 |               +-- the DT det
 |               +-- best JJS amod
 |               +-- response NN nn
 +-- ; : punct
 +-- is VBZ parataxis
 |   +-- difference NN nsubj
 |   |   +-- in IN prep
 |   |   |   +-- fact NN pobj
 |   |   +-- , , punct
 |   |   +-- the DT det
 |   |   +-- important JJ amod
 |   |   |   +-- most RBS advmod
 |   |   +-- between IN prep
 |   |       +-- instantiations NNS pobj
 |   |           +-- the DT det
 |   |           +-- two CD num
 |   |           +-- of IN prep
 |   |               +-- algorithm NN pobj
 |   |                   +-- the DT det
 |   |                   +-- generic JJ amod
 |   |                   +-- described VBN partmod
 |   |                       +-- in IN prep
 |   |                           +-- -LRB- -LRB- punct
 |   |                           +-- 8 CD pobj
 |   |                           +-- -RRB- -RRB- punct
 |   +-- in IN prep
 |       +-- approach NN pobj
 |           +-- their PRP$ poss
 |           +-- to IN prep
 |               +-- issue NN pobj
 |                   +-- this DT det
 +-- . . punct
Input: The computation is performed inductively
Parse:
performed VBN ROOT
 +-- computation NN nsubjpass
 |   +-- The DT det
 +-- is VBZ auxpass
 +-- inductively RB advmod
Input: .
Parse:
. . ROOT
Input: .
Parse:
. . ROOT
Input: , Uk .
Parse:
Uk NNP ROOT
 +-- , , punct
 +-- . . punct
Input: By the end of the upstream pass , all children of the root have computed their best response policies .
Parse:
computed VBN ROOT
 +-- By IN prep
 |   +-- end NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- pass NN pobj
 |               +-- the DT det
 |               +-- upstream NN nn
 +-- , , punct
 +-- children NNS nsubj
 |   +-- all DT det
 |   +-- of IN prep
 |       +-- root NN pobj
 |           +-- the DT det
 +-- have VBP aux
 +-- policies NNS dobj
 |   +-- their PRP$ poss
 |   +-- best JJS amod
 |   +-- response NN nn
 +-- . . punct
Input: In the beginning of the downstream pass , the root selects its strategy and informs its children about its choice .
Parse:
selects VBZ ROOT
 +-- In IN prep
 |   +-- beginning NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- pass NN pobj
 |               +-- the DT det
 |               +-- downstream JJ amod
 +-- , , punct
 +-- root NN nsubj
 |   +-- the DT det
 +-- strategy NN dobj
 |   +-- its PRP$ poss
 +-- and CC cc
 +-- informs VBZ conj
 |   +-- children NNS dobj
 |   |   +-- its PRP$ poss
 |   +-- about IN prep
 |       +-- choice NN pobj
 |           +-- its PRP$ poss
 +-- . . punct
Input: It also selects a strategy for each child .
Parse:
selects VBZ ROOT
 +-- It PRP nsubj
 +-- also RB advmod
 +-- strategy NN dobj
 |   +-- a DT det
 |   +-- for IN prep
 |       +-- child NN pobj
 |           +-- each DT det
 +-- . . punct
Input: A necessary and sufficient condition for the algorithm to proceed is that the strategy of the root is a best response to the strategies of its children and , for each child , the chosen strategy is one of the pre computed potential best responses to the chosen strategy of the root .
Parse:
is VBZ ROOT
 +-- condition NN nsubj
 |   +-- A DT det
 |   +-- necessary JJ amod
 |   |   +-- and CC cc
 |   |   +-- sufficient JJ conj
 |   +-- proceed VB infmod
 |       +-- for IN mark
 |       +-- algorithm NN nsubj
 |       |   +-- the DT det
 |       +-- to TO aux
 +-- response NN ccomp
 |   +-- that IN mark
 |   +-- strategy NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- root NN pobj
 |   |           +-- the DT det
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- best JJS amod
 |   +-- to IN prep
 |   |   +-- strategies NNS pobj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- children NNS pobj
 |   |               +-- its PRP$ poss
 |   +-- and CC cc
 |   +-- one CD conj
 |       +-- , , punct
 |       +-- for IN prep
 |       |   +-- child NN pobj
 |       |       +-- each DT det
 |       +-- strategy NN nsubj
 |       |   +-- the DT det
 |       |   +-- chosen VBN amod
 |       +-- is VBZ cop
 |       +-- of IN prep
 |           +-- responses NNS pobj
 |               +-- the DT det
 |               +-- computed VBN nn
 |               |   +-- pre NN nn
 |               +-- potential JJ amod
 |               +-- best JJS amod
 |               +-- to IN prep
 |                   +-- strategy NN pobj
 |                       +-- the DT det
 |                       +-- chosen JJ amod
 |                       +-- of IN prep
 |                           +-- root NN pobj
 |                               +-- the DT det
 +-- . . punct
Input: The equilibrium then propagates downstream , with each vertex selecting its children '' s actions .
Parse:
propagates VBZ ROOT
 +-- equilibrium NN nsubj
 |   +-- The DT det
 +-- then RB advmod
 +-- downstream RB advmod
 +-- , , punct
 +-- with IN prep
 |   +-- selecting VBG pcomp
 |       +-- vertex NN nsubj
 |       |   +-- each DT det
 |       +-- actions NNS dobj
 |           +-- children NNS poss
 |               +-- its PRP$ poss
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- . . punct
Input: The action of the child is chosen to be any strategy from the pre computed potential best responses to the chosen strategy of the parent .
Parse:
chosen VBN ROOT
 +-- action NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- child NN pobj
 |           +-- the DT det
 +-- is VBZ auxpass
 +-- strategy NN xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- any DT det
 |   +-- from IN prep
 |       +-- responses NNS pobj
 |       |   +-- the DT det
 |       |   +-- computed VBN nn
 |       |   |   +-- pre NN nn
 |       |   +-- potential JJ amod
 |       |   +-- best JJS amod
 |       +-- to IN prep
 |           +-- strategy NN pobj
 |               +-- the DT det
 |               +-- chosen JJ amod
 |               +-- of IN prep
 |                   +-- parent NN pobj
 |                       +-- the DT det
 +-- . . punct
Input: To bound the running time of this algorithm , the paper -LRB- 8 -RRB- shows that any best response policy can be represented as a union of an exponential number of rectangles ; the polynomial time approximation algorithm is obtained by combining this representation with a polynomial sized grid .
Parse:
shows VBZ ROOT
 +-- bound VB advcl
 |   +-- To TO aux
 |   +-- time NN dobj
 |       +-- the DT det
 |       +-- running VBG nn
 |       +-- of IN prep
 |           +-- algorithm NN pobj
 |               +-- this DT det
 +-- , , punct
 +-- paper NN nsubj
 |   +-- the DT det
 |   +-- 8 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- represented VBN ccomp
 |   +-- that IN mark
 |   +-- policy NN nsubjpass
 |   |   +-- any DT det
 |   |   +-- response NN nn
 |   |       +-- best JJS amod
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- as IN prep
 |   |   +-- union NN pobj
 |   |       +-- a DT det
 |   |       +-- of IN prep
 |   |           +-- number NN pobj
 |   |               +-- an DT det
 |   |               +-- exponential JJ amod
 |   |               +-- of IN prep
 |   |                   +-- rectangles NNS pobj
 |   +-- ; : punct
 |   +-- obtained VBN parataxis
 |       +-- algorithm NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- time NN nn
 |       |   |   +-- polynomial JJ amod
 |       |   +-- approximation NN nn
 |       +-- is VBZ auxpass
 |       +-- by IN prep
 |           +-- combining VBG pcomp
 |               +-- representation NN dobj
 |               |   +-- this DT det
 |               +-- with IN prep
 |                   +-- grid NN pobj
 |                       +-- a DT det
 |                       +-- polynomial JJ amod
 |                       +-- sized JJ amod
 +-- . . punct
Input: The main idea of -LRB- 9 -RRB- is that it is not necessary to keep track of all rectangles in the best response policies ; rather , at each step of the upstream pass , it is possible to select a polynomial size subset of the corresponding policy -LRB- in -LRB- 9 -RRB- , this subset is called a breakpoint policy -RRB- , and still ensure that the downstream pass can proceed successfully -LRB- a sufficient condition for this is that the subset of the best response policy for V stored by the algorithm contains a continuous path from w = 0 to w = 1 -RRB- .
Parse:
is VBZ ROOT
 +-- idea NN nsubj
 |   +-- The DT det
 |   +-- main JJ amod
 |   +-- of IN prep
 |       +-- 9 CD pobj
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- necessary JJ ccomp
 |   +-- that IN mark
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- not RB neg
 |   +-- keep VB xcomp
 |   |   +-- to TO aux
 |   |   +-- track NN dobj
 |   |   |   +-- of IN prep
 |   |   |       +-- rectangles NNS pobj
 |   |   |           +-- all DT det
 |   |   +-- in IN prep
 |   |       +-- policies NNS pobj
 |   |           +-- the DT det
 |   |           +-- best JJS amod
 |   |           +-- response NN nn
 |   +-- ; : punct
 |   +-- possible JJ conj
 |   |   +-- rather RB advmod
 |   |   +-- , , punct
 |   |   +-- at IN prep
 |   |   |   +-- step NN pobj
 |   |   |       +-- each DT det
 |   |   |       +-- of IN prep
 |   |   |           +-- pass NN pobj
 |   |   |               +-- the DT det
 |   |   |               +-- upstream JJ amod
 |   |   +-- it PRP nsubj
 |   |   +-- is VBZ cop
 |   |   +-- select VB dep
 |   |       +-- to TO aux
 |   |       +-- subset NN dobj
 |   |       |   +-- a DT det
 |   |       |   +-- size NN nn
 |   |       |   |   +-- polynomial JJ amod
 |   |       |   +-- of IN prep
 |   |       |       +-- policy NN pobj
 |   |       |           +-- the DT det
 |   |       |           +-- corresponding VBG amod
 |   |       +-- called VBN parataxis
 |   |           +-- -LRB- -LRB- punct
 |   |           +-- in IN prep
 |   |           |   +-- 9 CD pobj
 |   |           |       +-- -LRB- -LRB- punct
 |   |           |       +-- -RRB- -RRB- punct
 |   |           +-- , , punct
 |   |           +-- subset NN nsubjpass
 |   |           |   +-- this DT det
 |   |           +-- is VBZ auxpass
 |   |           +-- policy NN xcomp
 |   |           |   +-- a DT det
 |   |           |   +-- breakpoint NN nn
 |   |           +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- still RB advmod
 |   +-- ensure VB conj
 |       +-- proceed VB ccomp
 |           +-- that IN mark
 |           +-- pass NN nsubj
 |           |   +-- the DT det
 |           |   +-- downstream JJ amod
 |           +-- can MD aux
 |           +-- successfully RB advmod
 |           +-- is VBZ parataxis
 |               +-- -LRB- -LRB- punct
 |               +-- condition NN nsubj
 |               |   +-- a DT det
 |               |   +-- sufficient JJ amod
 |               |   +-- for IN prep
 |               |       +-- this DT pobj
 |               +-- contains VBZ ccomp
 |               |   +-- that IN mark
 |               |   +-- subset NN nsubj
 |               |   |   +-- the DT det
 |               |   |   +-- of IN prep
 |               |   |       +-- policy NN pobj
 |               |   |           +-- the DT det
 |               |   |           +-- response NN nn
 |               |   |           |   +-- best JJS amod
 |               |   |           +-- for IN prep
 |               |   |           |   +-- V NN pobj
 |               |   |           +-- stored VBN partmod
 |               |   |               +-- by IN prep
 |               |   |                   +-- algorithm NN pobj
 |               |   |                       +-- the DT det
 |               |   +-- path NN dobj
 |               |       +-- a DT det
 |               |       +-- continuous JJ amod
 |               |       +-- from IN prep
 |               |           +-- w RB pcomp
 |               |           |   +-- = SYM pobj
 |               |           |   +-- 0 CD pobj
 |               |           +-- to IN prep
 |               |               +-- w IN pcomp
 |               |                   +-- = SYM pobj
 |               |                       +-- 1 CD num
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: 1.2 Our Results One of the main contributions of our paper is to show that the algorithm proposed by -LRB- 9 -RRB- is incorrect .
Parse:
is VBZ ROOT
 +-- Results NNS nsubj
 |   +-- 1.2 CD num
 |   +-- Our PRP$ poss
 |   +-- One CD num
 |   +-- of IN prep
 |       +-- contributions NNS pobj
 |           +-- the DT det
 |           +-- main JJ amod
 |           +-- of IN prep
 |               +-- paper NN pobj
 |                   +-- our PRP$ poss
 +-- show VB xcomp
 |   +-- to TO aux
 |   +-- incorrect JJ ccomp
 |       +-- that IN mark
 |       +-- algorithm NN nsubj
 |       |   +-- the DT det
 |       |   +-- proposed VBN partmod
 |       |       +-- by IN prep
 |       |           +-- -LRB- -LRB- punct
 |       |           +-- 9 CD pobj
 |       |           +-- -RRB- -RRB- punct
 |       +-- is VBZ cop
 +-- . . punct
Input: In Section 3 we describe a simple example for which the algorithm of -LRB- 9 -RRB- outputs a vector of strategies that does not constitute a Nash equilibrium of the underlying game .
Parse:
describe VBP ROOT
 +-- In IN prep
 |   +-- Section NN pobj
 |       +-- 3 CD num
 +-- we PRP nsubj
 +-- example NN dobj
 |   +-- a DT det
 |   +-- simple JJ amod
 |   +-- outputs VBZ rcmod
 |       +-- for IN prep
 |       |   +-- which WDT pobj
 |       +-- algorithm NN nsubj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- -LRB- -LRB- punct
 |       |       +-- 9 CD pobj
 |       |       +-- -RRB- -RRB- punct
 |       +-- vector NN dobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- strategies NNS pobj
 |                   +-- constitute VB rcmod
 |                       +-- that WDT nsubj
 |                       +-- does VBZ aux
 |                       +-- not RB neg
 |                       +-- equilibrium NN dobj
 |                           +-- a DT det
 |                           +-- Nash NNP nn
 |                           +-- of IN prep
 |                               +-- game NN pobj
 |                                   +-- the DT det
 |                                   +-- underlying VBG amod
 +-- . . punct
Input: In Sections 4 , 5 and 6 we show how to fix the algorithm of -LRB- 9 -RRB- so that it always produces correct output .
Parse:
show VBP ROOT
 +-- In IN prep
 |   +-- Sections NNS pobj
 |       +-- 4 CD dep
 |           +-- , , punct
 |           +-- 5 CD num
 |           +-- and CC cc
 |           +-- 6 CD conj
 +-- we PRP nsubj
 +-- fix VB ccomp
 |   +-- how WRB advmod
 |   +-- to TO aux
 |   +-- algorithm NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- 9 CD pobj
 |   |           +-- -LRB- -LRB- punct
 |   |           +-- -RRB- -RRB- punct
 |   +-- produces VBZ advcl
 |       +-- so IN mark
 |       +-- that IN mark
 |       +-- it PRP nsubj
 |       +-- always RB advmod
 |       +-- output NN dobj
 |           +-- correct JJ amod
 +-- . . punct
Input: Section 4 considers the case in which the underlying graph is a path of length n .
Parse:
considers VBZ ROOT
 +-- Section NN nsubj
 |   +-- 4 CD num
 +-- path NN ccomp
 |   +-- case NN nsubj
 |   |   +-- the DT det
 |   +-- in IN prep
 |   |   +-- which WDT pobj
 |   +-- graph NN nsubj
 |   |   +-- the DT det
 |   |   +-- underlying VBG amod
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- of IN prep
 |   |   +-- length NN pobj
 |   +-- n RB advmod
 +-- . . punct
Input: For this case , we show that the number of rectangles in each of the best response policies is O -LRB- n2 We consider graphical games in which the underlying graph G is an n vertex tree .
Parse:
show VBP ROOT
 +-- For IN prep
 |   +-- case NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- O FW ccomp
 |   +-- that IN mark
 |   +-- number NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- rectangles NNS pobj
 |   |           +-- in IN prep
 |   |               +-- each DT pobj
 |   |                   +-- of IN prep
 |   |                       +-- policies NNS pobj
 |   |                           +-- the DT det
 |   |                           +-- best JJS amod
 |   |                           +-- response NN nn
 |   +-- is VBZ cop
 |   +-- -LRB- -LRB- prep
 |       +-- n2 CD dep
 |           +-- consider VBP rcmod
 |               +-- We PRP nsubj
 |               +-- games NNS dobj
 |                   +-- graphical JJ amod
 |                   +-- tree NN rcmod
 |                       +-- in IN prep
 |                       |   +-- which WDT pobj
 |                       +-- G NNP nsubj
 |                       |   +-- the DT det
 |                       |   +-- underlying VBG amod
 |                       |   +-- graph NN nn
 |                       +-- is VBZ cop
 |                       +-- an DT det
 |                       +-- n JJ amod
 |                       +-- vertex NN nn
 +-- . . punct
Input: Each vertex has two actions , which are denoted by 0 and 1 .
Parse:
has VBZ ROOT
 +-- vertex NN nsubj
 |   +-- Each DT det
 +-- actions NNS dobj
 |   +-- two CD num
 |   +-- , , punct
 |   +-- denoted VBN rcmod
 |       +-- which WDT nsubjpass
 |       +-- are VBP auxpass
 |       +-- by IN prep
 |           +-- 0 CD pobj
 |               +-- and CC cc
 |               +-- 1 CD conj
 +-- . . punct
Input: A mixed strategy is given by a single number x ? -LRB- 0 , 1 -RRB- , which denotes the probability that the player selects action 1 .
Parse:
given VBN ROOT
 +-- strategy NN nsubjpass
 |   +-- A DT det
 |   +-- mixed JJ amod
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- number NN pobj
 |       +-- a DT det
 |       +-- single JJ amod
 |       +-- x SYM punct
 |       +-- ? . punct
 |       +-- -LRB- -LRB- punct
 |       +-- 0 CD dep
 |       |   +-- , , punct
 |       |   +-- 1 CD num
 |       +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- denotes VBZ rcmod
 |           +-- which WDT nsubj
 |           +-- probability NN dobj
 |               +-- the DT det
 |               +-- selects VBZ rcmod
 |                   +-- that WDT dobj
 |                   +-- player NN nsubj
 |                   |   +-- the DT det
 |                   +-- action NN dobj
 |                       +-- 1 CD num
 +-- . . punct
Input: Fur the purposes of the algorithm , the tree is rooted arbitrarily .
Parse:
rooted VBN ROOT
 +-- Fur PDT prep
 |   +-- purposes NNS pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- algorithm NN pobj
 |               +-- the DT det
 +-- , , punct
 +-- tree NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- arbitrarily RB advmod
 +-- . . punct
Input: For convenience , we assume without loss of generality that the root has a single child , and that its payoff is independent of the action chosen by the child .
Parse:
assume VBP ROOT
 +-- For IN prep
 |   +-- convenience NN pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- without IN prep
 |   +-- loss NN pobj
 |       +-- of IN prep
 |           +-- generality NN pobj
 +-- has VBZ ccomp
 |   +-- that WDT mark
 |   +-- root NN nsubj
 |   |   +-- the DT det
 |   +-- child NN dobj
 |   |   +-- a DT det
 |   |   +-- single JJ amod
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- independent JJ conj
 |       +-- that IN mark
 |       +-- payoff NN nsubj
 |       |   +-- its PRP$ poss
 |       +-- is VBZ cop
 |       +-- of IN prep
 |           +-- action NN pobj
 |               +-- the DT det
 |               +-- chosen VBN partmod
 |                   +-- by IN prep
 |                       +-- child NN pobj
 |                           +-- the DT det
 +-- . . punct
Input: This can be achieved by first choosing an arbitrary root of the tree , and then adding a dummy parent of this root , giving the new parent a constant payoff function .
Parse:
achieved VBN ROOT
 +-- This DT nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- by IN prep
 |   +-- choosing VBG pcomp
 |       +-- first RB advmod
 |       +-- root NN dobj
 |       |   +-- an DT det
 |       |   +-- arbitrary JJ amod
 |       |   +-- of IN prep
 |       |       +-- tree NN pobj
 |       |           +-- the DT det
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- adding VBG conj
 |           +-- then RB advmod
 |           +-- parent NN dobj
 |           |   +-- a DT det
 |           |   +-- dummy JJ amod
 |           |   +-- of IN prep
 |           |       +-- root NN pobj
 |           |           +-- this DT det
 |           +-- , , punct
 |           +-- giving VBG partmod
 |               +-- parent NN iobj
 |               |   +-- the DT det
 |               |   +-- new JJ amod
 |               +-- function NN dobj
 |                   +-- a DT det
 |                   +-- constant JJ amod
 |                   +-- payoff NN nn
 +-- . . punct
Input: Given an edge -LRB- V , W -RRB- of the tree G , and a mixed strategy w for W , let G -LRB- V , W -RRB- , W =w be the instance obtained from G by -LRB- 1 -RRB- deleting all nodes Z which are separated from V by W -LRB- i.e. , all nodes Z such that the path from Z to V passes through W -RRB- , and -LRB- 2 -RRB- restricting the instance so that W is required to play mixed strategy w .
Parse:
let VB ROOT
 +-- Given VBN prep
 |   +-- edge NN dep
 |       +-- an DT det
 |       +-- -LRB- -LRB- punct
 |       +-- V NNP dep
 |       |   +-- , , punct
 |       |   +-- W NNP appos
 |       +-- -RRB- -RRB- punct
 |       +-- of IN prep
 |           +-- G NNP pobj
 |               +-- the DT det
 |               +-- tree NN nn
 |               +-- , , punct
 |               +-- and CC cc
 |               +-- strategy NN conj
 |                   +-- a DT det
 |                   +-- mixed JJ amod
 |                   +-- w IN prep
 |                       +-- for IN pcomp
 |                           +-- W NNP pobj
 +-- , , punct
 +-- instance NN ccomp
 |   +-- G NNP nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- V NNP dep
 |   |   |   +-- , , punct
 |   |   |   +-- W NNP appos
 |   |   +-- -RRB- -RRB- punct
 |   |   +-- , , punct
 |   |   +-- W NNP appos
 |   |   +-- =w , punct
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- obtained VBN partmod
 |   |   +-- from IN prep
 |   |       +-- G NN pobj
 |   |           +-- by IN prep
 |   |               +-- 1 LS pobj
 |   |                   +-- -LRB- -LRB- punct
 |   |                   +-- -RRB- -RRB- punct
 |   +-- deleting VBG partmod
 |       +-- nodes NNS dobj
 |           +-- all DT det
 |           +-- Z NNP appos
 |           +-- separated VBN rcmod
 |               +-- which WDT nsubjpass
 |               +-- are VBP auxpass
 |               +-- from IN prep
 |               |   +-- V NNP pobj
 |               +-- by IN prep
 |                   +-- W NNP pobj
 |                       +-- Z VBP dep
 |                           +-- -LRB- -LRB- punct
 |                           +-- i.e. FW advmod
 |                           +-- , , punct
 |                           +-- nodes NNS nsubj
 |                           |   +-- all DT det
 |                           +-- passes VBZ dep
 |                           |   +-- such JJ dep
 |                           |   +-- that IN mark
 |                           |   +-- path NN nsubj
 |                           |   |   +-- the DT det
 |                           |   |   +-- from IN prep
 |                           |   |       +-- Z NN pobj
 |                           |   |       +-- to IN prep
 |                           |   |           +-- V NN pobj
 |                           |   +-- through IN prep
 |                           |   |   +-- W NNP pobj
 |                           |   +-- -RRB- -RRB- punct
 |                           +-- and CC cc
 |                           +-- restricting VBG conj
 |                               +-- 2 LS dep
 |                               |   +-- -LRB- -LRB- punct
 |                               |   +-- -RRB- -RRB- punct
 |                               +-- instance NN dobj
 |                               |   +-- the DT det
 |                               +-- required VBN advcl
 |                                   +-- so IN mark
 |                                   +-- that IN mark
 |                                   +-- W NNP nsubjpass
 |                                   +-- is VBZ auxpass
 |                                   +-- play VB xcomp
 |                                       +-- to TO aux
 |                                       +-- strategy NN dobj
 |                                       |   +-- mixed JJ amod
 |                                       +-- w IN prep
 +-- . . punct
Input: Definition 1 .
Parse:
Definition NN ROOT
 +-- 1 CD num
 +-- . . punct
Input: Suppose that -LRB- V , W -RRB- is an edge of the tree , that v is a mixed strategy for V and that w is a mixed strategy for W .
Parse:
Suppose VB ROOT
 +-- edge NN ccomp
 |   +-- that IN mark
 |   +-- V NNP nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- , , punct
 |   |   +-- W NNP appos
 |   |   +-- -RRB- -RRB- punct
 |   +-- is VBZ cop
 |   +-- an DT det
 |   +-- of IN prep
 |   |   +-- tree NN pobj
 |   |       +-- the DT det
 |   +-- , , punct
 |   +-- strategy NN conj
 |   |   +-- that IN mark
 |   |   +-- w RB advmod
 |   |   +-- is VBZ cop
 |   |   +-- a DT det
 |   |   +-- mixed JJ amod
 |   |   +-- for IN prep
 |   |       +-- W NN pobj
 |   +-- and CC cc
 +-- . . punct
Input: 101 We say that v is a potential best response to w -LRB- denoted by v ? pbrV -LRB- w -RRB- -RRB- if there is an equilibrium in the instance G -LRB- V , W -RRB- , W =w in which V has mixed strategy v .
Parse:
say VBP ROOT
 +-- We PRP nsubj
 |   +-- 101 CD num
 +-- response NN ccomp
 |   +-- that IN mark
 |   +-- v NN nsubj
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- potential JJ amod
 |   +-- best JJS amod
 |   +-- to IN prep
 |       +-- w RB pcomp
 |           +-- -LRB- -LRB- punct
 |           +-- denoted VBN dep
 |               +-- by IN prep
 |                   +-- v NN pobj
 |                       +-- ? . punct
 |                       +-- has VBZ rcmod
 |                           +-- pbrV UH nsubj
 |                           +-- w RB dep
 |                           |   +-- -LRB- -LRB- punct
 |                           |   +-- -RRB- -RRB- punct
 |                           +-- -RRB- -RRB- punct
 |                           +-- is VBZ advcl
 |                           |   +-- if IN mark
 |                           |   +-- there EX expl
 |                           |   +-- equilibrium NN nsubj
 |                           |       +-- an DT det
 |                           |       +-- in IN prep
 |                           |           +-- G NNP pobj
 |                           |               +-- the DT det
 |                           |               +-- instance NN nn
 |                           |               +-- -LRB- -LRB- punct
 |                           |               +-- V NNP dep
 |                           |               |   +-- , , punct
 |                           |               |   +-- W NNP appos
 |                           |               +-- -RRB- -RRB- punct
 |                           +-- , , punct
 |                           +-- W NNP nsubj
 |                           +-- =w , punct
 |                           +-- in IN prep
 |                           |   +-- which WDT pobj
 |                           +-- V NNP nsubj
 |                           +-- v NN dobj
 |                               +-- strategy NN nn
 |                                   +-- mixed VBN amod
 +-- . . punct
Input: We define the best response policy for V , given W , as B -LRB- W , V -RRB- = -LRB- -LRB- w , v -RRB- | v ? pbrV -LRB- w -RRB- , w ? -LRB- 0 , 1 -RRB- -RRB- .
Parse:
define VBP ROOT
 +-- We PRP nsubj
 +-- policy NN dobj
 |   +-- the DT det
 |   +-- best JJS amod
 |   +-- response NN nn
 |   +-- for IN prep
 |   |   +-- V NN pobj
 |   +-- , , punct
 |   +-- given VBN partmod
 |   |   +-- W NNP dep
 |   +-- as IN prep
 |       +-- B NNP pobj
 |           +-- W NNP appos
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- , , punct
 |           |   +-- V NNP appos
 |           |   +-- -RRB- -RRB- punct
 |           +-- = SYM dep
 |           +-- -LRB- -LRB- punct
 |           +-- w UH dep
 |           |   +-- , , punct
 |           |   +-- v NN dep
 |           +-- -RRB- -RRB- punct
 |           +-- | , punct
 |           +-- v NN appos
 |           |   +-- ? . punct
 |           |   +-- pbrV UH dep
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- w CC advmod
 |           |   +-- -RRB- -RRB- punct
 |           +-- , , punct
 |           +-- w RB advmod
 |           +-- ? . punct
 |           +-- 0 CD dep
 |               +-- , , punct
 |               +-- 1 CD num
 +-- . . punct
Input: Typically , W is the parent of V , and this is just referred to as the best response policy for V .
Parse:
parent NN ROOT
 +-- Typically RB advmod
 +-- , , punct
 +-- W NNP nsubj
 +-- is VBZ cop
 +-- the DT det
 +-- of IN prep
 |   +-- V NNP pobj
 +-- and CC cc
 +-- referred VBN conj
 |   +-- this DT nsubjpass
 |   +-- is VBZ auxpass
 |   +-- just RB advmod
 |   +-- to IN prep
 |   +-- as IN prep
 |       +-- policy NN pobj
 |           +-- the DT det
 |           +-- best JJS amod
 |           +-- response NN nn
 |           +-- for IN prep
 |               +-- V NN pobj
 +-- . . punct
