Input: Graphical games have been proposed as a game theoretic model of large scale distributed networks of non cooperative agents .
Parse:
proposed VBN ROOT
 +-- games NNS nsubjpass
 |   +-- Graphical JJ amod
 +-- have VBP aux
 +-- been VBN auxpass
 +-- as IN prep
 |   +-- model NN pobj
 |       +-- a DT det
 |       +-- game NN nn
 |       +-- theoretic JJ amod
 |       +-- of IN prep
 |           +-- networks NNS pobj
 |               +-- scale NN nn
 |               |   +-- large JJ amod
 |               +-- distributed VBN amod
 |               +-- of IN prep
 |                   +-- agents NNS pobj
 |                       +-- non CD num
 |                       +-- cooperative JJ amod
 +-- . . punct
Input: When the number of players is large , and the underlying graph has low degree , they provide a concise way to represent the players '' payoffs .
Parse:
provide VBP ROOT
 +-- large JJ advcl
 |   +-- When WRB advmod
 |   +-- number NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- players NNS pobj
 |   +-- is VBZ cop
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- has VBZ conj
 |       +-- graph NN nsubj
 |       |   +-- the DT det
 |       |   +-- underlying VBG amod
 |       +-- degree NN dobj
 |           +-- low JJ amod
 +-- , , punct
 +-- they PRP nsubj
 +-- way NN dobj
 |   +-- a DT det
 |   +-- concise JJ amod
 |   +-- represent VB infmod
 |       +-- to TO aux
 |       +-- payoffs NNS dobj
 |           +-- the DT det
 |           +-- players NNS nn
 |           +-- '' '' punct
 +-- . . punct
Input: It has recently been shown that the problem of finding Nash equilibria in a general degree 3 graphical game with two actions per player is complete for the complexity class PPAD , indicating that it is unlikely that there is any polynomial time algorithm for this problem .
Parse:
shown VBN ROOT
 +-- It PRP nsubj
 +-- has VBZ aux
 +-- recently RB advmod
 +-- been VBN auxpass
 +-- complete JJ ccomp
 |   +-- that IN mark
 |   +-- problem NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- finding VBG pcomp
 |   |           +-- equilibria NN dobj
 |   |           |   +-- Nash NNP nn
 |   |           +-- in IN prep
 |   |           |   +-- game NN pobj
 |   |           |       +-- a DT det
 |   |           |       +-- degree NN nn
 |   |           |       |   +-- general JJ amod
 |   |           |       +-- 3 CD num
 |   |           |       +-- graphical JJ amod
 |   |           +-- with IN prep
 |   |               +-- actions NNS pobj
 |   |                   +-- two CD num
 |   |                   +-- per IN prep
 |   |                       +-- player NN pobj
 |   +-- is VBZ cop
 |   +-- for IN prep
 |       +-- PPAD NNP pobj
 |           +-- the DT det
 |           +-- complexity NN nn
 |           +-- class NN nn
 +-- , , punct
 +-- indicating VBG xcomp
 |   +-- unlikely JJ ccomp
 |       +-- that IN mark
 |       +-- it PRP nsubj
 |       +-- is VBZ cop
 |       +-- is VBZ ccomp
 |           +-- that IN mark
 |           +-- there EX expl
 |           +-- time NN nsubj
 |               +-- any DT det
 |               +-- polynomial JJ amod
 |               +-- algorithm NNP appos
 |               +-- for IN prep
 |                   +-- problem NN pobj
 |                       +-- this DT det
 +-- . . punct
Input: In this paper , we study the complexity of graphical games with two actions per player on bounded degree trees .
Parse:
study VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- complexity NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- games NNS pobj
 |           +-- graphical JJ amod
 |           +-- with IN prep
 |               +-- actions NNS pobj
 |                   +-- two CD num
 |                   +-- per IN prep
 |                   |   +-- player NN pobj
 |                   +-- on IN prep
 |                       +-- trees NNS pobj
 |                           +-- bounded VBN amod
 |                           +-- degree NN nn
 +-- . . punct
Input: This setting was first considered by Kearns , Littman and Singh , who proposed a dynamic programming based algorithm that computes all Nash equilibria of such games .
Parse:
considered VBN ROOT
 +-- setting NN nsubjpass
 |   +-- This DT det
 +-- was VBD auxpass
 +-- first RB advmod
 +-- by IN prep
 |   +-- Kearns NNPS pobj
 |       +-- , , punct
 |       +-- Littman NNP conj
 |       +-- and CC cc
 |       +-- Singh NNP conj
 |       +-- proposed VBD rcmod
 |           +-- who WP nsubj
 |           +-- algorithm NN dobj
 |               +-- a DT det
 |               +-- dynamic JJ amod
 |               +-- based VBN amod
 |               |   +-- programming NN dep
 |               +-- computes VBZ rcmod
 |                   +-- that WDT nsubj
 |                   +-- equilibria NNS dobj
 |                       +-- all DT det
 |                       +-- Nash NNP nn
 |                       +-- of IN prep
 |                           +-- games NNS pobj
 |                               +-- such JJ amod
 +-- . . punct
Input: The running time of their algorithm is exponential , though approximate equilibria can be computed efficiently .
Parse:
exponential JJ ROOT
 +-- time NN nsubj
 |   +-- The DT det
 |   +-- running VBG nn
 |   +-- of IN prep
 |       +-- algorithm NN pobj
 |           +-- their PRP$ poss
 +-- is VBZ cop
 +-- , , punct
 +-- computed VBN advcl
 |   +-- though IN mark
 |   +-- equilibria NN nsubjpass
 |   |   +-- approximate JJ amod
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- efficiently RB advmod
 +-- . . punct
Input: Later , Littman , Kearns and Singh proposed a modification to this algorithm that can find a single Nash equilibrium in polynomial time .
Parse:
proposed VBD ROOT
 +-- Later RB advmod
 +-- , , punct
 +-- Littman NNP nsubj
 |   +-- , , punct
 |   +-- Kearns NNP conj
 |   +-- and CC cc
 |   +-- Singh NNP conj
 +-- modification NN dobj
 |   +-- a DT det
 |   +-- to IN prep
 |   |   +-- algorithm NN pobj
 |   |       +-- this DT det
 |   +-- find VB rcmod
 |       +-- that WDT nsubj
 |       +-- can MD aux
 |       +-- equilibrium NN dobj
 |       |   +-- a DT det
 |       |   +-- Nash NN nn
 |       |       +-- single JJ amod
 |       +-- in IN prep
 |           +-- time NN pobj
 |               +-- polynomial JJ amod
 +-- . . punct
Input: We show that this modified algorithm is incorrect the output is not always a Nash equilibrium .
Parse:
show VBP ROOT
 +-- We PRP nsubj
 +-- incorrect JJ ccomp
 |   +-- that IN mark
 |   +-- algorithm NN nsubj
 |   |   +-- this DT det
 |   |   +-- modified VBN amod
 |   +-- is VBZ cop
 |   +-- equilibrium NN ccomp
 |       +-- output NN nsubj
 |       |   +-- the DT det
 |       +-- is VBZ cop
 |       +-- not RB neg
 |       +-- always RB advmod
 |       +-- a DT det
 |       +-- Nash NNP nn
 +-- . . punct
Input: We then propose a new algorithm that is based on the ideas of Kearns et al .
Parse:
propose VBP ROOT
 +-- We PRP nsubj
 +-- then RB advmod
 +-- algorithm NN dobj
 |   +-- a DT det
 |   +-- new JJ amod
 |   +-- based VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- is VBZ auxpass
 |       +-- on IN prep
 |           +-- ideas NNS pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- al NNP pobj
 |                       +-- Kearns NNPS nn
 |                       +-- et NNP nn
 +-- . . punct
Input: and computes all Nash equilibria in quadratic time if the input graph is a path , and in polynomial time if it is an arbitrary graph of maximum degree 2 .
Parse:
computes VBZ ROOT
 +-- and CC cc
 +-- equilibria NN dobj
 |   +-- all DT det
 |   +-- Nash NNP nn
 +-- in IN prep
 |   +-- time NN pobj
 |       +-- quadratic JJ amod
 +-- path NN advcl
 |   +-- if IN mark
 |   +-- graph NN nsubj
 |   |   +-- the DT det
 |   |   +-- input NN nn
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- graph NN conj
 |       +-- in IN prep
 |       |   +-- time NN pobj
 |       |       +-- polynomial JJ amod
 |       +-- if IN mark
 |       +-- it PRP nsubj
 |       +-- is VBZ cop
 |       +-- an DT det
 |       +-- arbitrary JJ amod
 |       +-- of IN prep
 |           +-- degree NN pobj
 |               +-- maximum JJ amod
 |               +-- 2 CD num
 +-- . . punct
Input: Moreover , our algorithm can be used to compute Nash equilibria of graphical games on arbitrary trees , but the running time can be exponential , even when the tree has bounded degree .
Parse:
used VBN ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- algorithm NN nsubjpass
 |   +-- our PRP$ poss
 +-- can MD aux
 +-- be VB auxpass
 +-- compute VB xcomp
 |   +-- to TO aux
 |   +-- equilibria NNS dobj
 |   |   +-- Nash NNP nn
 |   |   +-- of IN prep
 |   |       +-- games NNS pobj
 |   |           +-- graphical JJ amod
 |   +-- on IN prep
 |       +-- trees NNS pobj
 |           +-- arbitrary JJ amod
 +-- but CC cc
 +-- exponential JJ conj
 |   +-- time NN nsubj
 |   |   +-- the DT det
 |   |   +-- running VBG nn
 |   +-- can MD aux
 |   +-- be VB cop
 |   +-- , , punct
 |   +-- bounded VBN advcl
 |       +-- even RB advmod
 |       +-- when WRB advmod
 |       +-- tree NN nsubj
 |       |   +-- the DT det
 |       +-- has VBZ aux
 |       +-- degree NN dobj
 +-- . . punct
Input: We show that this is inevitable any algorithm of this type will take exponential time , even on bounded degree trees with pathwidth 2 .
Parse:
show VBP ROOT
 +-- We PRP nsubj
 +-- inevitable JJ ccomp
 |   +-- that IN mark
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- take VB ccomp
 |       +-- algorithm NN nsubj
 |       |   +-- any DT det
 |       |   +-- of IN prep
 |       |       +-- type NN pobj
 |       |           +-- this DT det
 |       +-- will MD aux
 |       +-- time NN dobj
 |       |   +-- exponential JJ amod
 |       +-- , , punct
 |       +-- on IN prep
 |           +-- even RB advmod
 |           +-- trees NNS pobj
 |               +-- bounded JJ amod
 |               +-- degree NN nn
 |               +-- with IN prep
 |                   +-- pathwidth NN pobj
 |                       +-- 2 CD num
 +-- . . punct
Input: It is an open question whether our algorithm runs in polynomial time on graphs with pathwidth 1 , but we show that finding a Nash equilibrium for a 2 action graphical game in which the underlying graph has maximum degree 3 and constant pathwidth is PPAD complete -LRB- so is unlikely to be tractable -RRB- .
Parse:
question NN ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- an DT det
 +-- open JJ amod
 +-- runs VBZ ccomp
 |   +-- whether IN mark
 |   +-- algorithm NN nsubj
 |   |   +-- our PRP$ poss
 |   +-- in IN prep
 |   |   +-- time NN pobj
 |   |       +-- polynomial JJ amod
 |   +-- on IN prep
 |       +-- graphs NNS pobj
 |           +-- with IN prep
 |               +-- pathwidth NN pobj
 |                   +-- 1 CD num
 +-- , , punct
 +-- but CC cc
 +-- show VBP conj
 |   +-- we PRP nsubj
 |   +-- unlikely JJ ccomp
 |       +-- that IN mark
 |       +-- finding VBG csubj
 |       |   +-- equilibrium NN dobj
 |       |   |   +-- a DT det
 |       |   |   +-- Nash NN nn
 |       |   +-- for IN prep
 |       |       +-- game NN pobj
 |       |           +-- a DT det
 |       |           +-- action NN nn
 |       |           |   +-- 2 CD num
 |       |           +-- graphical JJ amod
 |       |           +-- has VBZ rcmod
 |       |               +-- in IN prep
 |       |               |   +-- which WDT pobj
 |       |               +-- graph NN nsubj
 |       |               |   +-- the DT det
 |       |               |   +-- underlying JJ amod
 |       |               +-- degree NN dobj
 |       |               |   +-- maximum NN nn
 |       |               |   +-- 3 CD num
 |       |               +-- and CC cc
 |       |               +-- PPAD NNP conj
 |       |                   +-- pathwidth NN nsubj
 |       |                   |   +-- constant JJ amod
 |       |                   +-- is VBZ cop
 |       |                   +-- complete JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- so RB advmod
 |       +-- is VBZ cop
 |       +-- tractable JJ xcomp
 |           +-- to TO aux
 |           +-- be VB cop
 +-- -RRB- -RRB- punct
 +-- . . punct
Input: F.2 -LRB- Theory of Computation -RRB-
Parse:
F.2 CD ROOT
 +-- -LRB- -LRB- punct
 +-- Theory NN dep
 |   +-- of IN prep
 |       +-- Computation NNP pobj
 +-- -RRB- -RRB- punct
