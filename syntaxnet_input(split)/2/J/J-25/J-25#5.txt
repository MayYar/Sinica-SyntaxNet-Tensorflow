Input: The straightforward algorithm for solving the divisible matching problem is linear programming ; we set up an appropriate linear program in Section 5.1 .
Parse:
programming NN ROOT
 +-- algorithm NN nsubj
 |   +-- The DT det
 |   +-- straightforward JJ amod
 |   +-- for IN prep
 |       +-- solving VBG pcomp
 |           +-- problem NN dobj
 |               +-- the DT det
 |               +-- divisible JJ amod
 |               +-- matching NN nn
 +-- is VBZ cop
 +-- linear JJ amod
 +-- ; : punct
 +-- set VBD parataxis
 |   +-- we PRP nsubj
 |   +-- up RP prt
 |   +-- program NN dobj
 |   |   +-- an DT det
 |   |   +-- appropriate JJ amod
 |   |   +-- linear JJ amod
 |   +-- in IN prep
 |       +-- Section NN pobj
 |           +-- 5.1 CD num
 +-- . . punct
Input: The straightforward algorithm for solving the indivisible matching problem is integer programming .
Parse:
programming NN ROOT
 +-- algorithm NN nsubj
 |   +-- The DT det
 |   +-- straightforward JJ amod
 |   +-- for IN prep
 |       +-- solving VBG pcomp
 |           +-- problem NN dobj
 |               +-- the DT det
 |               +-- indivisible JJ amod
 |               +-- matching NN nn
 +-- is VBZ cop
 +-- integer JJ amod
 +-- . . punct
Input: With n events , to set up the appropriate linear or integer programs , simply writing out the payoff vectors in the straightforward way requires O -LRB- 2n -RRB- space .
Parse:
set VB ROOT
 +-- With IN prep
 |   +-- events NNS pobj
 |       +-- n DT det
 +-- , , punct
 +-- to TO aux
 +-- up RP prt
 +-- programs NNS dobj
 |   +-- the DT det
 |   +-- appropriate JJ amod
 |   +-- linear JJ amod
 |       +-- or CC cc
 |       +-- integer NN conj
 +-- requires VBZ ccomp
 |   +-- writing VBG csubj
 |   |   +-- simply RB advmod
 |   |   +-- out RP prt
 |   |   +-- vectors NNS dobj
 |   |   |   +-- the DT det
 |   |   |   +-- payoff NN nn
 |   |   +-- in IN prep
 |   |       +-- way NN pobj
 |   |           +-- the DT det
 |   |           +-- straightforward JJ amod
 |   +-- space NN dobj
 |       +-- O NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- 2n LS nn
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: There is some hope that specialized algorithms that exploit structure among bids can perform better in terms of average case time and space complexity .
Parse:
is VBZ ROOT
 +-- There EX expl
 +-- hope NN nsubj
 |   +-- some DT det
 |   +-- perform VB ccomp
 |       +-- that IN mark
 |       +-- algorithms NNS nsubj
 |       |   +-- specialized VBN amod
 |       |   +-- exploit VBP rcmod
 |       |       +-- that WDT nsubj
 |       |       +-- structure NN dobj
 |       |       +-- among IN prep
 |       |           +-- bids NNS pobj
 |       +-- can MD aux
 |       +-- better RBR advmod
 |       +-- in IN prep
 |           +-- terms NNS pobj
 |               +-- of IN prep
 |                   +-- time NN pobj
 |                       +-- average JJ amod
 |                       +-- case NN nn
 |                       +-- and CC cc
 |                       +-- complexity NN conj
 |                           +-- space NN nn
 +-- . . punct
Input: For example , in some cases matches can be identified using logical reduction techniques , without writing down the full payoff vectors .
Parse:
identified VBN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- in IN prep
 |   +-- cases NNS pobj
 |       +-- some DT det
 +-- matches NNS nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- using VBG xcomp
 |   +-- techniques NNS dobj
 |       +-- logical JJ amod
 |       +-- reduction NN nn
 +-- without IN prep
 |   +-- writing VBG pcomp
 |       +-- down RP prt
 |       +-- vectors NNS dobj
 |           +-- the DT det
 |           +-- full JJ amod
 |           +-- payoff NN nn
 +-- . . punct
Input: So a match between the following bids
Parse:
match NN ROOT
 +-- So RB dep
 +-- a DT det
 +-- between IN prep
     +-- bids NNS pobj
         +-- the DT det
         +-- following VBG amod
Input: Formalizing a logical reduction algorithm for matching , or other algorithms that can exploit special structure among the bids , is a promising avenue for future work. .
Parse:
avenue NN ROOT
 +-- Formalizing VBG csubj
 |   +-- algorithm NN dobj
 |       +-- a DT det
 |       +-- logical JJ amod
 |       +-- reduction NN nn
 |       +-- for IN prep
 |       |   +-- matching VBG pobj
 |       +-- , , punct
 |       +-- or CC cc
 |       +-- algorithms NNS conj
 |           +-- other JJ amod
 |           +-- exploit VB rcmod
 |               +-- that WDT nsubj
 |               +-- can MD aux
 |               +-- structure NN dobj
 |               |   +-- special JJ amod
 |               +-- among IN prep
 |                   +-- bids NNS pobj
 |                       +-- the DT det
 +-- is VBZ cop
 +-- a DT det
 +-- promising JJ amod
 +-- for IN prep
 |   +-- work. NN pobj
 |       +-- future JJ amod
 +-- . . punct
