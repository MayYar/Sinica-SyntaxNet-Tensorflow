Input: In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy .
Parse:
proposed VBD ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- the DT det
 |       +-- previous JJ amod
 +-- we PRP nsubj
 +-- using VBG xcomp
 |   +-- strategies NNS dobj
 |       +-- uniform JJ amod
 +-- and CC cc
 +-- gave VBD conj
 |   +-- algorithm NN dobj
 |       +-- an DT det
 |       +-- efficient JJ amod
 |       +-- compute VB infmod
 |           +-- to TO aux
 |           +-- strategy NN dobj
 |               +-- the DT det
 |               +-- best JJS amod
 |               +-- such JJ amod
 +-- . . punct
Input: In section we prove that there is always a good uniform strategy
Parse:
prove VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 +-- we PRP nsubj
 +-- is VBZ ccomp
     +-- that IN mark
     +-- there EX expl
     +-- always RB advmod
     +-- strategy NN nsubj
         +-- a DT det
         +-- good JJ amod
         +-- uniform NN nn
Input: There always exists a uniform bidding strategy that is -LRB- 1 ? 1 e -RRB- optimal .
Parse:
exists VBZ ROOT
 +-- There EX expl
 +-- always RB advmod
 +-- strategy NN dobj
 |   +-- a DT det
 |   +-- uniform JJ amod
 |   +-- bidding NN nn
 |   +-- optimal NN rcmod
 |       +-- that WDT nsubj
 |       +-- is VBZ cop
 |       +-- 1 CD dep
 |           +-- -LRB- -LRB- punct
 |           +-- ? . punct
 |           +-- e NN dep
 |           |   +-- 1 CD num
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: Furthermore , for any > 0 , there exists an instance for which all uniform strategies are at most -LRB- 1 ? 1 e + -RRB- optimal .
Parse:
exists VBZ ROOT
 +-- Furthermore RB advmod
 +-- , , punct
 +-- for IN prep
 |   +-- > NNS pobj
 |       +-- any DT det
 |       +-- 0 CD num
 +-- there EX expl
 +-- instance NN dobj
 |   +-- an DT det
 |   +-- are VBP rcmod
 |   |   +-- for IN prep
 |   |   |   +-- which WDT pobj
 |   |   +-- strategies NNS nsubj
 |   |   |   +-- all DT det
 |   |   |   +-- uniform JJ amod
 |   |   +-- at IN prep
 |   |       +-- most RBS pobj
 |   +-- -LRB- -LRB- punct
 |   +-- + SYM dep
 |   |   +-- 1 CD number
 |   |       +-- ? . punct
 |   |       +-- e CD num
 |   |           +-- 1 CD number
 |   +-- -RRB- -RRB- punct
 |   +-- optimal JJ amod
 +-- . . punct
Input: We introduce the notion of a click price curve , which is central to our analysis .
Parse:
introduce VBP ROOT
 +-- We PRP nsubj
 +-- notion NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- curve NN pobj
 |           +-- a DT det
 |           +-- click NN nn
 |           +-- price NN nn
 |           +-- , , punct
 |           +-- central JJ rcmod
 |               +-- which WDT nsubj
 |               +-- is VBZ cop
 |               +-- to IN prep
 |                   +-- analysis NN pobj
 |                       +-- our PRP$ poss
 +-- . . punct
Input: This definition makes it simple to show that there is always a single bid strategy that is a 1 2 approximation -LRB- and this is tight -RRB- ; we then build on this to prove Theorem 3 .
Parse:
makes VBZ ROOT
 +-- definition NN nsubj
 |   +-- This DT det
 +-- show VB xcomp
 |   +-- it PRP nsubj
 |   +-- simple JJ dep
 |   +-- to TO aux
 |   +-- is VBZ ccomp
 |       +-- that IN mark
 |       +-- there EX expl
 |       +-- always RB advmod
 |       +-- strategy NN nsubj
 |           +-- a DT det
 |           +-- single JJ amod
 |           +-- bid NN nn
 |           +-- approximation NN rcmod
 |               +-- that WDT nsubj
 |               +-- is VBZ cop
 |               +-- a DT det
 |               +-- 2 CD num
 |               |   +-- 1 CD number
 |               +-- -LRB- -LRB- punct
 |               +-- and CC cc
 |               +-- tight JJ conj
 |                   +-- this DT nsubj
 |                   +-- is VBZ cop
 |                   +-- -RRB- -RRB- punct
 +-- ; : punct
 +-- build VBP parataxis
 |   +-- we PRP nsubj
 |   +-- then RB advmod
 |   +-- on IN prep
 |   |   +-- this DT pobj
 |   +-- prove VB xcomp
 |       +-- to TO aux
 |       +-- Theorem NNP xcomp
 |           +-- 3 CD num
 +-- . . punct
