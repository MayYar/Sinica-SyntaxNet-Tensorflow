Input: In Section 3 we observed that the Snippet Engine would have its own RAM in proportion to the size of the document collection .
Parse:
observed VBD ROOT
 +-- In IN prep
 |   +-- Section NN pobj
 |       +-- 3 CD num
 +-- we PRP nsubj
 +-- have VB ccomp
 |   +-- that IN mark
 |   +-- Engine NNP nsubj
 |   |   +-- the DT det
 |   |   +-- Snippet NNP nn
 |   +-- would MD aux
 |   +-- RAM NN dobj
 |   |   +-- its PRP$ poss
 |   |   +-- own JJ amod
 |   +-- in IN prep
 |       +-- proportion NN pobj
 |           +-- to IN prep
 |               +-- size NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- collection NN pobj
 |                           +-- the DT det
 |                           +-- document NN nn
 +-- . . punct
Input: For example , on a whole of Web search engine , the Snippet Engine would be distributed over many workstations , each with at least 4 Gb of RAM .
Parse:
distributed VBN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- on IN prep
 |   +-- whole NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- engine NN pobj
 |               +-- search NN nn
 |                   +-- Web NN nn
 +-- Engine NNP nsubjpass
 |   +-- the DT det
 |   +-- Snippet NNP nn
 +-- would MD aux
 +-- be VB auxpass
 +-- over IN prep
 |   +-- workstations NNS pobj
 |       +-- many JJ amod
 +-- with IN prep
 |   +-- each DT dep
 |   +-- Gb NNP pobj
 |       +-- 4 CD num
 |       |   +-- least RBS dep
 |       |       +-- at RB advmod
 |       +-- of IN prep
 |           +-- RAM NN pobj
 +-- . . punct
Input: In a small enterprise , the Snippet Engine may be sharing RAM with all other sub systems on a single workstation , hence only have 100 Mb available .
Parse:
sharing VBG ROOT
 +-- In IN prep
 |   +-- enterprise NN pobj
 |       +-- a DT det
 |       +-- small JJ amod
 +-- , , punct
 +-- Engine NNP nsubj
 |   +-- the DT det
 |   +-- Snippet NNP nn
 +-- may MD aux
 +-- be VB aux
 +-- RAM NN dobj
 +-- with IN prep
 |   +-- systems NNS pobj
 |       +-- all DT det
 |       +-- other JJ amod
 |       +-- sub NN nn
 +-- on IN prep
 |   +-- workstation NN pobj
 |       +-- a DT det
 |       +-- single JJ amod
 +-- have VBP ccomp
 |   +-- hence RB advmod
 |   +-- only RB advmod
 |   +-- available JJ xcomp
 |       +-- Mb NNP nsubj
 |           +-- 100 CD num
 +-- . . punct
Input: In this section we use simulation to measure the number of cache hits in the Snippet Engine as memory size varies .
Parse:
use VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- simulation NN dobj
 +-- measure VB xcomp
 |   +-- to TO aux
 |   +-- number NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- hits NNS pobj
 |       |       +-- cache NN nn
 |       +-- in IN prep
 |           +-- Engine NNP pobj
 |               +-- the DT det
 |               +-- Snippet NNP nn
 +-- varies VBZ advcl
 |   +-- as IN mark
 |   +-- size NN nsubj
 |       +-- memory NN nn
 +-- . . punct
Input: We compare two caching policies
Parse:
compare VBP ROOT
 +-- We PRP nsubj
 +-- policies NNS dobj
     +-- two CD num
     +-- caching VBG amod
Input: Note that documents are first loaded into the caches in order of decreasing query independent score , which is computed as described in Section 4.4 .
Parse:
Note VB ROOT
 +-- loaded VBN ccomp
 |   +-- that IN mark
 |   +-- documents NNS nsubjpass
 |   +-- are VBP auxpass
 |   +-- first RB advmod
 |   +-- into IN prep
 |   |   +-- caches NNS pobj
 |   |       +-- the DT det
 |   +-- in IN prep
 |       +-- order NN pobj
 |           +-- of IN prep
 |               +-- decreasing VBG pcomp
 |                   +-- score NN dobj
 |                       +-- query NN nn
 |                       +-- independent JJ amod
 |                       +-- , , punct
 |                       +-- computed VBN rcmod
 |                           +-- which WDT nsubjpass
 |                           +-- is VBZ auxpass
 |                           +-- described VBN advcl
 |                               +-- as IN mark
 |                               +-- in IN prep
 |                                   +-- Section NNP pobj
 |                                       +-- 4.4 CD num
 +-- . . punct
Input: The simulations also assume a query cache exists for the top Q most frequent queries , and that these queries are never processed by the Snippet Engine .
Parse:
assume VBP ROOT
 +-- simulations NNS nsubj
 |   +-- The DT det
 +-- also RB advmod
 +-- exists VBZ ccomp
 |   +-- cache NN nsubj
 |   |   +-- a DT det
 |   |   +-- query NN nn
 |   +-- for IN prep
 |   |   +-- queries NNS pobj
 |   |       +-- the DT det
 |   |       +-- top JJ amod
 |   |       +-- Q NN nn
 |   |       +-- frequent JJ amod
 |   |           +-- most RBS advmod
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- processed VBN conj
 |       +-- that IN mark
 |       +-- queries NNS nsubjpass
 |       |   +-- these DT det
 |       +-- are VBP auxpass
 |       +-- never RB neg
 |       +-- by IN prep
 |           +-- Engine NNP pobj
 |               +-- the DT det
 |               +-- Snippet NNP nn
 +-- . . punct
Input: All queries passed into the simulations are from the second half of the Excite query log -LRB- the first half being used to compute query independent scores -RRB- , and are stemmed , stopped , and have their terms sorted alphabetically .
Parse:
are VBP ROOT
 +-- queries NNS nsubj
 |   +-- All DT det
 |   +-- passed VBD partmod
 |       +-- into IN prep
 |           +-- simulations NNS pobj
 |               +-- the DT det
 +-- from IN prep
 |   +-- half NN pobj
 |       +-- the DT det
 |       +-- second JJ amod
 |       +-- of IN prep
 |           +-- log NN pobj
 |               +-- the DT det
 |               +-- query NN nn
 |               |   +-- Excite NNP nn
 |               +-- -LRB- -LRB- punct
 |               +-- used VBN dep
 |               |   +-- half NN nsubjpass
 |               |   |   +-- the DT det
 |               |   |   +-- first JJ amod
 |               |   +-- being VBG auxpass
 |               |   +-- compute VB xcomp
 |               |       +-- to TO aux
 |               |       +-- scores NNS dobj
 |               |           +-- query NN nn
 |               |           +-- independent JJ amod
 |               +-- -RRB- -RRB- punct
 +-- , , punct
 +-- and CC cc
 +-- stemmed VBN conj
 |   +-- are VBP auxpass
 |   +-- , , punct
 |   +-- stopped VBN conj
 |   +-- and CC cc
 |   +-- sorted VBN conj
 |       +-- have VBP aux
 |       +-- terms NNS nsubj
 |       |   +-- their PRP$ poss
 |       +-- alphabetically RB advmod
 +-- . . punct
Input: This final alteration simply allows queries such as red dog and dog red to return the same documents , as would be the case in a search engine where explicit phrase operators would be required in the query to enforce term order and proximity .
Parse:
allows VBZ ROOT
 +-- alteration NN nsubj
 |   +-- This DT det
 |   +-- final JJ amod
 +-- simply RB advmod
 +-- return VB xcomp
 |   +-- queries NNS nsubj
 |   |   +-- as IN prep
 |   |       +-- such JJ mwe
 |   |       +-- dog NN pobj
 |   |           +-- red JJ amod
 |   |           +-- and CC cc
 |   |           +-- red JJ conj
 |   |               +-- dog NN nn
 |   +-- to TO aux
 |   +-- documents NNS dobj
 |   |   +-- the DT det
 |   |   +-- same JJ amod
 |   +-- , , punct
 |   +-- case NN advcl
 |       +-- as IN mark
 |       +-- would MD aux
 |       +-- be VB cop
 |       +-- the DT det
 |       +-- in IN prep
 |           +-- engine NN pobj
 |               +-- a DT det
 |               +-- search NN nn
 |               +-- required VBN rcmod
 |                   +-- where WRB advmod
 |                   +-- operators NNS nsubjpass
 |                   |   +-- explicit JJ amod
 |                   |   +-- phrase NN nn
 |                   +-- would MD aux
 |                   +-- be VB auxpass
 |                   +-- in IN prep
 |                   |   +-- query NN pobj
 |                   |       +-- the DT det
 |                   +-- enforce VB xcomp
 |                       +-- to TO aux
 |                       +-- order NN dobj
 |                           +-- term NN nn
 |                           +-- and CC cc
 |                           +-- proximity NN conj
 +-- . . punct
Input: Figure 4 shows the percentage of document access that hit cache using the two caching schemes , with Q either 0 or 10 , 000 , on 535 , 276 Excite queries on wt100g .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 4 CD num
 +-- percentage NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- access NN pobj
 |           +-- document NN nn
 |           +-- hit VBD rcmod
 |               +-- that WDT nsubj
 |               +-- cache NN dobj
 |               +-- using VBG xcomp
 |                   +-- schemes NNS dobj
 |                       +-- the DT det
 |                       +-- two CD num
 |                       +-- caching NN nn
 +-- , , punct
 +-- with IN prep
 |   +-- Q NN pobj
 |       +-- 0 CD dep
 |       |   +-- either CC preconj
 |       |   +-- or CC cc
 |       |   +-- 10 CD conj
 |       +-- , , punct
 |       +-- 000 CD dobj
 |       +-- on IN prep
 |       |   +-- 535 CD pobj
 |       +-- queries NNS appos
 |           +-- 276 CD num
 |           +-- Excite NNP nn
 |           +-- on IN prep
 |               +-- wt100g CD pobj
 +-- . . punct
Input: The xaxis shows the percentage of documents that are held in the cache , so 1.0 % corresponds to about 185 , 000 documents .
Parse:
shows VBZ ROOT
 +-- xaxis NNP nsubj
 |   +-- The DT det
 +-- percentage NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- documents NNS pobj
 |           +-- held VBN rcmod
 |               +-- that WDT nsubjpass
 |               +-- are VBP auxpass
 |               +-- in IN prep
 |                   +-- cache NN pobj
 |                       +-- the DT det
 +-- , , punct
 +-- so RB cc
 +-- corresponds NNS conj
 |   +-- % NN nsubj
 |   |   +-- 1.0 CD num
 |   +-- to IN prep
 |       +-- documents NNS pobj
 |           +-- 185 CD num
 |               +-- about RB quantmod
 |               +-- , , punct
 |               +-- 000 CD number
 +-- . . punct
Input: From this figure it is clear that caching even a small percentage of the documents has a large impact on reducing seek time for snippet generation .
Parse:
clear JJ ROOT
 +-- From IN prep
 |   +-- figure NN pobj
 |       +-- this DT det
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- has VBZ ccomp
 |   +-- that IN mark
 |   +-- caching VBG csubj
 |   |   +-- percentage NN dobj
 |   |       +-- even RB advmod
 |   |       +-- a DT det
 |   |       +-- small JJ amod
 |   |       +-- of IN prep
 |   |           +-- documents NNS pobj
 |   |               +-- the DT det
 |   +-- impact NN dobj
 |       +-- a DT det
 |       +-- large JJ amod
 |       +-- on IN prep
 |           +-- reducing VBG pcomp
 |               +-- time NN dobj
 |                   +-- seek NN amod
 |                   +-- for IN prep
 |                       +-- generation NN pobj
 |                           +-- snippet NN nn
 +-- . . punct
Input: With 1 % of documents cached , about 222 Mb for the wt100g collection , around 80 % of disk seeks are avoided .
Parse:
avoided VBN ROOT
 +-- With IN prep
 |   +-- % NN pobj
 |       +-- 1 CD num
 |       +-- of IN prep
 |       |   +-- documents NNS pobj
 |       |       +-- cached VBN partmod
 |       +-- , , punct
 |       +-- Mb NNP appos
 |           +-- 222 CD num
 |           |   +-- about IN quantmod
 |           +-- for IN prep
 |               +-- collection NN pobj
 |                   +-- the DT det
 |                   +-- wt100g CD num
 +-- , , punct
 +-- % NN nsubjpass
 |   +-- 80 CD num
 |   |   +-- around RB quantmod
 |   +-- of IN prep
 |       +-- seeks NNS pobj
 |           +-- disk NN nn
 +-- are VBP auxpass
 +-- . . punct
Input: The static cache performs surprisingly well -LRB- squares in Figure 4 -RRB- , but is outperformed by the LRU cache -LRB- circles -RRB- .
Parse:
performs VBZ ROOT
 +-- cache NN nsubj
 |   +-- The DT det
 |   +-- static JJ amod
 +-- well RB advmod
 |   +-- surprisingly RB advmod
 +-- squares NNS dep
 |   +-- -LRB- -LRB- punct
 |   +-- in IN prep
 |   |   +-- Figure NNP pobj
 |   |       +-- 4 CD num
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- but CC cc
 +-- outperformed VBN conj
 |   +-- is VBZ auxpass
 |   +-- by IN prep
 |       +-- cache NN pobj
 |           +-- the DT det
 |           +-- LRU JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- circles NNS dep
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: In an actual implementation of LRU , however , there may be fragmentation of the cache as documents are swapped in and out .
Parse:
fragmentation NN ROOT
 +-- In IN prep
 |   +-- implementation NN pobj
 |       +-- an DT det
 |       +-- actual JJ amod
 |       +-- of IN prep
 |           +-- LRU NN pobj
 +-- , , punct
 +-- however RB advmod
 +-- there EX expl
 +-- may MD aux
 +-- be VB cop
 +-- of IN prep
 |   +-- cache NN pobj
 |       +-- the DT det
 +-- swapped VBN advcl
 |   +-- as IN mark
 |   +-- documents NNS nsubjpass
 |   +-- are VBP auxpass
 |   +-- in IN prep
 |       +-- and CC cc
 |       +-- out IN conj
 +-- . . punct
Input: The reason for the large impact of the document cache is 0.0 0.5 1.0 1.5 2.0 2.5 3.0 020406080100 Cache size -LRB- % of collection -RRB- % ofaccessesascachehits LRU Q=0 LRU Q=10 , 000 Static Q=0 Static Q=10 , 000 Figure 4
Parse:
% NN ROOT
 +-- reason NN nsubj
 |   +-- The DT det
 |   +-- for IN prep
 |       +-- impact NN pobj
 |           +-- the DT det
 |           +-- large JJ amod
 |           +-- of IN prep
 |               +-- cache NN pobj
 |                   +-- the DT det
 |                   +-- document NN nn
 +-- is VBZ cop
 +-- 0.0 CD num
 +-- 0.5 CD num
 +-- 1.0 CD num
 +-- 1.5 CD num
 +-- 2.0 CD num
 +-- size NN nn
 |   +-- 3.0 CD num
 |   |   +-- 2.5 CD number
 |   +-- 020406080100 CD num
 |   +-- Cache NNP nn
 |   +-- % NN appos
 |       +-- -LRB- -LRB- punct
 |       +-- of IN prep
 |       |   +-- collection NN pobj
 |       +-- -RRB- -RRB- punct
 +-- ofaccessesascachehits NNS dep
     +-- LRU NNP dep
         +-- Q=10 CD dep
         |   +-- Q=0 CD num
         |   +-- LRU RB amod
         +-- , , punct
         +-- Figure NN appos
             +-- 000 CD num
             +-- Static NNP nn
             +-- Q=0 CD num
             +-- Q=10 CD nn
             |   +-- , , punct
             |   +-- 000 NFP punct
             +-- 4 CD num
Input: Results are from a simulation on wt100g with 535 , 276 Excite queries .
Parse:
are VBP ROOT
 +-- Results NNS nsubj
 +-- from IN prep
 |   +-- simulation NN pobj
 |       +-- a DT det
 |       +-- on IN prep
 |           +-- wt100g CD pobj
 |               +-- with IN prep
 |                   +-- queries NNS pobj
 |                       +-- 535 CD num
 |                       +-- , , punct
 |                       +-- 276 CD num
 |                       +-- Excite NNP nn
 +-- . . punct
Input: that , for a particular collection , some documents are much more likely to appear in results lists than others .
Parse:
likely JJ ROOT
 +-- that DT nsubj
 +-- , , punct
 +-- for IN prep
 |   +-- collection NN pobj
 |       +-- a DT det
 |       +-- particular JJ amod
 +-- documents NNS nsubj
 |   +-- some DT det
 +-- are VBP cop
 +-- more RBR advmod
 |   +-- much RB advmod
 +-- appear VB xcomp
 |   +-- to TO aux
 |   +-- in IN prep
 |       +-- lists NNS pobj
 |           +-- results NNS nn
 +-- than IN prep
 |   +-- others NNS pobj
 +-- . . punct
Input: This effect occurs partly because of the approximately Zipfian query frequency distribution , and partly because most Web search engines employ ranking methods which combine query based scores with static -LRB- a priori -RRB- scores determined from factors such as link graph measures , URL features , spam scores and so on -LRB- 17 -RRB- .
Parse:
occurs VBZ ROOT
 +-- effect NN nsubj
 |   +-- This DT det
 +-- of IN prep
 |   +-- partly RB advmod
 |   +-- because IN mwe
 |   +-- distribution NN pobj
 |       +-- the DT det
 |       +-- Zipfian JJ amod
 |       |   +-- approximately RB advmod
 |       +-- frequency NN nn
 |           +-- query NN nn
 +-- , , punct
 +-- and CC cc
 +-- employ VBP conj
 |   +-- partly RB advmod
 |   +-- because IN mark
 |   +-- engines NNS nsubj
 |   |   +-- most JJS amod
 |   |   +-- search NN nn
 |   |       +-- Web NN nn
 |   +-- methods NNS dobj
 |       +-- ranking VBG amod
 |       +-- combine VBP rcmod
 |           +-- which WDT nsubj
 |           +-- scores NNS dobj
 |           |   +-- based VBN amod
 |           |       +-- query NN dep
 |           +-- with IN prep
 |               +-- scores NNS pobj
 |                   +-- static NN amod
 |                   |   +-- -LRB- -LRB- punct
 |                   |   +-- priori NN dep
 |                   |   |   +-- a DT det
 |                   |   +-- -RRB- -RRB- punct
 |                   +-- determined VBN partmod
 |                       +-- from IN prep
 |                           +-- factors NNS pobj
 |                               +-- as IN prep
 |                                   +-- such JJ mwe
 |                                   +-- measures NNS pobj
 |                                       +-- link NN nn
 |                                       +-- graph NN nn
 |                                       +-- , , punct
 |                                       +-- features NNS conj
 |                                       |   +-- URL NN nn
 |                                       +-- scores NNS conj
 |                                       |   +-- spam NN nn
 |                                       +-- and CC cc
 |                                       +-- on IN conj
 |                                           +-- so RB advmod
 |                                           +-- -LRB- -LRB- punct
 |                                           +-- 17 CD pobj
 |                                           +-- -RRB- -RRB- punct
 +-- . . punct
Input: Documents with high static scores are much more likely to be retrieved than others .
Parse:
likely JJ ROOT
 +-- Documents NNS nsubj
 |   +-- with IN prep
 |       +-- scores NNS pobj
 |           +-- high JJ amod
 |           +-- static NN amod
 +-- are VBP cop
 +-- more RBR advmod
 |   +-- much RB advmod
 +-- retrieved VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- than IN prep
 |       +-- others NNS pobj
 +-- . . punct
Input: In addition to the document cache , the RAM of the Snippet Engine must also hold the CTS decoding table that maps integers to strings , which is capped by a parameter at compression time -LRB- 1 Gb in our experiments here -RRB- .
Parse:
hold VB ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 |       +-- to IN prep
 |           +-- cache NN pobj
 |               +-- the DT det
 |               +-- document NN nn
 +-- , , punct
 +-- RAM NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- Engine NNP pobj
 |           +-- the DT det
 |           +-- Snippet NNP nn
 +-- must MD aux
 +-- also RB advmod
 +-- table NN dobj
 |   +-- the DT det
 |   +-- CTS NNP nn
 |   +-- decoding VBG nn
 |   +-- maps VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- integers NNS dobj
 |       +-- to IN prep
 |           +-- strings NNS pobj
 |               +-- , , punct
 |               +-- capped VBN rcmod
 |                   +-- which WDT nsubjpass
 |                   +-- is VBZ auxpass
 |                   +-- by IN prep
 |                   |   +-- parameter NN pobj
 |                   |       +-- a DT det
 |                   +-- at IN prep
 |                       +-- time NN pobj
 |                           +-- compression NN nn
 |                           +-- -LRB- -LRB- punct
 |                           +-- Gb NN dep
 |                           |   +-- 1 CD num
 |                           |   +-- in IN prep
 |                           |       +-- experiments NNS pobj
 |                           |           +-- our PRP$ poss
 |                           |           +-- here RB advmod
 |                           +-- -RRB- -RRB- punct
 +-- . . punct
Input: This is more than compensated for by the reduced size of each document , allowing more documents into the document cache .
Parse:
compensated VBN ROOT
 +-- This DT nsubjpass
 +-- is VBZ auxpass
 +-- than IN advmod
 |   +-- more JJR advmod
 +-- for IN prep
 +-- by IN prep
 |   +-- size NN pobj
 |       +-- the DT det
 |       +-- reduced VBN amod
 |       +-- of IN prep
 |           +-- document NN pobj
 |               +-- each DT det
 +-- , , punct
 +-- allowing VBG xcomp
 |   +-- documents NNS dobj
 |       +-- more JJR amod
 |       +-- into IN prep
 |           +-- cache NN pobj
 |               +-- the DT det
 |               +-- document NN nn
 +-- . . punct
Input: For example , using CTS reduces the average document size from 5.7 Kb to 1.2 Kb -LRB- as shown in Table 1 -RRB- , so a 2 Gb RAM could hold 368 , 442 uncompressed documents -LRB- 2 % of the collection -RRB- , or 850 , 691 documents plus a 1 Gb decompression table -LRB- 5 % of the collection -RRB- .
Parse:
reduces VBZ ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- using VBG csubj
 |   +-- CTS NNP dobj
 +-- size NN dobj
 |   +-- the DT det
 |   +-- average JJ amod
 |   +-- document NN nn
 +-- from IN prep
 |   +-- Kb NNP pobj
 |       +-- 5.7 CD num
 +-- to IN prep
 |   +-- Kb NN pobj
 |       +-- 1.2 CD num
 |       +-- shown VBN dep
 |           +-- -LRB- -LRB- punct
 |           +-- as IN mark
 |           +-- in IN prep
 |           |   +-- Table NNP pobj
 |           |       +-- 1 CD num
 |           +-- -RRB- -RRB- punct
 +-- hold VB advcl
 |   +-- so CC mark
 |   +-- RAM NN nsubj
 |   |   +-- a DT det
 |   |   +-- 2 CD num
 |   |   +-- Gb NN nn
 |   +-- could MD aux
 |   +-- documents NNS dobj
 |       +-- 368 CD num
 |       +-- , , punct
 |       +-- 442 CD num
 |       +-- uncompressed JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- % NN dep
 |       |   +-- 2 CD num
 |       |   +-- of IN prep
 |       |       +-- collection NN pobj
 |       |           +-- the DT det
 |       +-- -RRB- -RRB- punct
 |       +-- or CC cc
 |       +-- 850 CD conj
 |       +-- documents NNS conj
 |       |   +-- 691 CD num
 |       +-- plus CC cc
 |       +-- table NN conj
 |           +-- a DT det
 |           +-- Gb NN nn
 |           |   +-- 1 CD num
 |           +-- decompression NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- % NN dep
 |           |   +-- 5 CD num
 |           |   +-- of IN prep
 |           |       +-- collection NN pobj
 |           |           +-- the DT det
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: In fact , further experimentation with the model size reveals that the model can in fact be very small and still CTS gives good compression and fast scoring times .
Parse:
reveals VBZ ROOT
 +-- In IN prep
 |   +-- fact NN pobj
 +-- , , punct
 +-- experimentation NN nsubj
 |   +-- further JJ amod
 |   +-- with IN prep
 |       +-- size NN pobj
 |           +-- the DT det
 |           +-- model NN nn
 +-- small JJ ccomp
 |   +-- that IN mark
 |   +-- model NN nsubj
 |   |   +-- the DT det
 |   +-- can MD aux
 |   +-- in IN prep
 |   |   +-- fact NN pobj
 |   +-- be VB cop
 |   +-- very RB advmod
 |   +-- and CC cc
 |   +-- gives VBZ conj
 |       +-- still RB advmod
 |       +-- CTS NNP nsubj
 |       +-- compression NN dobj
 |           +-- good JJ amod
 |           +-- and CC cc
 |           +-- times NNS conj
 |               +-- scoring NN nn
 |                   +-- fast JJ amod
 +-- . . punct
Input: This is evidenced in Figure 5 , where the compressed size of wt50g is shown in the solid symbols .
Parse:
evidenced VBN ROOT
 +-- This DT nsubjpass
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- Figure NN pobj
 |       +-- 5 CD num
 |       +-- , , punct
 |       +-- shown VBN rcmod
 |           +-- where WRB advmod
 |           +-- size NN nsubjpass
 |           |   +-- the DT det
 |           |   +-- compressed VBN amod
 |           |   +-- of IN prep
 |           |       +-- wt50g CD pobj
 |           +-- is VBZ auxpass
 |           +-- in IN prep
 |               +-- symbols NNS pobj
 |                   +-- the DT det
 |                   +-- solid JJ amod
 +-- . . punct
Input: Note that when no compression is used -LRB- Model Size is 0Mb -RRB- , the collection is only 31 Gb as HTML markup , JavaScript , and repeated punctuation has been discarded as described in Section 4.1 .
Parse:
discarded VBN ROOT
 +-- Gb NNP nsubjpass
 |   +-- Note VB dep
 |   |   +-- that IN dobj
 |   |   +-- used VBN advcl
 |   |   |   +-- when WRB advmod
 |   |   |   +-- compression NN nsubjpass
 |   |   |   |   +-- no DT det
 |   |   |   +-- is VBZ auxpass
 |   |   +-- 0Mb CD parataxis
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- Size NNP nsubj
 |   |       |   +-- Model NNP nn
 |   |       +-- is VBZ cop
 |   |       +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- collection NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ cop
 |   +-- only RB advmod
 |   +-- 31 CD num
 |   +-- as IN prep
 |       +-- markup NN pobj
 |           +-- HTML NNP nn
 |           +-- , , punct
 |           +-- JavaScript NNP conj
 |           +-- and CC cc
 |           +-- punctuation NN conj
 |               +-- repeated VBN amod
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- described VBN advcl
 |   +-- as IN mark
 |   +-- in IN prep
 |       +-- Section NNP pobj
 |           +-- 4.1 CD num
 +-- . . punct
Input: With a 5 Mb model , the collection size drops by more than half to 14 Gb , and increasing the model size to 750 Mb only elicits a 2 Gb drop in the collection size .
Parse:
drops NNS ROOT
 +-- With IN prep
 |   +-- model NN pobj
 |       +-- a DT det
 |       +-- 5 CD num
 |       +-- Mb NN nn
 +-- , , punct
 +-- size NN nsubj
 |   +-- the DT det
 |   +-- collection NN nn
 +-- by IN prep
 |   +-- half NN pobj
 |       +-- more JJR quantmod
 |       +-- than IN quantmod
 |       +-- to IN prep
 |           +-- Gb NNP pobj
 |               +-- 14 CD num
 +-- and CC cc
 +-- elicits VBZ conj
 |   +-- increasing VBG csubj
 |   |   +-- size NN dobj
 |   |   |   +-- the DT det
 |   |   |   +-- model NN nn
 |   |   +-- to IN prep
 |   |       +-- Mb NNP pobj
 |   |           +-- 750 CD num
 |   +-- only RB advmod
 |   +-- drop NN dobj
 |       +-- a DT det
 |       +-- 2 CD num
 |       +-- Gb NN nn
 |       +-- in IN prep
 |           +-- size NN pobj
 |               +-- the DT det
 |               +-- collection NN nn
 +-- . . punct
Input: Figure 5 also shows the average time to score and decode a a snippet -LRB- excluding seek time -RRB- with the different model sizes -LRB- open symbols -RRB- .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 5 CD num
 +-- also RB advmod
 +-- time NN dobj
 |   +-- the DT det
 |   +-- average JJ amod
 |   +-- score VB infmod
 |       +-- to TO aux
 |       +-- and CC cc
 |       +-- decode VB conj
 |       +-- snippet NN dobj
 |       |   +-- a DT det
 |       +-- -LRB- -LRB- punct
 |       +-- excluding VBG prep
 |       |   +-- time NN pobj
 |       |       +-- seek NN amod
 |       +-- -RRB- -RRB- punct
 |       +-- with IN prep
 |           +-- sizes NNS pobj
 |               +-- the DT det
 |               +-- different JJ amod
 |               +-- model NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- symbols NNS dep
 |               |   +-- open JJ amod
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: Again , there is a large speed up when a 5 Mb model is used , but little 0 200 400 600 15202530 Model Size -LRB- Mb -RRB- CollectionSize -LRB- Gb -RRB- orTime -LRB- msec -RRB- Size -LRB- Gb -RRB- Time -LRB- msec -RRB- Figure 5
Parse:
is VBZ ROOT
 +-- Again RB advmod
 +-- , , punct
 +-- there EX expl
 +-- up RP advmod
 |   +-- speed NN npadvmod
 |       +-- a DT det
 |       +-- large JJ amod
 +-- used VBN advcl
 |   +-- when WRB advmod
 |   +-- model NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- 5 CD num
 |   |   +-- Mb NN nn
 |   +-- is VBZ auxpass
 +-- but CC cc
 +-- 600 CD conj
     +-- little JJ quantmod
     +-- 0 CD number
     +-- 200 CD number
     +-- 400 CD number
     +-- 15202530 CD prep
         +-- Mb NNP dep
             +-- Size NNP dep
             |   +-- Model NNP nn
             +-- -LRB- -LRB- punct
             +-- -RRB- -RRB- punct
             +-- CollectionSize VB dep
                 +-- msec NNP dobj
                     +-- -LRB- -LRB- punct
                     +-- Gb SYM dep
                     +-- -RRB- -RRB- punct
                     +-- msec NNP dep
                     |   +-- orTime NN dep
                     |   +-- -LRB- -LRB- punct
                     |   +-- -RRB- -RRB- punct
                     +-- Size NNP dep
                     +-- Time NNP nn
                     +-- Figure NN dep
                         +-- 5 CD num
Input: improvement with larger models .
Parse:
improvement NN ROOT
 +-- with IN prep
 |   +-- models NNS pobj
 |       +-- larger JJR amod
 +-- . . punct
Input: Similar results hold for the wt100g collection , where a model of about 10 Mb offers substantial space and time savings over no model at all , but returns diminish as the model size increases .
Parse:
hold VBP ROOT
 +-- results NNS nsubj
 |   +-- Similar JJ amod
 +-- for IN prep
 |   +-- collection NN pobj
 |       +-- the DT det
 |       +-- wt100g CD nn
 |       +-- , , punct
 |       +-- offers VBZ rcmod
 |           +-- where WRB advmod
 |           +-- model NN nsubj
 |           |   +-- a DT det
 |           |   +-- of IN prep
 |           |       +-- Mb FW pobj
 |           |           +-- 10 CD num
 |           |               +-- about RB quantmod
 |           +-- savings NNS dobj
 |           |   +-- substantial JJ amod
 |           |   +-- space NN nn
 |           |       +-- and CC cc
 |           |       +-- time NN conj
 |           +-- over IN prep
 |           |   +-- model NN pobj
 |           |       +-- no DT det
 |           |       +-- all RB advmod
 |           |           +-- at RB advmod
 |           +-- , , punct
 |           +-- but CC cc
 |           +-- diminish VBP conj
 |               +-- returns NNS nsubj
 |               +-- increases NNS advcl
 |                   +-- as IN mark
 |                   +-- size NN nsubj
 |                       +-- the DT det
 |                       +-- model NN nn
 +-- . . punct
Input: Apart from compression , there is another approach to reducing the size of each document in the cache
Parse:
is VBZ ROOT
 +-- Apart RB advmod
 |   +-- from IN prep
 |       +-- compression NN pobj
 +-- , , punct
 +-- there EX expl
 +-- approach NN nsubj
     +-- another DT det
     +-- to IN prep
         +-- reducing VBG pcomp
             +-- size NN dobj
             |   +-- the DT det
             |   +-- of IN prep
             |       +-- document NN pobj
             |           +-- each DT det
             +-- in IN prep
                 +-- cache NN pobj
                     +-- the DT det
Input: Rather store sentences that are likely to be used in snippets in the cache , and if during snippet generation on a cached document the sentence scores do not reach a certain threshold , then retrieve the whole document from disk .
Parse:
store NN ROOT
 +-- Rather RB advmod
 +-- sentences NNS dobj
 |   +-- likely JJ rcmod
 |       +-- that WDT nsubj
 |       +-- are VBP cop
 |       +-- used VBN xcomp
 |           +-- to TO aux
 |           +-- be VB auxpass
 |           +-- in IN prep
 |               +-- snippets NNS pobj
 |                   +-- in IN prep
 |                       +-- cache NN pobj
 |                           +-- the DT det
 +-- , , punct
 +-- and CC cc
 +-- retrieve VB conj
 |   +-- reach VB advcl
 |   |   +-- if IN mark
 |   |   +-- during IN prep
 |   |   |   +-- generation NN pobj
 |   |   |       +-- snippet NN nn
 |   |   +-- on IN prep
 |   |   |   +-- document NN pobj
 |   |   |       +-- a DT det
 |   |   |       +-- cached VBN amod
 |   |   +-- scores NNS nsubj
 |   |   |   +-- the DT det
 |   |   |   +-- sentence NN nn
 |   |   +-- do VBP aux
 |   |   +-- not RB neg
 |   |   +-- threshold NN dobj
 |   |       +-- a DT det
 |   |       +-- certain JJ amod
 |   +-- , , punct
 |   +-- then RB advmod
 |   +-- document NN dobj
 |   |   +-- the DT det
 |   |   +-- whole JJ amod
 |   +-- from IN prep
 |       +-- disk NN pobj
 +-- . . punct
Input: This raises questions on how to choose sentences from documents to put in cache , and which to leave on disk , which we address in the next section. .
Parse:
raises VBZ ROOT
 +-- This DT nsubj
 +-- questions NNS dobj
 |   +-- on IN prep
 |       +-- choose VB pcomp
 |           +-- how WRB advmod
 |           +-- to TO aux
 |           +-- sentences NNS dobj
 |           |   +-- from IN prep
 |           |       +-- documents NNS pobj
 |           +-- put VB xcomp
 |           |   +-- to TO aux
 |           |   +-- in IN prep
 |           |       +-- cache NN pobj
 |           +-- , , punct
 |           +-- and CC cc
 |           +-- leave VB conj
 |               +-- which WDT nsubj
 |               +-- to TO aux
 |               +-- on IN prep
 |                   +-- disk NN pobj
 |                       +-- , , punct
 |                       +-- address VBP rcmod
 |                           +-- which WDT dobj
 |                           +-- we PRP nsubj
 |                           +-- in IN prep
 |                               +-- section. NN pobj
 |                                   +-- the DT det
 |                                   +-- next JJ amod
 +-- . . punct
