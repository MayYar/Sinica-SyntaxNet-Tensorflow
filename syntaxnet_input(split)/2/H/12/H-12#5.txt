Input: For each document identifier passed to the Snippet Engine , the engine must generate text , preferably containing query terms , that attempts to summarize that document .
Parse:
generate VB ROOT
 +-- For IN prep
 |   +-- identifier NN pobj
 |       +-- each DT det
 |       +-- document NN nn
 |       +-- passed VBD partmod
 |           +-- to IN prep
 |               +-- Engine NNP pobj
 |                   +-- the DT det
 |                   +-- Snippet NNP nn
 +-- , , punct
 +-- engine NN nsubj
 |   +-- the DT det
 +-- must MD aux
 +-- text NN dobj
 +-- containing VBG partmod
 |   +-- preferably RB advmod
 |   +-- terms NNS dobj
 |       +-- query NN nn
 |       +-- , , punct
 |       +-- attempts VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- summarize VB xcomp
 |               +-- to TO aux
 |               +-- document NN dobj
 |                   +-- that DT det
 +-- . . punct
Input: Previous work on summarization identifies the sentence as the minimal unit for extraction and presentation to the user -LRB- 12 -RRB- .
Parse:
identifies VBZ ROOT
 +-- work NN nsubj
 |   +-- Previous JJ amod
 |   +-- on IN prep
 |       +-- summarization NN pobj
 +-- sentence NN dobj
 |   +-- the DT det
 +-- as IN prep
 |   +-- unit NN pobj
 |       +-- the DT det
 |       +-- minimal JJ amod
 |       +-- for IN prep
 |       |   +-- extraction NN pobj
 |       |       +-- and CC cc
 |       |       +-- presentation NN conj
 |       |       +-- to IN prep
 |       |           +-- user NN pobj
 |       |               +-- the DT det
 |       +-- 12 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: Accordingly , we also assume a web snippet extraction process will extract sentences from documents .
Parse:
assume VBP ROOT
 +-- Accordingly RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- also RB advmod
 +-- extract VB ccomp
 |   +-- process NN nsubj
 |   |   +-- a DT det
 |   |   +-- snippet NN nn
 |   |   |   +-- web NN nn
 |   |   +-- extraction NN nn
 |   +-- will MD aux
 |   +-- sentences NNS dobj
 |   +-- from IN prep
 |       +-- documents NNS pobj
 +-- . . punct
Input: In order to construct a snippet , all sentences in a document should be ranked against the query , and the top two or three returned as the snippet .
Parse:
ranked VBN ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- construct VB infmod
 |           +-- to TO aux
 |           +-- snippet NN dobj
 |               +-- a DT det
 +-- , , punct
 +-- sentences NNS nsubjpass
 |   +-- all DT det
 |   +-- in IN prep
 |       +-- document NN pobj
 |           +-- a DT det
 +-- should MD aux
 +-- be VB auxpass
 +-- against IN prep
 |   +-- query NN pobj
 |       +-- the DT det
 +-- and CC cc
 +-- returned VBN conj
 |   +-- two CD nsubj
 |   |   +-- the DT det
 |   |   +-- top JJ amod
 |   |   +-- or CC cc
 |   |   +-- three CD conj
 |   +-- as IN prep
 |       +-- snippet NN pobj
 |           +-- the DT det
 +-- . . punct
Input: The scoring of sentences against queries has been explored in several papers -LRB- 7 , 12 , 18 , 20 , 21 -RRB- , with different features of sentences deemed important .
Parse:
explored VBN ROOT
 +-- scoring NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- sentences NNS pobj
 |           +-- against IN prep
 |               +-- queries NNS pobj
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- in IN prep
 |   +-- papers NNS pobj
 |       +-- several JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- 7 CD dep
 |       |   +-- , , punct
 |       |   +-- 12 CD num
 |       |   +-- 18 CD num
 |       |   +-- 20 CD num
 |       |   +-- 21 CD num
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- deemed VBD advcl
 |   +-- with IN mark
 |   +-- features NNS nsubj
 |   |   +-- different JJ amod
 |   |   +-- of IN prep
 |   |       +-- sentences NNS pobj
 |   +-- important JJ acomp
 +-- . . punct
Input: Based on these observations , Figure 2 , shows the general algorithm for scoring sentences in relevant documents , with the highest scoring sentences making the snippet for each document .
Parse:
shows VBZ ROOT
 +-- Based VBN prep
 |   +-- on IN pcomp
 |       +-- observations NNS pobj
 |           +-- these DT det
 +-- , , punct
 +-- Figure NN nsubj
 |   +-- 2 CD num
 +-- algorithm NN dobj
 |   +-- the DT det
 |   +-- general JJ amod
 |   +-- for IN prep
 |       +-- scoring VBG pcomp
 |           +-- sentences NNS dobj
 |           +-- in IN prep
 |               +-- documents NNS pobj
 |                   +-- relevant JJ amod
 +-- with IN prep
 |   +-- sentences NNS pobj
 |       +-- the DT det
 |       +-- scoring NN nn
 |       |   +-- highest JJS amod
 |       +-- making VBG partmod
 |           +-- snippet NN dobj
 |           |   +-- the DT det
 |           +-- for IN prep
 |               +-- document NN pobj
 |                   +-- each DT det
 +-- . . punct
Input: The final score of a sentence , assigned in Step 7 , can be derived in many different ways .
Parse:
derived VBN ROOT
 +-- score NN nsubjpass
 |   +-- The DT det
 |   +-- final JJ amod
 |   +-- of IN prep
 |   |   +-- sentence NN pobj
 |   |       +-- a DT det
 |   +-- , , punct
 |   +-- assigned VBN partmod
 |       +-- in IN prep
 |           +-- Step NNP pobj
 |               +-- 7 CD num
 +-- can MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- ways NNS pobj
 |       +-- many JJ amod
 |       +-- different JJ amod
 +-- . . punct
Input: In order to avoid bias towards any particular scoring mechanism , we compare sentence quality later in the paper using the individual components of the score , rather than an arbitrary combination of the components .
Parse:
compare VBP ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- avoid VB infmod
 |           +-- to TO aux
 |           +-- bias NN dobj
 |               +-- towards IN prep
 |                   +-- mechanism NN pobj
 |                       +-- any DT det
 |                       +-- scoring NN nn
 |                           +-- particular JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- quality NN dobj
 |   +-- sentence NN nn
 +-- later RB advmod
 +-- in IN prep
 |   +-- paper NN pobj
 |       +-- the DT det
 +-- using VBG xcomp
 |   +-- components NNS dobj
 |       +-- the DT det
 |       +-- individual JJ amod
 |       +-- of IN prep
 |       |   +-- score NN pobj
 |       |       +-- the DT det
 |       +-- , , punct
 |       +-- rather RB cc
 |       |   +-- than IN mwe
 |       +-- combination NN conj
 |           +-- an DT det
 |           +-- arbitrary JJ amod
 |           +-- of IN prep
 |               +-- components NNS pobj
 |                   +-- the DT det
 +-- . . punct
Input: 4.1 Parsing Web Documents Unlike well edited text collections that are often the target for summarization systems , Web data is often poorly structured , poorly punctuated , and contains a lot of data that do not form part of valid sentences that would be candidates for parts of snippets .
Parse:
edited VBN ROOT
 +-- Documents NNS nsubj
 |   +-- 4.1 CD num
 |   +-- Parsing VBG amod
 |   +-- Web NN nn
 +-- Unlike RB advmod
 +-- well RB advmod
 +-- collections NNS dobj
 |   +-- text NN nn
 |   +-- target NN rcmod
 |       +-- that WDT nsubj
 |       +-- are VBP cop
 |       +-- often RB advmod
 |       +-- the DT det
 |       +-- for IN prep
 |           +-- systems NNS pobj
 |               +-- summarization NN nn
 +-- , , punct
 +-- structured VBN ccomp
 |   +-- data NN nsubjpass
 |   |   +-- Web NN nn
 |   +-- is VBZ auxpass
 |   +-- often RB advmod
 |   +-- poorly RB advmod
 |   +-- , , punct
 |   +-- punctuated VBN conj
 |   |   +-- poorly RB advmod
 |   +-- and CC cc
 |   +-- contains VBZ conj
 |       +-- lot NN dobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- data NNS pobj
 |                   +-- form VB rcmod
 |                       +-- that WDT nsubj
 |                       +-- do VBP aux
 |                       +-- not RB neg
 |                       +-- part NN dobj
 |                           +-- of IN prep
 |                               +-- sentences NNS pobj
 |                                   +-- valid JJ amod
 |                                   +-- candidates NNS rcmod
 |                                       +-- that WDT nsubj
 |                                       +-- would MD aux
 |                                       +-- be VB cop
 |                                       +-- for IN prep
 |                                           +-- parts NNS pobj
 |                                               +-- of IN prep
 |                                                   +-- snippets NNS pobj
 +-- . . punct
Input: We assume that the documents passed to the Snippet Engine by the Indexing Engine have all HTML tags and JavaScript removed , and that each document is reduced to a series of word tokens separated by non word tokens .
Parse:
assume VBP ROOT
 +-- We PRP nsubj
 +-- have VBP ccomp
 |   +-- that IN mark
 |   +-- documents NNS nsubj
 |   |   +-- the DT det
 |   |   +-- passed VBD partmod
 |   |       +-- to IN prep
 |   |       |   +-- Engine NNP pobj
 |   |       |       +-- the DT det
 |   |       |       +-- Snippet NNP nn
 |   |       +-- by IN prep
 |   |           +-- Engine NNP pobj
 |   |               +-- the DT det
 |   |               +-- Indexing NNP nn
 |   +-- removed VBD ccomp
 |   |   +-- tags NNS nsubj
 |   |       +-- all DT det
 |   |       +-- HTML NNP nn
 |   |       +-- and CC cc
 |   |       +-- JavaScript NNP conj
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- reduced VBN conj
 |       +-- that IN mark
 |       +-- document NN nsubjpass
 |       |   +-- each DT det
 |       +-- is VBZ auxpass
 |       +-- to IN prep
 |           +-- series NN pobj
 |               +-- a DT det
 |               +-- of IN prep
 |               |   +-- tokens NNS pobj
 |               |       +-- word NN nn
 |               +-- separated VBN partmod
 |                   +-- by IN prep
 |                       +-- word NN pobj
 |                           +-- non DT det
 |                           +-- tokens NNS dep
 +-- . . punct
Input: We define a word token as a sequence of alphanumeric characters , while a non word is a sequence of non alphanumeric characters such as whitespace and the other punctuation symbols .
Parse:
define VBP ROOT
 +-- We PRP nsubj
 +-- word NN dobj
 |   +-- a DT det
 |   +-- token VBN partmod
 |       +-- as IN prep
 |           +-- sequence NN pobj
 |               +-- a DT det
 |               +-- of IN prep
 |                   +-- characters NNS pobj
 |                       +-- alphanumeric JJ amod
 +-- , , punct
 +-- sequence NN advcl
 |   +-- while IN mark
 |   +-- word NN nsubj
 |   |   +-- a DT det
 |   |   +-- non CD num
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- characters NNS pobj
 |           +-- alphanumeric JJ amod
 |           |   +-- non FW advmod
 |           +-- as IN prep
 |               +-- such JJ mwe
 |               +-- whitespace NN pobj
 |                   +-- and CC cc
 |                   +-- symbols NNS conj
 |                       +-- the DT det
 |                       +-- other JJ amod
 |                       +-- punctuation NN nn
 +-- . . punct
Input: Both are limited to a maximum of 50 characters .
Parse:
limited JJ ROOT
 +-- Both DT nsubj
 +-- are VBP cop
 +-- to IN prep
 |   +-- maximum NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- characters NNS pobj
 |               +-- 50 CD num
 +-- . . punct
Input: Adjacent , repeating characters are removed from the punctuation .
Parse:
removed VBN ROOT
 +-- characters NNS nsubjpass
 |   +-- Adjacent NN nn
 |   +-- , , punct
 |   +-- repeating VBG amod
 +-- are VBP auxpass
 +-- from IN prep
 |   +-- punctuation NN pobj
 |       +-- the DT det
 +-- . . punct
Input: Included in the punctuation set is a special end of sentence marker which replaces the usual three sentence terminators ? ! . .
Parse:
Included VBN ROOT
 +-- in IN prep
 |   +-- set NN pobj
 |       +-- the DT det
 |       +-- punctuation NN nn
 +-- is VBZ auxpass
 +-- end NN nsubjpass
 |   +-- a DT det
 |   +-- special JJ amod
 |   +-- of IN prep
 |   |   +-- marker NN pobj
 |   |       +-- sentence NN nn
 |   +-- replaces VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- terminators NNS dobj
 |           +-- the DT det
 |           +-- usual JJ amod
 |           +-- sentence NN nn
 |               +-- three CD num
 +-- ? . punct
 +-- ! . punct
 +-- . . punct
Input: Often these explicit punctuation characters are missing , and so HTML tags such as < br > and < p > are assumed to terminate sentences .
Parse:
missing VBG ROOT
 +-- Often RB advmod
 +-- characters NNS nsubj
 |   +-- these DT det
 |   +-- explicit JJ amod
 |   +-- punctuation NN nn
 +-- are VBP cop
 +-- , , punct
 +-- and CC cc
 +-- assumed VBN conj
 |   +-- tags NNS nsubjpass
 |   |   +-- so RB amod
 |   |   +-- HTML NNP nn
 |   |   +-- as IN prep
 |   |       +-- such JJ mwe
 |   |       +-- br FW pobj
 |   |           +-- < -LRB- punct
 |   |           +-- > -RRB- punct
 |   |           +-- and CC cc
 |   |           +-- p DT conj
 |   |               +-- < -LRB- punct
 |   |               +-- > -RRB- punct
 |   +-- are VBP auxpass
 |   +-- terminate VB xcomp
 |       +-- to TO aux
 |       +-- sentences NNS dobj
 +-- . . punct
Input: In addition , a sentence must contain at least five words and no more than twenty words , with longer or shorter sentences being broken and joined as required to meet these criteria -LRB- 10 -RRB- .
Parse:
contain VB ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- sentence NN nsubj
 |   +-- a DT det
 +-- must MD aux
 +-- words NNS dobj
 |   +-- five CD num
 |   |   +-- least RBS dep
 |   |       +-- at IN advmod
 |   +-- and CC cc
 |   +-- words NNS conj
 |       +-- twenty CD num
 |           +-- no DT quantmod
 |           +-- more JJR quantmod
 |           +-- than IN quantmod
 +-- with IN prep
 |   +-- broken VBN pcomp
 |       +-- sentences NNS nsubjpass
 |       |   +-- longer JJR amod
 |       |       +-- or CC cc
 |       |       +-- shorter JJR conj
 |       +-- being VBG auxpass
 |       +-- and CC cc
 |       +-- joined VBD conj
 |       +-- required VBN advcl
 |           +-- as IN mark
 |           +-- meet VB xcomp
 |               +-- to TO aux
 |               +-- criteria NNS dobj
 |                   +-- these DT det
 |                   +-- 10 CD appos
 |                       +-- -LRB- -LRB- punct
 |                       +-- -RRB- -RRB- punct
 +-- . . punct
Input: Unterminated HTML tags that is , tags with an open brace , but no close brace cause all text from the open brace to the next open brace to be discarded .
Parse:
tags VBZ ROOT
 +-- tags NNS nsubj
 |   +-- Unterminated JJ amod
 |   +-- HTML NNP nn
 |   +-- is VBZ rcmod
 |   |   +-- that WDT nsubj
 |   +-- , , punct
 +-- with IN prep
 |   +-- brace NN pobj
 |       +-- an DT det
 |       +-- open JJ amod
 +-- , , punct
 +-- but CC cc
 +-- cause VBP conj
 |   +-- brace NN nsubj
 |   |   +-- no DT det
 |   |   +-- close JJ amod
 |   +-- discarded VBN xcomp
 |       +-- text NN nsubjpass
 |       |   +-- all DT det
 |       |   +-- from IN prep
 |       |   |   +-- brace NN pobj
 |       |   |       +-- the DT det
 |       |   |       +-- open JJ amod
 |       |   +-- to IN prep
 |       |       +-- brace NN pobj
 |       |           +-- the DT det
 |       |           +-- next JJ amod
 |       |           +-- open JJ amod
 |       +-- to TO aux
 |       +-- be VB auxpass
 +-- . . punct
Input: A major problem in summarizing web pages is the presence of large amounts of promotional and navigational material -LRB- navbars -RRB- visually above and to the left of the actual page content .
Parse:
presence NN ROOT
 +-- problem NN nsubj
 |   +-- A DT det
 |   +-- major JJ amod
 |   +-- in IN prep
 |       +-- summarizing VBG pcomp
 |           +-- pages NNS dobj
 |               +-- web NN nn
 +-- is VBZ cop
 +-- the DT det
 +-- of IN prep
 |   +-- amounts NNS pobj
 |       +-- large JJ amod
 |       +-- of IN prep
 |       |   +-- material NN pobj
 |       |       +-- promotional JJ amod
 |       |           +-- and CC cc
 |       |           +-- navigational JJ conj
 |       +-- -LRB- -LRB- punct
 |       +-- navbars NNS dep
 |       +-- -RRB- -RRB- punct
 +-- above RB prep
 |   +-- visually RB advmod
 |   +-- and CC cc
 |   +-- to IN conj
 |       +-- left NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- content NN pobj
 |                   +-- the DT det
 |                   +-- actual JJ amod
 |                   +-- page NN nn
 +-- . . punct
Input: For example , The most wonderful company on earth .
Parse:
company NN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- The DT det
 +-- wonderful JJ amod
 |   +-- most RBS advmod
 +-- on IN prep
 |   +-- earth NN pobj
 +-- . . punct
Input: Products .
Parse:
Products NNS ROOT
 +-- . . punct
Input: Service .
Parse:
Service NN ROOT
 +-- . . punct
Input: About us .
Parse:
About IN ROOT
 +-- us PRP pobj
 +-- . . punct
Input: Contact us .
Parse:
Contact VB ROOT
 +-- us PRP dobj
 +-- . . punct
Input: Try before you buy .
Parse:
Try VB ROOT
 +-- buy VBP advcl
 |   +-- before IN mark
 |   +-- you PRP nsubj
 +-- . . punct
Input: Similar , but often not identical , navigational material is typically presented on every page within a site .
Parse:
presented VBN ROOT
 +-- material NN nsubjpass
 |   +-- Similar JJ amod
 |   |   +-- , , punct
 |   |   +-- but CC cc
 |   |   +-- often RB advmod
 |   |   +-- not RB conj
 |   |   +-- identical JJ dep
 |   +-- , , punct
 |   +-- navigational JJ amod
 +-- is VBZ auxpass
 +-- typically RB advmod
 +-- on IN prep
 |   +-- page NN pobj
 |       +-- every DT det
 |       +-- within IN prep
 |           +-- site NN pobj
 |               +-- a DT det
 +-- . . punct
Input: This material tends to lower the quality of summaries and slow down summary generation .
Parse:
tends VBZ ROOT
 +-- material NN nsubj
 |   +-- This DT det
 +-- lower VB xcomp
 |   +-- to TO aux
 |   +-- quality NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- summaries NNS pobj
 |   +-- and CC cc
 |   +-- slow VB conj
 |       +-- down RP prt
 |       +-- generation NN dobj
 |           +-- summary NN nn
 +-- . . punct
Input: In our experiments we did not use any particular heuristics for removing navigational information as the test collection in use -LRB- wt100g -RRB- pre dates the widespread take up of the current style of web publishing .
Parse:
use VB ROOT
 +-- In IN prep
 |   +-- experiments NNS pobj
 |       +-- our PRP$ poss
 +-- we PRP nsubj
 +-- did VBD aux
 +-- not RB neg
 +-- heuristics NNS dobj
 |   +-- any DT det
 |   +-- particular JJ amod
 +-- for IN prep
 |   +-- removing VBG pcomp
 |       +-- information NN dobj
 |       |   +-- navigational JJ amod
 |       +-- as IN prep
 |           +-- collection NN pobj
 |               +-- the DT det
 |               +-- test NN nn
 |               +-- in IN prep
 |                   +-- use NN pobj
 +-- dates VBZ dep
 |   +-- wt100g LS dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- pre NN nsubj
 |   +-- take VB dobj
 |       +-- the DT det
 |       +-- widespread JJ amod
 |       +-- up IN dep
 |       +-- of IN prep
 |           +-- style NN pobj
 |               +-- the DT det
 |               +-- current JJ amod
 |               +-- of IN prep
 |                   +-- publishing NN pobj
 |                       +-- web NN nn
 +-- . . punct
Input: In wt100g , the average web page size is more than half the current Web average -LRB- 11 -RRB- .
Parse:
average NN ROOT
 +-- In IN prep
 |   +-- wt100g CD pobj
 +-- , , punct
 +-- size NN nsubj
 |   +-- the DT det
 |   +-- average JJ amod
 |   +-- page NN nn
 |       +-- web NN nn
 +-- is VBZ cop
 +-- half PDT num
 |   +-- more JJR quantmod
 |   +-- than IN quantmod
 +-- the DT det
 +-- current JJ amod
 +-- Web NN nn
 +-- -LRB- -LRB- punct
 +-- 11 CD dep
 +-- -RRB- -RRB- punct
 +-- . . punct
Input: Anecdotally , the increase is due to inclusion of sophisticated navigational and interface elements and the JavaScript functions to support them .
Parse:
is VBZ ROOT
 +-- Anecdotally RB advmod
 +-- , , punct
 +-- increase NN nsubj
 |   +-- the DT det
 +-- to IN prep
 |   +-- due JJ mwe
 |   +-- inclusion NN pobj
 |       +-- of IN prep
 |           +-- elements NNS pobj
 |               +-- sophisticated JJ amod
 |               +-- navigational JJ amod
 |               |   +-- and CC cc
 |               |   +-- interface JJ conj
 |               +-- and CC cc
 |               +-- functions NNS conj
 |                   +-- the DT det
 |                   +-- JavaScript NNP nn
 |                   +-- support VB infmod
 |                       +-- to TO aux
 |                       +-- them PRP dobj
 +-- . . punct
Input: Having defined the format of documents that are presented to the Snippet Engine , we now define our Compressed Token System document storage scheme , and the baseline system used for comparison .
Parse:
define VBP ROOT
 +-- defined VBN partmod
 |   +-- Having VBG aux
 |   +-- format NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- documents NNS pobj
 |               +-- presented VBN rcmod
 |                   +-- that WDT nsubjpass
 |                   +-- are VBP auxpass
 |                   +-- to IN prep
 |                       +-- Engine NNP pobj
 |                           +-- the DT det
 |                           +-- Snippet NNP nn
 +-- , , punct
 +-- we PRP nsubj
 +-- now RB advmod
 +-- scheme NN dobj
 |   +-- our PRP$ poss
 |   +-- System NNP nn
 |   |   +-- Compressed NNP nn
 |   |   +-- Token NNP nn
 |   +-- storage NN nn
 |   |   +-- document NN nn
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- system NN conj
 |       +-- the DT det
 |       +-- baseline NN nn
 |       +-- used VBN partmod
 |           +-- for IN prep
 |               +-- comparison NN pobj
 +-- . . punct
Input: 4.2 Baseline Snippet Engine An obvious document representation scheme is to simply compress each document with a well known adaptive compressor , and then decompress the document as required -LRB- 1 -RRB- , using a string matching algorithm to effect the algorithm in Figure 2 .
Parse:
is VBZ ROOT
 +-- scheme NN nsubj
 |   +-- Engine NNP nn
 |   |   +-- 4.2 CD num
 |   |   +-- Baseline NNP nn
 |   |   +-- Snippet NNP nn
 |   +-- An DT det
 |   +-- obvious JJ amod
 |   +-- document NN nn
 |   +-- representation NN nn
 +-- compress VB xcomp
 |   +-- to TO aux
 |   +-- simply RB advmod
 |   +-- document NN dobj
 |   |   +-- each DT det
 |   +-- with IN prep
 |   |   +-- compressor NN pobj
 |   |       +-- a DT det
 |   |       +-- known VBN amod
 |   |       |   +-- well RB advmod
 |   |       +-- adaptive JJ amod
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- then RB advmod
 |   +-- decompress VB conj
 |       +-- document NN dobj
 |       |   +-- the DT det
 |       +-- required VBN advcl
 |           +-- as IN mark
 |           +-- 1 CD dobj
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- -RRB- -RRB- punct
 |           +-- , , punct
 |           +-- using VBG partmod
 |               +-- algorithm NN dobj
 |               |   +-- a DT det
 |               |   +-- matching VBG nn
 |               |       +-- string NN nn
 |               +-- effect VB xcomp
 |                   +-- to TO aux
 |                   +-- algorithm NN dobj
 |                   |   +-- the DT det
 |                   +-- in IN prep
 |                       +-- Figure NNP pobj
 |                           +-- 2 CD num
 +-- . . punct
Input: Accordingly , we implemented such a system , using zlib -LRB- 4 -RRB- with default parameters to compress every document after it has been parsed as in Section 4.1 .
Parse:
implemented VBD ROOT
 +-- Accordingly RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- system NN dobj
 |   +-- such PDT predet
 |   +-- a DT det
 +-- using VBG partmod
 |   +-- zlib NN dobj
 |   |   +-- 4 CD appos
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- -RRB- -RRB- punct
 |   +-- with IN prep
 |   |   +-- parameters NNS pobj
 |   |       +-- default NN nn
 |   +-- compress VB xcomp
 |       +-- to TO aux
 |       +-- document NN dobj
 |       |   +-- every DT det
 |       +-- parsed VBN advcl
 |           +-- after IN mark
 |           +-- it PRP nsubjpass
 |           +-- has VBZ aux
 |           +-- been VBN auxpass
 |           +-- as IN prep
 |               +-- in IN pcomp
 |                   +-- Section NNP pobj
 |                       +-- 4.1 CD num
 +-- . . punct
Input: Each document is stored in a single file .
Parse:
stored VBN ROOT
 +-- document NN nsubjpass
 |   +-- Each DT det
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- file NN pobj
 |       +-- a DT det
 |       +-- single JJ amod
 +-- . . punct
Input: While manageable for our small test collections or small enterprises with millions of documents , a full Web search engine may require multiple documents to inhabit single files , or a special purpose filesystem -LRB- 6 -RRB- .
Parse:
require VB ROOT
 +-- manageable JJ advcl
 |   +-- While IN mark
 |   +-- for IN prep
 |       +-- collections NNS pobj
 |           +-- our PRP$ poss
 |           +-- small JJ amod
 |           +-- test NN nn
 |           +-- or CC cc
 |           +-- enterprises NNS conj
 |               +-- small JJ amod
 |               +-- with IN prep
 |                   +-- millions NNS pobj
 |                       +-- of IN prep
 |                           +-- documents NNS pobj
 +-- , , punct
 +-- engine NN nsubj
 |   +-- a DT det
 |   +-- full JJ amod
 |   +-- search NN nn
 |       +-- Web NN nn
 +-- may MD aux
 +-- documents NNS dobj
 |   +-- multiple JJ amod
 |   +-- inhabit VB infmod
 |       +-- to TO aux
 |       +-- files NNS dobj
 |           +-- single JJ amod
 |           +-- , , punct
 |           +-- or CC cc
 |           +-- filesystem NN conj
 |               +-- a DT det
 |               +-- special JJ amod
 |               +-- purpose NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- 6 CD dep
 |               +-- -RRB- -RRB- punct
 +-- . . punct
Input: For snippet generation , the required documents are decompressed one at a time , and a linear search for provided query terms is employed .
Parse:
decompressed VBN ROOT
 +-- For IN prep
 |   +-- generation NN pobj
 |       +-- snippet NN nn
 +-- , , punct
 +-- documents NNS nsubjpass
 |   +-- the DT det
 |   +-- required VBN amod
 +-- are VBP auxpass
 +-- one CD dobj
 +-- at IN prep
 |   +-- time NN pobj
 |       +-- a DT det
 +-- and CC cc
 +-- employed VBN conj
 |   +-- search NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- linear JJ amod
 |   |   +-- for IN prep
 |   |       +-- provided VBN pcomp
 |   |           +-- terms NNS dobj
 |   |               +-- query NN nn
 |   +-- is VBZ auxpass
 +-- . . punct
Input: The search is optimized for our specific task , which is restricted to matching whole words and the sentence terminating token , rather than general pattern matching .
Parse:
optimized VBN ROOT
 +-- search NN nsubj
 |   +-- The DT det
 +-- is VBZ cop
 +-- for IN prep
 |   +-- task NN pobj
 |       +-- our PRP$ poss
 |       +-- specific JJ amod
 |       +-- , , punct
 |       +-- restricted VBN rcmod
 |           +-- which WDT nsubjpass
 |           +-- is VBZ auxpass
 |           +-- to IN prep
 |           |   +-- matching VBG pcomp
 |           |       +-- words NNS dobj
 |           |           +-- whole JJ amod
 |           +-- and CC cc
 |           +-- terminating VBG conj
 |               +-- sentence NN nsubj
 |               |   +-- the DT det
 |               +-- token NN dobj
 |                   +-- , , punct
 |                   +-- than IN prep
 |                       +-- rather RB advmod
 |                       +-- matching NN pobj
 |                           +-- general JJ amod
 |                           +-- pattern NN nn
 +-- . . punct
Input: 4.3 The CTS Snippet Engine Several optimizations over the baseline are possible .
Parse:
possible JJ ROOT
 +-- optimizations NNS nsubj
 |   +-- Engine NNP nn
 |   |   +-- 4.3 LS dep
 |   |   +-- The DT det
 |   |   +-- CTS NNP nn
 |   |   +-- Snippet NNP nn
 |   +-- Several JJ amod
 |   +-- over IN prep
 |       +-- baseline NN pobj
 |           +-- the DT det
 +-- are VBP cop
 +-- . . punct
Input: The first is to employ a semi static compression method over the entire document collection , which will allow faster decompression with minimal compression loss -LRB- 24 -RRB- .
Parse:
is VBZ ROOT
 +-- first JJ nsubj
 |   +-- The DT det
 +-- employ VB xcomp
 |   +-- to TO aux
 |   +-- method NN dobj
 |   |   +-- a DT det
 |   |   +-- semi NN nn
 |   |   +-- static JJ amod
 |   |   +-- compression NN nn
 |   +-- over IN prep
 |   |   +-- collection NN pobj
 |   |       +-- the DT det
 |   |       +-- entire JJ amod
 |   |       +-- document NN nn
 |   +-- , , punct
 |   +-- allow VB dep
 |       +-- which WDT nsubj
 |       +-- will MD aux
 |       +-- decompression NN dobj
 |           +-- faster JJR amod
 |           +-- with IN prep
 |               +-- loss NN pobj
 |                   +-- minimal JJ amod
 |                   +-- compression NN nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- 24 CD dep
 |                   +-- -RRB- -RRB- punct
 +-- . . punct
Input: Using a semistatic approach involves mapping words and non words produced by the parser to single integer tokens , with frequent symbols receiving small integers , and then choosing a coding scheme that assigns small numbers a small number of bits .
Parse:
involves VBZ ROOT
 +-- Using VBG csubj
 |   +-- approach NN dobj
 |       +-- a DT det
 |       +-- semistatic JJ amod
 +-- words NNS dobj
 |   +-- mapping NN nn
 |   +-- and CC cc
 |   +-- words NNS conj
 |   |   +-- non NNP nn
 |   +-- produced VBN partmod
 |       +-- by IN prep
 |       |   +-- parser NN pobj
 |       |       +-- the DT det
 |       +-- to IN prep
 |       |   +-- tokens NNS pobj
 |       |       +-- single JJ amod
 |       |       +-- integer NN nn
 |       +-- , , punct
 |       +-- with IN prep
 |           +-- receiving VBG pcomp
 |               +-- symbols NNS nsubj
 |               |   +-- frequent JJ amod
 |               +-- integers NNS dobj
 |               |   +-- small JJ amod
 |               +-- , , punct
 |               +-- and CC cc
 |               +-- then RB advmod
 |               +-- choosing VBG conj
 |                   +-- scheme NN dobj
 |                       +-- a DT det
 |                       +-- coding VBG amod
 |                       +-- assigns VBZ rcmod
 |                           +-- that WDT nsubj
 |                           +-- numbers NNS iobj
 |                           |   +-- small JJ amod
 |                           +-- number NN dobj
 |                               +-- a DT det
 |                               +-- small JJ amod
 |                               +-- of IN prep
 |                                   +-- bits NNS pobj
 +-- . . punct
Input: Words and non words strictly alternate in the compressed file , which always begins with a word .
Parse:
alternate VBP ROOT
 +-- Words NNS nsubj
 |   +-- and CC cc
 |   +-- words NNS conj
 |       +-- non PRP$ poss
 +-- strictly RB advmod
 +-- in IN prep
 |   +-- file NN pobj
 |       +-- the DT det
 |       +-- compressed JJ amod
 |       +-- , , punct
 |       +-- begins VBZ rcmod
 |           +-- which WDT nsubj
 |           +-- always RB advmod
 |           +-- with IN prep
 |               +-- word NN pobj
 |                   +-- a DT det
 +-- . . punct
Input: In this instance we simply assign each symbol its ordinal number in a list of symbols sorted by frequency .
Parse:
assign VB ROOT
 +-- In IN prep
 |   +-- instance NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- simply RB advmod
 +-- symbol NN iobj
 |   +-- each DT det
 +-- number NN dobj
 |   +-- its PRP$ poss
 |   +-- ordinal JJ amod
 |   +-- in IN prep
 |       +-- list NN pobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- symbols NNS pobj
 |                   +-- sorted VBN partmod
 |                       +-- by IN prep
 |                           +-- frequency NN pobj
 +-- . . punct
Input: We use the vbyte coding scheme to code the word tokens -LRB- 22 -RRB- .
Parse:
use VBP ROOT
 +-- We PRP nsubj
 +-- scheme NN dobj
 |   +-- the DT det
 |   +-- coding VBG amod
 |       +-- vbyte NN dep
 +-- code VB xcomp
 |   +-- to TO aux
 |   +-- tokens NNS dobj
 |       +-- the DT det
 |       +-- word NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- 22 CD dep
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: The set of non words is limited to the 64 most common punctuation sequences in the collection itself , and are encoded with a flat 6 bit binary code .
Parse:
limited VBN ROOT
 +-- set NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- words NNS pobj
 |           +-- non CD num
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- sequences NNS pobj
 |       +-- the DT det
 |       +-- 64 CD num
 |       +-- punctuation NN nn
 |       |   +-- common JJ amod
 |       |       +-- most RBS advmod
 |       +-- in IN prep
 |           +-- collection NN pobj
 |               +-- the DT det
 |               +-- itself PRP dep
 +-- , , punct
 +-- and CC cc
 +-- encoded VBN conj
 |   +-- are VBP auxpass
 |   +-- with IN prep
 |       +-- code NN pobj
 |           +-- a DT det
 |           +-- flat JJ amod
 |           +-- bit NN nn
 |           |   +-- 6 CD num
 |           +-- binary JJ amod
 +-- . . punct
Input: The remaining 2 bits of each punctuation symbol are used to store capitalization information .
Parse:
used VBN ROOT
 +-- bits NNS nsubjpass
 |   +-- The DT det
 |   +-- remaining VBG amod
 |   +-- 2 CD num
 |   +-- of IN prep
 |       +-- symbol NN pobj
 |           +-- each DT det
 |           +-- punctuation NN nn
 +-- are VBP auxpass
 +-- store VB xcomp
 |   +-- to TO aux
 |   +-- information NN dobj
 |       +-- capitalization NN nn
 +-- . . punct
Input: The process of computing the semi static model is complicated by the fact that the number of words and non words appearing in large web collections is high .
Parse:
complicated VBN ROOT
 +-- process NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- computing VBG pcomp
 |           +-- model NN dobj
 |               +-- the DT det
 |               +-- semi NN nn
 |               +-- static JJ amod
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- fact NN pobj
 |       +-- the DT det
 |       +-- high JJ ccomp
 |           +-- that IN mark
 |           +-- number NN nsubj
 |           |   +-- the DT det
 |           |   +-- of IN prep
 |           |       +-- words NNS pobj
 |           |           +-- and CC cc
 |           |           +-- words NNS conj
 |           |           |   +-- non PRP$ poss
 |           |           +-- appearing VBG partmod
 |           |               +-- in IN prep
 |           |                   +-- collections NNS pobj
 |           |                       +-- large JJ amod
 |           |                       +-- web NN nn
 |           +-- is VBZ cop
 +-- . . punct
Input: If we stored all words and non words appearing in the collection , and their associated frequency , many gigabytes of RAM or a B tree or similar on disk structure would be required -LRB- 23 -RRB- .
Parse:
required VBN ROOT
 +-- stored VBD advcl
 |   +-- If IN mark
 |   +-- we PRP nsubj
 |   +-- words NNS dobj
 |       +-- all DT det
 |       +-- and CC cc
 |       +-- words NNS conj
 |       |   +-- non POS nn
 |       +-- appearing VBG partmod
 |       |   +-- in IN prep
 |       |       +-- collection NN pobj
 |       |           +-- the DT det
 |       +-- , , punct
 |       +-- frequency NN conj
 |           +-- their PRP$ poss
 |           +-- associated VBN amod
 +-- , , punct
 +-- gigabytes NNS nsubjpass
 |   +-- many JJ amod
 |   +-- of IN prep
 |   |   +-- RAM NN pobj
 |   +-- or CC cc
 |   +-- tree NN conj
 |       +-- a DT det
 |       +-- B NNP nn
 |       +-- or CC cc
 |       +-- similar JJ conj
 |           +-- on IN prep
 |               +-- structure NN pobj
 |                   +-- disk NN nn
 +-- would MD aux
 +-- be VB auxpass
 +-- 23 CD dobj
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- . . punct
Input: Moffat et al .
Parse:
al NNP ROOT
 +-- Moffat NNP nn
 +-- et CC nn
 +-- . . punct
Input: -LRB- 14 -RRB- have examined schemes for pruning models during compression using large alphabets , and conclude that rarely occurring terms need not reside in the model .
Parse:
examined VBN ROOT
 +-- 14 CD nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- have VBP aux
 +-- schemes NNS dobj
 |   +-- for IN prep
 |       +-- models NNS pobj
 |           +-- pruning VBG nn
 +-- during IN prep
 |   +-- compression NN pobj
 |       +-- using VBG partmod
 |           +-- alphabets NNS dobj
 |               +-- large JJ amod
 +-- , , punct
 +-- and CC cc
 +-- conclude VB conj
 |   +-- reside VB ccomp
 |       +-- that IN mark
 |       +-- terms NNS nsubj
 |       |   +-- occurring VBG amod
 |       |       +-- rarely RB advmod
 |       +-- need VBP aux
 |       +-- not RB neg
 |       +-- in IN prep
 |           +-- model NN pobj
 |               +-- the DT det
 +-- . . punct
Input: Rather , rare terms are spelt out in the final compressed file , using a special word token -LRB- escape symbol -RRB- , to signal their occurrence .
Parse:
spelt VBN ROOT
 +-- Rather RB advmod
 +-- , , punct
 +-- terms NNS nsubjpass
 |   +-- rare JJ amod
 +-- are VBP auxpass
 +-- out RP prt
 +-- in IN prep
 |   +-- file NN pobj
 |       +-- the DT det
 |       +-- final JJ amod
 |       +-- compressed VBN amod
 +-- using VBG partmod
 |   +-- word NN dobj
 |       +-- a DT det
 |       +-- special JJ amod
 |       +-- token NN dep
 |           +-- -LRB- -LRB- punct
 |           +-- symbol NN dep
 |           |   +-- escape VB nn
 |           +-- -RRB- -RRB- punct
 +-- signal VB xcomp
 |   +-- to TO aux
 |   +-- occurrence NN dobj
 |       +-- their PRP$ poss
 +-- . . punct
Input: During the first pass of encoding , two move to front queues are kept ; one for words and one for non words .
Parse:
kept VBN ROOT
 +-- During IN prep
 |   +-- pass NN pobj
 |       +-- the DT det
 |       +-- first JJ amod
 |       +-- of IN prep
 |           +-- encoding VBG pobj
 +-- , , punct
 +-- move NN nsubjpass
 |   +-- two CD num
 |   +-- to IN prep
 |       +-- queues NNS pobj
 |           +-- front JJ amod
 +-- are VBP auxpass
 +-- ; : punct
 +-- one CD parataxis
 |   +-- for IN prep
 |   |   +-- words NNS pobj
 |   +-- and CC cc
 |   +-- one CD conj
 |       +-- for IN prep
 |           +-- words NNS pobj
 |               +-- non CD num
 +-- . . punct
Input: Whenever the available memory is consumed and a new symbol is discovered in the collection , an existing symbol is discarded from the end of the queue .
Parse:
discarded VBN ROOT
 +-- consumed VBN advcl
 |   +-- Whenever WRB advmod
 |   +-- memory NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- available JJ amod
 |   +-- is VBZ auxpass
 |   +-- and CC cc
 |   +-- discovered VBN conj
 |       +-- symbol NN nsubjpass
 |       |   +-- a DT det
 |       |   +-- new JJ amod
 |       +-- is VBZ auxpass
 |       +-- in IN prep
 |           +-- collection NN pobj
 |               +-- the DT det
 +-- , , punct
 +-- symbol NN nsubjpass
 |   +-- an DT det
 |   +-- existing VBG amod
 +-- is VBZ auxpass
 +-- from IN prep
 |   +-- end NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- queue NN pobj
 |               +-- the DT det
 +-- . . punct
Input: In our implementation , we enforce the stricter condition on eviction that , where possible , the evicted symbol should have a frequency of one .
Parse:
enforce VBP ROOT
 +-- In IN prep
 |   +-- implementation NN pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- we PRP nsubj
 +-- condition NN dobj
 |   +-- the DT det
 |   +-- stricter JJR amod
 |   +-- on IN prep
 |   |   +-- eviction NN pobj
 |   +-- have VB dep
 |       +-- that WDT mark
 |       +-- , , punct
 |       +-- possible JJ advcl
 |       |   +-- where WRB advmod
 |       +-- symbol NN nsubj
 |       |   +-- the DT det
 |       |   +-- evicted JJ amod
 |       +-- should MD aux
 |       +-- frequency NN dobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- one CD pobj
 +-- . . punct
Input: If there is no symbol with frequency one in the last half of the queue , then we evict symbols of frequency two , and so on until enough space is available in the model for the new symbol .
Parse:
evict VBP ROOT
 +-- is VBZ advcl
 |   +-- If IN mark
 |   +-- there EX expl
 |   +-- symbol NN nsubj
 |   |   +-- no DT det
 |   |   +-- with IN prep
 |   |       +-- one CD pobj
 |   |           +-- frequency NN nn
 |   +-- in IN prep
 |       +-- half NN pobj
 |           +-- the DT det
 |           +-- last JJ amod
 |           +-- of IN prep
 |               +-- queue NN pobj
 |                   +-- the DT det
 +-- , , punct
 +-- then RB advmod
 +-- we PRP nsubj
 +-- symbols NNS dobj
 |   +-- of IN prep
 |       +-- frequency NN pobj
 |           +-- two CD num
 +-- and CC cc
 +-- available JJ conj
 |   +-- so RB advmod
 |   +-- on IN prep
 |   |   +-- until IN pcomp
 |   |       +-- space NN pobj
 |   |           +-- enough JJ amod
 |   +-- is VBZ cop
 |   +-- in IN prep
 |       +-- model NN pobj
 |           +-- the DT det
 |           +-- for IN prep
 |               +-- symbol NN pobj
 |                   +-- the DT det
 |                   +-- new JJ amod
 +-- . . punct
Input: The second pass of encoding replaces each word with its vbyte encoded number , or the escape symbol and an ASCII representation of the word if it is not in the model .
Parse:
replaces NNS ROOT
 +-- pass NN nsubj
 |   +-- The DT det
 |   +-- second JJ amod
 |   +-- of IN prep
 |       +-- encoding VBG pobj
 +-- word NN dobj
 |   +-- each DT det
 +-- with IN prep
 |   +-- number NN pobj
 |       +-- its PRP$ poss
 |       +-- vbyte NN nn
 |       +-- encoded VBN amod
 |       +-- , , punct
 |       +-- or CC cc
 |       +-- symbol NN conj
 |           +-- the DT det
 |           +-- escape NN nn
 |           +-- and CC cc
 |           +-- representation NN conj
 |               +-- an DT det
 |               +-- ASCII NNP nn
 |               +-- of IN prep
 |                   +-- word NN pobj
 |                       +-- the DT det
 |                       +-- is VBZ dep
 |                           +-- if IN mark
 |                           +-- it PRP nsubj
 |                           +-- not RB neg
 |                           +-- in IN prep
 |                               +-- model NN pobj
 |                                   +-- the DT det
 +-- . . punct
Input: Similarly each non word sequence is replaced with its codeword , or the codeword for a single space character if it is not in the model .
Parse:
replaced VBN ROOT
 +-- Similarly RB advmod
 +-- sequence NN nsubjpass
 |   +-- each DT det
 |   +-- word NN nn
 |       +-- non WDT nn
 +-- is VBZ auxpass
 +-- with IN prep
 |   +-- codeword NN pobj
 |       +-- its PRP$ poss
 |       +-- , , punct
 |       +-- or CC cc
 |       +-- codeword NN conj
 |           +-- the DT det
 |           +-- for IN prep
 |           |   +-- character NN pobj
 |           |       +-- a DT det
 |           |       +-- single JJ amod
 |           |       +-- space NN nn
 |           +-- is VBZ dep
 |               +-- if IN mark
 |               +-- it PRP nsubj
 |               +-- not RB neg
 |               +-- in IN prep
 |                   +-- model NN pobj
 |                       +-- the DT det
 +-- . . punct
Input: We note that this lossless compression of non words is acceptable when the documents are used for snippet generation , but may not be acceptable for a document database .
Parse:
note VBP ROOT
 +-- We PRP nsubj
 +-- acceptable JJ ccomp
 |   +-- that IN mark
 |   +-- compression NN nsubj
 |   |   +-- this DT det
 |   |   +-- lossless NN nn
 |   |   +-- of IN prep
 |   |       +-- words NNS pobj
 |   |           +-- non CD num
 |   +-- is VBZ cop
 |   +-- used VBN advcl
 |   |   +-- when WRB advmod
 |   |   +-- documents NNS nsubjpass
 |   |   |   +-- the DT det
 |   |   +-- are VBP auxpass
 |   |   +-- for IN prep
 |   |       +-- generation NN pobj
 |   |           +-- snippet NN nn
 |   +-- , , punct
 |   +-- but CC cc
 |   +-- acceptable JJ conj
 |       +-- may MD aux
 |       +-- not RB neg
 |       +-- be VB cop
 |       +-- for IN prep
 |           +-- database NN pobj
 |               +-- a DT det
 |               +-- document NN nn
 +-- . . punct
Input: We assume that a separate sub system would hold cached documents for other purposes where exact punctuation is important .
Parse:
assume VBP ROOT
 +-- We PRP nsubj
 +-- hold VB ccomp
 |   +-- that IN mark
 |   +-- system NN nsubj
 |   |   +-- a DT det
 |   |   +-- separate JJ amod
 |   |   +-- sub NN nn
 |   +-- would MD aux
 |   +-- documents NNS dobj
 |   |   +-- cached VBN amod
 |   +-- for IN prep
 |       +-- purposes NNS pobj
 |           +-- other JJ amod
 |           +-- important JJ rcmod
 |               +-- where WRB advmod
 |               +-- punctuation NN nsubj
 |               |   +-- exact JJ amod
 |               +-- is VBZ cop
 +-- . . punct
Input: While this semi static scheme should allow faster decompression than the baseline , it also readily allows direct matching of query terms as compressed integers in the compressed file .
Parse:
allows VBZ ROOT
 +-- allow VB advcl
 |   +-- While IN mark
 |   +-- scheme NN nsubj
 |   |   +-- this DT det
 |   |   +-- semi NN amod
 |   |   +-- static JJ amod
 |   +-- should MD aux
 |   +-- decompression NN dobj
 |       +-- faster JJR amod
 |       +-- than IN prep
 |           +-- baseline NN pobj
 |               +-- the DT det
 +-- , , punct
 +-- it PRP nsubj
 +-- also RB advmod
 +-- readily RB advmod
 +-- matching NN dobj
 |   +-- direct JJ amod
 |   +-- of IN prep
 |   |   +-- terms NNS pobj
 |   |       +-- query NN nn
 |   +-- as IN prep
 |       +-- integers NNS pobj
 |           +-- compressed VBN amod
 |           +-- in IN prep
 |               +-- file NN pobj
 |                   +-- the DT det
 |                   +-- compressed VBN amod
 +-- . . punct
Input: That is , sentences can be scored without having to decompress a document , and only the sentences returned as part of a snippet need to be decoded .
Parse:
scored VBN ROOT
 +-- That DT nsubjpass
 +-- is VBZ auxpass
 +-- , , punct
 +-- sentences NNS nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- without IN prep
 |   +-- having VBG pcomp
 |       +-- decompress VB xcomp
 |           +-- to TO aux
 |           +-- document NN dobj
 |               +-- a DT det
 +-- and CC cc
 +-- returned VBD conj
 |   +-- sentences NNS nsubj
 |   |   +-- only RB advmod
 |   |   +-- the DT det
 |   +-- as IN prep
 |       +-- part NN pobj
 |           +-- of IN prep
 |               +-- need NN pobj
 |                   +-- a DT det
 |                   +-- snippet NN nn
 |                   +-- decoded VBN infmod
 |                       +-- to TO aux
 |                       +-- be VB auxpass
 +-- . . punct
Input: The CTS system stores all documents contiguously in one file , and an auxiliary table of 64 bit integers indicating the start offset of each document in the file .
Parse:
stores VBZ ROOT
 +-- system NN nsubj
 |   +-- The DT det
 |   +-- CTS NNP nn
 +-- documents NNS dobj
 |   +-- all DT det
 +-- contiguously RB advmod
 +-- in IN prep
 |   +-- file NN pobj
 |       +-- one CD num
 +-- , , punct
 +-- and CC cc
 +-- offset VBN conj
 |   +-- table NN nsubj
 |   |   +-- an DT det
 |   |   +-- auxiliary JJ amod
 |   |   +-- of IN prep
 |   |   |   +-- integers NNS pobj
 |   |   |       +-- bit NN nn
 |   |   |           +-- 64 CD num
 |   |   +-- indicating VBG partmod
 |   |       +-- start NN dobj
 |   |           +-- the DT det
 |   +-- of IN prep
 |   |   +-- document NN pobj
 |   |       +-- each DT det
 |   +-- in IN prep
 |       +-- file NN pobj
 |           +-- the DT det
 +-- . . punct
Input: Further , it must have access to the reverse mapping of term numbers , allowing those words not spelt out in the document to be recovered and returned to the Query Engine as strings .
Parse:
have VB ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- must MD aux
 +-- access NN dobj
 |   +-- to IN prep
 |       +-- mapping NN pobj
 |           +-- the DT det
 |           +-- reverse JJ amod
 |           +-- of IN prep
 |               +-- numbers NNS pobj
 |                   +-- term NN nn
 +-- allowing VBG partmod
 |   +-- spelt VBN xcomp
 |       +-- words NNS nsubj
 |       |   +-- those DT det
 |       +-- not RB neg
 |       +-- out RP prt
 |       +-- in IN prep
 |           +-- document NN pobj
 |               +-- the DT det
 |               +-- recovered VBN infmod
 |                   +-- to TO aux
 |                   +-- be VB auxpass
 |                   +-- and CC cc
 |                   +-- returned VBN conj
 |                       +-- to IN prep
 |                       |   +-- Engine NNP pobj
 |                       |       +-- the DT det
 |                       |       +-- Query NNP nn
 |                       +-- as IN prep
 |                           +-- strings NNS pobj
 +-- . . punct
Input: The first of these data structures can be readily partitioned and distributed if the Snippet Engine occupies multiple machines ; the second , however , is not so easily partitioned , as any document on a remote machine might require access to the whole integer to string mapping .
Parse:
partitioned VBN ROOT
 +-- first JJ nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- structures NNS pobj
 |           +-- these DT det
 |           +-- data NNS nn
 +-- can MD aux
 +-- be VB auxpass
 +-- readily RB advmod
 +-- and CC cc
 +-- distributed VBN conj
 +-- occupies VBZ advcl
 |   +-- if IN mark
 |   +-- Engine NNP nsubj
 |   |   +-- the DT det
 |   |   +-- Snippet NNP nn
 |   +-- machines NNS dobj
 |       +-- multiple JJ amod
 +-- ; : punct
 +-- partitioned VBN parataxis
 |   +-- second JJ nsubj
 |   |   +-- the DT det
 |   +-- , , punct
 |   +-- however RB advmod
 |   +-- is VBZ cop
 |   +-- not RB neg
 |   +-- easily RB advmod
 |   |   +-- so RB advmod
 |   +-- require VB advcl
 |       +-- as IN mark
 |       +-- document NN nsubj
 |       |   +-- any DT det
 |       |   +-- on IN prep
 |       |       +-- machine NN pobj
 |       |           +-- a DT det
 |       |           +-- remote JJ amod
 |       +-- might MD aux
 |       +-- access NN dobj
 |           +-- to IN prep
 |               +-- mapping NN pobj
 |                   +-- string VBG nn
 +-- . . punct
Input: This is the second reason for employing the model pruning step during construction of the semi static code
Parse:
reason NN ROOT
 +-- This DT nsubj
 +-- is VBZ cop
 +-- the DT det
 +-- second JJ amod
 +-- for IN prep
     +-- employing VBG pcomp
         +-- step NN dobj
             +-- the DT det
             +-- model NN nn
             +-- pruning NN nn
             +-- during IN prep
                 +-- construction NN pobj
                     +-- of IN prep
                         +-- code NN pobj
                             +-- the DT det
                             +-- semi NN nn
                             +-- static NN nn
Input: 4.4 Experimental assessment of CTS All experiments reported in this paper were run on a Sun Fire V210 Server running Solaris 10 .
Parse:
run VBN ROOT
 +-- assessment NN nsubjpass
 |   +-- 4.4 CD num
 |   +-- Experimental JJ amod
 |   +-- of IN prep
 |       +-- experiments NNS pobj
 |           +-- CTS NNP nn
 |           +-- All DT det
 |           +-- reported VBN partmod
 |               +-- in IN prep
 |                   +-- paper NN pobj
 |                       +-- this DT det
 +-- were VBD auxpass
 +-- on IN prep
 |   +-- Server NNP pobj
 |       +-- a DT det
 |       +-- Fire NNP nn
 |       |   +-- Sun NNP nn
 |       +-- V210 CD num
 |       +-- running VBG partmod
 |           +-- Solaris NNP dobj
 |               +-- 10 CD num
 +-- . . punct
Input: The machine consists of dual 1.34 GHz UltraSPARC IIIi processors and 4GB of wt10g wt50g wt100g No .
Parse:
consists VBZ ROOT
 +-- machine NN nsubj
 |   +-- The DT det
 +-- of IN prep
 |   +-- processors NNS pobj
 |       +-- dual JJ amod
 |       +-- 1.34 CD num
 |       +-- GHz NNP nn
 |       +-- UltraSPARC NNP nn
 |       +-- IIIi NNP nn
 |       +-- and CC cc
 |       +-- No UH conj
 |           +-- 4GB CD nn
 |               +-- of IN prep
 |                   +-- wt10g CD pobj
 |                       +-- wt100g CD num
 |                           +-- wt50g CD number
 +-- . . punct
Input: Docs .
Parse:
Docs NNS ROOT
 +-- . . punct
