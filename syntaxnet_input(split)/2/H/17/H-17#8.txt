Input: Web search engines typically prune their large scale inverted indexes in order to scale to enormous query loads
Parse:
prune VBP ROOT
 +-- engines NNS nsubj
 |   +-- search NN nn
 |       +-- Web NN nn
 +-- typically RB advmod
 +-- indexes NNS dobj
 |   +-- their PRP$ poss
 |   +-- scale NN nn
 |   |   +-- large JJ amod
 |   +-- inverted VBN amod
 +-- in IN prep
     +-- order NN pobj
         +-- scale VB infmod
             +-- to TO aux
             +-- to IN prep
                 +-- loads NNS pobj
                     +-- enormous JJ amod
                     +-- query NN nn
Input: While this approach may improve performance , by computing the top results from a pruned index we may notice a significant degradation in the result quality
Parse:
notice VB ROOT
 +-- improve VB advcl
 |   +-- While IN mark
 |   +-- approach NN nsubj
 |   |   +-- this DT det
 |   +-- may MD aux
 |   +-- performance NN dobj
 +-- , , punct
 +-- by IN prep
 |   +-- computing VBG pcomp
 |       +-- results NNS dobj
 |           +-- the DT det
 |           +-- top JJ amod
 |           +-- from IN prep
 |               +-- index NN pobj
 |                   +-- a DT det
 |                   +-- pruned JJ amod
 +-- we PRP nsubj
 +-- may MD aux
 +-- degradation NN dobj
 |   +-- a DT det
 |   +-- significant JJ amod
 +-- in IN prep
     +-- quality NN pobj
         +-- the DT det
         +-- result NN amod
Input: In this paper , we provided a framework for new pruning techniques and answer computation algorithms that guarantee that the top matching pages are always placed at the top of search results in the correct order
Parse:
provided VBD ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- framework NN dobj
 |   +-- a DT det
 |   +-- for IN prep
 |       +-- techniques NNS pobj
 |           +-- new JJ amod
 |           +-- pruning NN nn
 +-- and CC cc
 +-- answer VB conj
     +-- algorithms NNS dobj
         +-- computation NN nn
         +-- guarantee VBP rcmod
             +-- that WDT nsubj
             +-- placed VBN ccomp
                 +-- that IN mark
                 +-- pages NNS nsubjpass
                 |   +-- the DT det
                 |   +-- top JJ amod
                 |   +-- matching NN nn
                 +-- are VBP auxpass
                 +-- always RB advmod
                 +-- at IN prep
                 |   +-- top NN pobj
                 |       +-- the DT det
                 |       +-- of IN prep
                 |           +-- results NNS pobj
                 |               +-- search NN nn
                 +-- in IN prep
                     +-- order NN pobj
                         +-- the DT det
                         +-- correct JJ amod
Input: We studied two pruning techniques , namely keyword based and document based pruning as well as their combination
Parse:
studied VBD ROOT
 +-- We PRP nsubj
 +-- techniques NNS dobj
     +-- two CD num
     +-- pruning VBG nn
     +-- , , punct
     +-- pruning NN appos
         +-- based VBN amod
         +-- well RB cc
         |   +-- as RB advmod
         |   +-- as IN mwe
         +-- combination NN conj
             +-- their PRP$ poss
Input: Our experimental results demonstrated that our algorithms can effectively be used to prune an inverted index without degradation in the quality of results
Parse:
demonstrated VBD ROOT
 +-- results NNS nsubj
 |   +-- Our PRP$ poss
 |   +-- experimental JJ amod
 +-- used VBN ccomp
     +-- that IN mark
     +-- algorithms NNS nsubjpass
     |   +-- our PRP$ poss
     +-- can MD aux
     +-- effectively RB advmod
     +-- be VB auxpass
     +-- prune VB xcomp
         +-- to TO aux
         +-- index NN dobj
         |   +-- an DT det
         |   +-- inverted VBN amod
         +-- without IN prep
         |   +-- degradation NN pobj
         +-- in IN prep
             +-- quality NN pobj
                 +-- the DT det
                 +-- of IN prep
                     +-- results NNS pobj
Input: In particular , a keyword pruned index can guarantee 73 % of the queries with a size of 30 % of the full index , while a document pruned index can guarantee 68 % of the queries with the same size
Parse:
guarantee VB ROOT
 +-- In IN prep
 |   +-- particular JJ pobj
 +-- , , punct
 +-- index NN nsubj
 |   +-- a DT det
 |   +-- pruned VBN amod
 |       +-- keyword NN dep
 +-- can MD aux
 +-- % NN dobj
 |   +-- 73 CD num
 |   +-- of IN prep
 |       +-- queries NNS pobj
 |           +-- the DT det
 +-- with IN prep
 |   +-- size NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- % NN pobj
 |               +-- 30 CD num
 |               +-- of IN prep
 |                   +-- index NN pobj
 |                       +-- the DT det
 |                       +-- full JJ amod
 +-- guarantee VB advcl
     +-- while IN mark
     +-- index NN nsubj
     |   +-- a DT det
     |   +-- document NN nn
     |   +-- pruned VBN amod
     +-- can MD aux
     +-- % NN dobj
     |   +-- 68 CD num
     |   +-- of IN prep
     |       +-- queries NNS pobj
     |           +-- the DT det
     +-- with IN prep
         +-- size NN pobj
             +-- the DT det
             +-- same JJ amod
Input: When we combine the two pruning algorithms we can guarantee 60 % of the queries with an index size of 16 %
Parse:
guarantee VB ROOT
 +-- combine VBP advcl
 |   +-- When WRB advmod
 |   +-- we PRP nsubj
 |   +-- algorithms NNS dobj
 |       +-- the DT det
 |       +-- two CD num
 |       +-- pruning VBG nn
 +-- we PRP nsubj
 +-- can MD aux
 +-- % NN dobj
     +-- 60 CD num
     +-- of IN prep
         +-- queries NNS pobj
             +-- the DT det
             +-- with IN prep
                 +-- size NN pobj
                     +-- an DT det
                     +-- index NN nn
                     +-- of IN prep
                         +-- % NN pobj
                             +-- 16 CD num
Input: It is our hope that our work will help search engines develop better , faster and more efficient indexes and thus provide for a better user search experience on the Web .
Parse:
hope NN ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- our PRP$ poss
 +-- help VB ccomp
 |   +-- that IN mark
 |   +-- work NN nsubj
 |   |   +-- our PRP$ poss
 |   +-- will MD aux
 |   +-- search VB ccomp
 |       +-- develop VB ccomp
 |       |   +-- engines NNS nsubj
 |       |   +-- indexes NNS dobj
 |       |       +-- better RBR amod
 |       |           +-- , , punct
 |       |           +-- faster JJR conj
 |       |           +-- and CC cc
 |       |           +-- efficient JJ conj
 |       |               +-- more RBR advmod
 |       +-- and CC cc
 |       +-- thus RB advmod
 |       +-- provide VB conj
 |           +-- for IN prep
 |               +-- experience NN pobj
 |                   +-- a DT det
 |                   +-- better JJR amod
 |                   +-- search NN nn
 |                   |   +-- user NN nn
 |                   +-- on IN prep
 |                       +-- Web NN pobj
 |                           +-- the DT det
 +-- . . punct
