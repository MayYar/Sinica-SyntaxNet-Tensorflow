Input: In this section we provide a detailed analysis for the problem of deciding whether it is preferable to cache query answers or cache posting lists .
Parse:
provide VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- analysis NN dobj
 |   +-- a DT det
 |   +-- detailed JJ amod
 |   +-- for IN prep
 |       +-- problem NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- deciding VBG pcomp
 |                   +-- preferable JJ ccomp
 |                       +-- whether IN mark
 |                       +-- it PRP nsubj
 |                       +-- is VBZ cop
 |                       +-- cache VB xcomp
 |                           +-- to TO aux
 |                           +-- answers NNS dobj
 |                               +-- query NN nn
 |                               +-- or CC cc
 |                               +-- lists NNS conj
 |                                   +-- cache NN nn
 |                                   +-- posting NN nn
 +-- . . punct
Input: Our analysis takes into account the impact of caching between two levels of the data access hierarchy .
Parse:
takes VBZ ROOT
 +-- analysis NN nsubj
 |   +-- Our PRP$ poss
 +-- into IN prep
 |   +-- account NN pobj
 +-- impact NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- caching VBG pobj
 |   +-- between IN prep
 |       +-- levels NNS pobj
 |           +-- two CD num
 |           +-- of IN prep
 |               +-- hierarchy NN pobj
 |                   +-- the DT det
 |                   +-- access NN nn
 |                       +-- data NNS nn
 +-- . . punct
Input: It can either be applied at the memory disk layer or at a server remote server layer as in the architecture we discussed in the introduction .
Parse:
applied VBN ROOT
 +-- It PRP nsubjpass
 +-- can MD aux
 +-- either CC dep
 +-- be VB auxpass
 +-- at IN prep
 |   +-- layer NN pobj
 |   |   +-- the DT det
 |   |   +-- disk NN nn
 |   |       +-- memory NN nn
 |   +-- or CC cc
 |   +-- at IN conj
 |       +-- layer NN pobj
 |           +-- a DT det
 |           +-- server NN nn
 |               +-- remote JJ amod
 +-- as IN prep
 |   +-- in IN pcomp
 |       +-- architecture NN pobj
 |           +-- the DT det
 +-- discussed VBD ccomp
 |   +-- we PRP nsubj
 |   +-- in IN prep
 |       +-- introduction NN pobj
 |           +-- the DT det
 +-- . . punct
Input: Using a particular system model , we obtain estimates for the parameters required by our analysis , which we subsequently use to decide the optimal trade off between caching query answers and caching posting lists .
Parse:
obtain VBP ROOT
 +-- Using VBG partmod
 |   +-- model NN dobj
 |       +-- a DT det
 |       +-- particular JJ amod
 |       +-- system NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- estimates NNS dobj
 |   +-- for IN prep
 |       +-- parameters NNS pobj
 |           +-- the DT det
 |           +-- required VBN partmod
 |           |   +-- by IN prep
 |           |       +-- analysis NN pobj
 |           |           +-- our PRP$ poss
 |           +-- , , punct
 |           +-- use VBP rcmod
 |               +-- which WDT dobj
 |               +-- we PRP nsubj
 |               +-- subsequently RB advmod
 |               +-- decide VB xcomp
 |                   +-- to TO aux
 |                   +-- trade NN dobj
 |                       +-- the DT det
 |                       +-- optimal JJ amod
 |                       +-- off RP dep
 |                       +-- between IN prep
 |                           +-- answers NNS pobj
 |                               +-- caching VBG nn
 |                               +-- query NN nn
 |                               +-- and CC cc
 |                               +-- lists NNS conj
 |                                   +-- caching VBG nn
 |                                   +-- posting NN nn
 +-- . . punct
Input: 6.1 Analytical Model Let M be the size of the cache measured in answer units -LRB- the cache can store M query answers -RRB- .
Parse:
Let VB ROOT
 +-- Model NNP nsubj
 |   +-- 6.1 CD num
 |   +-- Analytical NNP nn
 +-- size NN ccomp
 |   +-- M TO nsubj
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- cache NN pobj
 |           +-- the DT det
 |           +-- measured VBN partmod
 |               +-- in IN prep
 |                   +-- units NNS pobj
 |                       +-- answer NN nn
 |                       +-- store VB dep
 |                           +-- -LRB- -LRB- punct
 |                           +-- cache NN nsubj
 |                           |   +-- the DT det
 |                           +-- can MD aux
 |                           +-- answers NNS dobj
 |                           |   +-- M NNP nn
 |                           |   +-- query NN nn
 |                           +-- -RRB- -RRB- punct
 +-- . . punct
Input: Assume that all posting lists are of the same length L , measured in answer units .
Parse:
Assume VB ROOT
 +-- are VBP ccomp
 |   +-- that IN mark
 |   +-- lists NNS nsubj
 |   |   +-- all DT det
 |   |   +-- posting NN nn
 |   +-- of IN prep
 |       +-- L NNP pobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- length NN nn
 |           +-- , , punct
 |           +-- measured VBN partmod
 |               +-- in IN prep
 |                   +-- units NNS pobj
 |                       +-- answer NN nn
 +-- . . punct
Input: We consider the following two cases
Parse:
consider VBP ROOT
 +-- We PRP nsubj
 +-- cases NNS dobj
     +-- the DT det
     +-- following VBG amod
     +-- two CD num
Input: In the first case , Nc = M answers fit in the cache , while in the second case Np = M L posting lists fit in the cache .
Parse:
fit VB ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- first JJ amod
 +-- , , punct
 +-- answers NNS nsubj
 |   +-- M NNP nn
 |   |   +-- Nc SYM nn
 |   |   +-- = SYM dep
 |   +-- fit JJ amod
 |       +-- in IN prep
 |           +-- cache NN pobj
 |               +-- the DT det
 +-- in IN prep
 |   +-- cache NN pobj
 |       +-- the DT det
 +-- lists NNS nsubj
 |   +-- L NNP nn
 |   |   +-- Np , nn
 |   |   +-- = SYM nn
 |   |   +-- M NNP nn
 |   +-- posting NN nn
 +-- . . punct
Input: Thus , Np = Nc L .
Parse:
Np FW ROOT
 +-- Thus RB dep
 +-- , , punct
 +-- L NNP dep
 |   +-- = SYM dep
 |   +-- Nc FW nn
 +-- . . punct
Input: Note that although posting lists require more space , we can combine terms to evaluate more queries -LRB- or partial queries -RRB- .
Parse:
Note VB ROOT
 +-- combine VB ccomp
 |   +-- that IN mark
 |   +-- require VBP advcl
 |   |   +-- although IN mark
 |   |   +-- lists NNS nsubj
 |   |   |   +-- posting NN nn
 |   |   +-- space NN dobj
 |   |       +-- more JJR amod
 |   +-- , , punct
 |   +-- we PRP nsubj
 |   +-- can MD aux
 |   +-- terms NNS dobj
 |   +-- evaluate VB xcomp
 |       +-- to TO aux
 |       +-- queries NNS dobj
 |           +-- more JJR amod
 |           +-- -LRB- -LRB- punct
 |           +-- or CC cc
 |           +-- queries NNS conj
 |           |   +-- partial JJ amod
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: For case -LRB- A -RRB- , suppose that a query answer in the cache can be evaluated in 1 time unit .
Parse:
suppose VB ROOT
 +-- For IN prep
 |   +-- case NN pobj
 |       +-- -LRB- -LRB- punct
 |       +-- A NN dep
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- evaluated VBN ccomp
 |   +-- that IN mark
 |   +-- answer NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- query NN nn
 |   |   +-- in IN prep
 |   |       +-- cache NN pobj
 |   |           +-- the DT det
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- in IN prep
 |       +-- unit NN pobj
 |           +-- time NN nn
 |               +-- 1 CD num
 +-- . . punct
Input: For case -LRB- B -RRB- , assume that if the posting lists of the terms of a query are in the cache then the results can be computed in TR1 time units , while if the posting lists are not in the cache then the results can be computed in TR2 time units .
Parse:
assume VB ROOT
 +-- For IN prep
 |   +-- case NN pobj
 |       +-- -LRB- -LRB- punct
 |       +-- B NNP dep
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- computed VBN ccomp
 |   +-- that IN mark
 |   +-- are VBP advcl
 |   |   +-- if IN mark
 |   |   +-- lists NNS nsubj
 |   |   |   +-- the DT det
 |   |   |   +-- posting NN nn
 |   |   |   +-- of IN prep
 |   |   |       +-- terms NNS pobj
 |   |   |           +-- the DT det
 |   |   |           +-- of IN prep
 |   |   |               +-- query NN pobj
 |   |   |                   +-- a DT det
 |   |   +-- in IN prep
 |   |       +-- cache NN pobj
 |   |           +-- the DT det
 |   +-- then RB advmod
 |   +-- results NNS nsubjpass
 |   |   +-- the DT det
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- in IN prep
 |   |   +-- units NNS pobj
 |   |       +-- time NN nn
 |   |           +-- TR1 CD num
 |   +-- , , punct
 |   +-- computed VBN parataxis
 |       +-- are VBP advcl
 |       |   +-- while IN mark
 |       |   +-- if IN mark
 |       |   +-- lists NNS nsubj
 |       |   |   +-- the DT det
 |       |   |   +-- posting NN nn
 |       |   +-- not RB neg
 |       |   +-- in IN prep
 |       |   |   +-- cache NN pobj
 |       |   |       +-- the DT det
 |       |   +-- then RB advmod
 |       +-- results NNS nsubjpass
 |       |   +-- the DT det
 |       +-- can MD aux
 |       +-- be VB auxpass
 |       +-- in IN prep
 |           +-- units NNS pobj
 |               +-- TR2 CD num
 |               +-- time NN nn
 +-- . . punct
Input: Of course TR2 > TR1 .
Parse:
TR1 CD ROOT
 +-- course RB dep
 |   +-- Of RB advmod
 +-- TR2 CD num
 +-- > -RRB- punct
 +-- . . punct
Input: Now we want to compare the time to answer a stream of Q queries in both cases .
Parse:
want VBP ROOT
 +-- Now RB advmod
 +-- we PRP nsubj
 +-- compare VB xcomp
 |   +-- to TO aux
 |   +-- time NN dobj
 |       +-- the DT det
 |       +-- answer VB infmod
 |           +-- to TO aux
 |           +-- stream NN dobj
 |           |   +-- a DT det
 |           |   +-- of IN prep
 |           |       +-- queries NNS pobj
 |           |           +-- Q NNP nn
 |           +-- in IN prep
 |               +-- cases NNS pobj
 |                   +-- both DT det
 +-- . . punct
Input: Let Vc -LRB- Nc -RRB- be the volume of the most frequent Nc queries .
Parse:
Let VB ROOT
 +-- volume NN ccomp
 |   +-- Vc DT nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- Nc NFP dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- queries NNS pobj
 |           +-- the DT det
 |           +-- frequent JJ amod
 |           |   +-- most RBS advmod
 |           +-- Nc NNP nn
 +-- . . punct
Input: Then , for case -LRB- A -RRB- , we have an overall time TCA = Vc -LRB- Nc -RRB- + TR2 -LRB- Q ? Vc -LRB- Nc -RRB- -RRB- .
Parse:
have VBP ROOT
 +-- Then RB advmod
 +-- , , punct
 +-- for IN prep
 |   +-- case NN pobj
 |       +-- -LRB- -LRB- punct
 |       +-- A NN dep
 |       +-- -RRB- -RRB- punct
 +-- we PRP nsubj
 +-- time NN dobj
 |   +-- an DT det
 |   +-- overall JJ amod
 |   +-- Vc UH dep
 |       +-- TCA NN nn
 |       +-- = SYM dep
 |       +-- -LRB- -LRB- punct
 |       +-- Nc SYM dep
 |       +-- -RRB- -RRB- punct
 |       +-- + SYM dep
 |       +-- Q NNP dep
 |           +-- TR2 NNP nn
 |           +-- -LRB- -LRB- punct
 |           +-- ? . punct
 |           +-- Vc UH dep
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- Nc NN dep
 |           |   +-- -RRB- -RRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct
Input: Similarly , for case -LRB- B -RRB- , let Vp -LRB- Np -RRB- be the number of computable queries .
Parse:
let VB ROOT
 +-- Similarly RB advmod
 +-- , , punct
 +-- for IN prep
 |   +-- case NN pobj
 |       +-- -LRB- -LRB- punct
 |       +-- B NNP dep
 |       +-- -RRB- -RRB- punct
 +-- number NN ccomp
 |   +-- Vp NNP nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- Np NFP dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- queries NNS pobj
 |           +-- computable JJ amod
 +-- . . punct
Input: Then we have overall time TP L = TR1Vp -LRB- Np -RRB- + TR2 -LRB- Q ? Vp -LRB- Np -RRB- -RRB- .
Parse:
have VBP ROOT
 +-- Then RB advmod
 +-- we PRP nsubj
 +-- L NN dobj
 |   +-- time NN nn
 |   |   +-- overall JJ amod
 |   +-- TP NNP nn
 |   +-- = SYM dep
 |   +-- TR1Vp CD dep
 |   +-- -LRB- -LRB- punct
 |   +-- Np SYM dep
 |   +-- -RRB- -RRB- punct
 |   +-- + SYM cc
 |   +-- Q NNP conj
 |       +-- TR2 NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- ? . punct
 |       +-- Np NN dep
 |       |   +-- Vp UH dep
 |       |   +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- . . punct
Input: We want to check under which conditions we have TP L < TCA .
Parse:
want VBP ROOT
 +-- We PRP nsubj
 +-- check VB xcomp
 |   +-- to TO aux
 |   +-- under IN prt
 |   +-- have VBP ccomp
 |       +-- conditions NNS dobj
 |       |   +-- which WDT det
 |       +-- we PRP nsubj
 |       +-- TCA NN dobj
 |           +-- TP VBN amod
 |           +-- L NNP nn
 |           +-- < -LRB- punct
 +-- . . punct
Input: We have TP L ? TCA = -LRB- TR2 ? 1 -RRB- Vc -LRB- Nc -RRB- ? -LRB- TR2 ? TR1 -RRB- Vp -LRB- Np -RRB- > 0 .
Parse:
have VBP ROOT
 +-- We PRP nsubj
 +-- L NNP dobj
 |   +-- TP VBN amod
 |   +-- ? . punct
 |   +-- TCA NN dep
 |   +-- = SYM dep
 |   +-- -LRB- -LRB- punct
 |   +-- TR2 CD dep
 |   |   +-- ? . punct
 |   |   +-- 1 CD num
 |   +-- -RRB- -RRB- punct
 |   +-- Vc UH dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- Nc SYM dep
 |   |   +-- -RRB- -RRB- punct
 |   |   +-- ? . punct
 |   |   +-- TR2 CD appos
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- ? . punct
 |   |       +-- TR1 CD dep
 |   |       +-- -RRB- -RRB- punct
 |   |       +-- Vp UH dep
 |   |       |   +-- -LRB- -LRB- punct
 |   |       |   +-- Np SYM dep
 |   |       |   +-- -RRB- -RRB- punct
 |   |       +-- > -RRB- punct
 |   +-- 0 NFP punct
 +-- . . punct
Input: Figure 9 shows the values of Vp and Vc for our data .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 9 CD num
 +-- values NNS dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- Vp NN pobj
 |   |       +-- and CC cc
 |   |       +-- Vc : conj
 |   +-- for IN prep
 |       +-- data NNS pobj
 |           +-- our PRP$ poss
 +-- . . punct
Input: We can see that caching answers saturates faster and for this particular data there is no additional benefit from using more than 10 % of the index space for caching answers .
Parse:
see VB ROOT
 +-- We PRP nsubj
 +-- can MD aux
 +-- saturates VBZ ccomp
 |   +-- that IN mark
 |   +-- answers NNS nsubj
 |   |   +-- caching VBG nn
 |   +-- faster RBR advmod
 |   +-- and CC cc
 |   +-- is VBZ conj
 |       +-- for IN prep
 |       |   +-- data NNS pobj
 |       |       +-- this DT det
 |       |       +-- particular JJ amod
 |       +-- there EX expl
 |       +-- benefit NN nsubj
 |           +-- no DT det
 |           +-- additional JJ amod
 |           +-- from IN prep
 |               +-- using VBG pcomp
 |                   +-- % NN dobj
 |                   |   +-- 10 CD num
 |                   |   |   +-- than IN quantmod
 |                   |   |       +-- more JJR mwe
 |                   |   +-- of IN prep
 |                   |       +-- space NN pobj
 |                   |           +-- the DT det
 |                   |           +-- index NN nn
 |                   +-- for IN prep
 |                       +-- answers NNS pobj
 |                           +-- caching VBG nn
 +-- . . punct
