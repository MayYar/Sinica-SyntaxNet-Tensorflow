
1
Input: In space contexts , communication time and agents '' computing capacities are limited .
Parse:
limited VBN ROOT
 +-- In IN prep
 |   +-- contexts NNS pobj
 |       +-- space NN nn
 |       +-- , , punct
 |       +-- time NN conj
 |       |   +-- communication NN nn
 |       +-- and CC cc
 |       +-- agents NNS conj
 |           +-- '' '' punct
 +-- capacities NNS nsubjpass
 |   +-- computing NN nn
 +-- are VBP auxpass
 +-- . . punct

2
Input: When they are in conflict , the agents must find a local agreement -LRB- instead of an expensive global agreement -RRB- by using the conflict in order to increase the number of realized requests , to decrease the time of mission return , to increase the quality of the pictures taken or to make sure that a request is carried out .
Parse:
find VB ROOT
 +-- are VBP advcl
 |   +-- When WRB advmod
 |   +-- they PRP nsubj
 |   +-- in IN prep
 |       +-- conflict NN pobj
 +-- , , punct
 +-- agents NNS nsubj
 |   +-- the DT det
 +-- must MD aux
 +-- agreement NN dobj
 |   +-- a DT det
 |   +-- local JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- instead RB cc
 |   |   +-- of IN mwe
 |   +-- agreement NN conj
 |   |   +-- an DT det
 |   |   +-- expensive JJ amod
 |   |   +-- global JJ amod
 |   +-- -RRB- -RRB- punct
 +-- by IN prep
 |   +-- using VBG pcomp
 |       +-- conflict NN dobj
 |       |   +-- the DT det
 |       +-- in IN prep
 |           +-- order NN pobj
 |               +-- increase VB infmod
 |                   +-- to TO aux
 |                   +-- number NN dobj
 |                   |   +-- the DT det
 |                   |   +-- of IN prep
 |                   |       +-- requests NNS pobj
 |                   |           +-- realized VBN amod
 |                   +-- , , punct
 |                   +-- decrease VB dep
 |                   |   +-- to TO aux
 |                   |   +-- time NN dobj
 |                   |       +-- the DT det
 |                   |       +-- of IN prep
 |                   |           +-- return NN pobj
 |                   |               +-- mission NN nn
 |                   +-- increase VB dep
 |                       +-- to TO aux
 |                       +-- quality NN dobj
 |                           +-- the DT det
 |                           +-- of IN prep
 |                               +-- pictures NNS pobj
 |                                   +-- the DT det
 |                                   +-- taken VBN dep
 |                                       +-- or CC cc
 |                                       +-- make VB conj
 |                                           +-- to TO aux
 |                                           +-- carried VBN acomp
 |                                               +-- sure JJ dep
 |                                               +-- that IN mark
 |                                               +-- request NN nsubjpass
 |                                               |   +-- a DT det
 |                                               +-- is VBZ auxpass
 |                                               +-- out RP prt
 +-- . . punct

3
Input: Example 2 .
Parse:
Example NNP ROOT
 +-- 2 CD num
 +-- . . punct

4
Input: Let us suppose a conflict on request R between agents si and sj .
Parse:
Let VB ROOT
 +-- suppose VB ccomp
 |   +-- us PRP nsubj
 |   +-- si VBZ ccomp
 |       +-- conflict NN nsubj
 |       |   +-- a DT det
 |       |   +-- on IN prep
 |       |       +-- R NN pobj
 |       |           +-- request NN nn
 |       |           +-- between IN prep
 |       |               +-- agents NNS pobj
 |       +-- and CC cc
 |       +-- sj UH conj
 +-- . . punct

5
Input: We would like that the most expert agent , i.e .
Parse:
like VB ROOT
 +-- We PRP nsubj
 +-- would MD aux
 +-- i.e NN ccomp
 |   +-- that IN mark
 |   +-- agent NN nsubj
 |   |   +-- the DT det
 |   |   +-- expert JJ amod
 |   |       +-- most RBS advmod
 |   +-- , , punct
 +-- . . punct

6
Input: the agent that can carry out the request under the best conditions , does it .
Parse:
does VBZ ROOT
 +-- agent NN nsubj
 |   +-- the DT det
 |   +-- carry VB rcmod
 |       +-- that WDT nsubj
 |       +-- can MD aux
 |       +-- out RP prt
 |       +-- request NN dobj
 |       |   +-- the DT det
 |       +-- under IN prep
 |           +-- conditions NNS pobj
 |               +-- the DT det
 |               +-- best JJS amod
 +-- , , punct
 +-- it PRP dobj
 +-- . . punct

7
Input: Let us suppose si is the expert .
Parse:
Let VB ROOT
 +-- suppose VB ccomp
 |   +-- us PRP nsubj
 |   +-- expert NN ccomp
 |       +-- si FW nsubj
 |       +-- is VBZ cop
 |       +-- the DT det
 +-- . . punct

8
Input: si must allocate R to itself .
Parse:
allocate VB ROOT
 +-- si NNS nsubj
 +-- must MD aux
 +-- R NN dobj
 +-- to IN prep
 |   +-- itself PRP pobj
 +-- . . punct

9
Input: It remains to determine what sj must do
Parse:
remains VBZ ROOT
 +-- It PRP nsubj
 +-- determine VB xcomp
     +-- to TO aux
     +-- do VB ccomp
         +-- what WP dobj
         +-- sj , nsubj
         +-- must MD aux

10
Input: Consequently , we can define collaboration strategies dedicated to conflict solving .
Parse:
define VB ROOT
 +-- Consequently RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- strategies NNS dobj
 |   +-- collaboration NN nn
 |   +-- dedicated VBN partmod
 |       +-- to IN prep
 |           +-- solving NN pobj
 |               +-- conflict NN nn
 +-- . . punct

11
Input: A strategy is a private -LRB- namely intrinsic to an agent -RRB- decision process that allows an agent to make a decision on a given object .
Parse:
intrinsic JJ ROOT
 +-- strategy NN nsubj
 |   +-- A DT det
 +-- is VBZ cop
 +-- a DT det
 +-- private JJ amod
 +-- -LRB- -LRB- punct
 +-- namely RB advmod
 +-- to IN prep
 |   +-- process NN pobj
 |       +-- an DT det
 |       +-- agent NN nn
 |       +-- -RRB- -RRB- punct
 |       +-- decision NN nn
 |       +-- allows VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- make VB xcomp
 |               +-- agent NN nsubj
 |               |   +-- an DT det
 |               +-- to TO aux
 |               +-- decision NN dobj
 |                   +-- a DT det
 |                   +-- on IN prep
 |                       +-- object NN pobj
 |                           +-- a DT det
 |                           +-- given VBN amod
 +-- . . punct

12
Input: In our application , strategies specify what to do with redundancies .
Parse:
specify VBP ROOT
 +-- In IN prep
 |   +-- application NN pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- strategies NNS nsubj
 +-- do VB ccomp
 |   +-- what WP nsubj
 |   +-- to TO aux
 |   +-- with IN prep
 |       +-- redundancies NNS pobj
 +-- . . punct

13
Input: 6.1 Cost and expertise In our application , cost is linked to the realization dates .
Parse:
linked VBN ROOT
 +-- Cost NN nsubjpass
 |   +-- 6.1 CD num
 |   +-- and CC cc
 |   +-- expertise NN conj
 |   +-- In IN prep
 |       +-- application NN pobj
 |           +-- our PRP$ poss
 +-- , , punct
 +-- cost NN nsubjpass
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- dates NNS pobj
 |       +-- the DT det
 |       +-- realization NN nn
 +-- . . punct

14
Input: Carrying out a request consumes the agents '' resources -LRB- e.g .
Parse:
consumes VBZ ROOT
 +-- Carrying VBG csubj
 |   +-- out RP prt
 |   +-- request NN dobj
 |       +-- a DT det
 +-- resources NNS dobj
 |   +-- agents NNS poss
 |       +-- the DT det
 |       +-- '' POS possessive
 +-- -LRB- -LRB- punct
 +-- e.g UH discourse
 +-- . . punct

15
Input: Consequently , an observation has a cost for each agent which depends on when it is realized
Parse:
has VBZ ROOT
 +-- Consequently RB advmod
 +-- , , punct
 +-- observation NN nsubj
 |   +-- an DT det
 +-- cost NN dobj
     +-- a DT det
     +-- for IN prep
         +-- agent NN pobj
             +-- each DT det
             +-- depends VBZ rcmod
                 +-- which WDT nsubj
                 +-- on IN prep
                     +-- realized VBN pcomp
                         +-- when WRB advmod
                         +-- it PRP nsubjpass
                         +-- is VBZ auxpass

16
Input: Definition 11 -LRB- Cost -RRB- .
Parse:
Definition NN ROOT
 +-- 11 CD num
 +-- -LRB- -LRB- punct
 +-- Cost NN dep
 +-- -RRB- -RRB- punct
 +-- . . punct

17
Input: Let si be an agent .
Parse:
Let VB ROOT
 +-- agent NN ccomp
 |   +-- si PRP nsubj
 |   +-- be VB cop
 |   +-- an DT det
 +-- . . punct

18
Input: The cost costsi -LRB- RC -RRB- ? R to carry out a request RC according to a candidacy C is defined as
Parse:
defined VBN ROOT
 +-- R NN csubjpass
 |   +-- costsi NN nsubj
 |   |   +-- The DT det
 |   |   +-- cost NN nn
 |   |   +-- RC NNP appos
 |   |   |   +-- -LRB- -LRB- punct
 |   |   |   +-- -RRB- -RRB- punct
 |   |   +-- ? , punct
 |   +-- carry VB xcomp
 |       +-- to TO aux
 |       +-- out RP prt
 |       +-- RC NNP dobj
 |       |   +-- a DT det
 |       |   +-- request NN nn
 |       +-- according VBG prep
 |           +-- to IN pcomp
 |               +-- C NN pobj
 |                   +-- a DT det
 |                   +-- candidacy NN nn
 +-- is VBZ auxpass
 +-- as IN prep

19
Input: From this cost notion , we can formally define an expert notion between two agents .
Parse:
define VB ROOT
 +-- From IN prep
 |   +-- notion NN pobj
 |       +-- this DT det
 |       +-- cost NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- formally RB advmod
 +-- notion NN dobj
 |   +-- an DT det
 |   +-- expert NN nn
 |   +-- between IN prep
 |       +-- agents NNS pobj
 |           +-- two CD num
 +-- . . punct

20
Input: The expertise for an agent means it can realize the request at the lower cost .
Parse:
means VBZ ROOT
 +-- expertise NN nsubj
 |   +-- The DT det
 |   +-- for IN prep
 |       +-- agent NN pobj
 |           +-- an DT det
 +-- realize VB ccomp
 |   +-- it PRP nsubj
 |   +-- can MD aux
 |   +-- request NN dobj
 |       +-- the DT det
 |       +-- at IN prep
 |           +-- cost NN pobj
 |               +-- the DT det
 |               +-- lower JJR amod
 +-- . . punct

21
Input: Definition 12 -LRB- Expertise -RRB- .
Parse:
Definition NN ROOT
 +-- 12 CD num
 +-- -LRB- -LRB- punct
 +-- Expertise NN dep
 +-- -RRB- -RRB- punct
 +-- . . punct

22
Input: Let si and sj ? S be two agents and R a request .
Parse:
Let VB ROOT
 +-- agents NNS ccomp
 |   +-- si NNP nsubj
 |   |   +-- and CC cc
 |   |   +-- sj VB conj
 |   |   +-- ? , punct
 |   +-- S MD aux
 |   +-- be VB cop
 |   +-- two CD num
 |   +-- and CC cc
 |   +-- R VB conj
 |   +-- request NN dobj
 |       +-- a DT det
 +-- . . punct

23
Input: Agent si is an expert for R if and only if costsi ? costsj .
Parse:
expert NN ROOT
 +-- si NNP nsubj
 |   +-- Agent NN nn
 +-- is VBZ cop
 +-- an DT det
 +-- for IN prep
 |   +-- R NN pobj
 +-- if IN prep
 |   +-- and CC cc
 |   +-- only RB dep
 |   +-- if IN conj
 |       +-- costsi NNS pobj
 |           +-- ? . punct
 |           +-- costsj NN appos
 +-- . . punct

24
Input: 6.2 Soft conflict solving strategies Three strategies are proposed to solve a conflict .
Parse:
proposed VBN ROOT
 +-- conflict NN nsubjpass
 |   +-- 6.2 CD num
 |   +-- Soft JJ amod
 |   +-- solving VBG partmod
 |       +-- strategies NNS iobj
 |       +-- strategies NNS dobj
 |           +-- Three CD num
 +-- are VBP auxpass
 +-- solve VB xcomp
 |   +-- to TO aux
 |   +-- conflict NN dobj
 |       +-- a DT det
 +-- . . punct

25
Input: The expert strategy means that the expert agent maintains its candidacy whereas the other one gives up .
Parse:
means VBZ ROOT
 +-- strategy NN nsubj
 |   +-- The DT det
 |   +-- expert NN nn
 +-- maintains VBZ ccomp
 |   +-- that IN mark
 |   +-- agent NN nsubj
 |   |   +-- the DT det
 |   |   +-- expert JJ amod
 |   +-- candidacy NN dobj
 |   |   +-- its PRP$ poss
 |   +-- gives VBZ advcl
 |       +-- whereas IN mark
 |       +-- one NN nsubj
 |       |   +-- the DT det
 |       |   +-- other JJ amod
 |       +-- up RP prt
 +-- . . punct

26
Input: The altruist strategy means that the agent that can download first3 , provided the cost increase is negligible , maintains its candidacy whereas the other one gives up .
Parse:
means VBZ ROOT
 +-- strategy NN nsubj
 |   +-- The DT det
 |   +-- altruist JJ amod
 +-- negligible JJ ccomp
 |   +-- that IN mark
 |   +-- agent NN nsubj
 |   |   +-- the DT det
 |   |   +-- download VB rcmod
 |   |       +-- that WDT nsubj
 |   |       +-- can MD aux
 |   |       +-- first3 CD dobj
 |   |           +-- , , punct
 |   |           +-- provided VBN partmod
 |   |               +-- increase NN dobj
 |   |                   +-- the DT det
 |   |                   +-- cost NN nn
 |   +-- is VBZ cop
 |   +-- , , punct
 |   +-- maintains VBZ conj
 |   |   +-- candidacy NN dobj
 |   |       +-- its PRP$ poss
 |   +-- gives VBZ advcl
 |       +-- whereas IN mark
 |       +-- one NN nsubj
 |       |   +-- the DT det
 |       |   +-- other JJ amod
 |       +-- up RP prt
 +-- . . punct

27
Input: The insurance strategy means that both agents maintain their candidacies in order to ensure redundancy .
Parse:
means VBZ ROOT
 +-- strategy NN nsubj
 |   +-- The DT det
 |   +-- insurance NN nn
 +-- maintain VBP ccomp
 |   +-- that IN mark
 |   +-- agents NNS nsubj
 |   |   +-- both DT det
 |   +-- candidacies NNS dobj
 |   |   +-- their PRP$ poss
 |   +-- in IN prep
 |       +-- order NN pobj
 |           +-- ensure VB infmod
 |               +-- to TO aux
 |               +-- redundancy NN dobj
 +-- . . punct

28
Input: Strategy 1 -LRB- Expert -RRB- .
Parse:
Strategy NNP ROOT
 +-- 1 CD num
 +-- -LRB- -LRB- punct
 +-- Expert NNP dep
 +-- -RRB- -RRB- punct
 +-- . . punct

29
Input: Let si and sj be two agents in conflict on their respective candidacies Csi and Csj such as si is the expert agent .
Parse:
Let VB ROOT
 +-- agents NNS ccomp
 |   +-- si PRP nsubj
 |   |   +-- and CC cc
 |   |   +-- sj MD conj
 |   +-- be VB cop
 |   +-- two CD num
 |   +-- in IN prep
 |       +-- conflict NN pobj
 |           +-- on IN prep
 |               +-- candidacies NNS pobj
 |                   +-- their PRP$ poss
 |                   +-- respective JJ amod
 |                   +-- agent NN rcmod
 |                       +-- Csi NNP nsubj
 |                       |   +-- and CC cc
 |                       |   +-- Csj , conj
 |                       |   +-- as IN prep
 |                       |       +-- such JJ mwe
 |                       |       +-- si FW pobj
 |                       +-- is VBZ cop
 |                       +-- the DT det
 |                       +-- expert JJ amod
 +-- . . punct

30
Input: The expert strategy is
Parse:
is VBZ ROOT
 +-- strategy NN nsubj
     +-- The DT det
     +-- expert NN nn

31
Input: Strategy 2 -LRB- Altruist -RRB- .
Parse:
Strategy NNP ROOT
 +-- 2 CD num
 +-- -LRB- -LRB- punct
 +-- Altruist NN dep
 +-- -RRB- -RRB- punct
 +-- . . punct

32
Input: Let si and sj be two agents in conflict on their respective candidacies Csi and Csj such as si is the expert agent .
Parse:
Let VB ROOT
 +-- agents NNS ccomp
 |   +-- si PRP nsubj
 |   |   +-- and CC cc
 |   |   +-- sj MD conj
 |   +-- be VB cop
 |   +-- two CD num
 |   +-- in IN prep
 |       +-- conflict NN pobj
 |           +-- on IN prep
 |               +-- candidacies NNS pobj
 |                   +-- their PRP$ poss
 |                   +-- respective JJ amod
 |                   +-- agent NN rcmod
 |                       +-- Csi NNP nsubj
 |                       |   +-- and CC cc
 |                       |   +-- Csj , conj
 |                       |   +-- as IN prep
 |                       |       +-- such JJ mwe
 |                       |       +-- si FW pobj
 |                       +-- is VBZ cop
 |                       +-- the DT det
 |                       +-- expert JJ amod
 +-- . . punct

33
Input: Let ? R+ be a threshold on the cost increase .
Parse:
Let VB ROOT
 +-- ? . punct
 +-- threshold NN ccomp
 |   +-- R+ UH nsubj
 |   +-- be VB cop
 |   +-- a DT det
 |   +-- on IN prep
 |       +-- increase NN pobj
 |           +-- the DT det
 |           +-- cost NN nn
 +-- . . punct

34
Input: The altruist strategy is
Parse:
is VBZ ROOT
 +-- strategy NN nsubj
     +-- The DT det
     +-- altruist NN nn

35
Input: Strategy 3 -LRB- Insurance -RRB- .
Parse:
Strategy NNP ROOT
 +-- 3 CD num
 +-- -LRB- -LRB- punct
 +-- Insurance NN dep
 +-- -RRB- -RRB- punct
 +-- . . punct

36
Input: Let si and sj be two agents in conflict on their respective candidacies Csi and Csj such as si is the expert agent .
Parse:
Let VB ROOT
 +-- agents NNS ccomp
 |   +-- si PRP nsubj
 |   |   +-- and CC cc
 |   |   +-- sj MD conj
 |   +-- be VB cop
 |   +-- two CD num
 |   +-- in IN prep
 |       +-- conflict NN pobj
 |           +-- on IN prep
 |               +-- candidacies NNS pobj
 |                   +-- their PRP$ poss
 |                   +-- respective JJ amod
 |                   +-- agent NN rcmod
 |                       +-- Csi NNP nsubj
 |                       |   +-- and CC cc
 |                       |   +-- Csj , conj
 |                       |   +-- as IN prep
 |                       |       +-- such JJ mwe
 |                       |       +-- si FW pobj
 |                       +-- is VBZ cop
 |                       +-- the DT det
 |                       +-- expert JJ amod
 +-- . . punct
