
1
Input: Communication is commonly associated with cooperation .
Parse:
associated VBN ROOT
 +-- Communication NN nsubjpass
 +-- is VBZ auxpass
 +-- commonly RB advmod
 +-- with IN prep
 |   +-- cooperation NN pobj
 +-- . . punct

2
Input: Deliberative agents need communication to cooperate , whereas it is not necessarily the case for reactive agents -LRB- 2 , 41 -RRB- .
Parse:
need VBP ROOT
 +-- agents NNS nsubj
 |   +-- Deliberative JJ amod
 +-- communication NN dobj
 |   +-- cooperate VB infmod
 |       +-- to TO aux
 +-- , , punct
 +-- case NN advcl
 |   +-- whereas IN mark
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- not RB neg
 |   +-- necessarily RB advmod
 |   +-- the DT det
 |   +-- for IN prep
 |       +-- agents NNS pobj
 |           +-- reactive JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- 2 CD dep
 |           |   +-- , , punct
 |           |   +-- 41 CD num
 |           +-- -RRB- -RRB- punct
 +-- . . punct

3
Input: Gossip protocols -LRB- 22 , 24 -RRB- , or epidemic protocols , are used to share knowledge with multicast .
Parse:
used VBN ROOT
 +-- protocols NNS nsubjpass
 |   +-- Gossip NNP nn
 |   +-- -LRB- -LRB- punct
 |   +-- 22 CD dep
 |   |   +-- , , punct
 |   |   +-- 24 CD num
 |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- or CC cc
 |   +-- protocols NNS conj
 |       +-- epidemic NN nn
 +-- are VBP auxpass
 +-- share VB xcomp
 |   +-- to TO aux
 |   +-- knowledge NN dobj
 |       +-- with IN prep
 |           +-- multicast NN pobj
 +-- . . punct

4
Input: Each agent selects a set of agents at a given time in order to share information .
Parse:
selects VBZ ROOT
 +-- agent NN nsubj
 |   +-- Each DT det
 +-- set NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- agents NNS pobj
 +-- at IN prep
 |   +-- time NN pobj
 |       +-- a DT det
 |       +-- given VBN amod
 +-- in IN prep
 |   +-- order NN pobj
 |       +-- share VB infmod
 |           +-- to TO aux
 |           +-- information NN dobj
 +-- . . punct

5
Input: The speed of information transmission is contingent upon the length of the discussion round .
Parse:
contingent JJ ROOT
 +-- speed NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- transmission NN pobj
 |           +-- information NN nn
 +-- is VBZ cop
 +-- upon IN prep
 |   +-- length NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- round NN pobj
 |               +-- the DT det
 |               +-- discussion NN nn
 +-- . . punct

6
Input: 4.1 The corridor metaphor The suggested protocol is inspired from what we name the corridor metaphor , which represents well the satellite swarm problem .
Parse:
inspired VBN ROOT
 +-- 4.1 CD dep
 |   +-- metaphor NN dep
 |       +-- The DT det
 |       +-- corridor NN amod
 +-- protocol NN nsubjpass
 |   +-- The DT det
 |   +-- suggested VBN amod
 +-- is VBZ auxpass
 +-- from IN prep
 |   +-- name VBP pcomp
 |       +-- what WP dobj
 |       +-- we PRP nsubj
 |       +-- metaphor NN dep
 |           +-- the DT det
 |           +-- corridor NN amod
 |           +-- , , punct
 |           +-- represents VBZ rcmod
 |               +-- which WDT nsubj
 |               +-- well RB advmod
 |               +-- problem NN dobj
 |                   +-- the DT det
 |                   +-- swarm NN nn
 |                       +-- satellite NN nn
 +-- . . punct

7
Input: Various agents go to and fro in a corridor where objects to collect appear from time to time .
Parse:
go VBP ROOT
 +-- agents NNS nsubj
 |   +-- Various JJ amod
 +-- to IN prep
 |   +-- and CC cc
 |   +-- fro JJ conj
 +-- in IN prep
 |   +-- corridor NN pobj
 |       +-- a DT det
 |       +-- appear VBP rcmod
 |           +-- where WRB advmod
 |           +-- objects NNS nsubj
 |           |   +-- collect VB infmod
 |           |       +-- to TO aux
 |           +-- from IN prep
 |               +-- time NN pobj
 |               +-- to IN prep
 |                   +-- time NN pobj
 +-- . . punct

8
Input: Two objects that are too close to each other can not be collected by the same agent because the action takes some time and an agent can not stop its movement .
Parse:
collected VBN ROOT
 +-- objects NNS nsubjpass
 |   +-- Two CD num
 |   +-- close JJ rcmod
 |       +-- that WDT nsubj
 |       +-- are VBP cop
 |       +-- too RB advmod
 |       +-- to IN prep
 |           +-- other JJ pobj
 |               +-- each DT det
 +-- can MD aux
 +-- not RB neg
 +-- be VB auxpass
 +-- by IN prep
 |   +-- agent NN pobj
 |       +-- the DT det
 |       +-- same JJ amod
 +-- takes VBZ advcl
 |   +-- because IN mark
 |   +-- action NN nsubj
 |   |   +-- the DT det
 |   +-- time NN dobj
 |   |   +-- some DT det
 |   +-- and CC cc
 |   +-- stop VB conj
 |       +-- agent NN nsubj
 |       |   +-- an DT det
 |       +-- can MD aux
 |       +-- not RB neg
 |       +-- movement NN dobj
 |           +-- its PRP$ poss
 +-- . . punct

9
Input: In order to optimize the collection , the agents can communicate when they meet .
Parse:
communicate VB ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- optimize VB infmod
 |           +-- to TO aux
 |           +-- collection NN dobj
 |               +-- the DT det
 +-- , , punct
 +-- agents NNS nsubj
 |   +-- the DT det
 +-- can MD aux
 +-- meet VBP advcl
 |   +-- when WRB advmod
 |   +-- they PRP nsubj
 +-- . . punct

10
Input: S 2 S ABel A 1 A 3S Figure 1
Parse:
ABel NNP ROOT
 +-- S NNP nn
 +-- Figure NN dep
     +-- A DT det
     +-- A NN nn
     |   +-- 1 CD num
     +-- 3S CD num
     +-- 1 CD num

11
Input: Let us suppose three agents , s1 , s2 , s3 and an object A to be collected .
Parse:
Let VB ROOT
 +-- suppose VB ccomp
 |   +-- us PRP nsubj
 |   +-- agents NNS dobj
 |       +-- three CD num
 |       +-- , , punct
 |       +-- s1 CD appos
 |           +-- , , punct
 |           +-- s2 CD conj
 |           +-- s3 CD conj
 |           +-- and CC cc
 |           +-- A NN conj
 |               +-- an DT det
 |               +-- object NN nn
 |               +-- collected VBN infmod
 |                   +-- to TO aux
 |                   +-- be VB auxpass
 +-- . . punct

12
Input: At time t , s1 did not collect A and s2 does not know that A exists .
Parse:
collect VB ROOT
 +-- At IN prep
 |   +-- t NN pobj
 |       +-- time NN nn
 +-- , , punct
 +-- s1 PRP nsubj
 +-- did VBD aux
 +-- not RB neg
 +-- A DT dobj
 +-- and CC cc
 +-- know VB conj
 |   +-- s2 NN nsubj
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- exists NNS dobj
 |       +-- A DT det
 |           +-- that IN det
 +-- . . punct

13
Input: When s1 meets s2 , it communicates the list of the objects it knows , that is to say It is not certain that A is still there because another agent may have passed before s2 , but it can take it into account in its plan .
Parse:
communicates VBZ ROOT
 +-- meets VBZ advcl
 |   +-- When WRB advmod
 |   +-- s1 CD nsubj
 |   +-- s2 CD dobj
 +-- , , punct
 +-- it PRP nsubj
 +-- list NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- objects NNS pobj
 |           +-- the DT det
 |           +-- knows VBZ rcmod
 |           |   +-- it PRP nsubj
 |           +-- , , punct
 |           +-- is VBZ rcmod
 |               +-- that WDT nsubj
 |               +-- say VB xcomp
 |                   +-- to TO aux
 |                   +-- certain JJ ccomp
 |                       +-- It PRP nsubj
 |                       +-- is VBZ cop
 |                       +-- not RB neg
 |                       +-- is VBZ ccomp
 |                           +-- that IN mark
 |                           +-- A NNP nsubj
 |                           +-- still RB advmod
 |                           +-- there RB advmod
 |                           +-- passed VBN advcl
 |                               +-- because IN mark
 |                               +-- agent NN nsubj
 |                               |   +-- another DT det
 |                               +-- may MD aux
 |                               +-- have VB aux
 |                               +-- before RP prep
 |                                   +-- s2 CD pobj
 +-- but CC cc
 +-- take VB conj
 |   +-- it PRP nsubj
 |   +-- can MD aux
 |   +-- it PRP dobj
 |   +-- into IN prep
 |   |   +-- account NN pobj
 |   +-- in IN prep
 |       +-- plan NN pobj
 |           +-- its PRP$ poss
 +-- . . punct

14
Input: At time t , s3 collects A .
Parse:
collects VBZ ROOT
 +-- At IN prep
 |   +-- t NN pobj
 |       +-- time NN nn
 +-- , , punct
 +-- s3 CD nsubj
 +-- A NNP dobj
 +-- . . punct

15
Input: In the vicinity of s2 , s3 communicates its list of objects and A is not in the list .
Parse:
communicates VBZ ROOT
 +-- In IN prep
 |   +-- vicinity NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- s2 CD pobj
 +-- , , punct
 +-- s3 CD nsubj
 +-- list NN dobj
 |   +-- its PRP$ poss
 |   +-- of IN prep
 |       +-- objects NNS pobj
 +-- and CC cc
 +-- is VBZ conj
 |   +-- A NN nsubj
 |   +-- not RB neg
 |   +-- in IN prep
 |       +-- list NN pobj
 |           +-- the DT det
 +-- . . punct

16
Input: As both agents meet in a place where it is possible for s3 to have collected A , the object would have been in the list if it had not been collected .
Parse:
been VBN ROOT
 +-- meet VBP advcl
 |   +-- As IN mark
 |   +-- agents NNS nsubj
 |   |   +-- both DT det
 |   +-- in IN prep
 |       +-- place NN pobj
 |           +-- a DT det
 |           +-- possible JJ rcmod
 |               +-- where WRB advmod
 |               +-- it PRP nsubj
 |               +-- is VBZ cop
 |               +-- have VB advcl
 |                   +-- for IN mark
 |                   +-- s3 CD nsubj
 |                   +-- to TO aux
 |                   +-- A NNP dobj
 |                       +-- collected VBN amod
 +-- , , punct
 +-- object NN nsubj
 |   +-- the DT det
 +-- would MD aux
 +-- have VB aux
 +-- in IN prep
 |   +-- list NN pobj
 |       +-- the DT det
 +-- collected VBN advcl
 |   +-- if IN mark
 |   +-- it PRP nsubjpass
 |   +-- had VBD aux
 |   +-- not RB neg
 |   +-- been VBN auxpass
 +-- . . punct

17
Input: s2 can thus believe that A does not exist anymore and can withdraw it from its plan .
Parse:
believe VB ROOT
 +-- s2 NNP nsubj
 +-- can MD aux
 +-- thus RB advmod
 +-- exist VB ccomp
 |   +-- that IN mark
 |   +-- A DT nsubj
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- anymore RB advmod
 |   +-- and CC cc
 |   +-- withdraw VB conj
 |       +-- can MD aux
 |       +-- it PRP dobj
 |       +-- from IN prep
 |           +-- plan NN pobj
 |               +-- its PRP$ poss
 +-- . . punct

18
Input: 4.2 Knowledge to communicate In order to build up their plans , agents need to know the current requests and the others agents '' intentions .
Parse:
need VBP ROOT
 +-- Knowledge NN nsubj
 |   +-- 4.2 CD num
 |   +-- communicate VB infmod
 |       +-- to TO aux
 |       +-- In IN prep
 |           +-- order NN pobj
 |               +-- build VB infmod
 |                   +-- to TO aux
 |                   +-- up RP prt
 |                   +-- plans NNS dobj
 |                       +-- their PRP$ poss
 +-- , , punct
 +-- agents NNS nsubj
 +-- know VB xcomp
 |   +-- to TO aux
 |   +-- intentions NNS ccomp
 |       +-- requests NNS nsubj
 |           +-- the DT det
 |           +-- current JJ amod
 |           +-- and CC cc
 |           +-- agents NNS conj
 |               +-- the DT det
 |               +-- others NNS amod
 |               +-- '' '' punct
 +-- . . punct

19
Input: For each agent two kinds of knowledge to maintain are defined
Parse:
defined VBN ROOT
 +-- For IN prep
 |   +-- agent NN pobj
 |       +-- each DT det
 +-- kinds NNS nsubjpass
 |   +-- two CD num
 |   +-- of IN prep
 |       +-- knowledge NN pobj
 |           +-- maintain VB infmod
 |               +-- to TO aux
 +-- are VBP auxpass

20
Input: Definition 5 -LRB- Knowledge -RRB- .
Parse:
Definition NN ROOT
 +-- 5 CD num
 +-- -LRB- -LRB- punct
 +-- Knowledge NN dep
 +-- -RRB- -RRB- punct
 +-- . . punct

21
Input: Knowledge K is a tuple < data -LRB- K -RRB- , SK , tK >
Parse:
tuple NN ROOT
 +-- K NNP nsubj
 |   +-- Knowledge NN nn
 +-- is VBZ cop
 +-- a DT det
 +-- K NNP appos
 |   +-- < -LRB- punct
 |   +-- data NNS nn
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- SK NNP appos
 +-- tK . punct
 +-- > -RRB- punct

22
Input: In the sequel , we will note Kt si the knowledge of agent si at time t ? T .
Parse:
note VB ROOT
 +-- In IN prep
 |   +-- sequel NN pobj
 |       +-- the DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- will MD aux
 +-- Kt , punct
 +-- si VBZ ccomp
 |   +-- knowledge NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- si VBZ pobj
 |   |           +-- agent NN nn
 |   +-- at IN prep
 |       +-- t NNP pobj
 |           +-- time NN nn
 +-- ? . punct
 +-- T NNP dobj
 +-- . . punct

23
Input: 4.3 An epidemic protocol From the corridor metaphor , we can define a communication protocol that benefits from all the communication opportunities .
Parse:
define VB ROOT
 +-- protocol NN nsubj
 |   +-- 4.3 LS num
 |   +-- An DT det
 |   +-- epidemic NN nn
 |   +-- From IN prep
 |       +-- metaphor NN pobj
 |           +-- the DT det
 |           +-- corridor NN amod
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- protocol NN dobj
 |   +-- a DT det
 |   +-- communication NN nn
 |   +-- benefits NNS rcmod
 |       +-- that IN nsubj
 |       +-- from IN prep
 |           +-- opportunities NNS pobj
 |               +-- all PDT predet
 |               +-- the DT det
 |               +-- communication NN nn
 +-- . . punct

24
Input: An agent notifies any change within its knowledge and each agent must propagate these changes to its vicinity who update their knowledge bases and reiterate the process .
Parse:
notifies VBZ ROOT
 +-- agent NN nsubj
 |   +-- An DT det
 +-- change NN dobj
 |   +-- any DT det
 |   +-- within IN prep
 |       +-- knowledge NN pobj
 |           +-- its PRP$ poss
 +-- and CC cc
 +-- propagate VB conj
 |   +-- agent NN nsubj
 |   |   +-- each DT det
 |   +-- must MD aux
 |   +-- changes NNS dobj
 |   |   +-- these DT det
 |   +-- to IN prep
 |       +-- vicinity NN pobj
 |           +-- its PRP$ poss
 |           +-- update VBP rcmod
 |               +-- who WP nsubj
 |               +-- bases NNS dobj
 |               |   +-- their PRP$ poss
 |               |   +-- knowledge NN nn
 |               +-- and CC cc
 |               +-- reiterate VB conj
 |                   +-- process NN dobj
 |                       +-- the DT det
 +-- . . punct

25
Input: This protocol is a variant of epidemic protocols -LRB- 22 -RRB- inspired from the work on overhearing -LRB- 27 -RRB- .
Parse:
variant NN ROOT
 +-- protocol NN nsubj
 |   +-- This DT det
 +-- is VBZ cop
 +-- a DT det
 +-- of IN prep
 |   +-- protocols NNS pobj
 |       +-- epidemic NN nn
 +-- -LRB- -LRB- punct
 +-- 22 CD num
 +-- -RRB- -RRB- punct
 +-- inspired VBN partmod
 |   +-- from IN prep
 |       +-- work NN pobj
 |           +-- the DT det
 |           +-- on IN prep
 |           |   +-- overhearing VBG pobj
 |           +-- -LRB- -LRB- punct
 |           +-- 27 CD dep
 |           +-- -RRB- -RRB- punct
 +-- . . punct

26
Input: Protocol 1 -LRB- Communication -RRB- .
Parse:
Protocol NNP ROOT
 +-- 1 CD num
 +-- -LRB- -LRB- punct
 +-- Communication NN dep
 +-- -RRB- -RRB- punct
 +-- . . punct

27
Input: Let si be an agent in S .
Parse:
Let VB ROOT
 +-- agent NN ccomp
 |   +-- si PRP nsubj
 |   +-- be VB cop
 |   +-- an DT det
 |   +-- in IN prep
 |       +-- S NNP pobj
 +-- . . punct

28
Input: ? t ? T
Parse:
t NN ROOT
 +-- ? . punct
 +-- T NNP dep
