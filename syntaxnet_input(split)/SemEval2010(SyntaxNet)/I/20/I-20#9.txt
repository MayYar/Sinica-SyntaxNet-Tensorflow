
1
Input: IN BOUNDED LAYER GRAPH CONNECTIVITY GAMES We here present a polynomial algorithm to calculate the Banzhaf index of an edge in a connectivity game , where the network is a bounded layer graph .
Parse:
present VBP ROOT
 +-- IN IN prep
 |   +-- GAMES NNPS pobj
 |       +-- BOUNDED VBN amod
 |       +-- LAYER NNP nn
 |       +-- GRAPH NNP nn
 |       +-- CONNECTIVITY NNP nn
 +-- We PRP nsubj
 +-- here RB advmod
 +-- algorithm NN dobj
 |   +-- a DT det
 |   +-- polynomial JJ amod
 |   +-- calculate VB infmod
 |       +-- to TO aux
 |       +-- index NN dobj
 |       |   +-- the DT det
 |       |   +-- Banzhaf NNP nn
 |       |   +-- of IN prep
 |       |       +-- edge NN pobj
 |       |           +-- an DT det
 |       +-- in IN prep
 |           +-- game NN pobj
 |               +-- a DT det
 |               +-- connectivity NN nn
 |               +-- , , punct
 |               +-- graph NN rcmod
 |                   +-- where WRB advmod
 |                   +-- network NN nsubj
 |                   |   +-- the DT det
 |                   +-- is VBZ cop
 |                   +-- a DT det
 |                   +-- layer NN nn
 |                       +-- bounded VBN amod
 +-- . . punct

2
Input: This positive result indicates that for some restricted domains of network flow games , it is possible to calculate the Banzhaf index in a reasonable amount of time .
Parse:
indicates VBZ ROOT
 +-- result NN nsubj
 |   +-- This DT det
 |   +-- positive JJ amod
 +-- possible JJ ccomp
 |   +-- that IN mark
 |   +-- for IN prep
 |   |   +-- domains NNS pobj
 |   |       +-- some DT det
 |   |       +-- restricted VBN amod
 |   |       +-- of IN prep
 |   |           +-- games NNS pobj
 |   |               +-- flow NN nn
 |   |                   +-- network NN nn
 |   +-- , , punct
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- calculate VB xcomp
 |       +-- to TO aux
 |       +-- index NN dobj
 |       |   +-- the DT det
 |       |   +-- Banzhaf NNP nn
 |       +-- in IN prep
 |           +-- amount NN pobj
 |               +-- a DT det
 |               +-- reasonable JJ amod
 |               +-- of IN prep
 |                   +-- time NN pobj
 +-- . . punct

3
Input: DEFINITION 3 .
Parse:
DEFINITION NN ROOT
 +-- 3 CD num
 +-- . . punct

4
Input: A layer graph is a graph G = < V , E > , with source vertex s and target vertex t , where the vertices of the graph are partitioned into n + 1 layers , L0 = -LRB- s -RRB- , L1 , ... , Ln = -LRB- t -RRB- .
Parse:
G NNP ROOT
 +-- graph NN nsubj
 |   +-- A DT det
 |   +-- layer NN nn
 +-- is VBZ cop
 +-- a DT det
 +-- graph NN nn
 +-- = SYM punct
 +-- < -LRB- punct
 +-- V NNP dep
 |   +-- , , punct
 |   +-- E NNP appos
 +-- > -RRB- punct
 +-- , , punct
 +-- with IN prep
 |   +-- vertex NN pobj
 |       +-- source NN nn
 |       +-- s POS possessive
 +-- and CC cc
 +-- t NNP conj
 |   +-- vertex NN nn
 |   |   +-- target VB nn
 |   +-- , , punct
 |   +-- partitioned VBN rcmod
 |       +-- where WRB advmod
 |       +-- vertices NNS nsubj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- graph NN pobj
 |       |           +-- the DT det
 |       +-- are VBP cop
 |       +-- into IN prep
 |           +-- layers NNS pobj
 |               +-- + SYM amod
 |               |   +-- n RB advmod
 |               +-- 1 CD num
 |               +-- , , punct
 |               +-- L0 CD appos
 |                   +-- = SYM prep
 |                   |   +-- s VBZ dep
 |                   |       +-- -LRB- -LRB- punct
 |                   |       +-- -RRB- -RRB- punct
 |                   +-- , , punct
 |                   +-- L1 CD appos
 +-- ... , punct
 +-- Ln FW appos
 |   +-- = SYM dep
 |   +-- -LRB- -LRB- punct
 |   +-- t NN dep
 |   +-- -RRB- -RRB- punct
 +-- . . punct

5
Input: The edges run only between consecutive layers .
Parse:
run VBP ROOT
 +-- edges NNS nsubj
 |   +-- The DT det
 +-- between IN prep
 |   +-- only RB advmod
 |   +-- layers NNS pobj
 |       +-- consecutive JJ amod
 +-- . . punct

6
Input: DEFINITION 4 .
Parse:
DEFINITION NNP ROOT
 +-- 4 CD num
 +-- . . punct

7
Input: A c bounded layer graph is a layer graph where the number of vertices in each layer is bounded by some constant number c .
Parse:
graph NN ROOT
 +-- graph NN nsubj
 |   +-- A DT det
 |   +-- layer NN nn
 |       +-- bounded VBN amod
 |           +-- c NN dep
 +-- is VBZ cop
 +-- a DT det
 +-- layer NN nn
 +-- bounded VBN rcmod
 |   +-- where WRB advmod
 |   +-- number NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- vertices NNS pobj
 |   |           +-- in IN prep
 |   |               +-- layer NN pobj
 |   |                   +-- each DT det
 |   +-- is VBZ auxpass
 |   +-- by IN prep
 |       +-- c NN pobj
 |           +-- some DT det
 |           +-- constant JJ amod
 |           +-- number NN nn
 +-- . . punct

8
Input: Although there is no limit on the number of layers in a bounded layer graph , the structure of such graphs makes it possible to calculate the Banzhaf index of edges in connectivity games on such graphs .
Parse:
makes VBZ ROOT
 +-- is VBZ advcl
 |   +-- Although IN mark
 |   +-- there EX expl
 |   +-- limit NN nsubj
 |   |   +-- no DT det
 |   |   +-- on IN prep
 |   |       +-- number NN pobj
 |   |           +-- the DT det
 |   |           +-- of IN prep
 |   |               +-- layers NNS pobj
 |   +-- in IN prep
 |       +-- graph NN pobj
 |           +-- a DT det
 |           +-- layer NN nn
 |               +-- bounded VBN amod
 +-- , , punct
 +-- structure NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- graphs NNS pobj
 |           +-- such JJ amod
 +-- calculate VB xcomp
 |   +-- it PRP nsubj
 |   +-- possible JJ dep
 |   +-- to TO aux
 |   +-- index NN dobj
 |   |   +-- the DT det
 |   |   +-- Banzhaf NNP nn
 |   |   +-- of IN prep
 |   |       +-- edges NNS pobj
 |   +-- in IN prep
 |       +-- games NNS pobj
 |           +-- connectivity NN nn
 |           +-- on IN prep
 |               +-- graphs NNS pobj
 |                   +-- such JJ amod
 +-- . . punct

9
Input: The algorithm provided below is indeed polynomial in the number of vertices given that the network is a c bounded layer graph .
Parse:
polynomial JJ ROOT
 +-- algorithm NN nsubj
 |   +-- The DT det
 |   +-- provided VBN partmod
 |       +-- below RB advmod
 +-- is VBZ cop
 +-- indeed RB advmod
 +-- in IN prep
 |   +-- number NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- vertices NNS pobj
 +-- given VBN prep
 |   +-- graph NN pcomp
 |       +-- that IN mark
 |       +-- network NN nsubj
 |       |   +-- the DT det
 |       +-- is VBZ cop
 |       +-- a DT det
 |       +-- layer NN nn
 |           +-- bounded VBN amod
 |               +-- c NN dep
 +-- . . punct

10
Input: However , there is a constant factor to the running time , which is exponential in c .
Parse:
is VBZ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- there EX expl
 +-- factor NN nsubj
 |   +-- a DT det
 |   +-- constant JJ amod
 |   +-- to IN prep
 |       +-- time NN pobj
 |           +-- the DT det
 |           +-- running VBG amod
 |           +-- , , punct
 |           +-- exponential JJ rcmod
 |               +-- which WDT nsubj
 |               +-- is VBZ cop
 |               +-- in IN prep
 |                   +-- c NN pobj
 +-- . . punct

11
Input: Therefore , this method is only tractable for graphs where the bound c is small .
Parse:
tractable JJ ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- method NN nsubj
 |   +-- this DT det
 +-- is VBZ cop
 +-- only RB advmod
 +-- for IN prep
 |   +-- graphs NNS pobj
 |       +-- small JJ rcmod
 |           +-- where WRB advmod
 |           +-- c NN nsubj
 |           |   +-- the DT det
 |           |   +-- bound VBN amod
 |           +-- is VBZ cop
 +-- . . punct

12
Input: Bounded layer graphs may occur in networks when the nodes are located in several ordered segments , where nodes can be connected only between consecutive segments .
Parse:
occur VB ROOT
 +-- graphs NNS nsubj
 |   +-- Bounded VBN amod
 |   +-- layer NN nn
 +-- may MD aux
 +-- in IN prep
 |   +-- networks NNS pobj
 +-- located VBN advcl
 |   +-- when WRB advmod
 |   +-- nodes NNS nsubjpass
 |   |   +-- the DT det
 |   +-- are VBP auxpass
 |   +-- in IN prep
 |       +-- segments NNS pobj
 |           +-- several JJ amod
 |           +-- ordered VBN amod
 |           +-- , , punct
 |           +-- connected VBN rcmod
 |               +-- where WRB advmod
 |               +-- nodes NNS nsubjpass
 |               +-- can MD aux
 |               +-- be VB auxpass
 |               +-- between IN prep
 |                   +-- only RB advmod
 |                   +-- segments NNS pobj
 |                       +-- consecutive JJ amod
 +-- . . punct

13
Input: Let v be a vertex in layer Li .
Parse:
Let VB ROOT
 +-- vertex NN ccomp
 |   +-- v PRP nsubj
 |   +-- be VB cop
 |   +-- a DT det
 |   +-- in IN prep
 |       +-- Li NNP pobj
 |           +-- layer NN nn
 +-- . . punct

14
Input: We say an edge e occurs before v if it connects two vertices in v '' s layer or a previous layer
Parse:
say VBP ROOT
 +-- We PRP nsubj
 +-- occurs VBZ ccomp
     +-- edge NN nsubj
     |   +-- an DT det
     |   +-- e , punct
     +-- before IN prep
     |   +-- v NN pobj
     +-- connects VBZ advcl
         +-- if IN mark
         +-- it PRP nsubj
         +-- vertices NNS dobj
         |   +-- two CD num
         +-- in IN prep
         |   +-- v NN pobj
         +-- '' '' punct
         +-- layer NN conj
         |   +-- a DT det
         |   +-- previous JJ amod
         +-- or CC cc

15
Input: Let Predv ? E be the subset of edges that occur before v .
Parse:
Let VB ROOT
 +-- subset NN ccomp
 |   +-- Predv NNP nsubj
 |   |   +-- ? . punct
 |   +-- E MD aux
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- edges NNS pobj
 |           +-- occur VBP rcmod
 |               +-- that WDT nsubj
 |               +-- before IN prep
 |                   +-- v FW pobj
 +-- . . punct

16
Input: Consider a subset of these edges , E ? Predv .
Parse:
Consider VB ROOT
 +-- subset NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- edges NNS pobj
 |           +-- these DT det
 |           +-- , , punct
 |           +-- E NNP appos
 |               +-- ? . punct
 |               +-- Predv NNP dep
 +-- . . punct

17
Input: E may contain a path from s to v , or it may not .
Parse:
contain VB ROOT
 +-- E NNP nsubj
 +-- may MD aux
 +-- path NN dobj
 |   +-- a DT det
 |   +-- from IN prep
 |       +-- s POS pobj
 |       +-- to IN prep
 |           +-- v VB pobj
 +-- , , punct
 +-- or CC cc
 +-- may MD conj
 |   +-- it PRP nsubj
 |   +-- not RB neg
 +-- . . punct

18
Input: We define Pv as the number of subsets E ? Predv that contain a path from s to v .
Parse:
define VBP ROOT
 +-- We PRP nsubj
 +-- Pv , dobj
 +-- as IN prep
 |   +-- number NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- E NNP pobj
 |       |       +-- subsets NNS nn
 |       +-- ? . punct
 |       +-- Predv NNP dep
 |           +-- contain VBP rcmod
 |               +-- that WDT nsubj
 |               +-- path NN dobj
 |                   +-- a DT det
 |                   +-- from IN prep
 |                       +-- s POS pobj
 |                       +-- to IN prep
 |                           +-- v NN pobj
 +-- . . punct

19
Input: Similarly , let Vi ? V be the subset of all the vertices in the same layer Li .
Parse:
let VB ROOT
 +-- Similarly RB advmod
 +-- , , punct
 +-- subset NN ccomp
 |   +-- Vi NNP nsubj
 |   |   +-- ? . punct
 |   +-- V MD aux
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- vertices NNS pobj
 |   |       +-- all PDT predet
 |   |       +-- the DT det
 |   +-- in IN prep
 |       +-- layer NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- Li NNP appos
 +-- . . punct

20
Input: Let PredVi ? E be the subset of edges that occur before Vi -LRB- all the vertices in Vi are in the same layer , so any edge that occurs before some v ? Vi occurs before any other vertex w ? Vi -RRB- .
Parse:
Let VB ROOT
 +-- subset NN ccomp
 |   +-- PredVi NNP nsubj
 |   |   +-- ? . punct
 |   +-- E MD aux
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- edges NNS pobj
 |           +-- occur VBP rcmod
 |               +-- that WDT nsubj
 |               +-- before IN prep
 |                   +-- Vi NNP pobj
 +-- are VBP ccomp
 |   +-- -LRB- -LRB- punct
 |   +-- vertices NNS nsubj
 |   |   +-- all PDT predet
 |   |   +-- the DT det
 |   |   +-- in IN prep
 |   |       +-- Vi NNP pobj
 |   +-- in IN prep
 |   |   +-- layer NN pobj
 |   |       +-- the DT det
 |   |       +-- same JJ amod
 |   +-- , , punct
 |   +-- so RB cc
 |   +-- occurs VBZ conj
 |   |   +-- edge NN nsubj
 |   |   |   +-- any DT det
 |   |   |   +-- occurs VBZ rcmod
 |   |   |       +-- that WDT nsubj
 |   |   |       +-- before IN prep
 |   |   |           +-- v NN pobj
 |   |   |               +-- some DT det
 |   |   +-- ? . punct
 |   |   +-- Vi NNP nsubj
 |   |   +-- before IN prep
 |   |       +-- vertex NN pobj
 |   |           +-- any DT det
 |   |           +-- other JJ amod
 |   |           +-- w IN prep
 |   |               +-- ? . punct
 |   |               +-- Vi NNP pobj
 |   +-- -RRB- -RRB- punct
 +-- . . punct

21
Input: Consider a subset of these edges , E ? PredV .
Parse:
Consider VB ROOT
 +-- subset NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- edges NNS pobj
 |           +-- these DT det
 |           +-- , , punct
 |           +-- E NNP appos
 |               +-- ? . punct
 |               +-- PredV NNP dep
 +-- . . punct

22
Input: Let Vi -LRB- E -RRB- be the subset of vertices in Vi that are reachable from s using only the edges in E
Parse:
Let VB ROOT
 +-- subset NN ccomp
     +-- E NNP nsubj
     |   +-- Vi NNP nn
     |   +-- -LRB- -LRB- punct
     |   +-- -RRB- -RRB- punct
     +-- be VB cop
     +-- the DT det
     +-- of IN prep
         +-- vertices NNS pobj
             +-- in IN prep
             |   +-- Vi NNP pobj
             +-- reachable JJ rcmod
                 +-- that WDT nsubj
                 +-- are VBP cop
                 +-- from IN prep
                 |   +-- s VBZ pobj
                 +-- using VBG xcomp
                     +-- edges NNS dobj
                         +-- only RB advmod
                         +-- the DT det
                         +-- in IN prep
                             +-- E NNP pobj

23
Input: We say E ? PredV connects exactly the vertices in Si ? Vi if all the vertices in Si are reachable from s using the edges in E but no other vertices in Vi are reachable from s using E , so Vi -LRB- E -RRB- = Si .
Parse:
say VBP ROOT
 +-- We PRP nsubj
 +-- connects VBZ ccomp
 |   +-- E NNP nsubj
 |   +-- ? . punct
 |   +-- PredV NNP nsubj
 |   +-- vertices NNS dobj
 |   |   +-- exactly RB advmod
 |   |   +-- the DT det
 |   +-- in IN prep
 |   |   +-- Vi NNP pobj
 |   |       +-- Si NNP nn
 |   |       +-- ? . punct
 |   +-- reachable JJ advcl
 |       +-- if IN mark
 |       +-- vertices NNS nsubj
 |       |   +-- all PDT predet
 |       |   +-- the DT det
 |       |   +-- in IN prep
 |       |       +-- Si PRP pobj
 |       +-- are VBP cop
 |       +-- from IN prep
 |       |   +-- s `` pobj
 |       +-- using VBG xcomp
 |       |   +-- edges NNS dobj
 |       |   |   +-- the DT det
 |       |   +-- in IN prep
 |       |       +-- E NN pobj
 |       +-- but CC cc
 |       +-- reachable JJ conj
 |           +-- vertices NNS nsubj
 |           |   +-- no DT det
 |           |   +-- other JJ amod
 |           |   +-- in IN prep
 |           |       +-- Vi NNP pobj
 |           +-- are VBP cop
 |           +-- from IN prep
 |           |   +-- s VBZ pobj
 |           +-- using VBG xcomp
 |               +-- E NNP dobj
 |                   +-- , , punct
 |                   +-- so RB cc
 |                   +-- E NNP conj
 |                   |   +-- Vi NNP nn
 |                   |   +-- -LRB- -LRB- punct
 |                   |   +-- -RRB- -RRB- punct
 |                   +-- = NFP punct
 |                   +-- Si NNP conj
 +-- . . punct

24
Input: Let V ? Vi be a subset of the vertices in layer Li .
Parse:
Let VB ROOT
 +-- subset NN ccomp
 |   +-- V NNP nsubj
 |   |   +-- ? . punct
 |   +-- Vi MD aux
 |   +-- be VB cop
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- vertices NNS pobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- Li NNP pobj
 |                   +-- layer NN nn
 +-- . . punct

25
Input: We define PV as the number of subsets E ? PredV that connect exactly the vertices in V
Parse:
define VBP ROOT
 +-- We PRP nsubj
 +-- PV , dobj
 +-- as IN prep
     +-- number NN pobj
         +-- the DT det
         +-- of IN prep
             +-- E NNP pobj
                 +-- subsets NNS nn
                 +-- ? . punct
                 +-- PredV NNP dep
                     +-- connect VBP rcmod
                         +-- that WDT nsubj
                         +-- vertices NNS dobj
                             +-- exactly RB advmod
                             +-- the DT det
                             +-- in IN prep
                                 +-- V NN pobj

26
Input: LEMMA 1 .
Parse:
LEMMA NNP ROOT
 +-- 1 CD num
 +-- . . punct

27
Input: Let S1 , S2 ? Vi where S1 = S2 be two different subsets of vertices in the same layer .
Parse:
Let VB ROOT
 +-- S1 LS dep
 |   +-- , , punct
 |   +-- S2 CD appos
 |   +-- ? . punct
 |   +-- Vi NNP dep
 |       +-- subsets NNS rcmod
 |           +-- where WRB advmod
 |           +-- S2 CD nsubj
 |           |   +-- S1 CD num
 |           |   +-- = SYM dep
 |           +-- be VB cop
 |           +-- two CD num
 |           +-- different JJ amod
 |           +-- of IN prep
 |           |   +-- vertices NNS pobj
 |           +-- in IN prep
 |               +-- layer NN pobj
 |                   +-- the DT det
 |                   +-- same JJ amod
 +-- . . punct

28
Input: Let E , E ? PredVi be two sets of edge subsets , so that E connects exactly the vertices in S1 and E connects exactly the vertices in S2
Parse:
Let VB ROOT
 +-- E NNP dobj
 |   +-- , , punct
 |   +-- E NNP appos
 +-- ? . punct
 +-- sets NNS parataxis
     +-- PredVi NNP nsubj
     +-- be VB cop
     +-- two CD num
     +-- of IN prep
     |   +-- subsets NNS pobj
     |       +-- edge NN nn
     +-- , , punct
     +-- connects VBZ advcl
         +-- so IN mark
         +-- that IN mark
         +-- E NNP nsubj
         +-- vertices NNS dobj
         |   +-- exactly RB advmod
         |   +-- the DT det
         +-- in IN prep
         |   +-- S1 CD pobj
         +-- and CC cc
         +-- connects NNS conj
             +-- E NNP nsubj
             +-- vertices NNS dobj
             |   +-- exactly RB advmod
             |   +-- the DT det
             +-- in IN prep
                 +-- S2 CD pobj

29
Input: Then E and E do not contain the same edges
Parse:
contain VB ROOT
 +-- Then RB advmod
 +-- E NNP nsubj
 |   +-- and CC cc
 |   +-- E NNP conj
 +-- do VBP aux
 +-- not RB neg
 +-- edges NNS dobj
     +-- the DT det
     +-- same JJ amod

30
Input: PROOF .
Parse:
PROOF NNP ROOT
 +-- . . punct

31
Input: If E = E then both sets of edges allow the same paths from s , so Vi -LRB- E -RRB- = Vi -LRB- E -RRB- .
Parse:
Vi NNP ROOT
 +-- allow VBP advcl
 |   +-- If IN mark
 |   +-- E NNP nsubj
 |   |   +-- E NNP nn
 |   |   +-- = SYM nn
 |   +-- then RB advmod
 |   +-- sets NNS nsubj
 |   |   +-- both DT det
 |   |   +-- of IN prep
 |   |       +-- edges NNS pobj
 |   +-- paths NNS dobj
 |       +-- the DT det
 |       +-- same JJ amod
 |       +-- from IN prep
 |           +-- s NNP pobj
 +-- , , punct
 +-- so RB advmod
 +-- E NNP appos
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- Vi NNP dep
 |   +-- = SYM dep
 |   +-- E NNP appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- . . punct

32
Input: Let Si ? Vi be a subset of vertices in layer Li .
Parse:
Let VB ROOT
 +-- subset NN ccomp
 |   +-- Si NNP nsubj
 |   |   +-- ? . punct
 |   +-- Vi MD aux
 |   +-- be VB cop
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- vertices NNS pobj
 |           +-- in IN prep
 |               +-- Li NNP pobj
 |                   +-- layer NN nn
 +-- . . punct

33
Input: Let Ei ? E be the set of edges between the vertices in layer Li and layer Li+1 .
Parse:
Let VB ROOT
 +-- set NN ccomp
 |   +-- Ei NNP nsubj
 |   |   +-- ? . punct
 |   +-- E MD aux
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- edges NNS pobj
 |           +-- between IN prep
 |               +-- vertices NNS pobj
 |                   +-- the DT det
 |                   +-- in IN prep
 |                       +-- Li NNP pobj
 |                           +-- layer NN nn
 |                           +-- and CC cc
 |                           +-- Li+1 NNP conj
 |                               +-- layer NN nn
 +-- . . punct

34
Input: Let E ? Ei be some subset of these edges .
Parse:
Let VB ROOT
 +-- subset NN ccomp
 |   +-- E NNP nsubj
 |   |   +-- ? . punct
 |   +-- Ei MD aux
 |   +-- be VB cop
 |   +-- some DT det
 |   +-- of IN prep
 |       +-- edges NNS pobj
 |           +-- these DT det
 +-- . . punct

35
Input: We denote by Dests -LRB- Si , E -RRB- the set of vertices in layer Li+1 that are connected to some vertex in Si by an edge in E
Parse:
denote VBP ROOT
 +-- We PRP nsubj
 +-- by IN prep
 |   +-- Dests NNPS pobj
 |       +-- Si NNP appos
 |           +-- -LRB- -LRB- punct
 |           +-- , , punct
 |           +-- E NNP appos
 |           +-- -RRB- -RRB- punct
 +-- set NN dobj
     +-- the DT det
     +-- of IN prep
         +-- vertices NNS pobj
             +-- in IN prep
             |   +-- Li+1 NNP pobj
             |       +-- layer NN nn
             +-- connected VBN rcmod
                 +-- that WDT nsubjpass
                 +-- are VBP auxpass
                 +-- to IN prep
                 |   +-- vertex NN pobj
                 |       +-- some DT det
                 |       +-- in IN prep
                 |           +-- Si NNP pobj
                 +-- by IN prep
                     +-- edge NN pobj
                         +-- an DT det
                         +-- in IN prep
                             +-- E NNP pobj

36
Input: Let Si ? Vi be a subset of vertices in Li and E ? Ei be some subset of the edges between layer Li and layer Li+1 .
Parse:
Let VB ROOT
 +-- subset NN ccomp
 |   +-- Ei , nsubj
 |   +-- be VB cop
 |   +-- some DT det
 |   +-- of IN prep
 |       +-- edges NNS pobj
 |           +-- the DT det
 |           +-- between IN prep
 |               +-- Li NNP pobj
 |                   +-- layer NN nn
 |                   +-- and CC cc
 |                   +-- Li+1 NNP conj
 |                       +-- layer NN nn
 +-- ? . punct
 +-- . . punct

37
Input: PSi counts the number of edge subsets in PredVi that connect exactly the vertices in Si .
Parse:
counts VBZ ROOT
 +-- PSi NNP nsubj
 +-- number NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- subsets NNS pobj
 |   |       +-- edge NN nn
 |   |       +-- in IN prep
 |   |           +-- PredVi NNP pobj
 |   +-- connect VBP rcmod
 |       +-- that WDT nsubj
 |       +-- vertices NNS dobj
 |           +-- exactly RB advmod
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- Si NNP pobj
 +-- . . punct

38
Input: Consider such a subset E counted in PSi .
Parse:
Consider VB ROOT
 +-- E NN dobj
 |   +-- such PDT predet
 |   +-- a DT det
 |   +-- subset NN nn
 |   +-- counted VBN partmod
 |       +-- in IN prep
 |           +-- PSi NNP pobj
 +-- . . punct
