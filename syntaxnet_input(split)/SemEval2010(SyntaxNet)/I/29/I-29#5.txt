
1
Input: As indicated above , our agent scheduler operates incrementally .
Parse:
operates VBZ ROOT
 +-- indicated VBN advcl
 |   +-- As IN mark
 |   +-- above RB advmod
 +-- , , punct
 +-- scheduler NN nsubj
 |   +-- our PRP$ poss
 |   +-- agent NN nn
 +-- incrementally RB advmod
 +-- . . punct

2
Input: Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler execution coupling
Parse:
suited JJ ROOT
 +-- frameworks NNS nsubj
 |   +-- Incremental JJ amod
 |   +-- scheduling NN nn
 +-- are VBP cop
 +-- ideally RB advmod
 +-- for IN prep
     +-- domains NNS pobj
         +-- requiring VBG partmod
             +-- coupling NN dobj
                 +-- tight JJ amod
                 +-- scheduler NN nn
                 +-- execution NN nn

3
Input: There is an inherent bias toward schedule stability which provides better support for the continuity in execution .
Parse:
is VBZ ROOT
 +-- There EX expl
 +-- bias NN nsubj
 |   +-- an DT det
 |   +-- inherent JJ amod
 |   +-- toward IN prep
 |   |   +-- stability NN pobj
 |   |       +-- schedule NN nn
 |   +-- provides VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- support NN dobj
 |       |   +-- better JJR amod
 |       +-- for IN prep
 |           +-- continuity NN pobj
 |               +-- the DT det
 |               +-- in IN prep
 |                   +-- execution NN pobj
 +-- . . punct

4
Input: This latter property is also advantageous in multi agent settings , since solution stability tends to minimize the ripple across different agents '' schedules .
Parse:
schedules NNS ROOT
 +-- advantageous JJ dep
 |   +-- property NN nsubj
 |   |   +-- This DT det
 |   |   +-- latter JJ amod
 |   +-- is VBZ cop
 |   +-- also RB advmod
 |   +-- in IN prep
 |   |   +-- settings NNS pobj
 |   |       +-- multi JJ amod
 |   |       +-- agent NN nn
 |   +-- , , punct
 |   +-- tends VBZ advcl
 |       +-- since IN mark
 |       +-- stability NN nsubj
 |       |   +-- solution NN nn
 |       +-- minimize VB xcomp
 |           +-- to TO aux
 |           +-- ripple NN dobj
 |               +-- the DT det
 |               +-- across IN prep
 |                   +-- agents NNS pobj
 |                       +-- different JJ amod
 +-- '' '' punct
 +-- . . punct

5
Input: The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain , multiagent execution environment .
Parse:
adds VBZ ROOT
 +-- coupling NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- scheduling NN pobj
 |           +-- scheduling NN nn
 |               +-- incremental JJ amod
 |               +-- with IN prep
 |                   +-- times NNS pobj
 |                       +-- flexible JJ amod
 +-- leverage NN dobj
 |   +-- additional JJ amod
 +-- in IN prep
 |   +-- environment NN pobj
 |       +-- an DT det
 |       +-- uncertain JJ amod
 |       +-- , , punct
 |       +-- multiagent JJ amod
 |       +-- execution NN nn
 +-- . . punct

6
Input: As mentioned earlier , slack can be used as a hedge against uncertain method execution times .
Parse:
used VBN ROOT
 +-- mentioned VBN advcl
 |   +-- As IN mark
 |   +-- earlier RBR advmod
 +-- , , punct
 +-- slack NN nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- as IN prep
 |   +-- hedge NN pobj
 |       +-- a DT det
 |       +-- against IN prep
 |           +-- times NNS pobj
 |               +-- uncertain JJ amod
 |               +-- method NN nn
 |               +-- execution NN nn
 +-- . . punct

7
Input: It also provides a basis for softening the impact of inter dependencies across agents .
Parse:
provides VBZ ROOT
 +-- It PRP nsubj
 +-- also RB advmod
 +-- basis NN dobj
 |   +-- a DT det
 |   +-- for IN prep
 |       +-- softening VBG pcomp
 |           +-- impact NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |               |   +-- dependencies NNS pobj
 |               |       +-- inter NN nn
 |               +-- across IN prep
 |                   +-- agents NNS pobj
 +-- . . punct

8
Input: In this section , we summarize the core scheduler that we have developed to solve the Coordinators problem .
Parse:
summarize VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- scheduler NN dobj
 |   +-- the DT det
 |   +-- core NN amod
 |   +-- developed VBN rcmod
 |       +-- that WDT dobj
 |       +-- we PRP nsubj
 |       +-- have VBP aux
 |       +-- solve VB xcomp
 |           +-- to TO aux
 |           +-- problem NN dobj
 |               +-- the DT det
 |               +-- Coordinators NNPS nn
 +-- . . punct

9
Input: In subsequent sections we discuss its use in managing execution and coordinating with other agents .
Parse:
discuss VBP ROOT
 +-- In IN prep
 |   +-- sections NNS pobj
 |       +-- subsequent JJ amod
 +-- we PRP nsubj
 +-- use NN dobj
 |   +-- its PRP$ poss
 |   +-- in IN prep
 |       +-- managing VBG pcomp
 |           +-- execution NN dobj
 |           +-- and CC cc
 |           +-- coordinating VBG conj
 |               +-- with IN prep
 |                   +-- agents NNS pobj
 |                       +-- other JJ amod
 +-- . . punct

10
Input: 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agent '' s sched486 The Sixth Intl .
Parse:
Representation NN ROOT
 +-- 4.1 CD num
 +-- Solution NNP nn
 |   +-- STN NNP nn
 +-- maintain VB infmod
 |   +-- To TO aux
 |   +-- range NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |   |   +-- values NNS pobj
 |   |   |       +-- admissible JJ amod
 |   |   +-- for IN prep
 |   |       +-- times NNS pobj
 |   |           +-- the DT det
 |   |           +-- start NN amod
 |   |           |   +-- and CC cc
 |   |           |   +-- end NN conj
 |   |           +-- of IN prep
 |   |               +-- methods NNS pobj
 |   |                   +-- various JJ amod
 |   +-- in IN prep
 |       +-- agent NN pobj
 |           +-- a DT det
 |           +-- given VBN amod
 |           +-- '' '' punct
 |           +-- s POS possessive
 |           +-- sched486 CD num
 |           +-- Intl NNP dep
 |               +-- The DT det
 |               +-- Sixth NNP nn
 +-- . . punct

11
Input: Joint Conf .
Parse:
Conf NNP ROOT
 +-- Joint NNP nn
 +-- . . punct

12
Input: on Autonomous Agents and Multi Agent Systems -LRB- AAMAS 07 -RRB- ule , all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network -LRB- STN -RRB- -LRB- 3 -RRB- .
Parse:
encoded VBN ROOT
 +-- on IN prep
 |   +-- Agents NNS pobj
 |       +-- Autonomous JJ amod
 |       +-- and CC cc
 |       +-- ule NN conj
 |       |   +-- Systems NNPS nn
 |       |       +-- Multi NNP nn
 |       |       +-- Agent NNP nn
 |       |       +-- -LRB- -LRB- punct
 |       |       +-- 07 CD dep
 |       |       |   +-- AAMAS NNP nn
 |       |       +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- problem NN conj
 |       |   +-- all DT det
 |       +-- constraints NNS conj
 |       |   +-- scheduling NN nn
 |       +-- impacting VBG partmod
 |           +-- times NNS dobj
 |               +-- these DT det
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- Network NNP pobj
 |       +-- an DT det
 |       +-- underlying VBG amod
 |       +-- Simple NNP nn
 |       +-- Temporal NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- STN NNP dep
 |       +-- -RRB- -RRB- punct
 |       +-- 3 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

13
Input: An STN represents temporal constraints as a graph G < N , E > , where nodes in N represent the set of time points of interest , and edges in E are distances between pairs of time points in N .
Parse:
represents VBZ ROOT
 +-- STN NNP nsubj
 |   +-- An DT det
 +-- constraints NNS dobj
 |   +-- temporal JJ amod
 |   +-- as IN prep
 |       +-- G NNP pobj
 |           +-- a DT det
 |           +-- graph NN nn
 |           +-- < -LRB- punct
 |           +-- N NNP dep
 |           |   +-- , , punct
 |           |   +-- E NNP appos
 |           +-- > -RRB- punct
 |           +-- , , punct
 |           +-- represent VBP rcmod
 |               +-- where WRB advmod
 |               +-- nodes NNS nsubj
 |               |   +-- in IN prep
 |               |       +-- N NNP pobj
 |               +-- set NN dobj
 |               |   +-- the DT det
 |               |   +-- of IN prep
 |               |       +-- points NNS pobj
 |               |           +-- time NN nn
 |               |           +-- of IN prep
 |               |               +-- interest NN pobj
 |               +-- , , punct
 |               +-- and CC cc
 |               +-- distances NNS conj
 |                   +-- edges NNS nsubj
 |                   |   +-- in IN prep
 |                   |       +-- E NN pobj
 |                   +-- are VBP cop
 |                   +-- between IN prep
 |                       +-- pairs NNS pobj
 |                           +-- of IN prep
 |                               +-- points NNS pobj
 |                                   +-- time NN nn
 |                                   +-- in IN prep
 |                                       +-- N NNP pobj
 +-- . . punct

14
Input: A special time point , called calendar zero grounds the network and has the value duration -RRB- and relationships between activities -LRB- e.g .
Parse:
point NN ROOT
 +-- A DT det
 +-- time NN nn
 |   +-- special JJ amod
 +-- , , punct
 +-- called VBN partmod
 |   +-- network NN dep
 |       +-- grounds NNS dep
 |       |   +-- calendar NN nn
 |       |       +-- zero CD num
 |       +-- the DT det
 +-- and CC cc
 +-- has VBZ conj
 |   +-- duration NN dobj
 |       +-- the DT det
 |       +-- value NN nn
 |       +-- -RRB- -RRB- punct
 |       +-- and CC cc
 |       +-- relationships NNS conj
 |       |   +-- between IN prep
 |       |       +-- activities NNS pobj
 |       +-- -LRB- -LRB- punct
 |       +-- e.g FW conj
 +-- . . punct

15
Input: parentchild relation , enables -RRB- are uniformly represented as temporal constraints -LRB- i.e. , edges -RRB- between relevant start and finish time points .
Parse:
represented VBN ROOT
 +-- relation NN nsubjpass
 |   +-- parentchild JJ amod
 |   +-- , , punct
 |   +-- enables NNS appos
 |   +-- -RRB- -RRB- punct
 +-- are VBP auxpass
 +-- uniformly RB advmod
 +-- as IN prep
 |   +-- constraints NNS pobj
 |       +-- temporal JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- edges VBZ dep
 |       |   +-- i.e. FW advmod
 |       |   +-- , , punct
 |       +-- -RRB- -RRB- punct
 |       +-- between IN prep
 |           +-- start NN pobj
 |               +-- relevant JJ amod
 |               +-- and CC cc
 |               +-- points NNS conj
 |                   +-- time NN nn
 |                       +-- finish NN nn
 +-- . . punct

16
Input: An agent '' s schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair .
Parse:
designated VBN ROOT
 +-- schedule NN nsubjpass
 |   +-- agent NN poss
 |       +-- An DT det
 |       +-- '' '' punct
 |       +-- s POS possessive
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- ordering NN pobj
 |       +-- a DT det
 |       +-- total JJ amod
 |       +-- of IN prep
 |           +-- methods NNS pobj
 |               +-- selected VBN amod
 +-- by IN prep
 |   +-- posting VBG pcomp
 |       +-- constraints NNS dobj
 |           +-- precedence NN amod
 |           +-- between IN prep
 |               +-- points NNS pobj
 |                   +-- the DT det
 |                   +-- end NN nn
 |                   |   +-- and CC cc
 |                   |   +-- start NN conj
 |                   +-- of IN prep
 |                       +-- pair NN pobj
 |                           +-- each DT det
 |                           +-- ordered VBN amod
 +-- . . punct

17
Input: As new methods are inserted into a schedule or external state updates require adjustments to existing constraints -LRB- e.g. , substitution of an actual duration constraint , tightening of a deadline -RRB- , the network propagates constraints and maintains lower and upper bounds on all time points in the network .
Parse:
propagates VBZ ROOT
 +-- require VBP ccomp
 |   +-- inserted VBN csubj
 |   |   +-- As IN mark
 |   |   +-- methods NNS nsubjpass
 |   |   |   +-- new JJ amod
 |   |   +-- are VBP auxpass
 |   |   +-- into IN prep
 |   |       +-- schedule NN pobj
 |   |           +-- a DT det
 |   |           +-- or CC cc
 |   |           +-- updates NNS conj
 |   |               +-- external JJ amod
 |   |               +-- state NN nn
 |   +-- adjustments NNS dobj
 |       +-- to IN prep
 |           +-- constraints NNS pobj
 |               +-- existing VBG amod
 |               +-- substitution NN appos
 |                   +-- -LRB- -LRB- punct
 |                   +-- e.g. NN amod
 |                   +-- , , punct
 |                   +-- of IN prep
 |                   |   +-- constraint NN pobj
 |                   |       +-- an DT det
 |                   |       +-- actual JJ amod
 |                   |       +-- duration NN nn
 |                   +-- tightening NN appos
 |                   |   +-- of IN prep
 |                   |       +-- deadline NN pobj
 |                   |           +-- a DT det
 |                   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- network NN nsubj
 |   +-- the DT det
 +-- constraints NNS dobj
 +-- and CC cc
 +-- maintains VBZ conj
 |   +-- bounds NNS dobj
 |   |   +-- lower JJR amod
 |   |       +-- and CC cc
 |   |       +-- upper JJ conj
 |   +-- on IN prep
 |       +-- points NNS pobj
 |           +-- all DT det
 |           +-- time NN nn
 |           +-- in IN prep
 |               +-- network NN pobj
 |                   +-- the DT det
 +-- . . punct

18
Input: This is accomplished efficiently via the use of a standard all pairs shortest path algorithm ; in our implementation , we take advantage of an incremental procedure based on -LRB- 2 -RRB- .
Parse:
accomplished VBN ROOT
 +-- This DT nsubjpass
 +-- is VBZ auxpass
 +-- efficiently RB advmod
 +-- via IN prep
 |   +-- use NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- standard NN pobj
 |               +-- a DT det
 +-- path NN dobj
 |   +-- all DT det
 |   +-- pairs NNS nn
 |   +-- shortest JJS amod
 |   +-- algorithm RB advmod
 +-- ; : punct
 +-- take VBP parataxis
 |   +-- in IN prep
 |   |   +-- implementation NN pobj
 |   |       +-- our PRP$ poss
 |   +-- , , punct
 |   +-- we PRP nsubj
 |   +-- advantage NN dobj
 |   +-- of IN prep
 |       +-- procedure NN pobj
 |           +-- an DT det
 |           +-- incremental JJ amod
 |           +-- based VBN partmod
 |               +-- on IN prep
 |                   +-- 2 CD pobj
 |                       +-- -LRB- -LRB- punct
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

19
Input: As bounds are updated , a consistency check is made for the presence of negative cycles , and the absence of any such cycle ensures the continued temporal feasibility of the network -LRB- and hence the schedule -RRB- .
Parse:
made VBN ROOT
 +-- updated VBN advcl
 |   +-- As IN mark
 |   +-- bounds NNS nsubjpass
 |   +-- are VBP auxpass
 +-- , , punct
 +-- check NN nsubjpass
 |   +-- a DT det
 |   +-- consistency NN nn
 +-- is VBZ auxpass
 +-- for IN prep
 |   +-- presence NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- cycles NNS pobj
 |               +-- negative JJ amod
 +-- and CC cc
 +-- ensures VBZ conj
 |   +-- absence NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- cycle NN pobj
 |   |           +-- any DT det
 |   |           +-- such JJ amod
 |   +-- feasibility NN dobj
 |       +-- the DT det
 |       +-- continued JJ amod
 |       +-- temporal JJ amod
 |       +-- of IN prep
 |           +-- network NN pobj
 |               +-- the DT det
 |               +-- -LRB- -LRB- punct
 |               +-- and CC cc
 |               +-- hence RB advmod
 |               +-- schedule NN conj
 |               |   +-- the DT det
 |               +-- -RRB- -RRB- punct
 +-- . . punct

20
Input: Otherwise a conflict has been detected , and some amount of constraint retraction is necessary to restore feasibility .
Parse:
detected VBN ROOT
 +-- Otherwise RB advmod
 +-- conflict NN nsubjpass
 |   +-- a DT det
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- , , punct
 +-- and CC cc
 +-- necessary JJ conj
 |   +-- amount NN nsubj
 |   |   +-- some DT det
 |   |   +-- of IN prep
 |   |       +-- retraction NN pobj
 |   |           +-- constraint NN amod
 |   +-- is VBZ cop
 |   +-- restore VB xcomp
 |       +-- to TO aux
 |       +-- feasibility NN dobj
 +-- . . punct

21
Input: 4.2 Maintaining High Quality Schedules The scheduler consists of two basic components
Parse:
Schedules NNPS ROOT
 +-- 4.2 LS num
 +-- Maintaining NNP amod
 +-- Quality NNP nn
 |   +-- High NNP nn
 +-- consists VBZ rcmod
     +-- scheduler NN nsubj
     |   +-- The DT det
     +-- of IN prep
         +-- components NNS pobj
             +-- two CD num
             +-- basic JJ amod

22
Input: The quality propagator analyzes the activity hierarchy and collects a set of methods that -LRB- if scheduled -RRB- would maximize the quality of the agent '' s local problem .
Parse:
analyzes VBZ ROOT
 +-- propagator NN nsubj
 |   +-- The DT det
 |   +-- quality NN nn
 +-- hierarchy NN dobj
 |   +-- the DT det
 |   +-- activity NN nn
 +-- and CC cc
 +-- collects VBZ conj
 |   +-- set NN dobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- methods NNS pobj
 |               +-- maximize VB rcmod
 |                   +-- that WDT nsubj
 |                   +-- scheduled VBN parataxis
 |                   |   +-- -LRB- -LRB- punct
 |                   |   +-- if IN mark
 |                   |   +-- -RRB- -RRB- punct
 |                   +-- would MD aux
 |                   +-- quality NN dobj
 |                       +-- the DT det
 |                       +-- of IN prep
 |                           +-- problem NN pobj
 |                               +-- agent NN poss
 |                               |   +-- the DT det
 |                               |   +-- '' '' punct
 |                               |   +-- s POS possessive
 |                               +-- local JJ amod
 +-- . . punct

23
Input: The methods are collected without regard for resource contention ; in essence , the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once .
Parse:
collected VBN ROOT
 +-- methods NNS nsubjpass
 |   +-- The DT det
 +-- are VBP auxpass
 +-- without IN prep
 |   +-- regard NN pobj
 |       +-- for IN prep
 |           +-- contention NN pobj
 |               +-- resource NN nn
 +-- ; : punct
 +-- solves VBZ parataxis
 |   +-- in IN prep
 |   |   +-- essence NN pobj
 |   +-- , , punct
 |   +-- propagator NN nsubj
 |   |   +-- the DT det
 |   |   +-- quality NN amod
 |   +-- optimally RB advmod
 |   +-- problem NN dobj
 |       +-- a DT det
 |       +-- relaxed JJ amod
 |       +-- capable JJ rcmod
 |           +-- where WRB advmod
 |           +-- agents NNS nsubj
 |           +-- are VBP cop
 |           +-- of IN prep
 |               +-- performing VBG pcomp
 |                   +-- number NN dobj
 |                   |   +-- an DT det
 |                   |   +-- infinite JJ amod
 |                   |   +-- of IN prep
 |                   |       +-- activities NNS pobj
 |                   +-- once RB advmod
 |                       +-- at IN advmod
 +-- . . punct

24
Input: The allocator selects methods from this list and attempts to install them in the agent '' s schedule .
Parse:
selects VBZ ROOT
 +-- allocator NN nsubj
 |   +-- The DT det
 +-- methods NNS dobj
 |   +-- from IN prep
 |       +-- list NN pobj
 |           +-- this DT det
 |           +-- and CC cc
 |           +-- attempts NNS conj
 +-- install VB xcomp
 |   +-- to TO aux
 |   +-- them PRP dobj
 |   +-- in IN prep
 |       +-- schedule NN pobj
 |           +-- agent NN poss
 |               +-- the DT det
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- . . punct

25
Input: Failure to do so reinvokes the quality propagator with the problematic activity excluded .
Parse:
reinvokes VBZ ROOT
 +-- Failure NN nsubj
 |   +-- do VB infmod
 |       +-- to TO aux
 |       +-- so RB advmod
 +-- propagator NN dobj
 |   +-- the DT det
 |   +-- quality NN nn
 +-- with IN prep
 |   +-- activity NN pobj
 |       +-- the DT det
 |       +-- problematic JJ amod
 |       +-- excluded VBN partmod
 +-- . . punct

26
Input: The Quality Propagator The quality propagator performs the following actions on the C TAEMS task structure
Parse:
performs VBZ ROOT
 +-- Propagator NNP nsubj
 |   +-- The DT det
 |   +-- Quality NNP nn
 |   +-- propagator NN dep
 |       +-- The DT det
 |       +-- quality NN nn
 +-- actions NNS dobj
     +-- the DT det
     +-- following VBG amod
     +-- on IN prep
         +-- structure NN pobj
             +-- the DT det
             +-- TAEMS NNP nn
             |   +-- C NN nn
             +-- task NN nn

27
Input: The quality qual -LRB- t -RRB- of a task t is computed by applying its qaf to the assessed quality of its children .
Parse:
computed VBN ROOT
 +-- qual NN nsubjpass
 |   +-- The DT det
 |   +-- quality NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- t NN dep
 |   +-- -RRB- -RRB- punct
 |   +-- of IN prep
 |       +-- t NN pobj
 |           +-- a DT det
 |           +-- task NN nn
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- applying VBG pcomp
 |       +-- qaf NN dobj
 |       |   +-- its PRP$ poss
 |       +-- to IN prep
 |           +-- quality NN pobj
 |               +-- the DT det
 |               +-- assessed JJ amod
 |               +-- of IN prep
 |                   +-- children NNS pobj
 |                       +-- its PRP$ poss
 +-- . . punct

28
Input: ? Generates a list of contributors for each task
Parse:
Generates VBZ ROOT
 +-- ? , punct
 +-- list NN dobj
     +-- a DT det
     +-- of IN prep
         +-- contributors NNS pobj
             +-- for IN prep
                 +-- task NN pobj
                     +-- each DT det

29
Input: ? Generates a list of activators for each task
Parse:
Generates VBZ ROOT
 +-- ? , punct
 +-- list NN dobj
     +-- a DT det
     +-- of IN prep
         +-- activators NNS pobj
             +-- for IN prep
                 +-- task NN pobj
                     +-- each DT det

30
Input: Methods in the activators list are chosen to minimize demands on the agent '' s timeline without regard to quality .
Parse:
chosen VBN ROOT
 +-- Methods NNS nsubjpass
 |   +-- in IN prep
 |       +-- list NN pobj
 |           +-- the DT det
 |           +-- activators NNS nn
 +-- are VBP auxpass
 +-- minimize VB xcomp
 |   +-- to TO aux
 |   +-- demands NNS dobj
 |   |   +-- on IN prep
 |   |       +-- timeline NN pobj
 |   |           +-- agent NN poss
 |   |               +-- the DT det
 |   |               +-- '' '' punct
 |   |               +-- s POS possessive
 |   +-- without IN prep
 |       +-- regard NN pobj
 |           +-- to IN prep
 |               +-- quality NN pobj
 +-- . . punct

31
Input: The first time the quality propagator is invoked , the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined .
Parse:
calculated VBN ROOT
 +-- time NN nsubj
 |   +-- The DT det
 |   +-- first JJ amod
 |   +-- invoked VBN rcmod
 |       +-- propagator NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- quality NN nn
 |       +-- is VBZ auxpass
 +-- , , punct
 +-- qualities NNS nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- tasks NNS pobj
 |           +-- all DT det
 |           +-- and CC cc
 |           +-- methods NNS conj
 +-- are VBP auxpass
 +-- and CC cc
 +-- determined VBN conj
 |   +-- lists NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- initial JJ amod
 |   |   +-- of IN prep
 |   |       +-- contributors NNS pobj
 |   |           +-- and CC cc
 |   |           +-- activators NNS conj
 |   +-- are VBP auxpass
 +-- . . punct

32
Input: Subsequent calls to the propagator occur as the allocator installs methods on the agent '' s timeline
Parse:
occur VB ROOT
 +-- calls VBZ nsubj
 |   +-- Subsequent JJ amod
 |   +-- to IN prep
 |       +-- propagator NN pobj
 |           +-- the DT det
 +-- installs VBZ advcl
     +-- as IN mark
     +-- allocator NN nsubj
     |   +-- the DT det
     +-- methods NNS dobj
     +-- on IN prep
         +-- timeline NN pobj
             +-- agent NN poss
                 +-- the DT det
                 +-- '' '' punct
                 +-- s POS possessive

33
Input: The Activity Allocator The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agent '' s timeline .
Parse:
seeks VBZ ROOT
 +-- allocator NN nsubj
 |   +-- The DT det
 |   +-- activity NN nn
 |       +-- Allocator NNP nn
 |       |   +-- Activity NNP nn
 |       +-- The DT det
 +-- install VB xcomp
 |   +-- to TO aux
 |   +-- contributors NNS dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- taskgroup NN pobj
 |   |           +-- the DT det
 |   |           +-- identified VBN partmod
 |   |               +-- by IN prep
 |   |                   +-- propagator NN pobj
 |   |                       +-- the DT det
 |   |                       +-- quality NN amod
 |   +-- onto IN prep
 |       +-- timeline NN pobj
 |           +-- agent NN poss
 |               +-- the DT det
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- . . punct

34
Input: Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline .
Parse:
unscheduled JJ ROOT
 +-- methods NNS nsubj
 |   +-- Any DT det
 |   +-- scheduled VBN amod
 |   |   +-- currently RB advmod
 |   +-- appear VB rcmod
 |       +-- that WDT nsubj
 |       +-- do VBP aux
 |       +-- not RB neg
 |       +-- in IN prep
 |           +-- list NN pobj
 |               +-- the DT det
 |               +-- contributors NNS nn
 +-- are VBP cop
 +-- first RB advmod
 +-- and CC cc
 +-- removed VBN conj
 |   +-- from IN prep
 |       +-- timeline NN pobj
 |           +-- the DT det
 +-- . . punct

35
Input: The contributors are then preprocessed using a quality centric heuristic to create an agenda sorted in decreasing quality order .
Parse:
preprocessed VBN ROOT
 +-- contributors NNS nsubj
 |   +-- The DT det
 +-- are VBP cop
 +-- then RB advmod
 +-- using VBG xcomp
 |   +-- heuristic NN dobj
 |   |   +-- a DT det
 |   |   +-- quality NN amod
 |   |   +-- centric NN amod
 |   +-- create VB xcomp
 |       +-- to TO aux
 |       +-- agenda NN dobj
 |           +-- an DT det
 |           +-- sorted VBN partmod
 |               +-- in IN prep
 |                   +-- decreasing VBG pcomp
 |                       +-- order NN dobj
 |                           +-- quality NN nn
 +-- . . punct

36
Input: In addition , methods associated with a and task -LRB- i.e. , min , sumand -RRB- are grouped consecutively within the agenda .
Parse:
grouped VBN ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- methods NNS nsubjpass
 |   +-- associated VBN partmod
 |       +-- with IN prep
 |           +-- a DT pobj
 |               +-- and CC cc
 |               +-- task NN conj
 |               +-- -LRB- -LRB- punct
 |               +-- sumand NN dep
 |               |   +-- i.e. FW advmod
 |               |   +-- , , punct
 |               |   +-- min NNP dep
 |               +-- -RRB- -RRB- punct
 +-- are VBP auxpass
 +-- consecutively RB advmod
 +-- within IN prep
 |   +-- agenda NN pobj
 |       +-- the DT det
 +-- . . punct

37
Input: Since an and task accumulates quality only if all its children are scheduled , this biases the scheduling process towards failing early -LRB- and regenerating contributors -RRB- when the methods chosen for the and can not together be allocated .
Parse:
biases VBZ ROOT
 +-- Since IN prep
 |   +-- quality NN pobj
 |       +-- an DT nn
 |       |   +-- and CC cc
 |       |   +-- task NN conj
 |       +-- accumulates VBZ nn
 |       +-- scheduled VBN rcmod
 |           +-- only RB advmod
 |           +-- if IN mark
 |           +-- children NNS nsubjpass
 |           |   +-- all DT predet
 |           |   +-- its PRP$ poss
 |           +-- are VBP auxpass
 +-- , , punct
 +-- this DT nsubj
 +-- process NN dobj
 |   +-- the DT det
 |   +-- scheduling NN nn
 +-- towards IN prep
 |   +-- failing VBG pcomp
 |       +-- early RB advmod
 |       +-- -LRB- -LRB- punct
 |       +-- and CC cc
 |       +-- regenerating VBG conj
 |       |   +-- contributors NNS dobj
 |       +-- -RRB- -RRB- punct
 |       +-- chosen VBN advcl
 |           +-- when WRB advmod
 |           +-- methods NNS nsubj
 |           |   +-- the DT det
 |           +-- for IN prep
 |           |   +-- the DT pobj
 |           +-- and CC cc
 |           +-- allocated VBN conj
 |               +-- can MD aux
 |               +-- not RB neg
 |               +-- together RB advmod
 |               +-- be VB auxpass
 +-- . . punct

38
Input: The allocator iteratively pops the first method mnew from the agenda and attempts to install it .
Parse:
pops VBZ ROOT
 +-- allocator NN nsubj
 |   +-- The DT det
 +-- iteratively RB advmod
 +-- mnew NN dobj
 |   +-- the DT det
 |   +-- method NN nn
 |       +-- first JJ amod
 +-- from IN prep
 |   +-- agenda NN pobj
 |       +-- the DT det
 |       +-- and CC cc
 |       +-- attempts NNS conj
 |           +-- install VB infmod
 |               +-- to TO aux
 |               +-- it PRP dobj
 +-- . . punct

39
Input: This entails first checking that all activities that enable mnew have been scheduled , while attempting to install any enabler that is not .
Parse:
entails VBZ ROOT
 +-- This DT nsubj
 +-- checking VBG xcomp
 |   +-- first RB advmod
 |   +-- scheduled VBN ccomp
 |       +-- that IN mark
 |       +-- activities NNS nsubjpass
 |       |   +-- all DT det
 |       |   +-- enable VBP rcmod
 |       |       +-- that WDT nsubj
 |       |       +-- mnew NNS dobj
 |       +-- have VBP aux
 |       +-- been VBN auxpass
 |       +-- , , punct
 |       +-- attempting VBG advcl
 |           +-- while IN mark
 |           +-- install VB xcomp
 |               +-- to TO aux
 |               +-- enabler NN dobj
 |                   +-- any DT det
 |                   +-- is VBZ rcmod
 |                       +-- that WDT nsubj
 |                       +-- not RB neg
 +-- . . punct

40
Input: If any of the enabler activities fails to install , the allocation pass fails .
Parse:
fails VBZ ROOT
 +-- fails VBZ advcl
 |   +-- If IN mark
 |   +-- any DT nsubj
 |   |   +-- of IN prep
 |   |       +-- activities NNS pobj
 |   |           +-- the DT det
 |   |           +-- enabler NN amod
 |   +-- install VB xcomp
 |       +-- to TO aux
 +-- , , punct
 +-- pass NN nsubj
 |   +-- the DT det
 |   +-- allocation NN nn
 +-- . . punct

41
Input: When successful , the enables constraints linking the enabler activities to mnew are activated .
Parse:
activated VBN ROOT
 +-- successful JJ advcl
 |   +-- When WRB advmod
 +-- , , punct
 +-- constraints NNS nsubjpass
 |   +-- the DT det
 |   +-- enables NNS nn
 |   +-- linking VBG partmod
 |       +-- activities NNS dobj
 |           +-- the DT det
 |           +-- enabler NN amod
 |           +-- to IN prep
 |               +-- mnew NNS pobj
 +-- are VBP auxpass
 +-- . . punct

42
Input: The STN rejects an infeasible enabler constraint by returning a conflict .
Parse:
rejects VBZ ROOT
 +-- STN NNP nsubj
 |   +-- The DT det
 +-- constraint NN dobj
 |   +-- an DT det
 |   +-- infeasible JJ amod
 |   +-- enabler NN amod
 +-- by IN prep
 |   +-- returning VBG pcomp
 |       +-- conflict NN dobj
 |           +-- a DT det
 +-- . . punct

43
Input: In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure .
Parse:
uninstalled VBN ROOT
 +-- In IN prep
 |   +-- event NN pobj
 |       +-- this DT det
 +-- activities NNS nsubjpass
 |   +-- any DT det
 |   +-- enabler NN amod
 |   +-- scheduled VBN rcmod
 |       +-- it PRP nsubj
 |       +-- has VBZ aux
 +-- are VBP auxpass
 +-- and CC cc
 +-- returns NNS conj
 |   +-- allocator NN nsubj
 |   |   +-- the DT det
 |   +-- failure NN dobj
 +-- . . punct

44
Input: Once scheduling of enablers is ensured , a feasible slot on the agent '' s timeline within mnew '' s time window is sought and the allocator attempts to insert mnew between two currently scheduled methods .
Parse:
sought VBN ROOT
 +-- ensured VBN advcl
 |   +-- Once IN mark
 |   +-- scheduling NN nsubjpass
 |   |   +-- of IN prep
 |   |       +-- enablers NNS pobj
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- window NN nsubjpass
 |   +-- slot NN poss
 |   |   +-- a DT det
 |   |   +-- feasible JJ amod
 |   |   +-- on IN prep
 |   |   |   +-- timeline NN pobj
 |   |   |       +-- agent NN poss
 |   |   |       |   +-- the DT det
 |   |   |       |   +-- '' '' punct
 |   |   |       |   +-- s POS possessive
 |   |   |       +-- within IN prep
 |   |   |           +-- mnew NN pobj
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- time NN nn
 +-- is VBZ auxpass
 +-- and CC cc
 +-- attempts NNS conj
 |   +-- the DT det
 |   +-- allocator NN nn
 |   +-- insert VB infmod
 |       +-- to TO aux
 |       +-- mnew NN dobj
 |           +-- between IN prep
 |               +-- methods NNS pobj
 |                   +-- two CD num
 |                   +-- scheduled VBN amod
 |                       +-- currently RB advmod
 +-- . . punct

45
Input: At the STN level , mnew '' s insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods .
Parse:
breaks VBZ ROOT
 +-- At IN prep
 |   +-- level NN pobj
 |       +-- the DT det
 |       +-- STN NNP nn
 +-- , , punct
 +-- insertion NN nsubj
 |   +-- mnew FW poss
 |       +-- '' '' punct
 |       +-- s POS possessive
 +-- constraint NN dobj
 |   +-- the DT det
 |   +-- sequencing VBG nn
 |   +-- between IN prep
 |       +-- methods NNS pobj
 |           +-- the DT det
 |           +-- two CD num
 |           +-- extant JJ amod
 |           +-- timeline NN nn
 +-- and CC cc
 +-- attempts NNS conj
 |   +-- insert VB infmod
 |       +-- to TO aux
 |       +-- constraints NNS dobj
 |           +-- two CD num
 |           +-- new JJ amod
 |           +-- sequencing NN nn
 |           +-- chain NN rcmod
 |               +-- that WDT nsubj
 |               +-- mnew NNP dobj
 |               +-- to IN prep
 |                   +-- methods NNS pobj
 |                       +-- these DT det
 +-- . . punct

46
Input: If these insertions succeed , the routine returns success , otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. .
Parse:
relinked VBN ROOT
 +-- succeed VBP advcl
 |   +-- If IN mark
 |   +-- insertions NNS nsubj
 |       +-- these DT det
 +-- , , punct
 +-- success NN nsubj
 |   +-- the DT det
 |   +-- returns NNS nn
 |       +-- routine JJ amod
 +-- otherwise RB advmod
 +-- methods NNS nsubj
 |   +-- the DT det
 |   +-- two CD num
 |   +-- extant JJ amod
 |   +-- timeline NN nn
 +-- are VBP cop
 +-- and CC cc
 +-- attempts NNS conj
 |   +-- allocation NN nn
 |   +-- slot NN dep
 |       +-- the DT det
 |       +-- next JJ amod
 |       +-- possible JJ amod
 |       +-- for IN prep
 |           +-- insertion. NN pobj
 |               +-- mnew NN nn
 +-- . . punct
