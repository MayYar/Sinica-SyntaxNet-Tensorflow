
1
Input: As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program .
Parse:
is VBZ ROOT
 +-- indicated VBN csubj
 |   +-- As IN mark
 |   +-- above IN prep
 |       +-- problem NN pobj
 |           +-- the DT det
 |           +-- distributed JJ amod
 |           +-- management NN nn
 |           |   +-- schedule NN nn
 |           +-- address VBP rcmod
 |               +-- that WDT dobj
 |               +-- we PRP nsubj
 |               +-- in IN prep
 |                   +-- paper NN pobj
 |                       +-- this DT det
 +-- put VBN ccomp
 |   +-- that WDT nsubj
 |   +-- forth RP prt
 |   +-- by IN prep
 |       +-- program NN pobj
 |           +-- the DT det
 |           +-- Coordinators NNP nn
 |               +-- DARPA NNP nn
 +-- . . punct

2
Input: The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment .
Parse:
concerned VBN ROOT
 +-- problem NN nsubjpass
 |   +-- The DT det
 |   +-- Coordinators NNPS nn
 +-- is VBZ auxpass
 +-- generally RB advmod
 +-- with IN prep
 |   +-- execution NN pobj
 |       +-- the DT det
 |       +-- collaborative JJ amod
 |       +-- of IN prep
 |       |   +-- mission NN pobj
 |       |       +-- a DT det
 |       |       +-- joint JJ amod
 |       +-- by IN prep
 |       |   +-- team NN pobj
 |       |       +-- a DT det
 |       |       +-- of IN prep
 |       |           +-- agents NNS pobj
 |       +-- in IN prep
 |           +-- environment NN pobj
 |               +-- a DT det
 |               +-- dynamic JJ amod
 |                   +-- highly RB advmod
 +-- . . punct

3
Input: A mission is formulated as a network of tasks , which are distributed among the agents by the MASS simulator such that no agent has a complete , objective view of the whole problem .
Parse:
formulated VBN ROOT
 +-- mission NN nsubjpass
 |   +-- A DT det
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- network NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- tasks NNS pobj
 |               +-- , , punct
 |               +-- distributed VBN rcmod
 |                   +-- which WDT nsubjpass
 |                   +-- are VBP auxpass
 |                   +-- among IN prep
 |                   |   +-- agents NNS pobj
 |                   |       +-- the DT det
 |                   +-- by IN prep
 |                       +-- simulator NN pobj
 |                           +-- the DT det
 |                           +-- MASS NNP nn
 |                           +-- has VBZ dep
 |                               +-- such JJ dep
 |                               +-- that IN mark
 |                               +-- agent NN nsubj
 |                               |   +-- no DT det
 |                               +-- view NN dobj
 |                                   +-- a DT det
 |                                   +-- complete JJ amod
 |                                   +-- , , punct
 |                                   +-- objective JJ amod
 |                                   +-- of IN prep
 |                                       +-- problem NN pobj
 |                                           +-- the DT det
 |                                           +-- whole JJ amod
 +-- . . punct

4
Input: Instead , each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks .
Parse:
receives VBZ ROOT
 +-- Instead RB advmod
 +-- , , punct
 +-- agent NN nsubj
 |   +-- each DT det
 +-- view NN dobj
 |   +-- only RB advmod
 |   +-- a DT det
 |   +-- subjective JJ amod
 |   +-- containing VBG partmod
 |       +-- portion NN dobj
 |           +-- just RB advmod
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- network NN pobj
 |           |       +-- the DT det
 |           |       +-- task NN nn
 |           +-- relates VBZ rcmod
 |               +-- that WDT nsubj
 |               +-- to TO prep
 |               |   +-- tasks NNS pobj
 |               |       +-- ground NN nn
 |               +-- responsible JJ ccomp
 |                   +-- that IN mark
 |                   +-- it PRP nsubj
 |                   +-- is VBZ cop
 |                   +-- for IN prep
 |                       +-- and CC cc
 |                       +-- tasks NNS pobj
 |                           +-- any DT det
 |                           +-- remote JJ amod
 |                           +-- have VBP rcmod
 |                               +-- that WDT nsubj
 |                               +-- interdependencies NNS dobj
 |                                   +-- with IN prep
 |                                       +-- tasks NNS pobj
 |                                           +-- these DT det
 |                                           +-- local JJ amod
 +-- . . punct

5
Input: A pre computed initial schedule is also distributed to the agents , and each agent '' s schedule indicates which of its local tasks should be executed and when .
Parse:
distributed VBN ROOT
 +-- schedule NN nsubjpass
 |   +-- A DT det
 |   +-- computed VBN amod
 |   |   +-- pre RB advmod
 |   +-- initial JJ amod
 +-- is VBZ auxpass
 +-- also RB advmod
 +-- to IN prep
 |   +-- agents NNS pobj
 |       +-- the DT det
 +-- , , punct
 +-- and CC cc
 +-- indicates VBZ conj
 |   +-- schedule NN nsubj
 |   |   +-- agent NN poss
 |   |       +-- each DT det
 |   |       +-- '' '' punct
 |   |       +-- s POS possessive
 |   +-- executed VBN ccomp
 |       +-- which WDT nsubjpass
 |       |   +-- of IN prep
 |       |       +-- tasks NNS pobj
 |       |           +-- its PRP$ poss
 |       |           +-- local JJ amod
 |       +-- should MD aux
 |       +-- be VB auxpass
 |       +-- and CC cc
 |       +-- when WRB conj
 +-- . . punct

6
Input: Each task has an associated quality value which accrues if it is successfully executed within its constraints , and the overall goal is to maximize the quality obtained during execution .
Parse:
has VBZ ROOT
 +-- task NN nsubj
 |   +-- Each DT det
 +-- value NN dobj
 |   +-- an DT det
 |   +-- associated VBN amod
 |   +-- quality NN nn
 |   +-- accrues VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- executed VBN advcl
 |           +-- if IN mark
 |           +-- it PRP nsubjpass
 |           +-- is VBZ auxpass
 |           +-- successfully RB advmod
 |           +-- within IN prep
 |           |   +-- constraints NNS pobj
 |           |       +-- its PRP$ poss
 |           +-- , , punct
 |           +-- and CC cc
 |           +-- is VBZ conj
 |               +-- goal NN nsubj
 |               |   +-- the DT det
 |               |   +-- overall JJ amod
 |               +-- maximize VB xcomp
 |                   +-- to TO aux
 |                   +-- quality NN dobj
 |                       +-- the DT det
 |                       +-- obtained VBN partmod
 |                           +-- during IN prep
 |                               +-- execution NN pobj
 +-- . . punct

7
Input: Figure 2
Parse:
Figure NN ROOT
 +-- 2 CD num

8
Input: As execution proceeds , agents must react to unexpected results -LRB- e.g. , task delays , failures -RRB- and changes to the mission -LRB- e.g. , new tasks , deadline changes -RRB- generated by the simulator , recognize when scheduled tasks are no longer feasible or desirable , and coordinate with each other to take corrective , quality maximizing rescheduling actions that keep execution of the overall mission moving forward .
Parse:
react VB ROOT
 +-- proceeds NNS advcl
 |   +-- As IN mark
 |   +-- execution NN nsubj
 +-- , , punct
 +-- agents NNS nsubj
 +-- must MD aux
 +-- to IN prep
 |   +-- results NNS pobj
 |       +-- unexpected JJ amod
 +-- e.g. NN parataxis
 |   +-- -LRB- -LRB- punct
 |   +-- , , punct
 |   +-- delays NNS conj
 |   |   +-- task NN nn
 |   +-- failures NNS conj
 |   +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- changes NNS conj
 |   +-- to IN prep
 |   |   +-- mission NN pobj
 |   |       +-- the DT det
 |   +-- tasks NNS appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- e.g. NN amod
 |   |   +-- , , punct
 |   |   +-- new JJ amod
 |   |   +-- changes NNS appos
 |   |   |   +-- deadline NN nn
 |   |   +-- -RRB- -RRB- punct
 |   +-- generated VBN partmod
 |   |   +-- by IN prep
 |   |       +-- simulator NN pobj
 |   |           +-- the DT det
 |   +-- , , punct
 |   +-- recognize VB conj
 |   |   +-- feasible JJ advcl
 |   |       +-- when WRB advmod
 |   |       +-- tasks NNS nsubj
 |   |       |   +-- scheduled VBN amod
 |   |       +-- are VBP cop
 |   |       +-- longer RBR advmod
 |   |       |   +-- no RB advmod
 |   |       +-- or CC cc
 |   |       +-- desirable JJ conj
 |   |       +-- , , punct
 |   |       +-- and CC cc
 |   |       +-- coordinate VB conj
 |   |           +-- with IN prep
 |   |           |   +-- other JJ pobj
 |   |           |       +-- each DT det
 |   |           +-- take VB xcomp
 |   |               +-- to TO aux
 |   |               +-- corrective JJ dobj
 |   +-- quality NN conj
 |       +-- maximizing VBG partmod
 |           +-- actions NNS dobj
 |               +-- rescheduling VBG amod
 |               +-- keep VBP rcmod
 |                   +-- that WDT nsubj
 |                   +-- execution NN dobj
 |                       +-- of IN prep
 |                           +-- mission NN pobj
 |                               +-- the DT det
 |                               +-- overall JJ amod
 |                               +-- moving VBG partmod
 |                                   +-- forward RB advmod
 +-- . . punct

9
Input: Problems are formally specified using a version of the TAEMS language -LRB- Task Analysis , Environment Modeling and Simulation -RRB- -LRB- 4 -RRB- called C TAEMS -LRB- 1 -RRB- .
Parse:
specified VBN ROOT
 +-- Problems NNS nsubjpass
 +-- are VBP auxpass
 +-- formally RB advmod
 +-- using VBG xcomp
 |   +-- version NN dobj
 |       +-- a DT det
 |       +-- of IN prep
 |       |   +-- language NN pobj
 |       |       +-- the DT det
 |       |       +-- TAEMS FW nn
 |       |       +-- -LRB- -LRB- punct
 |       |       +-- Analysis NNP dep
 |       |       |   +-- Task NNP nn
 |       |       |   +-- , , punct
 |       |       |   +-- Modeling NNP conj
 |       |       |   |   +-- Environment NNP nn
 |       |       |   +-- and CC cc
 |       |       |   +-- Simulation NNP conj
 |       |       +-- -RRB- -RRB- punct
 |       |       +-- 4 CD dep
 |       +-- called VBN partmod
 |       |   +-- TAEMS NNP dep
 |       |       +-- C NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- 1 CD dep
 |       +-- -RRB- -RRB- punct
 +-- . . punct

10
Input: Within C TAEMS , tasks are represented hierarchically , as shown in the example in Figure 1 .
Parse:
represented VBN ROOT
 +-- Within IN prep
 |   +-- TAEMS NNP pobj
 |       +-- C NNP nn
 +-- , , punct
 +-- tasks NNS nsubjpass
 +-- are VBP auxpass
 +-- hierarchically RB advmod
 +-- shown VBN advcl
 |   +-- as IN mark
 |   +-- in IN prep
 |       +-- Figure NNP pobj
 |           +-- 1 CD num
 +-- . . punct

11
Input: At the highest , most abstract level , the root of the tree is a special task called the task group .
Parse:
task NN ROOT
 +-- At IN prep
 |   +-- level NN pobj
 |       +-- the DT det
 |       +-- highest JJS amod
 |       +-- , , punct
 |       +-- abstract JJ amod
 |           +-- most RBS advmod
 +-- , , punct
 +-- root NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- tree NN pobj
 |           +-- the DT det
 +-- is VBZ cop
 +-- a DT det
 +-- special JJ amod
 +-- called VBN partmod
 |   +-- group NN dep
 |       +-- the DT det
 |       +-- task NN nn
 +-- . . punct

12
Input: On successive levels , tasks constitute aggregate activities , which can be decomposed into sets of subtasks and or primitive activities , termed methods .
Parse:
constitute VBP ROOT
 +-- On IN prep
 |   +-- levels NNS pobj
 |       +-- successive JJ amod
 +-- , , punct
 +-- tasks NNS nsubj
 +-- activities NNS dobj
 |   +-- aggregate JJ amod
 |   +-- , , punct
 |   +-- decomposed VBN rcmod
 |   |   +-- which WDT nsubjpass
 |   |   +-- can MD aux
 |   |   +-- be VB auxpass
 |   |   +-- into IN prep
 |   |       +-- sets NNS pobj
 |   |           +-- of IN prep
 |   |               +-- subtasks NNS pobj
 |   |                   +-- or CC cc
 |   |                   |   +-- and CC cc
 |   |                   +-- activities NNS conj
 |   |                       +-- primitive JJ amod
 |   +-- methods NNS appos
 |       +-- termed VBD amod
 +-- . . punct

13
Input: Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world .
Parse:
appear VBP ROOT
 +-- Methods NNS nsubj
 +-- at IN prep
 |   +-- level NN pobj
 |       +-- the DT det
 |       +-- leaf NN nn
 |       +-- of IN prep
 |       |   +-- structures NNS pobj
 |       |       +-- TAEMS NNP nn
 |       |       |   +-- C NNP nn
 |       |       +-- task NN nn
 |       +-- and CC cc
 |       +-- those DT conj
 |           +-- are VBP cop
 |           +-- executable JJ rcmod
 |               +-- that WDT nsubj
 |               +-- are VBP cop
 |               +-- directly RB advmod
 |               +-- in IN prep
 |                   +-- world NN pobj
 |                       +-- the DT det
 +-- . . punct

14
Input: Each declared method m can only be executed by a specified agent -LRB- denoted by ag
Parse:
declared VBD ROOT
 +-- Each DT nsubj
 +-- executed VBN ccomp
     +-- m NNP nsubjpass
     |   +-- method NN nn
     +-- can MD aux
     +-- only RB advmod
     +-- be VB auxpass
     +-- by IN prep
         +-- agent NN pobj
             +-- a DT det
             +-- specified VBN amod
             +-- -LRB- -LRB- punct
             +-- denoted VBN dep
                 +-- by IN prep
                     +-- ag NN pobj

15
Input: agents are unit capacity resources -RRB- .
Parse:
resources NNS ROOT
 +-- agents NNS nsubj
 +-- are VBP cop
 +-- unit NN nn
 +-- capacity NN nn
 +-- -RRB- -RRB- punct
 +-- . . punct

16
Input: Method durations and quality are typically specified as discrete probability distributions , and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution , in which case the reported quality is zero .
Parse:
specified VBN ROOT
 +-- durations NNS nsubjpass
 |   +-- Method NNP nn
 |   +-- and CC cc
 |   +-- quality NN conj
 +-- are VBP auxpass
 +-- typically RB advmod
 +-- as IN prep
 |   +-- distributions NNS pobj
 |       +-- discrete JJ amod
 |       +-- probability NN nn
 +-- , , punct
 +-- and CC cc
 +-- known VBN conj
 |   +-- hence RB advmod
 |   +-- with IN prep
 |   |   +-- certainty NN pobj
 |   +-- executed.1 VBN advcl
 |       +-- only RB advmod
 |       +-- after IN mark
 |       +-- they PRP nsubj
 |       +-- have VBP aux
 |       +-- been VBN cop
 |       +-- possible JJ ccomp
 |           +-- It PRP nsubj
 |           +-- is VBZ cop
 |           +-- also RB advmod
 |           +-- fail VB advcl
 |               +-- for IN mark
 |               +-- method NN nsubj
 |               |   +-- a DT det
 |               +-- to TO aux
 |               +-- unexpectedly RB advmod
 |               +-- in IN prep
 |               |   +-- execution NN pobj
 |               +-- , , punct
 |               +-- zero CD parataxis
 |                   +-- in IN prep
 |                   |   +-- case NN pobj
 |                   |       +-- which WDT det
 |                   +-- quality NN nsubj
 |                   |   +-- the DT det
 |                   |   +-- reported VBN amod
 |                   +-- is VBZ cop
 +-- . . punct

17
Input: For each task , a quality accumulation function qaf is defined , which specifies when and how a task accumulates quality as its subtasks -LRB- methods -RRB- are executed .
Parse:
defined VBN ROOT
 +-- For IN prep
 |   +-- task NN pobj
 |       +-- each DT det
 +-- , , punct
 +-- function NN nsubjpass
 |   +-- a DT det
 |   +-- quality NN nn
 |   +-- accumulation NN nn
 +-- qaf , punct
 +-- is VBZ auxpass
 +-- specifies VBZ ccomp
 |   +-- which WDT nsubj
 |   +-- accumulates VBZ advcl
 |       +-- when WRB advmod
 |       |   +-- and CC cc
 |       |   +-- how WRB dep
 |       +-- task NN nsubj
 |       |   +-- a DT det
 |       +-- quality NN dobj
 |       +-- executed VBN advcl
 |           +-- as IN mark
 |           +-- subtasks NNS nsubjpass
 |           |   +-- its PRP$ poss
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- methods NNS dep
 |           |   +-- -RRB- -RRB- punct
 |           +-- are VBP auxpass
 +-- . . punct

18
Input: For example , a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality .
Parse:
accrue VB ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- task NN nsubj
 |   +-- a DT det
 |   +-- with IN prep
 |       +-- qaf NN pobj
 |           +-- a DT det
 |           +-- min NN nn
 +-- will MD aux
 +-- quality NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- child NN pobj
 |           +-- its PRP$ poss
 +-- with IN prep
 |   +-- quality NN pobj
 |       +-- lowest JJS amod
 +-- execute VBP advcl
 |   +-- if IN mark
 |   +-- children NNS nsubj
 |   |   +-- all PDT predet
 |   |   +-- its PRP$ poss
 |   +-- and CC cc
 |   +-- accumulate VB conj
 |       +-- quality NN dobj
 |           +-- positive JJ amod
 +-- . . punct

19
Input: Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality ; as their qaf names suggest , their respective values ultimately will be the total or maximum quality of all children that executed .
Parse:
acquire VB ROOT
 +-- Tasks NNS nsubj
 |   +-- with IN prep
 |       +-- qafs NNS pobj
 |           +-- sum NN nn
 |               +-- or CC cc
 |               +-- max NN conj
 +-- quality NN dobj
 +-- soon RB advmod
 |   +-- as RB advmod
 |   +-- executes VBZ ccomp
 |       +-- as IN mark
 |       +-- child NN nsubj
 |       |   +-- one CD num
 |       +-- with IN prep
 |           +-- quality NN pobj
 |               +-- positive JJ amod
 +-- ; : punct
 +-- quality NN parataxis
 |   +-- suggest VBP advcl
 |   |   +-- as IN mark
 |   |   +-- names NNS nsubj
 |   |       +-- their PRP$ poss
 |   |       +-- qaf NNP nn
 |   +-- , , punct
 |   +-- values NNS nsubj
 |   |   +-- their PRP$ poss
 |   |   +-- respective JJ amod
 |   +-- ultimately RB advmod
 |   +-- will MD aux
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- total JJ amod
 |   |   +-- or CC cc
 |   |   +-- maximum JJ conj
 |   +-- of IN prep
 |       +-- children NNS pobj
 |           +-- all DT det
 |           +-- executed VBD rcmod
 |               +-- that WDT nsubj
 +-- . . punct

20
Input: A sync sum task will accrue quality only for those children that commence execution concurrently with the first child that executes , while an exactly one task accrues quality only if precisely one of its children executes .
Parse:
accrue VB ROOT
 +-- task NN nsubj
 |   +-- A DT det
 |   +-- sum NN nn
 |       +-- sync NN amod
 +-- will MD aux
 +-- quality NN dobj
 +-- for IN prep
 |   +-- only RB advmod
 |   +-- children NNS pobj
 |       +-- those DT det
 |       +-- commence VBP rcmod
 |           +-- that WDT nsubj
 |           +-- execution NN dobj
 |               +-- concurrently RB advmod
 |               +-- with IN prep
 |                   +-- child NN pobj
 |                       +-- the DT det
 |                       +-- first JJ amod
 |                       +-- executes VBZ rcmod
 |                           +-- that WDT nsubj
 +-- , , punct
 +-- accrues VBZ advcl
 |   +-- while IN mark
 |   +-- task NN nsubj
 |   |   +-- an DT det
 |   |   +-- one CD num
 |   |       +-- exactly RB quantmod
 |   +-- quality NN dobj
 |   +-- executes VBZ advcl
 |       +-- only RB advmod
 |       +-- if IN mark
 |       +-- one CD nsubj
 |           +-- precisely RB quantmod
 |           +-- of IN prep
 |               +-- children NNS pobj
 |                   +-- its PRP$ poss
 +-- . . punct

21
Input: Inter dependencies between tasks methods in the problem are modeled via non local effects -LRB- nles -RRB- .
Parse:
modeled VBN ROOT
 +-- dependencies NNS nsubjpass
 |   +-- Inter NN nn
 |   +-- between IN prep
 |   |   +-- methods NNS pobj
 |   |       +-- tasks NNS nn
 |   +-- in IN prep
 |       +-- problem NN pobj
 |           +-- the DT det
 +-- are VBP auxpass
 +-- via IN prep
 |   +-- effects NNS pobj
 |       +-- local JJ amod
 |       |   +-- non FW advmod
 |       +-- -LRB- -LRB- punct
 |       +-- nles NNS dep
 |       +-- -RRB- -RRB- punct
 +-- . . punct

22
Input: Two types of nles can be specified
Parse:
specified VBN ROOT
 +-- types NNS nsubjpass
 |   +-- Two CD num
 |   +-- of IN prep
 |       +-- nles NNS pobj
 +-- can MD aux
 +-- be VB auxpass

23
Input: Hard nles express 1 For simplicity , Figures 1 and 2 show only fixed values for method quality and duration .
Parse:
express VBP ROOT
 +-- nles NNS nsubj
 |   +-- Hard NNP nn
 +-- show VBP dobj
 |   +-- 1 CD num
 |   |   +-- For IN prep
 |   |   |   +-- simplicity NN pobj
 |   |   +-- , , punct
 |   |   +-- Figures NNS conj
 |   |   |   +-- 1 CD num
 |   |   +-- and CC cc
 |   |   +-- 2 CD conj
 |   +-- values NNS dep
 |       +-- only RB advmod
 |       +-- fixed VBN amod
 |       +-- for IN prep
 |           +-- quality NN pobj
 |               +-- method NN nn
 |               +-- and CC cc
 |               +-- duration NN conj
 +-- . . punct

24
Input: The Sixth Intl .
Parse:
Intl NNP ROOT
 +-- The DT det
 +-- Sixth NNP nn
 +-- . . punct

25
Input: Joint Conf .
Parse:
Conf NNP ROOT
 +-- Joint NNP nn
 +-- . . punct

26
Input: on Autonomous Agents and Multi Agent Systems -LRB- AAMAS 07 -RRB- 485 causal preconditions
Parse:
on IN ROOT
 +-- Agents NNS pobj
     +-- Autonomous JJ amod
     +-- and CC cc
     +-- Systems NNPS conj
     |   +-- Multi NNP nn
     |   +-- Agent NNP nn
     |   +-- -LRB- -LRB- punct
     |   +-- 07 CD dep
     |   |   +-- AAMAS NNP nn
     |   +-- -RRB- -RRB- punct
     +-- preconditions NNS dep
         +-- 485 CD num
         +-- causal JJ amod

27
Input: Soft nles , which include facilitates and hinders , are not required constraints ; however , when they are in play , they amplify -LRB- or dampen -RRB- the quality and duration of the target task .
Parse:
required VBN ROOT
 +-- nles NNS nsubjpass
 |   +-- Soft NNP amod
 |   +-- , , punct
 |   +-- include VBP rcmod
 |       +-- which WDT nsubj
 |       +-- facilitates NNS dobj
 |           +-- and CC cc
 |           +-- hinders NNS conj
 +-- are VBP auxpass
 +-- not RB neg
 +-- constraints NNS dobj
 +-- ; : punct
 +-- amplify VBP parataxis
 |   +-- however RB advmod
 |   +-- , , punct
 |   +-- are VBP advcl
 |   |   +-- when WRB advmod
 |   |   +-- they PRP nsubj
 |   |   +-- in IN prep
 |   |       +-- play NN pobj
 |   +-- they PRP nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- or CC cc
 |   +-- dampen NNP conj
 |   |   +-- -RRB- -RRB- punct
 |   +-- quality NN dobj
 |       +-- the DT det
 |       +-- and CC cc
 |       +-- duration NN conj
 |       +-- of IN prep
 |           +-- task NN pobj
 |               +-- the DT det
 |               +-- target NN nn
 +-- . . punct

28
Input: Any given task or method a can also be constrained by an earliest start time and a deadline , specifying the window in which a can be feasibly executed .
Parse:
constrained VBN ROOT
 +-- task NN nsubjpass
 |   +-- Any DT det
 |   +-- given VBN amod
 |   +-- or CC cc
 |   +-- method VB conj
 |   +-- a DT dep
 +-- can MD aux
 +-- also RB advmod
 +-- be VB auxpass
 +-- by IN prep
 |   +-- time NN pobj
 |       +-- an DT det
 |       +-- earliest JJS amod
 |       +-- start NN amod
 |       +-- and CC cc
 |       +-- deadline NN conj
 |           +-- a DT det
 +-- , , punct
 +-- specifying VBG xcomp
 |   +-- window NN dobj
 |       +-- the DT det
 |       +-- executed VBN rcmod
 |           +-- in IN prep
 |           |   +-- which WDT pobj
 |           +-- a DT nsubjpass
 |           +-- can MD aux
 |           +-- be VB auxpass
 |           +-- feasibly RB advmod
 +-- . . punct

29
Input: a may also inherit these constraints from ancestor tasks at any higher level in the task structure , and its effective execution window will be defined by the tightest of these constraints .
Parse:
inherit VB ROOT
 +-- a DT nsubj
 +-- may MD aux
 +-- also RB advmod
 +-- constraints NNS dobj
 |   +-- these DT det
 +-- from IN prep
 |   +-- tasks NNS pobj
 |       +-- ancestor NN nn
 +-- at IN prep
 |   +-- level NN pobj
 |       +-- any DT det
 |       +-- higher JJR amod
 |       +-- in IN prep
 |           +-- structure NN pobj
 |               +-- the DT det
 |               +-- task NN nn
 +-- , , punct
 +-- and CC cc
 +-- defined VBN conj
 |   +-- window NN nsubjpass
 |   |   +-- its PRP$ poss
 |   |   +-- effective JJ amod
 |   |   +-- execution NN nn
 |   +-- will MD aux
 |   +-- be VB auxpass
 |   +-- by IN prep
 |       +-- tightest JJS pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- constraints NNS pobj
 |                   +-- these DT det
 +-- . . punct

30
Input: Figure 1 shows the complete objective view of a simple 2 agent problem .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 1 CD num
 +-- view NN dobj
 |   +-- the DT det
 |   +-- complete JJ amod
 |   +-- objective JJ amod
 |   +-- of IN prep
 |       +-- problem NN pobj
 |           +-- a DT det
 |           +-- simple JJ amod
 |           +-- agent NN nn
 |               +-- 2 CD num
 +-- . . punct

31
Input: Figure 2 shows the subjective view available to agent 2 for the same problem .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 2 CD num
 +-- view NN dobj
 |   +-- the DT det
 |   +-- subjective JJ amod
 |   +-- available JJ amod
 |   |   +-- to IN prep
 |   |       +-- agent NN pobj
 |   |           +-- 2 CD num
 |   +-- for IN prep
 |       +-- problem NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 +-- . . punct

32
Input: In what follows , we will sometimes use the term activity to refer generically to both task and method nodes. .
Parse:
use VB ROOT
 +-- In IN prep
 |   +-- follows VBZ pcomp
 |       +-- what WP nsubj
 +-- , , punct
 +-- we PRP nsubj
 +-- will MD aux
 +-- sometimes RB advmod
 +-- activity NN dobj
 |   +-- the DT det
 |   +-- term NN nn
 +-- refer VB xcomp
 |   +-- to TO aux
 |   +-- generically RB advmod
 |   +-- to IN prep
 |       +-- nodes. NNS pobj
 |           +-- task NN nn
 |               +-- both DT preconj
 |               +-- and CC cc
 |               +-- method NN conj
 +-- . . punct
