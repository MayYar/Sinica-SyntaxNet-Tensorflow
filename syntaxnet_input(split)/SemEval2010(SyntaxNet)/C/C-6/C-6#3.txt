
1
Input: CONTENT MANAGEMENT SYSTEM ARCHITECTURE The Spectrum architecture consists of three distinct management layers that may or may not be distributed across multiple machines , as shown in Figure .
Parse:
ARCHITECTURE VB ROOT
 +-- CONTENT RB advmod
 +-- SYSTEM NNP nsubj
 |   +-- MANAGEMENT NNP nn
 +-- consists VBZ ccomp
 |   +-- architecture NN nsubj
 |   |   +-- The DT det
 |   |   +-- Spectrum JJ nn
 |   +-- of IN prep
 |       +-- layers NNS pobj
 |           +-- three CD num
 |           +-- distinct JJ amod
 |           +-- management NN nn
 |           +-- may MD rcmod
 |               +-- that WDT nsubj
 |               +-- or CC cc
 |               +-- distributed VBN conj
 |               |   +-- may MD aux
 |               |   +-- not RB neg
 |               |   +-- be VB auxpass
 |               +-- across IN prep
 |               |   +-- machines NNS pobj
 |               |       +-- multiple JJ amod
 |               +-- , , punct
 |               +-- shown VBN advcl
 |                   +-- as IN mark
 |                   +-- in IN prep
 |                       +-- Figure NNP pobj
 +-- . . punct

2
Input: The three layers are content manager contains application specific information that is used to manage all of an application '' s content according to user preferences .
Parse:
contains VBZ ROOT
 +-- manager NN nsubj
 |   +-- layers NNS nsubj
 |   |   +-- The DT det
 |   |   +-- three CD num
 |   +-- are VBP cop
 |   +-- content JJ amod
 +-- information NN dobj
 |   +-- application NN nn
 |   +-- specific JJ amod
 |   +-- used VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- is VBZ auxpass
 |       +-- manage VB xcomp
 |           +-- to TO aux
 |           +-- all DT dobj
 |           |   +-- of IN prep
 |           |       +-- content NN pobj
 |           |           +-- application NN poss
 |           |               +-- an DT det
 |           |               +-- '' '' punct
 |           |               +-- s POS possessive
 |           +-- according VBG prep
 |               +-- to IN pcomp
 |                   +-- preferences NNS pobj
 |                       +-- user NN nn
 +-- . . punct

3
Input: For example , in a personal video recorder application the content manager receives requests for content from a user interface and interacts with the lower layers of the Spectrum architecture to store and manage content on the device .
Parse:
receives VBZ ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- in IN prep
 |   +-- application NN pobj
 |       +-- a DT det
 |       +-- personal JJ amod
 |       +-- recorder NN nn
 |           +-- video NN nn
 +-- manager NN nsubj
 |   +-- the DT det
 |   +-- content JJ amod
 +-- requests NNS dobj
 |   +-- for IN prep
 |       +-- content NN pobj
 +-- from IN prep
 |   +-- interface NN pobj
 |       +-- a DT det
 |       +-- user NN nn
 +-- and CC cc
 +-- interacts NNS conj
 |   +-- with IN prep
 |   |   +-- layers NNS pobj
 |   |       +-- the DT det
 |   |       +-- lower JJR amod
 |   |       +-- of IN prep
 |   |           +-- architecture NN pobj
 |   |               +-- the DT det
 |   |               +-- Spectrum JJ amod
 |   +-- store VB infmod
 |       +-- to TO aux
 |       +-- and CC cc
 |       +-- manage VB conj
 |       +-- content NN dobj
 |       +-- on IN prep
 |           +-- device NN pobj
 |               +-- the DT det
 +-- . . punct

4
Input: policy manager implements and enforces various storage polices that the content manager uses to refer to content .
Parse:
implements NNS ROOT
 +-- manager NN nsubj
 |   +-- policy NN nn
 +-- and CC cc
 +-- enforces VBZ conj
 +-- polices NNS dobj
 |   +-- various JJ amod
 |   +-- storage NN nn
 |   +-- uses VBZ rcmod
 |       +-- that IN dobj
 |       +-- manager NN nsubj
 |       |   +-- the DT det
 |       |   +-- content NN nn
 |       +-- refer VB xcomp
 |           +-- to TO aux
 |           +-- to IN prep
 |               +-- content NN pobj
 +-- . . punct

5
Input: The policy manager exports an interface to the content manager that allows the content manager to request that a piece content be treated according to a specific policy .
Parse:
exports VBZ ROOT
 +-- manager NN nsubj
 |   +-- The DT det
 |   +-- policy NN nn
 +-- interface NN dobj
 |   +-- an DT det
 +-- to IN prep
 |   +-- manager NN pobj
 |       +-- the DT det
 |       +-- content NN nn
 |       +-- allows VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- request VB xcomp
 |               +-- manager NN nsubj
 |               |   +-- the DT det
 |               |   +-- content JJ amod
 |               +-- to TO aux
 |               +-- treated VBN ccomp
 |                   +-- that IN mark
 |                   +-- content NN nsubjpass
 |                   |   +-- a DT det
 |                   |   +-- piece NN nn
 |                   +-- be VB auxpass
 |                   +-- according VBG prep
 |                       +-- to IN pcomp
 |                           +-- policy NN pobj
 |                               +-- a DT det
 |                               +-- specific JJ amod
 +-- . . punct

6
Input: Spectrum allows for arbitrary policies to be realized by providing a fixed set of base policy templates that can easily be parameterized .
Parse:
allows VBZ ROOT
 +-- Spectrum NN nsubj
 +-- realized VBN advcl
 |   +-- for IN mark
 |   +-- policies NNS nsubjpass
 |   |   +-- arbitrary JJ amod
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- by IN prep
 |       +-- providing VBG pcomp
 |           +-- set NN dobj
 |               +-- a DT det
 |               +-- fixed VBN amod
 |               +-- of IN prep
 |               |   +-- templates NNS pobj
 |               |       +-- base NN nn
 |               |       +-- policy NN nn
 |               +-- parameterized VBN rcmod
 |                   +-- that WDT nsubjpass
 |                   +-- can MD aux
 |                   +-- easily RB advmod
 |                   +-- be VB cop
 +-- . . punct

7
Input: It is our belief that for most implementations this will be adequate -LRB- if not , Spectrum can easily be extended to dynamically load new base policy template code at run time -RRB- .
Parse:
belief NN ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- our PRP$ poss
 +-- adequate JJ ccomp
 |   +-- that IN mark
 |   +-- for IN prep
 |   |   +-- implementations NNS pobj
 |   |       +-- most JJS amod
 |   +-- this DT nsubj
 |   +-- will MD aux
 |   +-- be VB cop
 |   +-- -LRB- -LRB- punct
 |   +-- extended VBN advcl
 |   |   +-- if IN mark
 |   |   +-- Spectrum NN nsubjpass
 |   |   |   +-- not RB neg
 |   |   |   +-- , , punct
 |   |   +-- can MD aux
 |   |   +-- easily RB advmod
 |   |   +-- be VB auxpass
 |   |   +-- load VB xcomp
 |   |       +-- to TO aux
 |   |       +-- dynamically RB advmod
 |   |       +-- code NN dobj
 |   |       |   +-- new JJ amod
 |   |       |   +-- base NN nn
 |   |       |   +-- template NN nn
 |   |       |       +-- policy NN nn
 |   |       +-- at IN prep
 |   |           +-- time NN pobj
 |   |               +-- run NN nn
 |   +-- -RRB- -RRB- punct
 +-- . . punct

8
Input: A key aspect of the policy manager is that it allows different policies to be simultaneously applied to the same content -LRB- or parts of the same content -RRB- .
Parse:
is VBZ ROOT
 +-- aspect NN nsubj
 |   +-- A DT det
 |   +-- key JJ amod
 |   +-- of IN prep
 |       +-- manager NN pobj
 |           +-- the DT det
 |           +-- policy NN nn
 +-- allows VBZ ccomp
 |   +-- that IN mark
 |   +-- it PRP nsubj
 |   +-- applied VBN xcomp
 |       +-- policies NNS nsubjpass
 |       |   +-- different JJ amod
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- simultaneously RB advmod
 |       +-- to IN prep
 |           +-- content NN pobj
 |               +-- the DT det
 |               +-- same JJ amod
 |               +-- -LRB- -LRB- punct
 |               +-- or CC cc
 |               +-- parts NNS conj
 |               |   +-- of IN prep
 |               |       +-- content NN pobj
 |               |           +-- the DT det
 |               |           +-- same JJ amod
 |               +-- -RRB- -RRB- punct
 +-- . . punct

9
Input: Furthermore content can only exist in the system so long as it is referenced by at least one existing policy .
Parse:
exist VB ROOT
 +-- Furthermore RB advmod
 +-- content NN nsubj
 +-- can MD aux
 +-- only RB advmod
 +-- in IN prep
 |   +-- system NN pobj
 |       +-- the DT det
 +-- long RB advmod
 |   +-- so RB advmod
 |   +-- referenced VBN ccomp
 |       +-- as IN mark
 |       +-- it PRP nsubjpass
 |       +-- is VBZ auxpass
 |       +-- by IN prep
 |           +-- policy NN pobj
 |               +-- one CD num
 |               |   +-- least RBS dep
 |               |       +-- at RB advmod
 |               +-- existing VBG amod
 +-- . . punct

10
Input: Policy conflicts are eliminated by having the policy manager deal exclusively with retention policies rather than with a mix of retention and eviction policies .
Parse:
eliminated VBN ROOT
 +-- conflicts NNS nsubjpass
 |   +-- Policy NN nn
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- having VBG pcomp
 |       +-- deal NN dobj
 |       |   +-- the DT det
 |       |   +-- manager NN nn
 |       |       +-- policy NN nn
 |       +-- exclusively RB advmod
 |       +-- with IN prep
 |           +-- policies NNS pobj
 |           |   +-- retention NN nn
 |           +-- rather RB cc
 |           |   +-- than IN mwe
 |           +-- with IN conj
 |               +-- mix NN pobj
 |                   +-- a DT det
 |                   +-- of IN prep
 |                       +-- policies NNS pobj
 |                           +-- retention NN nn
 |                               +-- and CC cc
 |                               +-- eviction NN conj
 +-- . . punct

11
Input: This means that content with no policy associated with it is immediately and automatically removed from the system .
Parse:
means VBZ ROOT
 +-- This DT nsubj
 +-- removed VBN ccomp
 |   +-- that IN mark
 |   +-- content NN nsubjpass
 |   |   +-- with IN prep
 |   |       +-- policy NN pobj
 |   |           +-- no DT det
 |   |           +-- associated VBN partmod
 |   |               +-- with IN prep
 |   |                   +-- it PRP pobj
 |   +-- is VBZ auxpass
 |   +-- immediately RB advmod
 |   |   +-- and CC cc
 |   |   +-- automatically RB conj
 |   +-- from IN prep
 |       +-- system NN pobj
 |           +-- the DT det
 +-- . . punct

12
Input: This approach allows us to naturally support sharing of content across different policies which is critical to the efficient storage of large objects .
Parse:
allows VBZ ROOT
 +-- approach NN nsubj
 |   +-- This DT det
 +-- support VB xcomp
 |   +-- us PRP nsubj
 |   +-- to TO aux
 |   +-- naturally RB advmod
 |   +-- sharing NN dobj
 |       +-- of IN prep
 |       |   +-- content NN pobj
 |       +-- across IN prep
 |           +-- policies NNS pobj
 |               +-- different JJ amod
 |               +-- critical JJ rcmod
 |                   +-- which WDT nsubj
 |                   +-- is VBZ cop
 |                   +-- to IN prep
 |                       +-- storage NN pobj
 |                           +-- the DT det
 |                           +-- efficient JJ amod
 |                           +-- of IN prep
 |                               +-- objects NNS pobj
 |                                   +-- large JJ amod
 +-- . . punct

13
Input: Note that a key difference between the content manager and the policy manager is that the content manager manages references to multiple pieces of content , i.e .
Parse:
Note VB ROOT
 +-- is VBZ ccomp
 |   +-- that IN mark
 |   +-- difference NN nsubj
 |   |   +-- a DT det
 |   |   +-- key JJ amod
 |   |   +-- between IN prep
 |   |       +-- manager NN pobj
 |   |           +-- the DT det
 |   |           +-- content NN nn
 |   |           +-- and CC cc
 |   |           +-- manager NN conj
 |   |               +-- the DT det
 |   |               +-- policy NN nn
 |   +-- manages VBZ ccomp
 |       +-- that IN mark
 |       +-- manager NN nsubj
 |       |   +-- the DT det
 |       |   +-- content JJ amod
 |       +-- references NNS dobj
 |           +-- to IN prep
 |               +-- pieces NNS pobj
 |                   +-- multiple JJ amod
 |                   +-- of IN prep
 |                       +-- content NN pobj
 |                           +-- , , punct
 |                           +-- i.e NN appos
 +-- . . punct

14
Input: it has an applicationview of content .
Parse:
has VBZ ROOT
 +-- it PRP nsubj
 +-- applicationview NN dobj
 |   +-- an DT det
 |   +-- of IN prep
 |       +-- content NN pobj
 +-- . . punct

15
Input: On the other hand , the policy manager is only concerned with the policy used to manage standalone pieces of content .
Parse:
concerned JJ ROOT
 +-- On IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- manager NN nsubj
 |   +-- the DT det
 |   +-- policy NN nn
 +-- is VBZ cop
 +-- only RB advmod
 +-- with IN prep
 |   +-- policy NN pobj
 |       +-- the DT det
 |       +-- used VBN partmod
 |           +-- manage VB xcomp
 |               +-- to TO aux
 |               +-- pieces NNS dobj
 |                   +-- standalone JJ amod
 |                   +-- of IN prep
 |                       +-- content NN pobj
 +-- . . punct

16
Input: For example , in a PVR application , the content manager layer would know about the different groups of managed content such as keep indefinitely , keep for one day , and keep if available diskspace .
Parse:
know VB ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- in IN prep
 |   +-- application NN pobj
 |       +-- a DT det
 |       +-- PVR NNP nn
 +-- layer NN nsubj
 |   +-- the DT det
 |   +-- manager NN nn
 |       +-- content NN nn
 +-- would MD aux
 +-- about IN prep
 |   +-- groups NNS pobj
 |       +-- the DT det
 |       +-- different JJ amod
 |       +-- of IN prep
 |       |   +-- content NN pobj
 |       |       +-- managed VBN amod
 |       +-- as IN prep
 |           +-- such JJ mwe
 |           +-- keep VB pcomp
 |               +-- indefinitely RB advmod
 |               +-- , , punct
 |               +-- keep VB conj
 |               |   +-- available JJ advcl
 |               |       +-- if IN mark
 |               |       +-- diskspace NN dep
 |               +-- and CC cc
 +-- . . punct

17
Input: However , at the policy manager level , each piece of content has Content Manager Policy Manager Storage Manager Content Manager Content Manager Content Manager Policy Manager Policy Manager Policy Manager Storage Manager Storage Manager Storage Manager Remote Invocation Figure The components of the Spectrum architecture and the four ways they can be configured its own policy -LRB- or policies -RRB- applied to it and is independent from other content .
Parse:
has VBZ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- at IN prep
 |   +-- level NN pobj
 |       +-- the DT det
 |       +-- manager NN nn
 |           +-- policy NN nn
 +-- piece NN nsubj
 |   +-- each DT det
 |   +-- of IN prep
 |       +-- content NN pobj
 +-- Figure VB ccomp
 |   +-- Invocation NN nsubj
 |   |   +-- Manager NN nn
 |   |   |   +-- Manager NN nn
 |   |   |   |   +-- Manager NN nn
 |   |   |   |   |   +-- Manager NN nn
 |   |   |   |   |   |   +-- Manager NN nn
 |   |   |   |   |   |   |   +-- Manager NN nn
 |   |   |   |   |   |   |   |   +-- Manager NN nn
 |   |   |   |   |   |   |   |   |   +-- Manager NN nn
 |   |   |   |   |   |   |   |   |   |   +-- Manager NN nn
 |   |   |   |   |   |   |   |   |   |   |   +-- Manager NN nn
 |   |   |   |   |   |   |   |   |   |   |   |   +-- Manager NNP nn
 |   |   |   |   |   |   |   |   |   |   |   |   |   +-- Content NNP nn
 |   |   |   |   |   |   |   |   |   |   |   |   +-- Manager NN nn
 |   |   |   |   |   |   |   |   |   |   |   |   |   +-- Policy NN nn
 |   |   |   |   |   |   |   |   |   |   |   |   +-- Storage NN nn
 |   |   |   |   |   |   |   |   |   |   |   +-- Content NNP nn
 |   |   |   |   |   |   |   |   |   |   +-- Content NNP nn
 |   |   |   |   |   |   |   |   |   +-- Content NNP nn
 |   |   |   |   |   |   |   |   +-- Policy NNP nn
 |   |   |   |   |   |   |   +-- Policy NN nn
 |   |   |   |   |   |   +-- Policy NN nn
 |   |   |   |   |   +-- Storage NN nn
 |   |   |   |   +-- Storage NN nn
 |   |   |   +-- Storage NNP nn
 |   |   +-- Remote NNP nn
 |   +-- components NNS dobj
 |       +-- The DT det
 |       +-- of IN prep
 |       |   +-- architecture NN pobj
 |       |       +-- the DT det
 |       |       +-- Spectrum JJ nn
 |       +-- and CC cc
 |       +-- ways NNS conj
 |           +-- the DT det
 |           +-- four CD num
 |           +-- configured VBN rcmod
 |               +-- they PRP nsubjpass
 |               +-- can MD aux
 |               +-- be VB auxpass
 |               +-- applied VBD dep
 |                   +-- policy NN nsubj
 |                   |   +-- its PRP$ poss
 |                   |   +-- own JJ amod
 |                   |   +-- -LRB- -LRB- punct
 |                   |   +-- or CC cc
 |                   |   +-- policies NNS conj
 |                   |   +-- -RRB- -RRB- punct
 |                   +-- to IN prep
 |                   |   +-- it PRP pobj
 |                   +-- and CC cc
 |                   +-- independent JJ conj
 |                       +-- is VBZ cop
 |                       +-- from IN prep
 |                           +-- content NN pobj
 |                               +-- other JJ amod
 +-- . . punct

18
Input: storage manager stores content in an efficient manner while facilitating the objectives of the higher layers .
Parse:
content NN ROOT
 +-- stores NNS nsubj
 |   +-- manager NN nn
 |       +-- storage NN nn
 +-- in IN prep
 |   +-- manner NN pobj
 |       +-- an DT det
 |       +-- efficient JJ amod
 +-- facilitating VBG advcl
 |   +-- while IN mark
 |   +-- objectives NNS dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- layers NNS pobj
 |               +-- the DT det
 |               +-- higher JJR amod
 +-- . . punct

19
Input: Specifically the storage manager stores content in sub object chunks .
Parse:
content NN ROOT
 +-- Specifically RB advmod
 +-- the DT det
 +-- stores NNS nn
 |   +-- manager NN nn
 |       +-- storage NN nn
 +-- in IN prep
 |   +-- chunks NNS pobj
 |       +-- object NN nn
 |           +-- sub NN nn
 +-- . . punct

20
Input: This approach has advantages for the efficient retrieval of content but more importantly allows policies to be applied at a subobject level which is critically important when dealing with very large objects such as parts of continuous media , e.g .
Parse:
has VBZ ROOT
 +-- approach NN nsubj
 |   +-- This DT det
 +-- advantages NNS dobj
 |   +-- for IN prep
 |       +-- retrieval NN pobj
 |           +-- the DT det
 |           +-- efficient JJ amod
 |           +-- of IN prep
 |               +-- content NN pobj
 +-- but CC cc
 +-- allows VBZ conj
 |   +-- importantly RB advmod
 |   |   +-- more RBR advmod
 |   +-- applied VBN xcomp
 |       +-- policies NNS nsubjpass
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- at IN prep
 |           +-- level NN pobj
 |               +-- a DT det
 |               +-- subobject JJ amod
 |               +-- important JJ rcmod
 |                   +-- which WDT nsubj
 |                   +-- is VBZ cop
 |                   +-- critically RB advmod
 |                   +-- dealing VBG advcl
 |                       +-- when WRB advmod
 |                       +-- with IN prep
 |                           +-- objects NNS pobj
 |                               +-- large JJ amod
 |                               |   +-- very RB advmod
 |                               +-- as IN prep
 |                                   +-- such JJ mwe
 |                                   +-- parts NNS pobj
 |                                       +-- of IN prep
 |                                       |   +-- media NNS pobj
 |                                       |       +-- continuous JJ amod
 |                                       +-- , , punct
 |                                       +-- e.g NFP advmod
 +-- . . punct

21
Input: selected pieces of TV content being stored on a PVR .
Parse:
selected VBN ROOT
 +-- pieces NNS dobj
 |   +-- of IN prep
 |   |   +-- content NN pobj
 |   |       +-- TV NN nn
 |   +-- stored VBN partmod
 |       +-- being VBG auxpass
 |       +-- on IN prep
 |           +-- PVR NN pobj
 |               +-- a DT det
 +-- . . punct

22
Input: Note that the storage manager has no knowledge of the policies being used by the content and policy managers .
Parse:
Note VB ROOT
 +-- has VBZ ccomp
 |   +-- that IN mark
 |   +-- manager NN nsubj
 |   |   +-- the DT det
 |   |   +-- storage NN nn
 |   +-- knowledge NN dobj
 |       +-- no DT det
 |       +-- of IN prep
 |           +-- policies NNS pobj
 |               +-- the DT det
 |               +-- used VBN partmod
 |                   +-- being VBG auxpass
 |                   +-- by IN prep
 |                       +-- managers NNS pobj
 |                           +-- the DT det
 |                           +-- content NN nn
 |                               +-- and CC cc
 |                               +-- policy NN conj
 +-- . . punct

23
Input: Another unique part of our approach is that the interfaces between the layers can either be local or distributed .
Parse:
is VBZ ROOT
 +-- part NN nsubj
 |   +-- Another DT det
 |   +-- unique JJ amod
 |   +-- of IN prep
 |       +-- approach NN pobj
 |           +-- our PRP$ poss
 +-- local JJ ccomp
 |   +-- that IN mark
 |   +-- interfaces NNS nsubj
 |   |   +-- the DT det
 |   |   +-- between IN prep
 |   |       +-- layers NNS pobj
 |   |           +-- the DT det
 |   +-- can MD aux
 |   +-- either CC preconj
 |   +-- be VB cop
 |   +-- or CC cc
 |   +-- distributed VBN conj
 +-- . . punct

24
Input: Figure shows the four possible cases .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 +-- cases NNS dobj
 |   +-- the DT det
 |   +-- four CD num
 |   +-- possible JJ amod
 +-- . . punct

25
Input: The case on the far left of the Figure shows the simplest -LRB- non distributed -RRB- case where all the layers are implemented on a single box .
Parse:
shows VBZ ROOT
 +-- case NN nsubj
 |   +-- The DT det
 |   +-- on IN prep
 |       +-- left JJ pobj
 |           +-- the DT det
 |           +-- far RB advmod
 |           +-- of IN prep
 |               +-- Figure NNP pobj
 |                   +-- the DT det
 +-- case NN dobj
 |   +-- the DT det
 |   +-- simplest JJS amod
 |   +-- -LRB- -LRB- punct
 |   +-- distributed VBN amod
 |   |   +-- non RB advmod
 |   +-- -RRB- -RRB- punct
 |   +-- implemented VBN rcmod
 |       +-- where WRB advmod
 |       +-- layers NNS nsubjpass
 |       |   +-- all PDT predet
 |       |   +-- the DT det
 |       +-- are VBP auxpass
 |       +-- on IN prep
 |           +-- box NN pobj
 |               +-- a DT det
 |               +-- single JJ amod
 +-- . . punct

26
Input: This configuration would be used in selfcontained applications such as PVRs .
Parse:
used VBN ROOT
 +-- configuration NN nsubjpass
 |   +-- This DT det
 +-- would MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- applications NNS pobj
 |       +-- selfcontained VBN amod
 |       +-- as IN prep
 |           +-- such JJ mwe
 |           +-- PVRs NNS pobj
 +-- . . punct

27
Input: The next case over corresponds to the case where there is a centralized content manager that controls distributed storage devices each of which is responsible for implementing policy based storage .
Parse:
case NN ROOT
 +-- The DT det
 +-- next JJ amod
 +-- over IN prep
 |   +-- corresponds NNS pobj
 |       +-- to IN prep
 |           +-- case NN pobj
 |               +-- the DT det
 |               +-- is VBZ rcmod
 |                   +-- where WRB advmod
 |                   +-- there EX expl
 |                   +-- manager NN nsubj
 |                       +-- a DT det
 |                       +-- centralized JJ amod
 |                       +-- content NN nn
 |                       +-- controls VBZ rcmod
 |                           +-- that WDT nsubj
 |                           +-- devices NNS dobj
 |                               +-- distributed VBN amod
 |                               +-- storage NN nn
 |                               +-- responsible JJ rcmod
 |                                   +-- each DT nsubj
 |                                   |   +-- of IN prep
 |                                   |       +-- which WDT pobj
 |                                   +-- is VBZ cop
 |                                   +-- for IN prep
 |                                       +-- implementing VBG pcomp
 |                                           +-- storage NN dobj
 |                                               +-- based VBN amod
 |                                                   +-- policy NN dep
 +-- . . punct

28
Input: In this case although the remote devices are controlled by the central manager they operate much more independently .
Parse:
operate VBP ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- this DT det
 +-- controlled VBN advcl
 |   +-- although IN mark
 |   +-- devices NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- remote JJ amod
 |   +-- are VBP auxpass
 |   +-- by IN prep
 |       +-- manager NN pobj
 |           +-- the DT det
 |           +-- central JJ amod
 +-- they PRP nsubj
 +-- more RBR advmod
 |   +-- much RB advmod
 |   +-- independently RB advmod
 +-- . . punct

29
Input: For example , once they receive instructions from the central manager they typically operate in autonomous fashion .
Parse:
operate VBP ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- receive VBP advcl
 |   +-- once IN mark
 |   +-- they PRP nsubj
 |   +-- instructions NNS dobj
 |       +-- from IN prep
 |           +-- manager NN pobj
 |               +-- the DT det
 |               +-- central JJ amod
 +-- they PRP nsubj
 +-- typically RB advmod
 +-- in IN prep
 |   +-- fashion NN pobj
 |       +-- autonomous JJ amod
 +-- . . punct

30
Input: An example of this type of configuration is a content distribution network that distributes and stores content based on a schedule determined by some centralized controller .
Parse:
network NN ROOT
 +-- example NN nsubj
 |   +-- An DT det
 |   +-- of IN prep
 |       +-- type NN pobj
 |           +-- this DT det
 |           +-- of IN prep
 |               +-- configuration NN pobj
 +-- is VBZ cop
 +-- a DT det
 +-- content JJ amod
 +-- distribution NN nn
 +-- distributes VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- and CC cc
 |   +-- stores NNS conj
 |   +-- content NN dobj
 |   +-- based VBN prep
 |       +-- on IN pcomp
 |           +-- schedule NN pobj
 |               +-- a DT det
 |               +-- determined VBN partmod
 |                   +-- by IN prep
 |                       +-- controller NN pobj
 |                           +-- some DT det
 |                           +-- centralized JJ amod
 +-- . . punct

31
Input: For example , the CDN could pre populate edge devices with content that is expected to be very popular or distribute large files to branch offices during off peak hours in a bandwidth constrained enterprise environment .
Parse:
populate VB ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- CDN NNP nsubj
 |   +-- the DT det
 +-- could MD aux
 +-- pre VB advmod
 +-- devices NNS dobj
 |   +-- edge NN nn
 +-- with IN prep
 |   +-- content NN pobj
 |       +-- expected VBN rcmod
 |           +-- that WDT nsubjpass
 |           +-- is VBZ auxpass
 |           +-- popular JJ xcomp
 |               +-- to TO aux
 |               +-- be VB cop
 |               +-- very RB advmod
 |               +-- or CC cc
 |               +-- distribute VB conj
 |               |   +-- files NNS dobj
 |               |   |   +-- large JJ amod
 |               |   +-- to IN prep
 |               |   |   +-- offices NNS pobj
 |               |   |       +-- branch NN nn
 |               |   +-- during IN prep
 |               |       +-- off RP pcomp
 |               |           +-- hours NNS pobj
 |               |               +-- peak JJ amod
 |               +-- in IN prep
 |                   +-- environment NN pobj
 |                       +-- a DT det
 |                       +-- constrained VBN amod
 |                       |   +-- bandwidth NN dep
 |                       +-- enterprise NN nn
 +-- . . punct

32
Input: Allowing a single policy manager to control several storage managers leads to the next combination of functions and the most distributed case .
Parse:
leads VBZ ROOT
 +-- Allowing VBG csubj
 |   +-- manager NN dobj
 |   |   +-- a DT det
 |   |   +-- single JJ amod
 |   |   +-- policy NN nn
 |   +-- control VB xcomp
 |       +-- to TO aux
 |       +-- managers NNS dobj
 |           +-- several JJ amod
 |           +-- storage NN nn
 +-- to IN prep
 |   +-- combination NN pobj
 |       +-- the DT det
 |       +-- next JJ amod
 |       +-- of IN prep
 |       |   +-- functions NNS pobj
 |       +-- and CC cc
 |       +-- case NN conj
 |           +-- the DT det
 |           +-- distributed VBN amod
 |               +-- most RBS advmod
 +-- . . punct

33
Input: The need for this sort of separation might occur for scalability reasons or when different specialized storage devices or appliances are required to be controlled by a single policy manager .
Parse:
occur VB ROOT
 +-- need NN nsubj
 |   +-- The DT det
 |   +-- for IN prep
 |       +-- sort NN pobj
 |           +-- this DT det
 |           +-- of IN prep
 |               +-- separation NN pobj
 +-- might MD aux
 +-- for IN dep
 |   +-- reasons NNS pobj
 |   |   +-- scalability NN nn
 |   +-- or CC cc
 |   +-- required VBN conj
 |       +-- when WRB advmod
 |       +-- devices NNS nsubjpass
 |       |   +-- different JJ amod
 |       |   +-- specialized JJ amod
 |       |   +-- storage NN nn
 |       |   +-- or CC cc
 |       |   +-- appliances NNS conj
 |       +-- are VBP auxpass
 |       +-- controlled VBN xcomp
 |           +-- to TO aux
 |           +-- be VB auxpass
 |           +-- by IN prep
 |               +-- manager NN pobj
 |                   +-- a DT det
 |                   +-- single JJ amod
 |                   +-- policy NN nn
 +-- . . punct

34
Input: The final case shows a content manager combined with a policy manager controlling a remote storage manager .
Parse:
shows VBZ ROOT
 +-- case NN nsubj
 |   +-- The DT det
 |   +-- final JJ amod
 +-- manager NN dobj
 |   +-- a DT det
 |   +-- content NN nn
 |   +-- combined VBN partmod
 |       +-- with IN prep
 |           +-- manager NN pobj
 |               +-- a DT det
 |               +-- policy NN nn
 |               +-- controlling VBG partmod
 |                   +-- manager NN dobj
 |                       +-- a DT det
 |                       +-- remote JJ amod
 |                       +-- storage NN nn
 +-- . . punct

35
Input: This separation would be possible if the storage manager is somewhat autonomous and does not require continuous fine grained control by the policy manager .
Parse:
possible JJ ROOT
 +-- separation NN nsubj
 |   +-- This DT det
 +-- would MD aux
 +-- be VB cop
 +-- autonomous JJ advcl
 |   +-- if IN mark
 |   +-- manager NN nsubj
 |   |   +-- the DT det
 |   |   +-- storage NN nn
 |   +-- is VBZ cop
 |   +-- somewhat RB advmod
 |   +-- and CC cc
 |   +-- require VB conj
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- control NN dobj
 |           +-- continuous JJ amod
 |           +-- fine JJ amod
 |           +-- grained VBN amod
 |           +-- by IN prep
 |               +-- manager NN pobj
 |                   +-- the DT det
 |                   +-- policy NN nn
 +-- . . punct

36
Input: We now examine the function of the three layers in detail .
Parse:
examine VBP ROOT
 +-- We PRP nsubj
 +-- now RB advmod
 +-- function NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- layers NNS pobj
 |           +-- the DT det
 |           +-- three CD num
 |           +-- in IN prep
 |               +-- detail NN pobj
 +-- . . punct

37
Input: . Content Manager The content manager layer is the primary interface through which specific applications use the Spectrum architecture .
Parse:
interface NN ROOT
 +-- . , punct
 +-- layer NN nsubj
 |   +-- Manager NNP nn
 |   |   +-- Content NNP nn
 |   +-- The DT det
 |   +-- manager NN nn
 |       +-- content NN nn
 +-- is VBZ cop
 +-- the DT det
 +-- primary JJ amod
 +-- use VBP rcmod
 |   +-- through IN prep
 |   |   +-- which WDT pobj
 |   +-- applications NNS nsubj
 |   |   +-- specific JJ amod
 |   +-- architecture NN dobj
 |       +-- the DT det
 |       +-- Spectrum JJ amod
 +-- . . punct

38
Input: As such the content manager layer provides an API for the application to manipulate all aspects of the Spectrum architecture at different levels of granularity .
Parse:
provides VBZ ROOT
 +-- As IN mark
 +-- layer NN nsubj
 |   +-- such PDT predet
 |   +-- the DT det
 |   +-- manager NN nn
 |       +-- content NN nn
 +-- API NN dobj
 |   +-- an DT det
 |   +-- for IN prep
 |       +-- application NN pobj
 |           +-- the DT det
 |           +-- manipulate VB infmod
 |               +-- to TO aux
 |               +-- aspects NNS dobj
 |               |   +-- all DT det
 |               |   +-- of IN prep
 |               |       +-- architecture NN pobj
 |               |           +-- the DT det
 |               |           +-- Spectrum JJ nn
 |               +-- at IN prep
 |                   +-- levels NNS pobj
 |                       +-- different JJ amod
 |                       +-- of IN prep
 |                           +-- granularity NN pobj
 +-- . . punct

39
Input: The content manager API has functions that handle Physical devices This set of functions allows physical storage devices to be added to Spectrum thereby putting them under control of the content manager and making the storage available to the system .
Parse:
has VBZ ROOT
 +-- API NN nsubj
 |   +-- The DT det
 |   +-- manager NN nn
 |       +-- content NN nn
 +-- allows VBZ ccomp
 |   +-- functions NNS nsubj
 |   |   +-- handle VBP rcmod
 |   |       +-- that WDT nsubj
 |   |       +-- devices NNS iobj
 |   |       |   +-- Physical JJ amod
 |   |       +-- set NN dobj
 |   |           +-- This DT det
 |   |           +-- of IN prep
 |   |               +-- functions NNS pobj
 |   +-- added VBN xcomp
 |       +-- devices NNS nsubjpass
 |       |   +-- physical JJ amod
 |       |   +-- storage NN nn
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- to IN prep
 |       |   +-- Spectrum NNP pobj
 |       +-- putting VBG ccomp
 |           +-- thereby RB advmod
 |           +-- them PRP dobj
 |           +-- under IN prep
 |           |   +-- control NN pobj
 |           |       +-- of IN prep
 |           |           +-- manager NN pobj
 |           |               +-- the DT det
 |           |               +-- content JJ amod
 |           +-- and CC cc
 |           +-- making VBG conj
 |               +-- available JJ xcomp
 |                   +-- storage NN nsubj
 |                   |   +-- the DT det
 |                   +-- to IN prep
 |                       +-- system NN pobj
 |                           +-- the DT det
 +-- . . punct

40
Input: Physical devices can be local or remote this is the only place in the architecture where the application is required to be aware of this distinction .
Parse:
local JJ ROOT
 +-- devices NNS nsubj
 |   +-- Physical JJ amod
 +-- can MD aux
 +-- be VB cop
 +-- or CC cc
 +-- remote JJ conj
 +-- place NN ccomp
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- the DT det
 |   +-- only JJ amod
 |   +-- in IN prep
 |   |   +-- architecture NN pobj
 |   |       +-- the DT det
 |   +-- required VBN rcmod
 |       +-- where WRB advmod
 |       +-- application NN nsubjpass
 |       |   +-- the DT det
 |       +-- is VBZ auxpass
 |       +-- aware JJ xcomp
 |           +-- to TO aux
 |           +-- be VB cop
 |           +-- of IN prep
 |               +-- distinction NN pobj
 |                   +-- this DT det
 +-- . . punct

41
Input: Once a device is mapped into the application through this interface , the system tracks its type and location .
Parse:
tracks VBZ ROOT
 +-- mapped VBN advcl
 |   +-- Once IN mark
 |   +-- device NN nsubjpass
 |   |   +-- a DT det
 |   +-- is VBZ auxpass
 |   +-- into IN prep
 |   |   +-- application NN pobj
 |   |       +-- the DT det
 |   +-- through IN prep
 |       +-- interface NN pobj
 |           +-- this DT det
 +-- , , punct
 +-- system NN nsubj
 |   +-- the DT det
 +-- type NN dobj
 |   +-- its PRP$ poss
 |   +-- and CC cc
 |   +-- location NN conj
 +-- . . punct

42
Input: Users simply refer to the content through an application provided label .
Parse:
refer VBP ROOT
 +-- Users NNS nsubj
 +-- simply RB advmod
 +-- to IN prep
 |   +-- content NN pobj
 |       +-- the DT det
 +-- through IN prep
 |   +-- label NN pobj
 |       +-- an DT det
 |       +-- provided VBN amod
 |           +-- application NN dep
 +-- . . punct

43
Input: Stores Stores are subsets of physical storage devices .
Parse:
subsets NNS ROOT
 +-- Stores NNS nsubj
 |   +-- Stores NNS nn
 +-- are VBP cop
 +-- of IN prep
 |   +-- devices NNS pobj
 |       +-- storage NN nn
 |           +-- physical JJ amod
 +-- . . punct

44
Input: Through these functions an application can create a store on a physical device and assign resources -LRB- e.g .
Parse:
create VB ROOT
 +-- Through IN prep
 |   +-- functions NNS pobj
 |       +-- these DT det
 +-- application NN nsubj
 |   +-- an DT det
 +-- can MD aux
 +-- store NN dobj
 |   +-- a DT det
 +-- on IN prep
 |   +-- device NN pobj
 |       +-- a DT det
 |       +-- physical JJ amod
 |       +-- and CC cc
 |       +-- resources NNS conj
 |           +-- assign JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- e.g UH dep
 +-- . . punct

45
Input: disk space -RRB- to it .
Parse:
space NN ROOT
 +-- disk NN nn
 +-- -RRB- -RRB- punct
 +-- to IN prep
 |   +-- it PRP pobj
 +-- . . punct

46
Input: Stores can only be created in physical devices that are mapped into the system .
Parse:
created VBN ROOT
 +-- Stores NNS nsubjpass
 +-- can MD aux
 +-- only RB advmod
 +-- be VB auxpass
 +-- in IN prep
 |   +-- devices NNS pobj
 |       +-- physical JJ amod
 |       +-- mapped VBN rcmod
 |           +-- that WDT nsubjpass
 |           +-- are VBP auxpass
 |           +-- into IN prep
 |               +-- system NN pobj
 |                   +-- the DT det
 +-- . . punct

47
Input: Policy Groups Policy groups are the means whereby an application specifies , instantiates , and modifies the policies that are applied to Spectrum content .
Parse:
means NNS ROOT
 +-- groups NNS nsubj
 |   +-- Policy NNP nn
 |       +-- Groups NNS nn
 |           +-- Policy NNP nn
 +-- are VBP cop
 +-- the DT det
 +-- specifies NNS dep
 |   +-- whereby WRB advmod
 |   +-- application NN nsubj
 |   |   +-- an DT det
 |   +-- , , punct
 |   +-- instantiates NNS dobj
 +-- , , punct
 +-- and CC cc
 +-- modifies VBZ conj
 |   +-- policies NNS dobj
 |       +-- the DT det
 |       +-- applied VBN rcmod
 |           +-- that WDT nsubjpass
 |           +-- are VBP auxpass
 |           +-- to IN prep
 |               +-- content NN pobj
 |                   +-- Spectrum NNP nn
 +-- . . punct

48
Input: Typical usage of this set of functions is to select one of a small set of base policies and to parameterize this specific instance of the policy .
Parse:
is VBZ ROOT
 +-- usage NN nsubj
 |   +-- Typical JJ amod
 |   +-- of IN prep
 |       +-- set NN pobj
 |           +-- this DT det
 |           +-- of IN prep
 |               +-- functions NNS pobj
 +-- select VB xcomp
 |   +-- to TO aux
 |   +-- one CD dobj
 |   |   +-- of IN prep
 |   |       +-- set NN pobj
 |   |           +-- a DT det
 |   |           +-- small JJ amod
 |   |           +-- of IN prep
 |   |               +-- policies NNS pobj
 |   |                   +-- base NN nn
 |   +-- and CC cc
 |   +-- parameterize VB conj
 |       +-- to TO aux
 |       +-- instance NN dobj
 |           +-- this DT det
 |           +-- specific JJ amod
 |           +-- of IN prep
 |               +-- policy NN pobj
 |                   +-- the DT det
 +-- . . punct

49
Input: Policy groups are created within existing stores in the system .
Parse:
created VBN ROOT
 +-- groups NNS nsubjpass
 |   +-- Policy NN nn
 +-- are VBP auxpass
 +-- within IN prep
 |   +-- stores NNS pobj
 |       +-- existing VBG amod
 |       +-- in IN prep
 |           +-- system NN pobj
 |               +-- the DT det
 +-- . . punct

50
Input: The Spectrum architecture has policies that are normally associated with storage that aim to optimize disk usage .
Parse:
has VBZ ROOT
 +-- architecture NN nsubj
 |   +-- The DT det
 |   +-- Spectrum JJ nn
 +-- policies NNS dobj
 |   +-- associated VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- are VBP auxpass
 |       +-- normally RB advmod
 |       +-- with IN prep
 |           +-- storage NN pobj
 |               +-- aim VBP rcmod
 |                   +-- that WDT nsubj
 |                   +-- optimize VB xcomp
 |                       +-- to TO aux
 |                       +-- usage NN dobj
 |                           +-- disk NN nn
 +-- . . punct

51
Input: In addition a set of policies that take a sophisticated time specification enable storage that is cognizant of time .
Parse:
In IN ROOT
 +-- addition NN pobj
 |   +-- set NN dobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- policies NNS pobj
 |               +-- take VBP rcmod
 |                   +-- that WDT nsubj
 |                   +-- storage NN dobj
 |                       +-- a DT det
 |                       +-- time NN nn
 |                       |   +-- sophisticated JJ amod
 |                       +-- enable NN nn
 |                       |   +-- specification NN nn
 |                       +-- cognizant JJ rcmod
 |                           +-- that WDT nsubj
 |                           +-- is VBZ cop
 |                           +-- of IN prep
 |                               +-- time NN pobj
 +-- . . punct

52
Input: For example , a simple time based policy could evict content from the system at a certain absolute or relative time .
Parse:
evict VB ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- policy NN nsubj
 |   +-- a DT det
 |   +-- time NN nn
 |   |   +-- simple JJ amod
 |   +-- based VBN amod
 +-- could MD aux
 +-- content NN dobj
 |   +-- from IN prep
 |       +-- system NN pobj
 |           +-- the DT det
 +-- at IN prep
 |   +-- time NN pobj
 |       +-- a DT det
 |       +-- certain JJ amod
 |       +-- absolute JJ amod
 |           +-- or CC cc
 |           +-- relative JJ conj
 +-- . . punct

53
Input: A slightly more involved time based policy enabled by the Spectrum architecture could allow content to be stored in rolling window of a number of hours -LRB- for example , the most recent N number of hours is kept in the system -RRB- .
Parse:
allow VB ROOT
 +-- policy NN nsubj
 |   +-- A DT det
 |   +-- involved JJ amod
 |   |   +-- slightly RB advmod
 |   |   +-- more RBR advmod
 |   +-- based VBN amod
 |   |   +-- time NN dep
 |   +-- enabled VBN partmod
 |       +-- by IN prep
 |           +-- architecture NN pobj
 |               +-- the DT det
 |               +-- Spectrum JJ amod
 +-- could MD aux
 +-- stored VBN xcomp
 |   +-- content NN nsubjpass
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- in IN prep
 |       +-- window NN pobj
 |           +-- rolling VBG amod
 |           +-- of IN prep
 |           |   +-- number NN pobj
 |           |       +-- a DT det
 |           |       +-- of IN prep
 |           |           +-- hours NNS pobj
 |           +-- -LRB- -LRB- punct
 |           +-- kept VBN dep
 |           |   +-- for IN prep
 |           |   |   +-- example NN pobj
 |           |   +-- , , punct
 |           |   +-- number NN nsubjpass
 |           |   |   +-- the DT det
 |           |   |   +-- recent JJ amod
 |           |   |   |   +-- most RBS advmod
 |           |   |   +-- N JJ nn
 |           |   |   +-- of IN prep
 |           |   |       +-- hours NNS pobj
 |           |   +-- is VBZ auxpass
 |           |   +-- in IN prep
 |           |       +-- system NN pobj
 |           |           +-- the DT det
 |           +-- -RRB- -RRB- punct
 +-- . . punct

54
Input: Time based polices are of particular use when dealing with continuous content like a live broadcast .
Parse:
are VBP ROOT
 +-- polices NNS nsubj
 |   +-- based VBN amod
 |       +-- Time NN dep
 +-- of IN prep
 |   +-- use NN pobj
 |       +-- particular JJ amod
 +-- dealing VBG advcl
 |   +-- when WRB advmod
 |   +-- with IN prep
 |       +-- content NN pobj
 |           +-- continuous JJ amod
 |           +-- like IN prep
 |               +-- broadcast NN pobj
 |                   +-- a DT det
 |                   +-- live JJ amod
 +-- . . punct

55
Input: Content At the finest level of granularity content can be added to or removed from the system .
Parse:
added VBN ROOT
 +-- Content VB nsubjpass
 |   +-- At IN prep
 |       +-- level NN pobj
 |           +-- the DT det
 |           +-- finest JJS amod
 |           +-- of IN prep
 |               +-- content NN pobj
 |                   +-- granularity NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- to IN prep
 +-- or CC cc
 +-- removed VBN conj
 |   +-- from IN prep
 |       +-- system NN pobj
 |           +-- the DT det
 +-- . . punct

56
Input: Content is specified to the system by means of a uniform resource locator which concisely indicates the location of the content as well as the protocol to be used to retrieve it .
Parse:
specified VBN ROOT
 +-- Content NN nsubjpass
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- system NN pobj
 |       +-- the DT det
 +-- by IN prep
 |   +-- means NNS pobj
 |       +-- of IN prep
 |           +-- locator NN pobj
 |               +-- a DT det
 |               +-- uniform JJ amod
 |               +-- resource NN nn
 |               +-- indicates VBZ rcmod
 |                   +-- which WDT nsubj
 |                   +-- concisely RB advmod
 |                   +-- location NN dobj
 |                       +-- the DT det
 |                       +-- of IN prep
 |                       |   +-- content NN pobj
 |                       |       +-- the DT det
 |                       +-- well RB cc
 |                       |   +-- as RB advmod
 |                       |   +-- as IN mwe
 |                       +-- protocol NN conj
 |                           +-- the DT det
 |                           +-- used VBN infmod
 |                               +-- to TO aux
 |                               +-- be VB auxpass
 |                               +-- retrieve VB xcomp
 |                                   +-- to TO aux
 |                                   +-- it PRP dobj
 +-- . . punct

57
Input: Optionally a time specification can be associated with content .
Parse:
associated VBN ROOT
 +-- specification NN nsubjpass
 |   +-- Optionally RB advmod
 |   +-- a DT det
 |   +-- time NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- with IN prep
 |   +-- content NN pobj
 +-- . . punct

58
Input: This allows content to be fetched into the system at some future time , or at future time intervals .
Parse:
allows VBZ ROOT
 +-- This DT nsubj
 +-- fetched VBN xcomp
 |   +-- content JJ nsubjpass
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- into IN prep
 |   |   +-- system NN pobj
 |   |       +-- the DT det
 |   +-- at IN prep
 |       +-- time NN pobj
 |       |   +-- some DT det
 |       |   +-- future JJ amod
 |       +-- , , punct
 |       +-- or CC cc
 |       +-- at IN conj
 |           +-- intervals NNS pobj
 |               +-- future JJ amod
 |               +-- time NN nn
 +-- . . punct

59
Input: Again , this is particularly useful for dealing with the storage and management of live content .
Parse:
useful JJ ROOT
 +-- Again RB advmod
 +-- , , punct
 +-- this DT nsubj
 +-- is VBZ cop
 +-- particularly RB advmod
 +-- for IN prep
 |   +-- dealing VBG pcomp
 |       +-- with IN prep
 |           +-- storage NN pobj
 |               +-- the DT det
 |               +-- and CC cc
 |               +-- management NN conj
 |               +-- of IN prep
 |                   +-- content NN pobj
 |                       +-- live JJ amod
 +-- . . punct

60
Input: . Policy Manager The policy manager layer of the Spectrum architecture has two main types of API functions .
Parse:
has VBZ ROOT
 +-- . . punct
 +-- Manager NNP nsubj
 |   +-- Policy NN nn
 |   +-- layer NN dep
 |       +-- The DT det
 |       +-- manager NN nn
 |       |   +-- policy NN nn
 |       +-- of IN prep
 |           +-- architecture NN pobj
 |               +-- the DT det
 |               +-- Spectrum JJ nn
 +-- types NNS dobj
     +-- two CD num
     +-- main JJ amod
     +-- of IN prep
         +-- functions NNS pobj
             +-- API NN nn

61
Input: First , there are functions that operate on managed storage areas and policy based references -LRB- prefs -RRB- to content stored there .
Parse:
are VBP ROOT
 +-- First RB advmod
 +-- , , punct
 +-- there EX expl
 +-- functions NNS nsubj
 |   +-- operate VBP rcmod
 |       +-- that WDT nsubj
 |       +-- on IN prep
 |           +-- areas NNS pobj
 |               +-- managed VBN amod
 |               +-- storage NN nn
 |               +-- and CC cc
 |               +-- references NNS conj
 |                   +-- based VBN amod
 |                   |   +-- policy NN dep
 |                   +-- -LRB- -LRB- punct
 |                   +-- prefs NNS dep
 |                   +-- -RRB- -RRB- punct
 |                   +-- to IN prep
 |                   |   +-- content NN pobj
 |                   +-- stored VBN partmod
 |                       +-- there RB advmod
 +-- . . punct

62
Input: Second , there are sets of functions used to implement each management policy .
Parse:
are VBP ROOT
 +-- Second RB advmod
 +-- , , punct
 +-- there EX expl
 +-- sets NNS nsubj
 |   +-- of IN prep
 |       +-- functions NNS pobj
 |           +-- used VBN partmod
 |               +-- implement VB xcomp
 |                   +-- to TO aux
 |                   +-- policy NN dobj
 |                       +-- each DT det
 |                       +-- management NN nn
 +-- . . punct

63
Input: The first class of functions is used by the content manager layer to access storage .
Parse:
used VBN ROOT
 +-- class NN nsubjpass
 |   +-- The DT det
 |   +-- first JJ amod
 |   +-- of IN prep
 |       +-- functions NNS pobj
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- layer NN pobj
 |       +-- the DT det
 |       +-- manager NN nn
 |           +-- content NN nn
 +-- access VB xcomp
 |   +-- to TO aux
 |   +-- storage NN dobj
 +-- . . punct

64
Input: Operations include create , open , and close These operations are used by the content manager to control its access to storage .
Parse:
used VBN ROOT
 +-- Operations NNS nsubjpass
 |   +-- include VBP partmod
 |       +-- create VB ccomp
 |           +-- , , punct
 |           +-- open JJ conj
 |           +-- and CC cc
 |           +-- close VB conj
 |               +-- operations NNS dobj
 |                   +-- These DT det
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- manager NN pobj
 |       +-- the DT det
 |       +-- content JJ amod
 +-- control VB xcomp
 |   +-- to TO aux
 |   +-- access NN dobj
 |       +-- its PRP$ poss
 |       +-- to IN prep
 |           +-- storage NN pobj
 +-- . . punct

65
Input: The policy manager '' s create operation is used to establish contact with a store for the first time .
Parse:
used VBN ROOT
 +-- operation NN nsubjpass
 |   +-- manager NN poss
 |   |   +-- The DT det
 |   |   +-- policy NN nn
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- create NN amod
 +-- is VBZ auxpass
 +-- establish VB xcomp
 |   +-- to TO aux
 |   +-- contact NN dobj
 |   |   +-- with IN prep
 |   |       +-- store NN pobj
 |   |           +-- a DT det
 |   +-- for IN prep
 |       +-- time NN pobj
 |           +-- the DT det
 |           +-- first JJ amod
 +-- . . punct

66
Input: Once this is done , the store can be open and closed using the appropriate routines .
Parse:
open JJ ROOT
 +-- done VBN advcl
 |   +-- Once IN mark
 |   +-- this DT nsubjpass
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- store NN nsubj
 |   +-- the DT det
 +-- can MD aux
 +-- be VB cop
 +-- and CC cc
 +-- closed JJ conj
 +-- using VBG xcomp
 |   +-- routines NNS dobj
 |       +-- the DT det
 |       +-- appropriate JJ amod
 +-- . . punct

67
Input: Note that the parameters used to create a store contain information on how to reach it .
Parse:
Note VB ROOT
 +-- contain VB ccomp
 |   +-- that IN mark
 |   +-- parameters NNS nsubj
 |   |   +-- the DT det
 |   |   +-- used VBD partmod
 |   |       +-- create VB xcomp
 |   |           +-- to TO aux
 |   |           +-- store NN dobj
 |   |               +-- a DT det
 |   +-- information NN dobj
 |       +-- on IN prep
 |           +-- reach VB pcomp
 |               +-- how WRB advmod
 |               +-- to TO aux
 |               +-- it PRP dobj
 +-- . . punct

68
Input: For example , local stores have a path associated with them , while remote stores have a remote host and remote path associated with them .
Parse:
have VBP ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- stores NNS nsubj
 |   +-- local JJ amod
 +-- path NN dobj
 |   +-- a DT det
 |   +-- associated VBN partmod
 |       +-- with IN prep
 |           +-- them PRP pobj
 +-- have VBP advcl
 |   +-- while IN mark
 |   +-- stores NNS nsubj
 |   |   +-- remote JJ amod
 |   +-- host NN dobj
 |       +-- a DT det
 |       +-- remote JJ amod
 |       +-- and CC cc
 |       +-- path NN conj
 |           +-- remote JJ amod
 |           +-- associated VBN partmod
 |               +-- with IN prep
 |                   +-- them PRP pobj
 +-- . . punct

69
Input: The information only needs to be passed to the policy manager once at create time .
Parse:
needs VBZ ROOT
 +-- information NN nsubj
 |   +-- The DT det
 +-- only RB advmod
 +-- passed VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- to IN prep
 |   |   +-- manager NN pobj
 |   |       +-- the DT det
 |   |       +-- policy NN nn
 |   +-- once RB advmod
 |       +-- at IN prep
 |           +-- time NN pobj
 |               +-- create JJ amod
 +-- . . punct

70
Input: For open operations , the policy manager will use cached information to contact the store .
Parse:
use VB ROOT
 +-- For IN prep
 |   +-- operations NNS pobj
 |       +-- open JJ amod
 +-- , , punct
 +-- manager NN nsubj
 |   +-- the DT det
 |   +-- policy NN nn
 +-- will MD aux
 +-- information NN dobj
 |   +-- cached VBN amod
 +-- contact VB xcomp
 |   +-- to TO aux
 |   +-- store NN dobj
 |       +-- the DT det
 +-- . . punct

71
Input: lookup The lookup operation provides a way for the content manager to query the policy manager about what content is currently present for a given URL .
Parse:
lookup VB ROOT
 +-- provides VBZ ccomp
 |   +-- operation NN nsubj
 |   |   +-- The DT det
 |   |   +-- lookup NN nn
 |   +-- way NN dobj
 |   |   +-- a DT det
 |   +-- query VB advcl
 |       +-- for IN mark
 |       +-- manager NN nsubj
 |       |   +-- the DT det
 |       |   +-- content NN nn
 |       +-- to TO aux
 |       +-- manager NN dobj
 |       |   +-- the DT det
 |       |   +-- policy NN nn
 |       +-- about IN prep
 |           +-- present JJ pcomp
 |               +-- content NN nsubj
 |               |   +-- what WDT det
 |               +-- is VBZ cop
 |               +-- currently RB advmod
 |               +-- for IN prep
 |                   +-- URL NN pobj
 |                       +-- a DT det
 |                       +-- given VBN amod
 +-- . . punct

72
Input: For continuous media time ranges of present media will be returned .
Parse:
returned VBN ROOT
 +-- For IN prep
 |   +-- time NN pobj
 |       +-- continuous JJ amod
 |       +-- media NNS nn
 +-- ranges NNS nsubjpass
 |   +-- of IN prep
 |       +-- media NNS pobj
 |           +-- present JJ amod
 +-- will MD aux
 +-- be VB auxpass
 +-- . . punct

73
Input: resource The resource routines are used to query the policy manager about its current resource usage .
Parse:
used VBN ROOT
 +-- routines NNS nsubjpass
 |   +-- resource VB amod
 |   +-- The DT det
 |   +-- resource NN nn
 +-- are VBP auxpass
 +-- query VB xcomp
 |   +-- to TO aux
 |   +-- manager NN dobj
 |   |   +-- the DT det
 |   |   +-- policy NN nn
 |   +-- about IN prep
 |       +-- usage NN pobj
 |           +-- its PRP$ poss
 |           +-- current JJ amod
 |           +-- resource NN nn
 +-- . . punct

74
Input: There are two resource routines one that applies to the store as a whole and another that applies to a particular policy reference .
Parse:
are VBP ROOT
 +-- There EX expl
 +-- routines NNS nsubj
 |   +-- two CD num
 |   +-- resource NN nn
 |   +-- one CD num
 |   +-- applies VBZ rcmod
 |   |   +-- that WDT nsubj
 |   |   +-- to IN prep
 |   |       +-- store NN pobj
 |   |           +-- the DT det
 |   |           +-- as IN prep
 |   |               +-- whole NN pobj
 |   |                   +-- a DT det
 |   +-- and CC cc
 |   +-- another DT conj
 |       +-- applies VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- to IN prep
 |               +-- reference NN pobj
 |                   +-- a DT det
 |                   +-- particular JJ amod
 |                   +-- policy NN nn
 +-- . . punct

75
Input: The resource API is extensible , we currently support queries on disk usage and I O load .
Parse:
extensible JJ ROOT
 +-- API NN nsubj
 |   +-- The DT det
 |   +-- resource NN nn
 +-- is VBZ cop
 +-- , , punct
 +-- support VBP conj
 |   +-- we PRP nsubj
 |   +-- currently RB advmod
 |   +-- queries NNS dobj
 |       +-- on IN prep
 |           +-- usage NN pobj
 |               +-- disk NN nn
 +-- and CC cc
 +-- load NN conj
 |   +-- I PRP nsubj
 |   +-- O MD aux
 +-- . . punct

76
Input: pref establish update The pref establish operation is used by the content manager to reference content on the store .
Parse:
establish VB ROOT
 +-- pref NN nsubj
 +-- update NN dobj
 |   +-- used VBN rcmod
 |       +-- operation NN nsubjpass
 |       |   +-- The DT det
 |       |   +-- establish NN nn
 |       |       +-- pref NN nn
 |       +-- is VBZ auxpass
 |       +-- by IN prep
 |       |   +-- manager NN pobj
 |       |       +-- the DT det
 |       |       +-- content JJ amod
 |       +-- reference VB xcomp
 |           +-- to TO aux
 |           +-- content NN dobj
 |           +-- on IN prep
 |               +-- store NN pobj
 |                   +-- the DT det
 +-- . . punct

77
Input: If the content is not present , this call will result in the content being fetched -LRB- or being scheduled to be fetched if the content is not currently available -RRB- .
Parse:
result VB ROOT
 +-- present JJ advcl
 |   +-- If IN mark
 |   +-- content NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ cop
 |   +-- not RB neg
 +-- , , punct
 +-- call NN nsubj
 |   +-- this DT det
 +-- will MD aux
 +-- in IN prep
 |   +-- fetched VBN pcomp
 |       +-- content NN nsubjpass
 |       |   +-- the DT det
 |       +-- being VBG auxpass
 |       +-- -LRB- -LRB- punct
 |       +-- or CC cc
 |       +-- scheduled VBN conj
 |       |   +-- being VBG auxpass
 |       |   +-- fetched VBN xcomp
 |       |       +-- to TO aux
 |       |       +-- be VB auxpass
 |       |       +-- available JJ advcl
 |       |           +-- if IN mark
 |       |           +-- content NN nsubj
 |       |           |   +-- the DT det
 |       |           +-- is VBZ cop
 |       |           +-- not RB neg
 |       |           +-- currently RB advmod
 |       +-- -RRB- -RRB- punct
 +-- . . punct

78
Input: Parameters of this function include the URL to store it under , the URL to fetch data from if it is not present , the policy to store the content under , and the arguments used to parameterize the policy .
Parse:
include VBP ROOT
 +-- Parameters NNS nsubj
 |   +-- of IN prep
 |       +-- function NN pobj
 |           +-- this DT det
 +-- URL NNS dobj
 |   +-- the DT det
 |   +-- store VB infmod
 |   |   +-- to TO aux
 |   |   +-- it PRP dobj
 |   |   +-- under IN advmod
 |   +-- , , punct
 |   +-- URL NN conj
 |   |   +-- the DT det
 |   |   +-- fetch VB infmod
 |   |       +-- to TO aux
 |   |       +-- data NNS dobj
 |   |       +-- from IN prep
 |   |       +-- present JJ advcl
 |   |           +-- if IN mark
 |   |           +-- it PRP nsubj
 |   |           +-- is VBZ cop
 |   |           +-- not RB neg
 |   +-- policy NN conj
 |   |   +-- the DT det
 |   |   +-- store VB infmod
 |   |       +-- to TO aux
 |   |       +-- content NN dobj
 |   |       |   +-- the DT det
 |   |       +-- under IN prep
 |   +-- and CC cc
 |   +-- arguments NNS conj
 |       +-- the DT det
 |       +-- used VBN partmod
 |           +-- parameterize VB xcomp
 |               +-- to TO aux
 |               +-- policy NN dobj
 |                   +-- the DT det
 +-- . . punct

79
Input: The result of a successful pref establish operation is a policy reference ID string .
Parse:
string NN ROOT
 +-- result NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- operation NN pobj
 |           +-- a DT det
 |           +-- successful JJ amod
 |           +-- establish NN nn
 |               +-- pref NN nn
 +-- is VBZ cop
 +-- a DT det
 +-- reference NN nn
 |   +-- policy NN nn
 +-- ID NN nn
 +-- . . punct

80
Input: This ID can be used with the update operation to either change the storage policy parameters or delete the reference entirely .
Parse:
used VBN ROOT
 +-- ID NN nsubjpass
 |   +-- This DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- with IN prep
 |   +-- operation NN pobj
 |       +-- the DT det
 |       +-- update NN nn
 +-- change VB xcomp
 |   +-- to IN aux
 |   +-- either CC preconj
 |   +-- parameters NNS dobj
 |   |   +-- the DT det
 |   |   +-- policy NN nn
 |   |       +-- storage NN nn
 |   +-- or CC cc
 |   +-- delete VB conj
 |       +-- reference NN dobj
 |       |   +-- the DT det
 |       +-- entirely RB advmod
 +-- . . punct

81
Input: The second group of policy manager functions are used to implement all the polices supported by Spectrum .
Parse:
used VBN ROOT
 +-- group NN nsubjpass
 |   +-- The DT det
 |   +-- second JJ amod
 |   +-- of IN prep
 |       +-- functions NNS pobj
 |           +-- manager NN nn
 |               +-- policy NN nn
 +-- are VBP auxpass
 +-- implement VB xcomp
 |   +-- to TO aux
 |   +-- polices NNS dobj
 |       +-- all PDT predet
 |       +-- the DT det
 |       +-- supported VBN partmod
 |           +-- by IN prep
 |               +-- Spectrum NNP pobj
 +-- . . punct

82
Input: We envision a small set of base level policy functions that can be parameterized to produce a wide range of storage polices .
Parse:
envision VBP ROOT
 +-- We PRP nsubj
 +-- set NN dobj
 |   +-- a DT det
 |   +-- small JJ amod
 |   +-- of IN prep
 |       +-- functions NNS pobj
 |           +-- level NN nn
 |           |   +-- base JJ amod
 |           +-- policy NN nn
 |           +-- parameterized VBN rcmod
 |               +-- that WDT nsubj
 |               +-- can MD aux
 |               +-- be VB cop
 |               +-- produce VB xcomp
 |                   +-- to TO aux
 |                   +-- range NN dobj
 |                       +-- a DT det
 |                       +-- wide JJ amod
 |                       +-- of IN prep
 |                           +-- polices NNS pobj
 |                               +-- storage NN nn
 +-- . . punct

83
Input: For example , a policy that implements recording a repeating time window can be parameterized to function daily , weekly , or monthly .
Parse:
parameterized VBN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- policy NN nsubjpass
 |   +-- a DT det
 |   +-- implements VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- recording VBG xcomp
 |           +-- window NN dobj
 |               +-- a DT det
 |               +-- repeating JJ amod
 |               +-- time NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- function VB xcomp
 |   +-- to TO aux
 |   +-- daily RB advmod
 |       +-- , , punct
 |       +-- weekly JJ conj
 |       +-- or CC cc
 |       +-- monthly RB conj
 +-- . . punct

84
Input: Note that the policy manager is only concerned with executing a specific policy .
Parse:
Note VB ROOT
 +-- concerned VBN ccomp
 |   +-- that IN mark
 |   +-- manager NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- policy NN nn
 |   +-- is VBZ auxpass
 |   +-- only RB advmod
 |   +-- with IN prep
 |       +-- executing VBG pcomp
 |           +-- policy NN dobj
 |               +-- a DT det
 |               +-- specific JJ amod
 +-- . . punct

85
Input: The higher level reasons for choosing a given policy are handled by the content and application manager .
Parse:
handled VBN ROOT
 +-- reasons NNS nsubjpass
 |   +-- The DT det
 |   +-- level NN nn
 |   |   +-- higher JJR amod
 |   +-- for IN prep
 |       +-- choosing VBG pcomp
 |           +-- policy NN dobj
 |               +-- a DT det
 |               +-- given VBN amod
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- manager NN pobj
 |       +-- the DT det
 |       +-- content NN nn
 |           +-- and CC cc
 |           +-- application NN conj
 +-- . . punct

86
Input: A base policy is implemented using six functions establish called when a pref is established with the required URLs and base policy '' s parameters .
Parse:
implemented VBN ROOT
 +-- policy NN nsubjpass
 |   +-- A DT det
 |   +-- base NN nn
 +-- is VBZ auxpass
 +-- using VBG xcomp
 |   +-- establish VB xcomp
 |       +-- functions NNS nsubj
 |       |   +-- six CD num
 |       +-- called VBN dep
 +-- established VBN advcl
 |   +-- when WRB advmod
 |   +-- pref NN nsubjpass
 |   |   +-- a DT det
 |   +-- is VBZ auxpass
 |   +-- with IN prep
 |       +-- parameters NNS pobj
 |           +-- policy NN poss
 |               +-- the DT det
 |               +-- required VBN amod
 |               +-- URLs NN nn
 |               |   +-- and CC cc
 |               |   +-- base NN conj
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- . . punct

87
Input: The establish routine references any content already present in the store and then determines the next time it needs to take action -LRB- e.g .
Parse:
determines VBZ ROOT
 +-- references NNS nsubj
 |   +-- The DT det
 |   +-- establish NN amod
 |   +-- routine JJ amod
 |   +-- content NN dep
 |       +-- any DT det
 |       +-- present JJ amod
 |           +-- already RB advmod
 |           +-- in IN prep
 |           |   +-- store NN pobj
 |           |       +-- the DT det
 |           +-- and CC cc
 |           +-- then RB advmod
 +-- time NN dobj
 |   +-- the DT det
 |   +-- next JJ amod
 |   +-- needs VBZ rcmod
 |       +-- it PRP nsubj
 |       +-- take VB xcomp
 |           +-- to TO aux
 |           +-- action NN dobj
 |               +-- -LRB- -LRB- punct
 |               +-- e.g UH dep
 +-- . . punct

88
Input: start a download -RRB- and schedules a callback for that time .
Parse:
start VB ROOT
 +-- download NN dobj
 |   +-- a DT det
 +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- schedules VBZ conj
 |   +-- callback NN dobj
 |   |   +-- a DT det
 |   +-- for IN prep
 |       +-- time NN pobj
 |           +-- that DT det
 +-- . . punct

89
Input: It can also register to receive callbacks if new content is received for a given URL .
Parse:
register VB ROOT
 +-- It PRP nsubj
 +-- can MD aux
 +-- also RB advmod
 +-- receive VB xcomp
 |   +-- to TO aux
 |   +-- callbacks NNS dobj
 +-- received VBN advcl
 |   +-- if IN mark
 |   +-- content NN nsubjpass
 |   |   +-- new JJ amod
 |   +-- is VBZ auxpass
 |   +-- for IN prep
 |       +-- URL NN pobj
 |           +-- a DT det
 |           +-- given VBN amod
 +-- . . punct

90
Input: update called to change the parameters of a pref , or to discard the policy reference .
Parse:
called VBN ROOT
 +-- update NN nsubj
 +-- change VB xcomp
 |   +-- to TO aux
 |   +-- parameters NNS dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- pref NN pobj
 |   |           +-- a DT det
 |   +-- , , punct
 |   +-- or CC cc
 |   +-- discard VB conj
 |       +-- to TO aux
 |       +-- reference NN dobj
 |           +-- the DT det
 |           +-- policy NN nn
 +-- . . punct

91
Input: newclip called when a chunk of new content is received for a URL of interest .
Parse:
called VBN ROOT
 +-- newclip NN nsubj
 +-- received VBN advcl
 |   +-- when WRB advmod
 |   +-- chunk NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- of IN prep
 |   |       +-- content NN pobj
 |   |           +-- new JJ amod
 |   +-- is VBZ auxpass
 |   +-- for IN prep
 |       +-- URL NN pobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- interest NN pobj
 +-- . . punct

92
Input: The base policy typically arranges for newclip to be called for a given URL when the pref is established .
Parse:
arranges VBZ ROOT
 +-- policy NN nsubj
 |   +-- The DT det
 |   +-- base NN nn
 +-- typically RB advmod
 +-- called VBN advcl
 |   +-- for IN mark
 |   +-- newclip NN nsubjpass
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- for IN prep
 |   |   +-- URL NN pobj
 |   |       +-- a DT det
 |   |       +-- given VBN amod
 |   +-- established VBN advcl
 |       +-- when WRB advmod
 |       +-- pref NN nsubjpass
 |       |   +-- the DT det
 |       +-- is VBZ auxpass
 +-- . . punct

93
Input: When newclip is called , the base policy checks its parameters to determine if it wishes to add a reference to the clip just received .
Parse:
checks VBZ ROOT
 +-- called VBN advcl
 |   +-- When WRB advmod
 |   +-- newclip NN nsubjpass
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- policy NN nsubj
 |   +-- the DT det
 |   +-- base NN nn
 +-- parameters NNS dobj
 |   +-- its PRP$ poss
 +-- determine VB xcomp
 |   +-- to TO aux
 |   +-- wishes VBZ advcl
 |       +-- if IN mark
 |       +-- it PRP nsubj
 |       +-- add VB xcomp
 |           +-- to TO aux
 |           +-- reference NN dobj
 |           |   +-- a DT det
 |           |   +-- to IN prep
 |           |       +-- clip NN pobj
 |           |           +-- the DT det
 |           +-- received VBD dep
 |               +-- just RB advmod
 +-- . . punct

94
Input: callback called when the pref schedules a timer based callback .
Parse:
called VBN ROOT
 +-- callback NN nsubj
 +-- schedules VBZ advcl
 |   +-- when WRB advmod
 |   +-- pref NN nsubj
 |   |   +-- the DT det
 |   +-- callback NN dobj
 |       +-- a DT det
 |       +-- based VBN amod
 |           +-- timer NN dep
 +-- . . punct

95
Input: This is a useful wakeup mechanism for prefs that need to be idle for a long period of time -LRB- e.g .
Parse:
mechanism NN ROOT
 +-- This DT nsubj
 +-- is VBZ cop
 +-- a DT det
 +-- useful JJ amod
 +-- wakeup NN nn
 +-- for IN prep
 |   +-- prefs NNS pobj
 |       +-- need VBP rcmod
 |           +-- that WDT nsubj
 |           +-- idle JJ xcomp
 |               +-- to TO aux
 |               +-- be VB cop
 |               +-- for IN prep
 |                   +-- period NN pobj
 |                       +-- a DT det
 |                       +-- long JJ amod
 |                       +-- of IN prep
 |                       |   +-- time NN pobj
 |                       +-- -LRB- -LRB- punct
 |                       +-- e.g UH dep
 +-- . . punct

96
Input: between programs -RRB- .
Parse:
between IN ROOT
 +-- programs NNS pobj
 +-- -RRB- -RRB- punct
 +-- . . punct

97
Input: boot shutdown called when the content management system is booting or shutting down .
Parse:
called VBD ROOT
 +-- shutdown NN nsubj
 |   +-- boot NN nn
 +-- booting VBG advcl
 |   +-- when WRB advmod
 |   +-- system NN nsubj
 |   |   +-- the DT det
 |   |   +-- content NN nn
 |   |   +-- management NN nn
 |   +-- is VBZ aux
 |   +-- or CC cc
 |   +-- shutting VBG conj
 |       +-- down RP prt
 +-- . . punct

98
Input: The boot operation is typically used to schedule initial callbacks or start I O operations .
Parse:
used VBN ROOT
 +-- operation NN nsubjpass
 |   +-- The DT det
 |   +-- boot NN nn
 +-- is VBZ auxpass
 +-- typically RB advmod
 +-- schedule VB xcomp
 |   +-- to TO aux
 |   +-- callbacks NNS dobj
 |   |   +-- initial JJ amod
 |   +-- or CC cc
 |   +-- start VB conj
 |       +-- O VBP ccomp
 |           +-- I PRP nsubj
 |           +-- operations NNS dobj
 +-- . . punct

99
Input: The shutdown operation is used to gracefully shutdown I O streams and save state .
Parse:
used VBN ROOT
 +-- operation NN nsubjpass
 |   +-- The DT det
 |   +-- shutdown NN nn
 +-- is VBZ auxpass
 +-- shutdown NN xcomp
 |   +-- to TO aux
 |   +-- gracefully RB advmod
 |   +-- O VBP rcmod
 |       +-- I PRP nsubj
 |       +-- streams NNS dobj
 |       +-- and CC cc
 |       +-- save VB conj
 |           +-- state NN dobj
 +-- . . punct

100
Input: . Storage Manager The role of Spectrum '' s storage manager is to control all I O operations associated with a given store .
Parse:
is VBZ ROOT
 +-- . . punct
 +-- manager NN nsubj
 |   +-- Manager NNP poss
 |   |   +-- Storage NN nn
 |   |   +-- role NN dep
 |   |   |   +-- The DT det
 |   |   |   +-- of IN prep
 |   |   |       +-- Spectrum NNP pobj
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- storage NN nn
 +-- control VB xcomp
     +-- to TO aux
     +-- all DT dobj
         +-- O VBP rcmod
             +-- I PRP nsubj
             +-- operations NNS dobj
                 +-- associated VBN partmod
                     +-- with IN prep
                         +-- store NN pobj
                             +-- a DT det
                             +-- given VBN amod

101
Input: Spectrum '' s storage manager supports storing content both on a local filesystem and on a remote fileserver -LRB- e.g .
Parse:
supports VBZ ROOT
 +-- manager NN nsubj
 |   +-- Spectrum NNP poss
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- storage NN nn
 +-- storing VBG xcomp
 |   +-- content NN dobj
 |   +-- on IN prep
 |       +-- both DT preconj
 |       +-- filesystem NN pobj
 |       |   +-- a DT det
 |       |   +-- local JJ amod
 |       +-- and CC cc
 |       +-- on IN conj
 |           +-- fileserver NN pobj
 |               +-- a DT det
 |               +-- remote JJ amod
 |               +-- -LRB- -LRB- punct
 |               +-- e.g NNP dep
 +-- . . punct

102
Input: a storage appliance -RRB- .
Parse:
appliance NN ROOT
 +-- a DT det
 +-- storage NN nn
 +-- -RRB- -RRB- punct
 +-- . . punct

103
Input: For continuous media , at the storage manager level content is stored as a collection of time based chunks .
Parse:
stored VBN ROOT
 +-- For IN prep
 |   +-- media NNS pobj
 |       +-- continuous JJ amod
 +-- , , punct
 +-- at IN prep
 |   +-- content NN pobj
 |       +-- the DT det
 |       +-- level NN nn
 |           +-- manager NN nn
 |               +-- storage NN nn
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- collection NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- chunks NNS pobj
 |               +-- based VBN amod
 |                   +-- time NN dep
 +-- . . punct

104
Input: Depending on the underlying filesystem , a chunk could correspond to a single file or a data node in a storage database .
Parse:
correspond VB ROOT
 +-- Depending VBG prep
 |   +-- on IN pcomp
 |       +-- filesystem NN pobj
 |           +-- the DT det
 |           +-- underlying VBG amod
 +-- , , punct
 +-- chunk NN nsubj
 |   +-- a DT det
 +-- could MD aux
 +-- to IN prep
 |   +-- file NN pobj
 |       +-- a DT det
 |       +-- single JJ amod
 |       +-- or CC cc
 |       +-- node NN conj
 |       |   +-- a DT det
 |       |   +-- data NNS nn
 |       +-- in IN prep
 |           +-- database NN pobj
 |               +-- a DT det
 |               +-- storage NN nn
 +-- . . punct

105
Input: The two main storage manager operations are input and output .
Parse:
input NN ROOT
 +-- operations NNS nsubj
 |   +-- The DT det
 |   +-- two CD num
 |   +-- main JJ amod
 |   +-- manager NN nn
 |       +-- storage NN nn
 +-- are VBP cop
 +-- and CC cc
 +-- output NN conj
 +-- . . punct

106
Input: The input routine is used to store content in a store under a given name .
Parse:
used VBN ROOT
 +-- routine NN nsubjpass
 |   +-- The DT det
 |   +-- input NN nn
 +-- is VBZ auxpass
 +-- store VB xcomp
 |   +-- to TO aux
 |   +-- content NN dobj
 |   +-- in IN prep
 |   |   +-- store NN pobj
 |   |       +-- a DT det
 |   +-- under IN prep
 |       +-- name NN pobj
 |           +-- a DT det
 |           +-- given VBN amod
 +-- . . punct

107
Input: The output routine is used to send data from the store to a client .
Parse:
used VBN ROOT
 +-- routine NN nsubjpass
 |   +-- The DT det
 |   +-- output NN nn
 +-- is VBZ auxpass
 +-- send VB xcomp
 |   +-- to TO aux
 |   +-- data NNS dobj
 |   +-- from IN prep
 |   |   +-- store NN pobj
 |   |       +-- the DT det
 |   +-- to IN prep
 |       +-- client NN pobj
 |           +-- a DT det
 +-- . . punct

108
Input: For streaming media both the input and output routines take time ranges that schedule when the I O operation should happen , and both routines return an I O handle that can be used to modify or cancel the I O request in the future .
Parse:
take VBP ROOT
 +-- For IN prep
 |   +-- media NNS pobj
 |       +-- streaming VBG amod
 +-- routines NNS nsubj
 |   +-- both CC predet
 |   +-- the DT det
 |   +-- input NN nn
 |       +-- and CC cc
 |       +-- output NN conj
 +-- ranges VBZ dobj
 |   +-- time NN nn
 |   +-- schedule NN rcmod
 |       +-- that WDT nsubj
 |       +-- happen VB advcl
 |           +-- when WRB advmod
 |           +-- operation NN nsubj
 |           |   +-- the DT det
 |           |   +-- I PRP nn
 |           |   +-- O VBP nn
 |           +-- should MD aux
 +-- , , punct
 +-- and CC cc
 +-- return VBP conj
 |   +-- routines NNS nsubj
 |   |   +-- both DT det
 |   +-- handle VBP dobj
 |       +-- an DT det
 |       +-- I PRP nsubj
 |       +-- O MD aux
 |       +-- used VBN rcmod
 |           +-- that WDT nsubjpass
 |           +-- can MD aux
 |           +-- be VB auxpass
 |           +-- modify VB xcomp
 |               +-- to TO aux
 |               +-- or CC cc
 |               +-- cancel VB conj
 |               +-- request NN dobj
 |                   +-- the DT dobj
 |                   +-- I PRP nsubj
 |                   +-- O MD aux
 |                   +-- in IN prep
 |                       +-- future NN pobj
 |                           +-- the DT det
 +-- . . punct

109
Input: Much like the policy manager , the storage manager also provides API functions to create , open , and close stores .
Parse:
provides VBZ ROOT
 +-- like IN prep
 |   +-- Much RB advmod
 |   +-- manager NN pobj
 |       +-- the DT det
 |       +-- policy NN nn
 +-- , , punct
 +-- manager NN nsubj
 |   +-- the DT det
 |   +-- storage NN nn
 +-- also RB advmod
 +-- functions NNS dobj
 |   +-- API NN nn
 +-- create VB xcomp
 |   +-- to TO aux
 |   +-- , , punct
 |   +-- open JJ conj
 |   +-- and CC cc
 |   +-- close JJ conj
 |   +-- stores NNS dobj
 +-- . . punct

110
Input: It also supports operations to query the resource usages and options supported by the store .
Parse:
supports VBZ ROOT
 +-- It PRP nsubj
 +-- also RB advmod
 +-- operations NNS dobj
 |   +-- query VB infmod
 |       +-- to TO aux
 |       +-- usages NNS dobj
 |           +-- the DT det
 |           +-- resource NN nn
 |           +-- and CC cc
 |           +-- options NNS conj
 |           +-- supported VBN partmod
 |               +-- by IN prep
 |                   +-- store NN pobj
 |                       +-- the DT det
 +-- . . punct

111
Input: Finally , the storage manager also has a discard routine that may be used by the policy manager to inform the store to remove content from the store. .
Parse:
has VBZ ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- manager NN nsubj
 |   +-- the DT det
 |   +-- storage NN nn
 +-- also RB advmod
 +-- routine NN dobj
 |   +-- a DT det
 |   +-- discard JJ nn
 |   +-- used VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- may MD aux
 |       +-- be VB auxpass
 |       +-- by IN prep
 |       |   +-- manager NN pobj
 |       |       +-- the DT det
 |       |       +-- policy NN nn
 |       +-- inform VB xcomp
 |           +-- to TO aux
 |           +-- store NN dobj
 |           |   +-- the DT det
 |           +-- remove VB xcomp
 |               +-- to TO aux
 |               +-- content NN dobj
 |               +-- from IN prep
 |                   +-- store. NN pobj
 |                       +-- the DT det
 +-- . . punct
