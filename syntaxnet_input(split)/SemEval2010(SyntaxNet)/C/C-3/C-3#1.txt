
1
Input: Grids are inherently heterogeneous and dynamic .
Parse:
heterogeneous JJ ROOT
 +-- Grids NNS nsubj
 +-- are VBP cop
 +-- inherently RB advmod
 +-- and CC cc
 +-- dynamic JJ conj
 +-- . . punct

2
Input: One important problem in grid computing is resource selection , that is , finding an appropriate resource set for the application .
Parse:
selection NN ROOT
 +-- problem NN nsubj
 |   +-- One CD num
 |   +-- important JJ amod
 |   +-- in IN prep
 |       +-- computing NN pobj
 |           +-- grid NN nn
 +-- is VBZ cop
 +-- resource NN nn
 +-- , , punct
 +-- is VBZ ccomp
 |   +-- that DT nsubj
 |   +-- , , punct
 |   +-- finding VBG xcomp
 |       +-- resource NN dobj
 |           +-- an DT det
 |           +-- appropriate JJ amod
 |           +-- set VBN partmod
 |               +-- for IN prep
 |                   +-- application NN pobj
 |                       +-- the DT det
 +-- . . punct

3
Input: Another problem is adaptation to the changing characteristics of the grid environment .
Parse:
adaptation NN ROOT
 +-- problem NN nsubj
 |   +-- Another DT det
 +-- is VBZ cop
 +-- to IN prep
 |   +-- characteristics NNS pobj
 |       +-- the DT det
 |       +-- changing VBG amod
 |       +-- of IN prep
 |           +-- environment NN pobj
 |               +-- the DT det
 |               +-- grid NN nn
 +-- . . punct

4
Input: Existing solutions to these two problems require that a performance model for an application is known .
Parse:
require VBP ROOT
 +-- solutions NNS nsubj
 |   +-- Existing VBG amod
 |   +-- to IN prep
 |       +-- problems NNS pobj
 |           +-- these DT det
 |           +-- two CD num
 +-- known VBN ccomp
 |   +-- that IN mark
 |   +-- model NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- performance NN nn
 |   |   +-- for IN prep
 |   |       +-- application NN pobj
 |   |           +-- an DT det
 |   +-- is VBZ auxpass
 +-- . . punct

5
Input: However , constructing such models is a complex task .
Parse:
task NN ROOT
 +-- However RB advmod
 +-- , , punct
 +-- constructing VBG csubj
 |   +-- models NNS dobj
 |       +-- such JJ amod
 +-- is VBZ cop
 +-- a DT det
 +-- complex JJ amod
 +-- . . punct

6
Input: In this paper , we investigate an approach that does not require performance models .
Parse:
investigate VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- approach NN dobj
 |   +-- an DT det
 |   +-- require VB rcmod
 |       +-- that WDT nsubj
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- models NNS dobj
 |           +-- performance NN nn
 +-- . . punct

7
Input: We start an application on any set of resources .
Parse:
start VBP ROOT
 +-- We PRP nsubj
 +-- application NN dobj
 |   +-- an DT det
 +-- on IN prep
 |   +-- set NN pobj
 |       +-- any DT det
 |       +-- of IN prep
 |           +-- resources NNS pobj
 +-- . . punct

8
Input: During the application run , we periodically collect the statistics about the application run and deduce application requirements from these statistics .
Parse:
collect VBP ROOT
 +-- During IN prep
 |   +-- run NN pobj
 |       +-- the DT det
 |       +-- application NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- periodically RB advmod
 +-- statistics NNS dobj
 |   +-- the DT det
 |   +-- about IN prep
 |       +-- requirements NNS pobj
 |           +-- the DT det
 |           +-- run NN nn
 |           |   +-- application NN nn
 |           |   +-- and CC cc
 |           |   +-- deduce VB conj
 |           +-- application NN nn
 |           +-- from IN prep
 |               +-- statistics NNS pobj
 |                   +-- these DT det
 +-- . . punct

9
Input: Then , we adjust the resource set to better fit the application needs .
Parse:
adjust VBP ROOT
 +-- Then RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- set NN dobj
 |   +-- the DT det
 |   +-- resource NN nn
 +-- fit VB xcomp
 |   +-- to IN aux
 |   +-- better RB advmod
 |   +-- needs VBZ dobj
 |       +-- the DT det
 |       +-- application NN nn
 +-- . . punct

10
Input: This approach allows us to avoid performance bottlenecks , such as overloaded WAN links or very slow processors , and therefore can yield significant performance improvements .
Parse:
allows VBZ ROOT
 +-- approach NN nsubj
 |   +-- This DT det
 +-- avoid VB xcomp
 |   +-- us PRP nsubj
 |   +-- to TO aux
 |   +-- bottlenecks NNS dobj
 |   |   +-- performance NN nn
 |   |   +-- , , punct
 |   |   +-- as IN prep
 |   |       +-- such JJ mwe
 |   |       +-- links NNS pobj
 |   |           +-- overloaded VBN amod
 |   |           +-- WAN NNP nn
 |   |           +-- or CC cc
 |   |           +-- processors NNS conj
 |   |               +-- slow JJ amod
 |   |                   +-- very RB advmod
 |   +-- and CC cc
 |   +-- therefore RB advmod
 |   +-- yield VB conj
 |       +-- can MD aux
 |       +-- improvements NNS dobj
 |           +-- significant JJ amod
 |           +-- performance NN nn
 +-- . . punct

11
Input: We evaluate our approach in a number of scenarios typical for the Grid .
Parse:
evaluate VBP ROOT
 +-- We PRP nsubj
 +-- approach NN dobj
 |   +-- our PRP$ poss
 |   +-- in IN prep
 |       +-- number NN pobj
 |           +-- a DT det
 |           +-- of IN prep
 |           |   +-- scenarios NNS pobj
 |           +-- typical JJ amod
 |               +-- for IN prep
 |                   +-- Grid NNP pobj
 |                       +-- the DT det
 +-- . . punct

12
Input: Categories and Subject Descriptors C.. -LRB- COMPUTER COMMUNICATION NETWORKS -RRB- Distributed Systems Distributed .
Parse:
Distributed VBN ROOT
 +-- Categories NNS nsubj
 |   +-- and CC cc
 |   +-- Subject NNP conj
 |       +-- Descriptors NNPS dobj
 |       +-- C.. SYM dep
 |       +-- -LRB- -LRB- punct
 |       +-- NETWORKS NNP dep
 |       |   +-- COMPUTER NNP nn
 |       |   +-- COMMUNICATION NNP nn
 |       +-- -RRB- -RRB- punct
 +-- Distributed VBN dobj
 |   +-- Systems NNPS nn
 +-- . . punct
