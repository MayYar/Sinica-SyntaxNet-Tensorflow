
1
Input: A number of Grid projects address the question of resource selection and adaptation .
Parse:
address VBP ROOT
 +-- number NN nsubj
 |   +-- A DT det
 |   +-- of IN prep
 |       +-- projects NNS pobj
 |           +-- Grid JJ amod
 +-- question NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- selection NN pobj
 |           +-- resource NN nn
 |           +-- and CC cc
 |           +-- adaptation NN conj
 +-- . . punct

2
Input: In GrADS -LRB- -RRB- and ASSIST -LRB- -RRB- , resource selection and adaptation requires a performance model that allows predicting application runtimes .
Parse:
requires VBZ ROOT
 +-- In IN prep
 |   +-- GrADS NNP pobj
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 |       +-- and CC cc
 |       +-- ASSIST NN conj
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- , , punct
 +-- selection NN nsubj
 |   +-- resource NN nn
 |   +-- and CC cc
 |   +-- adaptation NN conj
 +-- model NN dobj
 |   +-- a DT det
 |   +-- performance NN nn
 |   +-- allows VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- predicting VBG xcomp
 |           +-- runtimes NNS dobj
 |               +-- application NN nn
 +-- . . punct

3
Input: In the resource selection phase , a number of possible resource sets is examined and the set of resources with the shortest predicted runtime is selected .
Parse:
examined VBN ROOT
 +-- In IN prep
 |   +-- phase NN pobj
 |       +-- the DT det
 |       +-- selection NN nn
 |           +-- resource NN nn
 +-- , , punct
 +-- number NN nsubjpass
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- sets NNS pobj
 |           +-- possible JJ amod
 |           +-- resource NN nn
 +-- is VBZ auxpass
 +-- and CC cc
 +-- selected VBN conj
 |   +-- set NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |   |   +-- resources NNS pobj
 |   |   +-- with IN prep
 |   |       +-- runtime NN pobj
 |   |           +-- the DT det
 |   |           +-- predicted VBN amod
 |   |               +-- shortest JJS dep
 |   +-- is VBZ auxpass
 +-- . . punct

4
Input: If performance degradation is detected during the computation , the resource selection phase is repeated .
Parse:
repeated VBN ROOT
 +-- detected VBN advcl
 |   +-- If IN mark
 |   +-- degradation NN nsubjpass
 |   |   +-- performance NN nn
 |   +-- is VBZ auxpass
 |   +-- during IN prep
 |       +-- computation NN pobj
 |           +-- the DT det
 +-- , , punct
 +-- phase NN nsubjpass
 |   +-- the DT det
 |   +-- selection NN nn
 |       +-- resource NN nn
 +-- is VBZ auxpass
 +-- . . punct

5
Input: GrADS uses the ratio of the predicted execution times -LRB- of certain application phases -RRB- to the real execution times as an indicator of application performance .
Parse:
uses VBZ ROOT
 +-- GrADS NNP nsubj
 +-- ratio NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- times NNS pobj
 |           +-- the DT det
 |           +-- predicted VBN amod
 |           +-- execution NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- of IN prep
 |           |   +-- phases NNS pobj
 |           |       +-- certain JJ amod
 |           |       +-- application NN nn
 |           +-- -RRB- -RRB- punct
 +-- to IN prep
 |   +-- times NNS pobj
 |       +-- the DT det
 |       +-- execution NN nn
 |           +-- real JJ amod
 +-- as IN prep
 |   +-- indicator NN pobj
 |       +-- an DT det
 |       +-- of IN prep
 |           +-- performance NN pobj
 |               +-- application NN nn
 +-- . . punct

6
Input: ASSIST uses the number of iterations per time unit -LRB- for iterative applications -RRB- or the number of tasks per time unit -LRB- for regular master worker applications -RRB- as a performance indicator .
Parse:
uses VBZ ROOT
 +-- ASSIST NN nsubj
 +-- number NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- unit NN pobj
 |   |       +-- iterations NNS nn
 |   |           +-- per IN prep
 |   |               +-- time NN pobj
 |   +-- -LRB- -LRB- punct
 |   +-- for IN prep
 |   |   +-- applications NNS pobj
 |   |       +-- iterative JJ amod
 |   +-- -RRB- -RRB- punct
 |   +-- or CC cc
 |   +-- number NN conj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- tasks NNS pobj
 |       |       +-- per IN prep
 |       |           +-- unit NN pobj
 |       |               +-- time NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- for IN prep
 |       |   +-- applications NNS pobj
 |       |       +-- regular JJ amod
 |       |       +-- worker NN nn
 |       |           +-- master NN nn
 |       +-- -RRB- -RRB- punct
 +-- as IN prep
 |   +-- indicator NN pobj
 |       +-- a DT det
 |       +-- performance NN nn
 +-- . . punct

7
Input: The main difference between these approaches and our approach is the use of performance models .
Parse:
use NN ROOT
 +-- difference NN nsubj
 |   +-- The DT det
 |   +-- main JJ amod
 |   +-- between IN prep
 |       +-- approaches NNS pobj
 |           +-- these DT det
 |           +-- and CC cc
 |           +-- approach NN conj
 |               +-- our PRP$ poss
 +-- is VBZ cop
 +-- the DT det
 +-- of IN prep
 |   +-- models NNS pobj
 |       +-- performance NN nn
 +-- . . punct

8
Input: The main advantage is that once the performance model is known , the system is able to take more accurate migration decisions than with our approach .
Parse:
is VBZ ROOT
 +-- advantage NN nsubj
 |   +-- The DT det
 |   +-- main JJ amod
 +-- able JJ ccomp
 |   +-- that IN mark
 |   +-- known VBN advcl
 |   |   +-- once IN mark
 |   |   +-- model NN nsubjpass
 |   |   |   +-- the DT det
 |   |   |   +-- performance NN nn
 |   |   +-- is VBZ auxpass
 |   +-- , , punct
 |   +-- system NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ cop
 |   +-- take VB xcomp
 |       +-- to TO aux
 |       +-- decisions NNS dobj
 |       |   +-- accurate JJ amod
 |       |   |   +-- more RBR advmod
 |       |   +-- migration NN nn
 |       +-- than IN prep
 |           +-- with IN pcomp
 |               +-- approach NN pobj
 |                   +-- our PRP$ poss
 +-- . . punct

9
Input: However , even if the performance iteration number iterationduration -LRB- secs. -RRB- no adaptation with adaptation out of clusters crash started adding nodes nodes reached Figure .
Parse:
started VBD ROOT
 +-- However RB advmod
 +-- , , punct
 +-- iteration NN advcl
 |   +-- even RB advmod
 |   +-- if IN mark
 |   +-- performance NN nsubj
 |   |   +-- the DT det
 |   +-- iterationduration NN dobj
 |       +-- number NN nn
 |       +-- secs. NNS dep
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- adaptation NN nsubj
 |   +-- no DT det
 |   +-- with IN prep
 |       +-- crash NN pobj
 |           +-- adaptation NN nn
 |               +-- out IN prep
 |                   +-- of IN pcomp
 |                       +-- clusters NNS pobj
 +-- adding VBG xcomp
 |   +-- reached VBN ccomp
 |       +-- nodes NNS nsubj
 |       |   +-- nodes NNS nn
 |       +-- Figure NN dobj
 +-- . . punct

10
Input: Barnes Hut iteration durations with without adaptation , crashing CPUs model is known , the problem of finding an optimal resource set -LRB- i.e .
Parse:
iteration NN ROOT
 +-- Hut NNP nsubj
 |   +-- Barnes NNS nn
 +-- durations NNS dobj
 +-- with IN prep
 |   +-- without IN pcomp
 |       +-- adaptation NN pobj
 +-- , , punct
 +-- known VBN ccomp
 |   +-- model NN nsubjpass
 |   |   +-- crashing VBG amod
 |   |   +-- CPUs NNS nn
 |   +-- is VBZ auxpass
 +-- i.e NN ccomp
 |   +-- problem NN dep
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- finding VBG pcomp
 |   |           +-- resource NN dobj
 |   |               +-- an DT det
 |   |               +-- optimal JJ amod
 |   |               +-- set VBN partmod
 |   +-- -LRB- -LRB- punct
 +-- . . punct

11
Input: the resource set with the minimal execution time -RRB- is NP complete .
Parse:
complete JJ ROOT
 +-- resource NN nsubj
 |   +-- the DT det
 |   +-- set VBN partmod
 |       +-- with IN prep
 |           +-- time NN pobj
 |               +-- the DT det
 |               +-- minimal JJ amod
 |               +-- execution NN nn
 |               +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- NP NNP npadvmod
 +-- . . punct

12
Input: Currently , both GrADS and ASSIST examine only a subset of all possible resource sets and therefore there is no guarantee that the resulting resource set will be optimal .
Parse:
examine VB ROOT
 +-- Currently RB advmod
 +-- , , punct
 +-- GrADS NNP nsubj
 |   +-- both CC preconj
 |   +-- and CC cc
 |   +-- ASSIST NNP conj
 +-- subset NN dobj
 |   +-- only RB advmod
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- sets NNS pobj
 |           +-- all DT det
 |           +-- possible JJ amod
 |           +-- resource NN nn
 +-- and CC cc
 +-- is VBZ conj
 |   +-- therefore RB advmod
 |   +-- there EX expl
 |   +-- guarantee NN nsubj
 |       +-- no DT det
 |       +-- optimal JJ ccomp
 |           +-- that IN mark
 |           +-- resource NN nsubj
 |           |   +-- the DT det
 |           |   +-- resulting VBG amod
 |           |   +-- set VBN partmod
 |           +-- will MD aux
 |           +-- be VB cop
 +-- . . punct

13
Input: As the number of available grid resources increases , the accuracy of this approach diminishes , as the subset of possible resource sets that can be examined in a reasonable time becomes smaller .
Parse:
diminishes VBZ ROOT
 +-- As IN prep
 |   +-- number NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- increases NNS pobj
 |               +-- available JJ amod
 |               +-- resources NNS nn
 |                   +-- grid NN nn
 +-- , , punct
 +-- accuracy NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- approach NN pobj
 |           +-- this DT det
 +-- smaller JJR advcl
 |   +-- as IN mark
 |   +-- subset NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- sets NNS pobj
 |   |           +-- possible JJ amod
 |   |           +-- resource NN nn
 |   |           +-- examined VBN rcmod
 |   |               +-- that WDT nsubjpass
 |   |               +-- can MD aux
 |   |               +-- be VB auxpass
 |   |               +-- in IN prep
 |   |                   +-- time NN pobj
 |   |                       +-- a DT det
 |   |                       +-- reasonable JJ amod
 |   +-- becomes VBZ cop
 +-- . . punct

14
Input: Another disadvantage of these systems is that the performance degradation detection is suitable only for iterative or regular applications .
Parse:
is VBZ ROOT
 +-- disadvantage NN nsubj
 |   +-- Another DT det
 |   +-- of IN prep
 |       +-- systems NNS pobj
 |           +-- these DT det
 +-- suitable JJ ccomp
 |   +-- that IN mark
 |   +-- detection NN nsubj
 |   |   +-- the DT det
 |   |   +-- degradation NN nn
 |   |       +-- performance NN nn
 |   +-- is VBZ cop
 |   +-- for IN prep
 |       +-- only RB advmod
 |       +-- applications NNS pobj
 |           +-- iterative JJ amod
 |               +-- or CC cc
 |               +-- regular JJ conj
 +-- . . punct

15
Input: Cactus -LRB- -RRB- and GridWay -LRB- -RRB- do not use performance models .
Parse:
use VB ROOT
 +-- Cactus NNP nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 |   +-- and CC cc
 |   +-- GridWay NNP conj
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- do VBP aux
 +-- not RB neg
 +-- models NNS dobj
 |   +-- performance NN nn
 +-- . . punct

16
Input: However , these frameworks are only suitable for sequential -LRB- GridWay -RRB- or single site applications -LRB- Cactus -RRB- .
Parse:
suitable JJ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- frameworks NNS nsubj
 |   +-- these DT det
 +-- are VBP cop
 +-- only RB advmod
 +-- for IN prep
 |   +-- sequential JJ pobj
 |       +-- -LRB- -LRB- punct
 |       +-- GridWay NNP dep
 |       +-- -RRB- -RRB- punct
 |       +-- or CC cc
 |       +-- applications NNS conj
 |           +-- single JJ amod
 |           +-- site NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- Cactus NNP dep
 |           +-- -RRB- -RRB- punct
 +-- . . punct

17
Input: In that case , the resource selection problem boils down to selecting the fastest machine or cluster .
Parse:
boils VBZ ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- that DT det
 +-- , , punct
 +-- problem NN nsubj
 |   +-- the DT det
 |   +-- resource NN nn
 |   +-- selection NN nn
 +-- down RP prt
 +-- to IN prep
 |   +-- selecting VBG pcomp
 |       +-- machine NN dobj
 |           +-- the DT det
 |           +-- fastest JJS amod
 |           +-- or CC cc
 |           +-- cluster NN conj
 +-- . . punct

18
Input: Processor clock speed , average load and a number of processors in a cluster -LRB- Cactus -RRB- are used to rank resources and the resource with the highest rank is selected .
Parse:
used VBN ROOT
 +-- speed NN nsubjpass
 |   +-- Processor NN nn
 |   +-- clock NN nn
 |   +-- , , punct
 |   +-- load NN conj
 |   |   +-- average JJ amod
 |   +-- and CC cc
 |   +-- number NN conj
 |       +-- a DT det
 |       +-- of IN prep
 |       |   +-- processors NNS pobj
 |       +-- in IN prep
 |           +-- cluster NN pobj
 |               +-- a DT det
 |               +-- -LRB- -LRB- punct
 |               +-- Cactus NNP dep
 |               +-- -RRB- -RRB- punct
 +-- are VBP auxpass
 +-- rank VB xcomp
 |   +-- to TO aux
 |   +-- resources NNS dobj
 +-- and CC cc
 +-- selected VBN conj
 |   +-- resource NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- with IN prep
 |   |       +-- rank NN pobj
 |   |           +-- the DT det
 |   |           +-- highest JJS amod
 |   +-- is VBZ auxpass
 +-- . . punct

19
Input: The application is migrated if performance degradation is detected or better resources are discovered .
Parse:
migrated VBN ROOT
 +-- application NN nsubjpass
 |   +-- The DT det
 +-- is VBZ auxpass
 +-- detected VBN advcl
 |   +-- if IN mark
 |   +-- degradation NN nsubjpass
 |   |   +-- performance NN nn
 |   +-- is VBZ auxpass
 |   +-- or CC cc
 |   +-- discovered VBN conj
 |       +-- resources NNS nsubjpass
 |       |   +-- better JJR amod
 |       +-- are VBP auxpass
 +-- . . punct

20
Input: Both Cactus and GridWay use the number of iterations per time unit as the performance indicator .
Parse:
use VBP ROOT
 +-- Cactus NNP nsubj
 |   +-- Both DT preconj
 |   +-- and CC cc
 |   +-- GridWay NNP conj
 +-- number NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- unit NN pobj
 |           +-- iterations NNS nn
 |               +-- per IN prep
 |                   +-- time NN pobj
 +-- as IN prep
 |   +-- indicator NN pobj
 |       +-- the DT det
 |       +-- performance NN nn
 +-- . . punct

21
Input: The main limitation of this methodology is that it is suitable only for sequential or single site applications .
Parse:
is VBZ ROOT
 +-- limitation NN nsubj
 |   +-- The DT det
 |   +-- main JJ amod
 |   +-- of IN prep
 |       +-- methodology NN pobj
 |           +-- this DT det
 +-- suitable JJ ccomp
 |   +-- that IN mark
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- for IN prep
 |       +-- only RB advmod
 |       +-- applications NNS pobj
 |           +-- sequential JJ nn
 |               +-- or CC cc
 |               +-- site NN conj
 |                   +-- single JJ amod
 +-- . . punct

22
Input: Moreover , resource selection based on clock speed is not always accurate .
Parse:
accurate JJ ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- selection NN nsubj
 |   +-- resource NN nn
 |   +-- based VBN partmod
 |       +-- on IN prep
 |           +-- speed NN pobj
 |               +-- clock NN nn
 +-- is VBZ cop
 +-- not RB neg
 +-- always RB advmod
 +-- . . punct

23
Input: Finally , performance degradation detection is suitable only for iterative applications and can not be used for irregular computations such as search and optimization problems .
Parse:
suitable JJ ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- detection NN nsubj
 |   +-- performance NN nn
 |   +-- degradation NN nn
 +-- is VBZ cop
 +-- for IN prep
 |   +-- only RB advmod
 |   +-- applications NNS pobj
 |       +-- iterative JJ amod
 +-- and CC cc
 +-- used VBN conj
 |   +-- can MD aux
 |   +-- not RB neg
 |   +-- be VB auxpass
 |   +-- for IN prep
 |       +-- computations NNS pobj
 |           +-- irregular JJ amod
 |           +-- as IN prep
 |               +-- such JJ mwe
 |               +-- problems NNS pobj
 |                   +-- search NN nn
 |                       +-- and CC cc
 |                       +-- optimization NN conj
 +-- . . punct

24
Input: The resource selection problem was also studied by the AppLeS project -LRB- -RRB- .
Parse:
studied VBN ROOT
 +-- problem NN nsubjpass
 |   +-- The DT det
 |   +-- selection NN nn
 |       +-- resource NN nn
 +-- was VBD auxpass
 +-- also RB advmod
 +-- by IN prep
 |   +-- project NN pobj
 |       +-- the DT det
 |       +-- AppLeS NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- . . punct

25
Input: In the context of this project , a number of applications were studied and performance models for these applications were created .
Parse:
studied VBN ROOT
 +-- In IN prep
 |   +-- context NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- project NN pobj
 |               +-- this DT det
 +-- , , punct
 +-- number NN nsubjpass
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- applications NNS pobj
 +-- were VBD auxpass
 +-- and CC cc
 +-- created VBN conj
 |   +-- models NNS nsubjpass
 |   |   +-- performance NN nn
 |   |   +-- for IN prep
 |   |       +-- applications NNS pobj
 |   |           +-- these DT det
 |   +-- were VBD auxpass
 +-- . . punct

26
Input: Based on such a model a scheduling agent is built that uses the performance model to select the best resource set and the best application schedule on this set .
Parse:
built VBN ROOT
 +-- Based VBN prep
 |   +-- on IN pcomp
 |       +-- model NN pobj
 |           +-- such PDT predet
 |           +-- a DT det
 +-- agent NN nsubjpass
 |   +-- a DT det
 |   +-- scheduling NN nn
 +-- is VBZ auxpass
 +-- uses VBZ ccomp
 |   +-- that WDT nsubj
 |   +-- model NN dobj
 |   |   +-- the DT det
 |   |   +-- performance NN nn
 |   +-- select VB xcomp
 |       +-- to TO aux
 |       +-- resource NN dobj
 |           +-- the DT det
 |           +-- best JJS amod
 |           +-- set VBN partmod
 |           +-- and CC cc
 |           +-- schedule NN conj
 |               +-- the DT det
 |               +-- best JJS amod
 |               +-- application NN nn
 |               +-- on IN prep
 |                   +-- set NN pobj
 |                       +-- this DT det
 +-- . . punct

27
Input: AppLeS scheduling agents are written on a case by case basis and can not be reused for another application .
Parse:
written VBN ROOT
 +-- agents NNS nsubjpass
 |   +-- AppLeS NN nn
 |   +-- scheduling NN nn
 +-- are VBP auxpass
 +-- on IN prep
 |   +-- case NN pobj
 |       +-- a DT det
 +-- by IN prep
 |   +-- basis NN pobj
 |       +-- case NN nn
 +-- and CC cc
 +-- reused VBN conj
 |   +-- can MD aux
 |   +-- not RB neg
 |   +-- be VB auxpass
 |   +-- for IN prep
 |       +-- application NN pobj
 |           +-- another DT det
 +-- . . punct

28
Input: Two reusable templates were also developed for specific classes of applications , namely master worker -LRB- AMWAT template -RRB- and parameter sweep -LRB- APST template -RRB- applications .
Parse:
developed VBN ROOT
 +-- templates NNS nsubjpass
 |   +-- Two CD num
 |   +-- reusable JJ amod
 +-- were VBD auxpass
 +-- also RB advmod
 +-- for IN prep
 |   +-- classes NNS pobj
 |       +-- specific JJ amod
 |       +-- of IN prep
 |           +-- applications NNS pobj
 |               +-- , , punct
 |               +-- worker NN conj
 |               |   +-- namely RB advmod
 |               |   +-- master NN nn
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- template NN dep
 |               |   |   +-- AMWAT NNP nn
 |               |   +-- -RRB- -RRB- punct
 |               +-- and CC cc
 |               +-- applications NNS conj
 |                   +-- sweep NN nn
 |                       +-- parameter NN nn
 |                       +-- -LRB- -LRB- punct
 |                       +-- template NN dep
 |                       |   +-- APST JJ amod
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

29
Input: Migration is not supported by the AppLeS software .
Parse:
supported VBN ROOT
 +-- Migration NN nsubjpass
 +-- is VBZ auxpass
 +-- not RB neg
 +-- by IN prep
 |   +-- software NN pobj
 |       +-- the DT det
 |       +-- AppLeS NNP nn
 +-- . . punct

30
Input: In -LRB- -RRB- , the problem of scheduling master worker applications is studied .
Parse:
studied VBN ROOT
 +-- In IN prep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- problem NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- applications NNS pobj
 |           +-- scheduling NN nn
 |           +-- worker NN nn
 |               +-- master NN nn
 +-- is VBZ auxpass
 +-- . . punct

31
Input: The authors assume homogeneous processors -LRB- i.e. , with the same speed -RRB- and do not take communication costs into account .
Parse:
assume VBP ROOT
 +-- authors NNS nsubj
 |   +-- The DT det
 +-- processors NNS dobj
 |   +-- homogeneous JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- i.e. FW advmod
 |   +-- , , punct
 |   +-- with IN prep
 |   |   +-- speed NN pobj
 |   |       +-- the DT det
 |   |       +-- same JJ amod
 |   +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- take VB conj
 |   +-- do VB aux
 |   +-- not RB neg
 |   +-- costs NNS dobj
 |   |   +-- communication NN nn
 |   +-- into IN prep
 |       +-- account NN pobj
 +-- . . punct

32
Input: Therefore , the problem is reduced to finding the right number of workers .
Parse:
reduced VBN ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- problem NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- finding VBG pcomp
 |       +-- number NN dobj
 |           +-- the DT det
 |           +-- right JJ amod
 |           +-- of IN prep
 |               +-- workers NNS pobj
 +-- . . punct

33
Input: The approach here is similar to ours in that no performance model is used .
Parse:
similar JJ ROOT
 +-- approach NN nsubj
 |   +-- The DT det
 |   +-- here RB advmod
 +-- is VBZ cop
 +-- to IN prep
 |   +-- ours NNS pobj
 |       +-- in IN prep
 |           +-- used VBN pcomp
 |               +-- that DT mark
 |               +-- model NN nsubjpass
 |               |   +-- no DT det
 |               |   +-- performance NN nn
 |               +-- is VBZ auxpass
 +-- . . punct

34
Input: Instead , the system tries to deduce the application requirements at runtime and adjusts the number of workers to approach the ideal number. .
Parse:
tries VBZ ROOT
 +-- Instead RB advmod
 +-- , , punct
 +-- system NN nsubj
 |   +-- the DT det
 +-- deduce VB xcomp
 |   +-- to TO aux
 |   +-- requirements NNS dobj
 |       +-- the DT det
 |       +-- application NN nn
 |       +-- at IN prep
 |           +-- runtime NN pobj
 +-- and CC cc
 +-- adjusts VBZ conj
 |   +-- number NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- workers NNS pobj
 |   +-- approach VB xcomp
 |       +-- to TO aux
 |       +-- number. NN dobj
 |           +-- the DT det
 |           +-- ideal JJ amod
 +-- . . punct
