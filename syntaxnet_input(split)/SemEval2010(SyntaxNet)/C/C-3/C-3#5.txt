
1
Input: We incorporated our adaptation mechanism into Satin a Java framework for creating grid enabled divide and conquer applications .
Parse:
incorporated VBD ROOT
 +-- We PRP nsubj
 +-- mechanism NN dobj
 |   +-- our PRP$ poss
 |   +-- adaptation NN nn
 +-- into IN prep
 |   +-- Satin NNP pobj
 +-- framework NN dobj
 |   +-- a DT det
 |   +-- Java JJ amod
 |   +-- for IN prep
 |       +-- creating VBG pcomp
 |           +-- divide NN dobj
 |               +-- enabled VBN amod
 |               |   +-- grid NN dep
 |               +-- and CC cc
 |               +-- applications NNS conj
 |                   +-- conquer NN nn
 +-- . . punct

2
Input: With Satin , the programmer annotates the sequential code with divide and conquer primitives and compiles the annotated code with a special Satin compiler that generates the necessary communication and load balancing code .
Parse:
annotates VBZ ROOT
 +-- With IN prep
 |   +-- Satin NNP pobj
 +-- , , punct
 +-- programmer NN nsubj
 |   +-- the DT det
 +-- code NN xcomp
 |   +-- code NN nsubj
 |   |   +-- the DT det
 |   |   +-- sequential JJ amod
 |   |   +-- with IN prep
 |   |       +-- primitives NNS pobj
 |   |           +-- divide NN amod
 |   |           |   +-- and CC cc
 |   |           |   +-- conquer NN conj
 |   |           +-- and CC cc
 |   |           +-- compiles NNS conj
 |   +-- the DT det
 |   +-- annotated VBN amod
 |   +-- with IN prep
 |       +-- compiler NN pobj
 |           +-- a DT det
 |           +-- special JJ amod
 |           +-- Satin NNP nn
 |           +-- generates VBZ rcmod
 |               +-- that WDT nsubj
 |               +-- communication NN dobj
 |                   +-- the DT det
 |                   +-- necessary JJ amod
 |                   +-- and CC cc
 |                   +-- code NN conj
 |                       +-- balancing VBG nn
 |                           +-- load NN nn
 +-- . . punct

3
Input: Satin uses a very efficient , grid aware load balancing algorithm Cluster aware Random Work Stealing -LRB- -RRB- , which hides wide area latencies by overlapping local and remote stealing .
Parse:
uses VBZ ROOT
 +-- Satin NNP nsubj
 +-- load NN dobj
 |   +-- a DT det
 |   +-- efficient JJ amod
 |   |   +-- very RB advmod
 |   +-- , , punct
 |   +-- grid VB dep
 |   +-- aware JJ amod
 |   +-- balancing VBG partmod
 |       +-- Cluster NNP dobj
 |           +-- algorithm NNP nn
 |           +-- aware JJ amod
 |               +-- Random NNP prep
 |                   +-- Work NNP pobj
 |                       +-- Stealing NNP dep
 |                           +-- -LRB- -LRB- punct
 |                           +-- -RRB- -RRB- punct
 |                           +-- , , punct
 |                           +-- hides VBZ rcmod
 |                               +-- which WDT nsubj
 |                               +-- latencies NNS dobj
 |                               |   +-- wide JJ amod
 |                               |   +-- area NN nn
 |                               +-- by IN prep
 |                                   +-- overlapping VBG pcomp
 |                                       +-- stealing NN dobj
 |                                           +-- local JJ amod
 |                                               +-- and CC cc
 |                                               +-- remote JJ conj
 +-- . . punct

4
Input: Satin also provides transparent fault tolerance and malleability -LRB- -RRB- .
Parse:
provides VBZ ROOT
 +-- Satin NNP nsubj
 +-- also RB advmod
 +-- tolerance NN dobj
 |   +-- transparent JJ amod
 |   +-- fault NN nn
 |   +-- and CC cc
 |   +-- malleability NN conj
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- . . punct

5
Input: With Satin , removing and adding processors from to an ongoing computation incurs little overhead .
Parse:
incurs VBZ ROOT
 +-- With IN prep
 |   +-- Satin NNP pobj
 +-- , , punct
 +-- removing VBG csubj
 |   +-- and CC cc
 |   +-- adding VBG conj
 |       +-- processors NNS dobj
 |       +-- from IN prep
 |           +-- to IN pcomp
 |               +-- computation NN pobj
 |                   +-- an DT det
 |                   +-- ongoing JJ amod
 +-- overhead RB advmod
 |   +-- little JJ advmod
 +-- . . punct

6
Input: We instrumented the Satin runtime system to collect runtime statistics and send them to the adaptation coordinator .
Parse:
instrumented VBD ROOT
 +-- We PRP nsubj
 +-- system NN dobj
 |   +-- the DT det
 |   +-- Satin NNP nn
 |   +-- runtime NN nn
 +-- collect VB xcomp
 |   +-- to TO aux
 |   +-- statistics NNS dobj
 |   |   +-- runtime NN nn
 |   +-- and CC cc
 |   +-- send VB conj
 |       +-- them PRP dobj
 |       +-- to IN prep
 |           +-- coordinator NN pobj
 |               +-- the DT det
 |               +-- adaptation NN nn
 +-- . . punct

7
Input: The coordinator is implemented as a separate process .
Parse:
implemented VBN ROOT
 +-- coordinator NN nsubjpass
 |   +-- The DT det
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- process NN pobj
 |       +-- a DT det
 |       +-- separate JJ amod
 +-- . . punct

8
Input: Both coordinator and Satin are implemented entirely in Java on top of the Ibis communication library -LRB- -RRB- .
Parse:
implemented VBN ROOT
 +-- coordinator NN nsubjpass
 |   +-- Both DT preconj
 |   +-- and CC cc
 |   +-- Satin NNP conj
 +-- are VBP auxpass
 +-- entirely RB advmod
 +-- in IN prep
 |   +-- Java NNP pobj
 +-- on IN prep
 |   +-- top NN pobj
 |       +-- of IN prep
 |           +-- library NN pobj
 |               +-- the DT det
 |               +-- Ibis NNP nn
 |               +-- communication NN nn
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- . . punct

9
Input: The core of Ibis is also implemented in Java .
Parse:
implemented VBN ROOT
 +-- core NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- Ibis NNP pobj
 +-- is VBZ auxpass
 +-- also RB advmod
 +-- in IN prep
 |   +-- Java NNP pobj
 +-- . . punct

10
Input: The resulting system therefore is highly portable -LRB- due to Java '' s write once , run anywhere property -RRB- allowing the software to run unmodified on a heterogeneous grid .
Parse:
portable JJ ROOT
 +-- system NN nsubj
 |   +-- The DT det
 |   +-- resulting VBG amod
 +-- therefore RB advmod
 +-- is VBZ cop
 +-- highly RB advmod
 +-- -LRB- -LRB- punct
 +-- to IN prep
 |   +-- due JJ mwe
 |   +-- Java NNP pobj
 +-- '' '' punct
 +-- s POS punct
 +-- write VB ccomp
 |   +-- once RB advmod
 |   +-- , , punct
 |   +-- run VB dep
 |       +-- anywhere RB prep
 |           +-- property NN pobj
 +-- -RRB- -RRB- punct
 +-- allowing VBG xcomp
 |   +-- run VB xcomp
 |       +-- software NN nsubj
 |       |   +-- the DT det
 |       +-- to TO aux
 |       +-- unmodified JJ dobj
 |       +-- on IN prep
 |           +-- grid NN pobj
 |               +-- a DT det
 |               +-- heterogeneous JJ amod
 +-- . . punct

11
Input: Ibis also provides the Ibis Registry .
Parse:
provides VBZ ROOT
 +-- Ibis NNP nsubj
 +-- also RB advmod
 +-- Registry NNP dobj
 |   +-- the DT det
 |   +-- Ibis NNP nn
 +-- . . punct

12
Input: The Registry provides , among others , a membership service to the processors taking part in the computation .
Parse:
provides VBZ ROOT
 +-- Registry NNP nsubj
 |   +-- The DT det
 +-- , , punct
 +-- among IN prep
 |   +-- others NNS pobj
 +-- service NN dobj
 |   +-- a DT det
 |   +-- membership NN nn
 |   +-- to IN prep
 |   |   +-- processors NNS pobj
 |   |       +-- the DT det
 |   +-- taking VBG partmod
 |       +-- part NN dobj
 |       +-- in IN prep
 |           +-- computation NN pobj
 |               +-- the DT det
 +-- . . punct

13
Input: The adaptation coordinator uses the Registry to discover the application processes , and the application processes use this service to discover each other .
Parse:
uses VBZ ROOT
 +-- coordinator NN nsubj
 |   +-- The DT det
 |   +-- adaptation NN nn
 +-- Registry NNP dobj
 |   +-- the DT det
 +-- discover VB xcomp
 |   +-- to TO aux
 |   +-- processes NNS dobj
 |       +-- the DT det
 |       +-- application NN nn
 +-- , , punct
 +-- and CC cc
 +-- use VBP conj
 |   +-- processes NNS nsubj
 |   |   +-- the DT det
 |   |   +-- application NN nn
 |   +-- service NN dobj
 |   |   +-- this DT det
 |   +-- discover VB xcomp
 |       +-- to TO aux
 |       +-- other JJ dobj
 |           +-- each DT det
 +-- . . punct

14
Input: The Registry also offers fault detection -LRB- additional to the fault detection provided by the communication channels -RRB- .
Parse:
offers VBZ ROOT
 +-- Registry NNP nsubj
 |   +-- The DT det
 +-- also RB advmod
 +-- detection NN dobj
 |   +-- fault NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- additional JJ amod
 |   |   +-- to IN prep
 |   |       +-- detection NN pobj
 |   |           +-- the DT det
 |   |           +-- fault NN nn
 |   |           +-- provided VBN partmod
 |   |               +-- by IN prep
 |   |                   +-- channels NNS pobj
 |   |                       +-- the DT det
 |   |                       +-- communication NN nn
 |   +-- -RRB- -RRB- punct
 +-- . . punct

15
Input: Finally , the Registry provides the possibility to send signals to application processes .
Parse:
provides VBZ ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- Registry NNP nsubj
 |   +-- the DT det
 +-- possibility NN dobj
 |   +-- the DT det
 |   +-- send VB infmod
 |       +-- to TO aux
 |       +-- signals NNS dobj
 |       +-- to IN prep
 |           +-- processes NNS pobj
 |               +-- application NN nn
 +-- . . punct

16
Input: The coordinator uses this functionality to notify the processors that they need to leave the computation .
Parse:
uses VBZ ROOT
 +-- coordinator NN nsubj
 |   +-- The DT det
 +-- functionality NN dobj
 |   +-- this DT det
 +-- notify VB xcomp
 |   +-- to TO aux
 |   +-- processors NNS dobj
 |       +-- the DT det
 |       +-- need VBP rcmod
 |           +-- that WDT dobj
 |           +-- they PRP nsubj
 |           +-- leave VB xcomp
 |               +-- to TO aux
 |               +-- computation NN dobj
 |                   +-- the DT det
 +-- . . punct

17
Input: Currently the Registry is implemented as a centralized server .
Parse:
implemented VBN ROOT
 +-- Currently RB advmod
 +-- Registry NNP nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- server NN pobj
 |       +-- a DT det
 |       +-- centralized JJ amod
 +-- . . punct

18
Input: For requesting new nodes , the Zorilla -LRB- -RRB- system is used a peer to peer supercomputing middleware which allows straightforward allocation of processors in multiple clusters and or supercomputers .
Parse:
used VBN ROOT
 +-- For IN prep
 |   +-- requesting VBG pcomp
 |       +-- nodes NNS dobj
 |           +-- new JJ amod
 +-- , , punct
 +-- system NN nsubjpass
 |   +-- the DT det
 |   +-- Zorilla NNP nn
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- is VBZ auxpass
 +-- peer NN dobj
 |   +-- a DT det
 +-- peer VB xcomp
 |   +-- to TO aux
 |   +-- middleware NN dobj
 |       +-- supercomputing VBG nn
 |       +-- allows VBZ rcmod
 |           +-- which WDT nsubj
 |           +-- allocation NN dobj
 |               +-- straightforward JJ amod
 |               +-- of IN prep
 |               |   +-- processors NNS pobj
 |               +-- in IN prep
 |                   +-- clusters NNS pobj
 |                   |   +-- multiple JJ amod
 |                   +-- and CC cc
 |                   +-- or CC conj
 |                   +-- supercomputers NNS conj
 +-- . . punct

19
Input: Zorilla provides locality aware scheduling , which tries to allocate processors that are located close to each other in terms of communication latency .
Parse:
provides VBZ ROOT
 +-- Zorilla NNP nsubj
 +-- scheduling NN dobj
 |   +-- locality NN nn
 |   +-- aware JJ amod
 |   +-- , , punct
 |   +-- tries VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- allocate VB xcomp
 |           +-- to TO aux
 |           +-- processors NNS dobj
 |               +-- located VBN rcmod
 |                   +-- that WDT nsubjpass
 |                   +-- are VBP auxpass
 |                   +-- close JJ advmod
 |                   |   +-- to IN prep
 |                   |       +-- other JJ pobj
 |                   |           +-- each DT det
 |                   +-- in IN prep
 |                       +-- terms NNS pobj
 |                           +-- of IN prep
 |                               +-- latency NN pobj
 |                                   +-- communication NN nn
 +-- . . punct

20
Input: In the future , Zorilla will also support bandwidth aware scheduling , which tries to maximize the total bandwidth in the system .
Parse:
support VB ROOT
 +-- In IN prep
 |   +-- future NN pobj
 |       +-- the DT det
 +-- , , punct
 +-- Zorilla NNP nsubj
 +-- will MD aux
 +-- also RB advmod
 +-- scheduling NN dobj
 |   +-- bandwidth NN nn
 |   +-- aware JJ amod
 |   +-- , , punct
 |   +-- tries VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- maximize VB xcomp
 |           +-- to TO aux
 |           +-- bandwidth NN dobj
 |               +-- the DT det
 |               +-- total JJ amod
 |               +-- in IN prep
 |                   +-- system NN pobj
 |                       +-- the DT det
 +-- . . punct

21
Input: Zorilla can be easily replaced with another grid scheduler .
Parse:
replaced VBN ROOT
 +-- Zorilla NN nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- easily RB advmod
 +-- with IN prep
 |   +-- scheduler NN pobj
 |       +-- another DT det
 |       +-- grid NN nn
 +-- . . punct

22
Input: In the future , we are planning to integrate our adaptation component with GAT -LRB- -RRB- which is becoming a standard in the grid community and KOALA -LRB- -RRB- a scheduler that provides co allocation on top of standard grid middleware , such as the Globus Toolkit -LRB- -RRB- . .
Parse:
planning VBG ROOT
 +-- In IN prep
 |   +-- future NN pobj
 |       +-- the DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- are VBP aux
 +-- integrate VB xcomp
 |   +-- to TO aux
 |   +-- component NN dobj
 |       +-- our PRP$ poss
 |       +-- adaptation NN nn
 |       +-- with IN prep
 |           +-- GAT NNP pobj
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 |               +-- becoming VBG rcmod
 |               |   +-- which WDT nsubj
 |               |   +-- is VBZ aux
 |               |   +-- standard NN xcomp
 |               |       +-- a DT det
 |               |       +-- in IN prep
 |               |           +-- community NN pobj
 |               |               +-- the DT det
 |               |               +-- grid NN nn
 |               |               +-- and CC cc
 |               |               +-- KOALA NNP conj
 |               +-- scheduler NN dep
 |                   +-- a DT det
 |                   +-- provides VBZ rcmod
 |                       +-- that WDT nsubj
 |                       +-- allocation NN dobj
 |                       |   +-- co NN nn
 |                       +-- on IN prep
 |                           +-- top NN pobj
 |                               +-- of IN prep
 |                                   +-- middleware NN pobj
 |                                       +-- standard JJ amod
 |                                       +-- grid NN nn
 |                                       +-- , , punct
 |                                       +-- as IN prep
 |                                           +-- such JJ mwe
 |                                           +-- Toolkit NNP pobj
 |                                               +-- the DT det
 |                                               +-- Globus NNP nn
 |                                               +-- -LRB- -LRB- punct
 |                                               +-- -RRB- -RRB- punct
 +-- . . punct
