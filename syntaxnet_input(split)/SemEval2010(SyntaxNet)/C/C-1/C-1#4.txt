
1
Input: BASED UDDI REGISTRY HIERARCHIES As mentioned earlier , we propose to build a distributed UDDI system on top of a DHT infrastructure .
Parse:
propose VBP ROOT
 +-- BASED VBN partmod
 |   +-- HIERARCHIES NNS dobj
 |   |   +-- UDDI NNP nn
 |   |   +-- REGISTRY NN nn
 |   +-- mentioned VBN advcl
 |       +-- As IN mark
 |       +-- earlier RBR advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- build VB xcomp
 |   +-- to TO aux
 |   +-- system NN dobj
 |   |   +-- a DT det
 |   |   +-- distributed VBN amod
 |   |   +-- UDDI NN nn
 |   +-- on IN prep
 |       +-- top NN pobj
 |           +-- of IN prep
 |               +-- infrastructure NN pobj
 |                   +-- a DT det
 |                   +-- DHT JJ amod
 +-- . . punct

2
Input: This choice is primarily motivated by the simplicity of the put get abstraction that DHTs provide , which is powerful enough for the task at hand , especially since we plan to validate our approach with an implementation running on PlanetLab -LRB- -RRB- .
Parse:
motivated VBN ROOT
 +-- choice NN nsubjpass
 |   +-- This DT det
 +-- is VBZ auxpass
 +-- primarily RB advmod
 +-- by IN prep
 |   +-- simplicity NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- abstraction NN pobj
 |               +-- the DT det
 |               +-- put VBN nn
 |               +-- get VB nn
 |               +-- provide VB rcmod
 |               |   +-- that IN dobj
 |               |   +-- DHTs FW nsubj
 |               +-- , , punct
 |               +-- powerful JJ rcmod
 |                   +-- which WDT nsubj
 |                   +-- is VBZ cop
 |                   +-- enough JJ advmod
 |                   +-- for IN prep
 |                   |   +-- task NN pobj
 |                   |       +-- the DT det
 |                   |       +-- at IN prep
 |                   |           +-- hand NN pobj
 |                   +-- , , punct
 |                   +-- plan VBP advcl
 |                       +-- especially RB advmod
 |                       +-- since IN mark
 |                       +-- we PRP nsubj
 |                       +-- validate VB xcomp
 |                           +-- to TO aux
 |                           +-- approach NN dobj
 |                               +-- our PRP$ poss
 |                               +-- with IN prep
 |                                   +-- running VBG pcomp
 |                                       +-- implementation NN nsubj
 |                                       |   +-- an DT det
 |                                       +-- on IN prep
 |                                           +-- PlanetLab NNP pobj
 |                                               +-- -LRB- -LRB- punct
 |                                               +-- -RRB- -RRB- punct
 +-- . . punct

3
Input: A secondary motivation is to understand deployment issues with DHT based systems .
Parse:
is VBZ ROOT
 +-- motivation NN nsubj
 |   +-- A DT det
 |   +-- secondary JJ amod
 +-- understand VB xcomp
 |   +-- to TO aux
 |   +-- issues NNS dobj
 |       +-- deployment JJ amod
 |       +-- with IN prep
 |           +-- systems NNS pobj
 |               +-- based VBN amod
 |                   +-- DHT RB advmod
 +-- . . punct

4
Input: Several applications have been built as overlays using DHTs , such as distributed file storage , databases , publish subscribe systems and content distribution networks .
Parse:
built VBN ROOT
 +-- applications NNS nsubjpass
 |   +-- Several JJ amod
 +-- have VBP aux
 +-- been VBN auxpass
 +-- as IN prep
 |   +-- overlays NNS pobj
 |       +-- using VBG partmod
 |           +-- publish VB ccomp
 |               +-- DHTs NNS nsubj
 |               |   +-- , , punct
 |               |   +-- as IN prep
 |               |       +-- such JJ mwe
 |               |       +-- storage NN pobj
 |               |           +-- distributed VBN amod
 |               |           +-- file NN nn
 |               |           +-- , , punct
 |               |           +-- databases NNS appos
 |               +-- systems NNS dobj
 |                   +-- subscribe NN nn
 |                   +-- and CC cc
 |                   +-- networks NNS conj
 |                       +-- content JJ amod
 |                       +-- distribution NN nn
 +-- . . punct

5
Input: In our case , we are building a DHT based overlay network of UDDI registries , where the DHT acts as a rendezvous network that connects multiple registries .
Parse:
building VBG ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- we PRP nsubj
 +-- are VBP aux
 +-- network NN dobj
 |   +-- a DT det
 |   +-- based VBN amod
 |   |   +-- DHT RB advmod
 |   +-- overlay JJ amod
 |   +-- of IN prep
 |       +-- registries NNS pobj
 |           +-- UDDI NNP nn
 |           +-- , , punct
 |           +-- acts VBZ rcmod
 |               +-- where WRB advmod
 |               +-- DHT NN nsubj
 |               |   +-- the DT det
 |               +-- as IN prep
 |                   +-- network NN pobj
 |                       +-- a DT det
 |                       +-- rendezvous JJ nn
 |                       +-- connects VBZ rcmod
 |                           +-- that WDT nsubj
 |                           +-- registries NNS dobj
 |                               +-- multiple JJ amod
 +-- . . punct

6
Input: In the grid computing scenario , an overlay network of multiple UDDI registries seems to an interesting alternative to the UDDI public Article registries currently maintained by Microsoft , IBM , SAP and NTT .
Parse:
seems VBZ ROOT
 +-- In IN prep
 |   +-- scenario NN pobj
 |       +-- the DT det
 |       +-- computing NN nn
 |           +-- grid NN nn
 +-- , , punct
 +-- network NN nsubj
 |   +-- an DT det
 |   +-- overlay JJ amod
 |   +-- of IN prep
 |       +-- registries NNS pobj
 |           +-- multiple JJ amod
 |           +-- UDDI NNP nn
 +-- to IN prep
 |   +-- alternative NN pobj
 |       +-- an DT det
 |       +-- interesting JJ amod
 |       +-- to IN prep
 |           +-- registries NNS pobj
 |               +-- the DT det
 |               +-- UDDI NNP nn
 |               +-- Article NN nn
 |               |   +-- public JJ amod
 |               +-- maintained VBN partmod
 |                   +-- currently RB advmod
 |                   +-- by IN prep
 |                       +-- Microsoft NNP pobj
 |                           +-- , , punct
 |                           +-- IBM NNP conj
 |                           +-- SAP NNP conj
 |                           +-- and CC cc
 |                           +-- NTT NNP conj
 +-- . . punct

7
Input: In addition , our aim is to not change any of the UDDI interfaces for clients as well as publishers .
Parse:
is VBZ ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- aim NN nsubj
 |   +-- our PRP$ poss
 +-- change VB xcomp
 |   +-- to TO aux
 |   +-- not RB neg
 |   +-- any DT dobj
 |   |   +-- of IN prep
 |   |       +-- interfaces NNS pobj
 |   |           +-- the DT det
 |   |           +-- UDDI NNP nn
 |   +-- for IN prep
 |       +-- clients NNS pobj
 |           +-- well RB cc
 |           |   +-- as RB advmod
 |           |   +-- as IN mwe
 |           +-- publishers NNS conj
 +-- . . punct

8
Input: Figure highlights the proposed architecture for the DHT based UDDI Registry framework .
Parse:
highlights VBZ ROOT
 +-- Figure NN nsubj
 +-- architecture NN dobj
 |   +-- the DT det
 |   +-- proposed VBN amod
 |   +-- for IN prep
 |       +-- framework NN pobj
 |           +-- the DT det
 |           +-- based VBN amod
 |           |   +-- DHT RB advmod
 |           +-- Registry NNP nn
 |               +-- UDDI NNP nn
 +-- . . punct

9
Input: UDDI nodes are replicated in a UDDI registry as per the current UDDI standard .
Parse:
replicated VBN ROOT
 +-- nodes NNS nsubjpass
 |   +-- UDDI NN nn
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- registry NN pobj
 |       +-- a DT det
 |       +-- UDDI NN nn
 |       +-- as IN prep
 |           +-- per IN pcomp
 |               +-- standard NN pobj
 |                   +-- the DT det
 |                   +-- current JJ amod
 |                   +-- UDDI NNP nn
 +-- . . punct

10
Input: 0However , each local registry has a local proxy registry that mediates between the local UDDI registry and the DHT Service .
Parse:
has VBZ ROOT
 +-- 0However LS nsubj
 +-- , , punct
 +-- registry NN nsubj
 |   +-- each DT det
 |   +-- local JJ amod
 +-- registry NN dobj
 |   +-- a DT det
 |   +-- local JJ amod
 |   +-- proxy NN amod
 |   +-- mediates NNS rcmod
 |       +-- that WDT nsubj
 |       +-- between IN prep
 |           +-- registry NN pobj
 |               +-- the DT det
 |               +-- local JJ amod
 |               +-- UDDI NNP nn
 |               +-- and CC cc
 |               +-- Service NNP conj
 |                   +-- the DT det
 |                   +-- DHT NNP nn
 +-- . . punct

11
Input: The DHT service is the glue that connects the Proxy Registries together and facilitates searching across registries .
Parse:
glue NN ROOT
 +-- service NN nsubj
 |   +-- The DT det
 |   +-- DHT NNP nn
 +-- is VBZ cop
 +-- the DT det
 +-- connects VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- Registries NNPS dobj
 |   |   +-- the DT det
 |   |   +-- Proxy NNP nn
 |   +-- together RB advmod
 |   +-- and CC cc
 |   +-- facilitates VBZ conj
 |       +-- searching VBG xcomp
 |           +-- across IN prep
 |               +-- registries NNS pobj
 +-- . . punct

12
Input: Figure DUDE Architecture Service information can be dispersed to several UDDI registries to promote scalability .
Parse:
dispersed VBN ROOT
 +-- information NN nsubjpass
 |   +-- Service NN nn
 |       +-- Figure NN nn
 |       +-- Architecture NNP nn
 |           +-- DUDE NNP nn
 +-- can MD aux
 +-- be VB auxpass
 +-- to IN prep
 |   +-- registries NNS pobj
 |       +-- several JJ amod
 |       +-- UDDI NNP nn
 +-- promote VB xcomp
 |   +-- to TO aux
 |   +-- scalability NN dobj
 +-- . . punct

13
Input: The proxy registry publishes , performs queries and deletes information from the dispersed UDDI registries .
Parse:
publishes NNS ROOT
 +-- registry NN nsubj
 |   +-- The DT det
 |   +-- proxy NN amod
 +-- , , punct
 +-- performs VBZ conj
 |   +-- queries NNS dobj
 +-- and CC cc
 +-- deletes VBZ conj
 +-- information NN dobj
 |   +-- from IN prep
 |       +-- registries NNS pobj
 |           +-- the DT det
 |           +-- dispersed VBN amod
 |           +-- UDDI NNP nn
 +-- . . punct

14
Input: However , the scope of the queries is limited to relevant registries .
Parse:
limited VBN ROOT
 +-- However RB advmod
 +-- , , punct
 +-- scope NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- queries NNS pobj
 |           +-- the DT det
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- registries NNS pobj
 |       +-- relevant JJ amod
 +-- . . punct

15
Input: The DHT provides information about the relevant registries .
Parse:
provides VBZ ROOT
 +-- DHT NNP nsubj
 |   +-- The DT det
 +-- information NN dobj
 |   +-- about IN prep
 |       +-- registries NNS pobj
 |           +-- the DT det
 |           +-- relevant JJ amod
 +-- . . punct

16
Input: The core idea in the architecture is to populate DHT nodes with the necessary information from the proxies which enables easy and ubiquitous searching when queries are made .
Parse:
is VBZ ROOT
 +-- idea NN nsubj
 |   +-- The DT det
 |   +-- core NN nn
 |   +-- in IN prep
 |       +-- architecture NN pobj
 |           +-- the DT det
 +-- populate VB xcomp
 |   +-- to TO aux
 |   +-- nodes NNS dobj
 |   |   +-- DHT NNP nn
 |   +-- with IN prep
 |       +-- information NN pobj
 |           +-- the DT det
 |           +-- necessary JJ amod
 |           +-- from IN prep
 |           |   +-- proxies NNS pobj
 |           |       +-- the DT det
 |           +-- enables VBZ rcmod
 |               +-- which WDT nsubj
 |               +-- searching NN dobj
 |               |   +-- easy JJ amod
 |               |       +-- and CC cc
 |               |       +-- ubiquitous JJ conj
 |               +-- made VBN advcl
 |                   +-- when WRB advmod
 |                   +-- queries NNS nsubjpass
 |                   +-- are VBP auxpass
 +-- . . punct

17
Input: When a new service is added to a registry , all potential search terms are hashed by the proxy and used as DHT keys to publish the service in the DHT .
Parse:
hashed VBN ROOT
 +-- added VBN advcl
 |   +-- When WRB advmod
 |   +-- service NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- new JJ amod
 |   +-- is VBZ auxpass
 |   +-- to IN prep
 |       +-- registry NN pobj
 |           +-- a DT det
 +-- , , punct
 +-- terms NNS nsubjpass
 |   +-- all DT det
 |   +-- potential JJ amod
 |   +-- search NN nn
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- proxy NN pobj
 |       +-- the DT det
 +-- and CC cc
 +-- used VBN conj
 |   +-- as IN prep
 |       +-- keys NNS pobj
 |           +-- DHT DT det
 |           +-- publish VB infmod
 |               +-- to TO aux
 |               +-- service NN dobj
 |                   +-- the DT det
 |                   +-- in IN prep
 |                       +-- DHT NN pobj
 |                           +-- the DT det
 +-- . . punct

18
Input: The value stored for this service uniquely identifies the service , and includes the URL of a registry and the unique UDDI key of the service in that registry .
Parse:
identifies VBZ ROOT
 +-- value NN nsubj
 |   +-- The DT det
 |   +-- stored VBN partmod
 |       +-- for IN prep
 |           +-- service NN pobj
 |               +-- this DT det
 +-- uniquely RB advmod
 +-- service NN dobj
 |   +-- the DT det
 +-- , , punct
 +-- and CC cc
 +-- includes VBZ conj
 |   +-- URL NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- registry NN pobj
 |       |       +-- a DT det
 |       +-- and CC cc
 |       +-- key NN conj
 |           +-- the DT det
 |           +-- unique JJ amod
 |           +-- UDDI NNP nn
 |           +-- of IN prep
 |           |   +-- service NN pobj
 |           |       +-- the DT det
 |           +-- in IN prep
 |               +-- registry NN pobj
 |                   +-- that DT det
 +-- . . punct

19
Input: Similarly when queries arrive , they are parsed and a set of search terms are identified .
Parse:
parsed VBN ROOT
 +-- arrive VBP advcl
 |   +-- when WRB advmod
 |   |   +-- Similarly RB advmod
 |   +-- queries NNS nsubj
 +-- , , punct
 +-- they PRP nsubj
 +-- are VBP cop
 +-- and CC cc
 +-- identified VBN conj
 |   +-- set NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- of IN prep
 |   |       +-- terms NNS pobj
 |   |           +-- search NN nn
 |   +-- are VBP auxpass
 +-- . . punct

20
Input: 0These search terms are hashed and the values stored with those hash values are retrieved from the DHT .
Parse:
hashed VBN ROOT
 +-- 0These LS dep
 +-- terms NNS nsubj
 |   +-- search NN nn
 +-- are VBP cop
 +-- and CC cc
 +-- retrieved VBN conj
 |   +-- values NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- stored VBN partmod
 |   |       +-- with IN prep
 |   |           +-- values NNS pobj
 |   |               +-- those DT det
 |   |               +-- hash NN nn
 |   +-- are VBP auxpass
 |   +-- from IN prep
 |       +-- DHT NN pobj
 |           +-- the DT det
 +-- . . punct

21
Input: Note that a proxy does not need to know all DHT nodes ; it needs to know just one DHT node -LRB- this is done as part of the bootstrapping process -RRB- and as described in Section . , this DHT node can route the query as necessary to the other nodes on the DHT overlay .
Parse:
Note VB ROOT
 +-- need VB ccomp
 |   +-- that IN mark
 |   +-- proxy NN nsubj
 |   |   +-- a DT det
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- know VB xcomp
 |   |   +-- to TO aux
 |   |   +-- nodes NNS dobj
 |   |       +-- all DT det
 |   |       +-- DHT NN nn
 |   +-- ; : punct
 |   +-- needs VBZ parataxis
 |       +-- it PRP nsubj
 |       +-- know VB xcomp
 |       |   +-- to TO aux
 |       |   +-- node NN dobj
 |       |       +-- one CD num
 |       |       |   +-- just RB quantmod
 |       |       +-- DHT NN nn
 |       +-- done VBN dep
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- this DT nsubjpass
 |       |   +-- is VBZ auxpass
 |       |   +-- as IN prep
 |       |   |   +-- part NN pobj
 |       |   |       +-- of IN prep
 |       |   |           +-- process NN pobj
 |       |   |               +-- the DT det
 |       |   |               +-- bootstrapping NN nn
 |       |   +-- -RRB- -RRB- punct
 |       +-- and CC cc
 |       +-- described VBN conj
 |       |   +-- as IN mark
 |       |   +-- in IN prep
 |       |       +-- Section NNP pobj
 |       +-- . . punct
 |       +-- , , punct
 |       +-- route VB parataxis
 |           +-- node NN nsubj
 |           |   +-- this DT det
 |           |   +-- DHT ADD nn
 |           +-- can MD aux
 |           +-- query NN dobj
 |           |   +-- the DT det
 |           +-- necessary JJ dep
 |               +-- as RB advmod
 |               +-- to IN prep
 |                   +-- nodes NNS pobj
 |                       +-- the DT det
 |                       +-- other JJ amod
 |                       +-- on IN prep
 |                           +-- overlay NN pobj
 |                               +-- the DT det
 |                               +-- DHT NN nn
 +-- . . punct

22
Input: We describe three usage scenarios later that deal with adding a new local registry , inserting a new service , and querying for a service .
Parse:
describe VBP ROOT
 +-- We PRP nsubj
 +-- later RB advmod
 |   +-- scenarios NNS npadvmod
 |       +-- three CD num
 |       +-- usage NN nn
 +-- deal VBP dobj
 |   +-- that DT det
 +-- with IN prep
 |   +-- adding VBG pcomp
 |       +-- registry NN dobj
 |       |   +-- a DT det
 |       |   +-- new JJ amod
 |       |   +-- local JJ amod
 |       +-- , , punct
 |       +-- inserting VBG conj
 |       |   +-- service NN dobj
 |       |       +-- a DT det
 |       |       +-- new JJ amod
 |       +-- and CC cc
 |       +-- querying VBG conj
 |           +-- for IN prep
 |               +-- service NN pobj
 |                   +-- a DT det
 +-- . . punct

23
Input: Furthermore , the DHT optimizes the UDDI query mechanism .
Parse:
optimizes VBZ ROOT
 +-- Furthermore RB advmod
 +-- , , punct
 +-- DHT NNS nsubj
 |   +-- the DT det
 +-- mechanism NN dobj
 |   +-- the DT det
 |   +-- UDDI NNP nn
 |   +-- query NN nn
 +-- . . punct

24
Input: This process becomes a lookup using a UDDI unique key rather than a query using a set of search parameters .
Parse:
lookup NN ROOT
 +-- process NN nsubj
 |   +-- This DT det
 +-- becomes VBZ cop
 +-- a DT det
 +-- using VBG partmod
 |   +-- key NN dobj
 |       +-- a DT det
 |       +-- UDDI NNP nn
 |       +-- unique JJ amod
 +-- rather RB cc
 |   +-- than IN mwe
 +-- query NN conj
 |   +-- a DT det
 |   +-- using VBG partmod
 |       +-- set NN dobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- parameters NNS pobj
 |                   +-- search NN nn
 +-- . . punct

25
Input: This key and the URL of the registry are obtained by searching initially in the DHT .
Parse:
obtained VBN ROOT
 +-- key NN nsubjpass
 |   +-- This DT det
 |   +-- and CC cc
 |   +-- URL NN conj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- registry NN pobj
 |               +-- the DT det
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- searching VBG pcomp
 |       +-- initially RB advmod
 |       +-- in IN prep
 |           +-- DHT NN pobj
 |               +-- the DT det
 +-- . . punct

26
Input: The DHT query can return multiple values for matching services , and in each of the matching registries , the proxy performs lookup operations .
Parse:
return VB ROOT
 +-- query NN nsubj
 |   +-- The DT det
 |   +-- DHT FW nn
 +-- can MD aux
 +-- values NNS dobj
 |   +-- multiple JJ amod
 +-- for IN prep
 |   +-- services NNS pobj
 |       +-- matching VBG nn
 +-- , , punct
 +-- and CC cc
 +-- performs VBZ conj
 |   +-- in IN prep
 |   |   +-- each DT pobj
 |   |       +-- of IN prep
 |   |           +-- registries NNS pobj
 |   |               +-- the DT det
 |   |               +-- matching NN nn
 |   +-- , , punct
 |   +-- proxy NN nsubj
 |   |   +-- the DT det
 |   +-- operations NNS dobj
 |       +-- lookup NN nn
 +-- . . punct

27
Input: The service name is used as a hash for inserting the service information .
Parse:
used VBN ROOT
 +-- name NN nsubjpass
 |   +-- The DT det
 |   +-- service NN nn
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- hash NN pobj
 |       +-- a DT det
 |       +-- for IN prep
 |           +-- inserting VBG pcomp
 |               +-- information NN dobj
 |                   +-- the DT det
 |                   +-- service NN nn
 +-- . . punct

28
Input: The service information contains the query URL and unique UDDI key for the registry containing the service .
Parse:
contains VBZ ROOT
 +-- information NN nsubj
 |   +-- The DT det
 |   +-- service NN nn
 +-- URL NN dobj
 |   +-- the DT det
 |   +-- query NN nn
 |   +-- and CC cc
 |   +-- key NN conj
 |   |   +-- unique JJ amod
 |   |   +-- UDDI NNP nn
 |   +-- for IN prep
 |       +-- registry NN pobj
 |           +-- the DT det
 |           +-- containing VBG partmod
 |               +-- service NN dobj
 |                   +-- the DT det
 +-- . . punct

29
Input: There could be multiple registries associated with a given service .
Parse:
registries NNS ROOT
 +-- There EX expl
 +-- could MD aux
 +-- be VB cop
 +-- multiple JJ amod
 +-- associated VBN partmod
 |   +-- with IN prep
 |       +-- service NN pobj
 |           +-- a DT det
 |           +-- given VBN amod
 +-- . . punct

30
Input: 0The service information conforms to the following schema .
Parse:
conforms VBZ ROOT
 +-- information NN nsubj
 |   +-- 0The CD num
 |   +-- service NN nn
 +-- to IN prep
 |   +-- schema NN pobj
 |       +-- the DT det
 |       +-- following VBG amod
 +-- . . punct

31
Input: < xsschema xmlnsxs= '' http www.w.org 00 XMLSchema '' elementFormDefault= '' qualified '' attributeFormDefault= '' unqualified '' > < xselement name= '' registries '' > < xsannotation > < xsdocumentation > Service Information < xsdocumentation > < xsannotation > < xscomplexType > < xssequence > < xselement name= '' registry '' maxOccurs= '' unbounded '' > < xscomplexType > < xssequence > < xselement name= '' name '' > < xselement name= '' key '' maxOccurs= '' unbounded '' > < xssequence > ? ? < xsschema > There can be multiple proxy UDDI registries in this architecture .
Parse:
xmlnsxs= FW ROOT
 +-- < -LRB- punct
 +-- xsschema UH nn
 +-- '' '' punct
 +-- XMLSchema UH dep
 |   +-- http ADD dep
 |   +-- www.w.org NNP dep
 |   +-- 00 NFP punct
 +-- elementFormDefault= FW dep
 +-- qualified JJ dep
 +-- attributeFormDefault= FW dep
 +-- unqualified JJ dep
 +-- > -RRB- punct
 +-- registries NNS dep
 |   +-- There EX expl
 |   +-- can MD aux
 |   +-- be VB cop
 |   +-- multiple JJ amod
 |   +-- proxy NN amod
 |   +-- UDDI , nn
 |   +-- in IN prep
 |       +-- architecture NN pobj
 |           +-- this DT det
 +-- xsannotation NN dep
 +-- Service NN dep
 |   +-- < -LRB- punct
 |   +-- xsdocumentation NN nn
 |   +-- > -RRB- punct
 |   +-- Information NNP prep
 |       +-- xsdocumentation NN dep
 |           +-- < -LRB- punct
 |           +-- > -RRB- punct
 +-- xscomplexType FW dep
 +-- xssequence CC dep
 +-- registry NN dep
 |   +-- xselement JJ amod
 |   +-- name= FW nn
 |   +-- '' '' punct
 +-- maxOccurs= FW dep
 +-- unbounded JJ dep
 +-- xscomplexType NN dep
 +-- name NN dep
 |   +-- < -LRB- punct
 |   +-- xssequence CC amod
 |   +-- > -RRB- punct
 |   +-- xselement JJ amod
 |   +-- name= FW nn
 |   +-- '' '' punct
 +-- xselement JJ dep
 +-- name= FW dep
 +-- key NN dep
 +-- xssequence NN dep
 +-- ? . punct
 +-- xsschema GW dep
 +-- . . punct

32
Input: The advantage of this is to introduce distributed interactions between the UDDI clients and registries .
Parse:
is VBZ ROOT
 +-- advantage NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- this DT pobj
 +-- introduce VB xcomp
 |   +-- to TO aux
 |   +-- interactions NNS dobj
 |       +-- distributed VBN amod
 |       +-- between IN prep
 |           +-- clients NNS pobj
 |               +-- the DT det
 |               +-- UDDI NNP nn
 |               +-- and CC cc
 |               +-- registries NNS conj
 +-- . . punct

33
Input: Organization can also decide what information is available from the local registries by implementing policies at the proxy registry .
Parse:
decide VB ROOT
 +-- Organization NNP nsubj
 +-- can MD aux
 +-- also RB advmod
 +-- available JJ ccomp
 |   +-- information NN nsubj
 |   |   +-- what WDT det
 |   +-- is VBZ cop
 |   +-- from IN prep
 |   |   +-- registries NNS pobj
 |   |       +-- the DT det
 |   |       +-- local JJ amod
 |   +-- by IN prep
 |       +-- implementing VBG pcomp
 |           +-- policies NNS dobj
 |           +-- at IN prep
 |               +-- registry NN pobj
 |                   +-- the DT det
 |                   +-- proxy NN amod
 +-- . . punct

34
Input: . Sequence of Operations In this section , we demonstrate what the sequence of operations should be for three crucial scenarios adding a new local registry , inserting a new service and querying a service .
Parse:
demonstrate VBP ROOT
 +-- . , punct
 +-- Sequence NNP nsubj
 |   +-- of IN prep
 |       +-- Operations NNP pobj
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- be VB ccomp
 |   +-- what WP dobj
 |   +-- sequence NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- operations NNS pobj
 |   +-- should MD aux
 |   +-- for IN prep
 |   |   +-- scenarios NNS pobj
 |   |       +-- three CD num
 |   |       +-- crucial JJ amod
 |   +-- adding VBG ccomp
 |       +-- registry NN dobj
 |       |   +-- a DT det
 |       |   +-- new JJ amod
 |       |   +-- local JJ amod
 |       +-- , , punct
 |       +-- inserting VBG conj
 |       |   +-- service NN dobj
 |       |       +-- a DT det
 |       |       +-- new JJ amod
 |       +-- and CC cc
 |       +-- querying VBG conj
 |           +-- service NN dobj
 |               +-- a DT det
 +-- . . punct

35
Input: Other operations like deleting a registry , deleting a service , etc .
Parse:
like IN ROOT
 +-- operations NNS nsubj
 |   +-- Other JJ amod
 +-- deleting VBG xcomp
 |   +-- registry NN dobj
 |   |   +-- a DT det
 |   +-- , , punct
 |   +-- deleting VBG dep
 |   |   +-- service NN dobj
 |   |       +-- a DT det
 |   +-- etc FW advmod
 +-- . . punct

36
Input: are similar and for the sake of brevity are omitted here .
Parse:
similar JJ ROOT
 +-- are VBP cop
 +-- and CC cc
 +-- omitted VBN conj
 |   +-- for IN prep
 |   |   +-- sake NN pobj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- brevity NN pobj
 |   +-- are VBP auxpass
 |   +-- here RB advmod
 +-- . . punct

37
Input: Figure Sequence Diagram Add New Local Registry Add a New Local UDDI Registry Figure contains a sequence diagram illustrating how a new UDDI registry is added to the network of UDDI registries .
Parse:
contains VBZ ROOT
 +-- Add NNP nsubj
 |   +-- Diagram NNP nsubj
 |   |   +-- Figure NN nn
 |   |   +-- Sequence NNP nn
 |   +-- Add VB ccomp
 |       +-- Registry NNP nsubj
 |       |   +-- New NNP nn
 |       |   +-- Local NNP nn
 |       +-- Figure NNP dobj
 |           +-- a DT det
 |           +-- New NNP nn
 |           +-- Local NNP nn
 |           +-- UDDI NNP nn
 |           +-- Registry NNP nn
 +-- diagram NN dobj
 |   +-- a DT det
 |   +-- sequence NN nn
 |   +-- illustrating VBG partmod
 |       +-- added VBN ccomp
 |           +-- how WRB advmod
 |           +-- registry NN nsubjpass
 |           |   +-- a DT det
 |           |   +-- new JJ amod
 |           |   +-- UDDI NNP nn
 |           +-- is VBZ auxpass
 |           +-- to IN prep
 |               +-- network NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- registries NNS pobj
 |                           +-- UDDI NNP nn
 +-- . . punct

38
Input: The new registry registers itself with its proxy registry .
Parse:
registers VBZ ROOT
 +-- registry NN nsubj
 |   +-- The DT det
 |   +-- new JJ amod
 +-- itself PRP dobj
 +-- with IN prep
 |   +-- registry NN pobj
 |       +-- its PRP$ poss
 |       +-- proxy NN nn
 +-- . . punct

39
Input: The proxy registry in turn queries the new registry for all services that it has UDDI Local Registry UDDI Local Registry UDDI Local Registry Proxy Registry DHT Based Distribution Proxy Registry Proxy Registry Article stored in its databases and in turn registers each of those entries with the DHT .
Parse:
queries VBZ ROOT
 +-- registry NN nsubj
 |   +-- The DT det
 |   +-- proxy NN amod
 |   +-- in IN prep
 |       +-- turn NN pobj
 +-- registry NN dobj
 |   +-- the DT det
 |   +-- new JJ amod
 +-- for IN prep
 |   +-- services NNS pobj
 |       +-- all DT det
 +-- has VBZ ccomp
 |   +-- that IN mark
 |   +-- it PRP nsubj
 |   +-- Article NNP dobj
 |   |   +-- Registry NNP nn
 |   |   +-- Based VBN amod
 |   |   |   +-- DHT RB advmod
 |   |   +-- Distribution NN nn
 |   |   +-- Proxy NNP nn
 |   |   +-- stored VBN partmod
 |   |       +-- in IN prep
 |   |           +-- databases NNS pobj
 |   |               +-- its PRP$ poss
 |   +-- and CC cc
 |   +-- registers NNS conj
 |       +-- in IN prep
 |       |   +-- turn NN pobj
 |       +-- each DT dobj
 |       |   +-- of IN prep
 |       |       +-- entries NNS pobj
 |       |           +-- those DT det
 |       +-- with IN prep
 |           +-- DHT NN pobj
 |               +-- the DT det
 +-- . . punct

40
Input: 0Figure Sequence Diagram Add New Service Add a New Service The use case diagram depicted in Error ! Reference source not found .
Parse:
Add VB ROOT
 +-- Service NNP nsubj
 |   +-- 0Figure CD num
 |   +-- Sequence NNP nn
 |   +-- Diagram NNP nn
 |   +-- Add NNP amod
 |   +-- New NNP nn
 +-- Service NNP dobj
 |   +-- a DT det
 |   +-- New NNP nn
 +-- found VBN dep
 |   +-- diagram NN nsubj
 |   |   +-- The DT det
 |   |   +-- case NN nn
 |   |   |   +-- use NN nn
 |   |   +-- depicted VBN partmod
 |   |       +-- in IN prep
 |   |           +-- source NN pobj
 |   |               +-- Error NNP nn
 |   |               |   +-- ! . punct
 |   |               +-- Reference NN nn
 |   +-- not RB neg
 +-- . . punct

41
Input: highlights how a client publishes a new service to the UDDI registry .
Parse:
highlights VBZ ROOT
 +-- publishes VBZ ccomp
 |   +-- how WRB advmod
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   +-- service NN dobj
 |   |   +-- a DT det
 |   |   +-- new JJ amod
 |   +-- to IN prep
 |       +-- registry NN pobj
 |           +-- the DT det
 |           +-- UDDI NNP nn
 +-- . . punct

42
Input: In order to interact with the registry a client has to know how to contact its local proxy registry .
Parse:
has VBZ ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- interact VB infmod
 |           +-- to TO aux
 |           +-- with IN prep
 |               +-- registry NN pobj
 |                   +-- the DT det
 +-- client NN nsubj
 |   +-- a DT det
 +-- know VB xcomp
 |   +-- to TO aux
 |   +-- contact VB ccomp
 |       +-- how WRB advmod
 |       +-- to TO aux
 |       +-- registry NN dobj
 |           +-- its PRP$ poss
 |           +-- local JJ amod
 |           +-- proxy NN amod
 +-- . . punct

43
Input: It then publishes a service with the proxy registry which in turn publishes the service with the local UDDI registry and receives the UDDI key of the registry entry .
Parse:
publishes VBZ ROOT
 +-- It PRP nsubj
 +-- then RB advmod
 +-- service NN dobj
 |   +-- a DT det
 |   +-- with IN prep
 |   |   +-- registry NN pobj
 |   |       +-- the DT det
 |   |       +-- proxy NN amod
 |   +-- publishes VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- in IN prep
 |       |   +-- turn NN pobj
 |       +-- service NN dobj
 |       |   +-- the DT det
 |       +-- with IN prep
 |       |   +-- registry NN pobj
 |       |       +-- the DT det
 |       |       +-- local JJ amod
 |       |       +-- UDDI NNP nn
 |       +-- and CC cc
 |       +-- receives VBZ conj
 |           +-- key NN dobj
 |               +-- the DT det
 |               +-- UDDI NNP nn
 |               +-- of IN prep
 |                   +-- entry NN pobj
 |                       +-- the DT det
 |                       +-- registry NN nn
 +-- . . punct

44
Input: Then new key value pairs are published in the DHT , where each key is obtained by hashing a searchable keyword of the service and the value consists of the query URL of the registry and the UDDI key .
Parse:
published VBN ROOT
 +-- Then RB advmod
 +-- pairs NNS nsubjpass
 |   +-- new JJ amod
 |   +-- key JJ amod
 |   +-- value NN nn
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- DHT NN pobj
 |       +-- the DT det
 |       +-- , , punct
 |       +-- obtained VBN rcmod
 |           +-- where WRB advmod
 |           +-- key NN nsubjpass
 |           |   +-- each DT det
 |           +-- is VBZ auxpass
 |           +-- by IN prep
 |           |   +-- hashing VBG pcomp
 |           |       +-- keyword NN dobj
 |           |           +-- a DT det
 |           |           +-- searchable JJ amod
 |           |           +-- of IN prep
 |           |               +-- service NN pobj
 |           |                   +-- the DT det
 |           +-- and CC cc
 |           +-- consists VBZ conj
 |               +-- value NN nsubj
 |               |   +-- the DT det
 |               +-- of IN prep
 |                   +-- URL NN pobj
 |                       +-- the DT det
 |                       +-- query NN nn
 |                       +-- of IN prep
 |                       |   +-- registry NN pobj
 |                       |       +-- the DT det
 |                       +-- and CC cc
 |                       +-- key NN conj
 |                           +-- the DT det
 |                           +-- UDDI NNP nn
 +-- . . punct

45
Input: Figure Sequence Diagram Query for a Service Query a Service Figure shows how a client queries the UDDI registry for a service .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- Query NNP dep
 |   |   +-- Sequence NNP nn
 |   |   +-- Diagram NNP nn
 |   +-- for IN prep
 |   |   +-- Query NNP pobj
 |   |       +-- a DT det
 |   |       +-- Service NNP nn
 |   +-- Figure NN dep
 |       +-- a DT det
 |       +-- Service NN nn
 +-- queries VBZ ccomp
 |   +-- how WRB advmod
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   +-- registry NN dobj
 |   |   +-- the DT det
 |   |   +-- UDDI NNP nn
 |   +-- for IN prep
 |       +-- service NN pobj
 |           +-- a DT det
 +-- . . punct

46
Input: Once again , the client needs to know how to contact its local proxy registry and invokes the query service request .
Parse:
needs VBZ ROOT
 +-- again RB advmod
 |   +-- Once RB advmod
 +-- , , punct
 +-- client NN nsubj
 |   +-- the DT det
 +-- know VB xcomp
 |   +-- to TO aux
 |   +-- contact VB ccomp
 |       +-- how WRB advmod
 |       +-- to TO aux
 |       +-- registry NN dobj
 |       |   +-- its PRP$ poss
 |       |   +-- local JJ amod
 |       |   +-- proxy NN amod
 |       +-- and CC cc
 |       +-- invokes VBZ conj
 |           +-- request NN dobj
 |               +-- the DT det
 |               +-- service NN nn
 |                   +-- query NN nn
 +-- . . punct

47
Input: The proxy registry in turn contacts one of the DHT nodes to determine DHT queries using the search terms .
Parse:
contacts NNS ROOT
 +-- registry NN nsubj
 |   +-- The DT det
 |   +-- proxy NN amod
 |   +-- in IN prep
 |       +-- turn VB pobj
 +-- one CD dobj
 |   +-- of IN prep
 |       +-- nodes NNS pobj
 |           +-- the DT det
 |           +-- DHT NNP nn
 +-- determine VB xcomp
 |   +-- to TO aux
 |   +-- queries NNS dobj
 |       +-- DHT NN nn
 |       +-- using VBG partmod
 |           +-- terms NNS dobj
 |               +-- the DT det
 |               +-- search NN nn
 +-- . . punct

48
Input: As explained earlier in the context of Figure , multiple values might be retrieved from the DHT .
Parse:
retrieved VBN ROOT
 +-- explained VBN advcl
 |   +-- As IN mark
 |   +-- earlier RBR advmod
 |   +-- in IN prep
 |       +-- context NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- Figure NNP pobj
 +-- , , punct
 +-- values NNS nsubjpass
 |   +-- multiple JJ amod
 +-- might MD aux
 +-- be VB auxpass
 +-- from IN prep
 |   +-- DHT NN pobj
 |       +-- the DT det
 +-- . . punct

49
Input: Each value includes the query URL of a registry , and the unique UDDI key of a matching service in that registry .
Parse:
includes VBZ ROOT
 +-- value NN nsubj
 |   +-- Each DT det
 +-- URL NN dobj
 |   +-- the DT det
 |   +-- query NN nn
 |   +-- of IN prep
 |   |   +-- registry NN pobj
 |   |       +-- a DT det
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- key NN conj
 |       +-- the DT det
 |       +-- unique JJ amod
 |       +-- UDDI NNP nn
 |       +-- of IN prep
 |           +-- service NN pobj
 |               +-- a DT det
 |               +-- matching NN nn
 |               +-- in IN prep
 |                   +-- registry NN pobj
 |                       +-- that DT det
 +-- . . punct

50
Input: 0The proxy then contacts the matching registries and waits for the response of lookup operations using the corresponding UDDI keys .
Parse:
contacts VBZ ROOT
 +-- proxy NN nsubj
 |   +-- 0The LS det
 +-- then RB advmod
 +-- registries NNS dobj
 |   +-- the DT det
 |   +-- matching VBG amod
 |   +-- and CC cc
 |   +-- waits NNS conj
 +-- for IN prep
 |   +-- response NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- operations NNS pobj
 |       |       +-- lookup NN nn
 |       +-- using VBG partmod
 |           +-- keys NNS dobj
 |               +-- the DT det
 |               +-- corresponding VBG amod
 |               +-- UDDI NNP nn
 +-- . . punct

51
Input: Upon receiving the responses , the proxy registry collates all responses and returns the aggregated set of services to the client .
Parse:
collates VBZ ROOT
 +-- Upon IN prep
 |   +-- receiving VBG pcomp
 |       +-- responses NNS dobj
 |           +-- the DT det
 +-- , , punct
 +-- registry NN nsubj
 |   +-- the DT det
 |   +-- proxy NN amod
 +-- responses NNS dobj
 |   +-- all DT det
 +-- and CC cc
 +-- returns NNS conj
 |   +-- set NN dobj
 |   |   +-- the DT det
 |   |   +-- aggregated VBN amod
 |   |   +-- of IN prep
 |   |       +-- services NNS pobj
 |   +-- to IN prep
 |       +-- client NN pobj
 |           +-- the DT det
 +-- . . punct

52
Input: We will now illustrate these operations using an example .
Parse:
illustrate VB ROOT
 +-- We PRP nsubj
 +-- will MD aux
 +-- now RB advmod
 +-- operations NNS dobj
 |   +-- these DT det
 +-- using VBG xcomp
 |   +-- example NN dobj
 |       +-- an DT det
 +-- . . punct

53
Input: Consider a client contacting its local proxy to publish a service called Computer Accessories .
Parse:
Consider VB ROOT
 +-- client NN dobj
 |   +-- a DT det
 |   +-- contacting VBG partmod
 |       +-- proxy NN dobj
 |       |   +-- its PRP$ poss
 |       |   +-- local JJ amod
 |       +-- publish VB xcomp
 |           +-- to TO aux
 |           +-- service NN dobj
 |               +-- a DT det
 |               +-- called VBN partmod
 |                   +-- Accessories NNPS dep
 |                       +-- Computer NNP nn
 +-- . . punct

54
Input: The proxy follows the steps in Figure to add the service to UDDI registry , and also publishes two entries in the DHT .
Parse:
follows VBZ ROOT
 +-- proxy NN nsubj
 |   +-- The DT det
 +-- steps NNS dobj
 |   +-- the DT det
 |   +-- in IN prep
 |   |   +-- Figure NN pobj
 |   +-- add VB infmod
 |       +-- to TO aux
 |       +-- service NN dobj
 |       |   +-- the DT det
 |       +-- to IN prep
 |       |   +-- registry NN pobj
 |       |       +-- UDDI NNP nn
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- also RB advmod
 |       +-- publishes VBZ conj
 |           +-- entries NNS dobj
 |               +-- two CD num
 |               +-- in IN prep
 |                   +-- DHT NN pobj
 |                       +-- the DT det
 +-- . . punct

55
Input: The keys of these entries are obtained by hashing the words computer and accessories respectively .
Parse:
obtained VBN ROOT
 +-- keys NNS nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- entries NNS pobj
 |           +-- these DT det
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- hashing VBG pcomp
 |       +-- computer NN dobj
 |       |   +-- the DT det
 |       |   +-- words NNS nn
 |       |   +-- and CC cc
 |       |   +-- accessories VBZ conj
 |       +-- respectively RB advmod
 +-- . . punct

56
Input: Both entries have the same value consisting of the query URL of this registry and the unique UDDI key returned by the registry for this service .
Parse:
have VBP ROOT
 +-- entries NNS nsubj
 |   +-- Both DT det
 +-- value NN dobj
 |   +-- the DT det
 |   +-- same JJ amod
 |   +-- consisting VBG partmod
 |       +-- of IN prep
 |           +-- URL NN pobj
 |               +-- the DT det
 |               +-- query NN nn
 |               +-- of IN prep
 |               |   +-- registry NN pobj
 |               |       +-- this DT det
 |               |       +-- and CC cc
 |               |       +-- key NN conj
 |               |           +-- the DT det
 |               |           +-- unique JJ amod
 |               |           +-- UDDI NNP nn
 |               +-- returned VBN partmod
 |                   +-- by IN prep
 |                       +-- registry NN pobj
 |                           +-- the DT det
 |                           +-- for IN prep
 |                               +-- service NN pobj
 |                                   +-- this DT det
 +-- . . punct

57
Input: Next we consider another client publishing a service called Computer Repair through its proxy to UDDI registry .
Parse:
consider VBP ROOT
 +-- Next RB advmod
 +-- we PRP nsubj
 +-- client NN dobj
 |   +-- another DT det
 |   +-- publishing VBG partmod
 |       +-- service NN dobj
 |       |   +-- a DT det
 |       |   +-- called VBN partmod
 |       |       +-- Repair NNP dep
 |       |           +-- Computer NNP nn
 |       +-- through IN prep
 |           +-- proxy NN pobj
 |               +-- its PRP$ poss
 |               +-- to IN prep
 |                   +-- registry NN pobj
 |                       +-- UDDI NNP nn
 +-- . . punct

58
Input: A similar process results in more entries being added to the DHT .
Parse:
results NNS ROOT
 +-- process NN nsubj
 |   +-- A DT det
 |   +-- similar JJ amod
 +-- in IN prep
 |   +-- entries NNS pobj
 |       +-- more JJR amod
 |       +-- added VBN partmod
 |           +-- being VBG auxpass
 |           +-- to IN prep
 |               +-- DHT NN pobj
 |                   +-- the DT det
 +-- . . punct

59
Input: Recall that our DHT deployment can have multiple entries with the same key .
Parse:
Recall VB ROOT
 +-- have VB ccomp
 |   +-- that IN mark
 |   +-- deployment NN nsubj
 |   |   +-- our PRP$ poss
 |   |   +-- DHT NN nn
 |   +-- can MD aux
 |   +-- entries NNS dobj
 |       +-- multiple JJ amod
 |       +-- with IN prep
 |           +-- key NN pobj
 |               +-- the DT det
 |               +-- same JJ amod
 +-- . . punct

60
Input: 0If we follow the steps in Figure for a client sending a query to its proxy using the word computer , we see that the DHT is queried with the hash of the word computer as key .
Parse:
follow VBP ROOT
 +-- 0If LS dep
 +-- we PRP nsubj
 +-- steps NNS dobj
 |   +-- the DT det
 |   +-- in IN prep
 |   |   +-- Figure NN pobj
 |   +-- for IN prep
 |       +-- client NN pobj
 |           +-- a DT det
 +-- sending VBG xcomp
 |   +-- query NN dobj
 |   |   +-- a DT det
 |   +-- to IN prep
 |   |   +-- proxy NN pobj
 |   |       +-- its PRP$ poss
 |   +-- using VBG partmod
 |       +-- computer NN dobj
 |           +-- the DT det
 |           +-- word NN nn
 +-- , , punct
 +-- see VBP ccomp
 |   +-- we PRP nsubj
 |   +-- queried VBN ccomp
 |       +-- that IN mark
 |       +-- DHT NN nsubjpass
 |       |   +-- the DT det
 |       +-- is VBZ auxpass
 |       +-- with IN prep
 |           +-- hash NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |               |   +-- computer NN pobj
 |               |       +-- the DT det
 |               |       +-- word NN nn
 |               +-- as IN prep
 |                   +-- key NN pobj
 +-- . . punct

61
Input: This retrieves the query URL and respective UDDI keys of both services mentioned before in this example .
Parse:
retrieves VBZ ROOT
 +-- This DT nsubj
 +-- URL NN dobj
 |   +-- the DT det
 |   +-- query NN nn
 |   +-- and CC cc
 |   +-- keys NNS conj
 |   |   +-- respective JJ amod
 |   |   +-- UDDI NNP nn
 |   +-- of IN prep
 |       +-- services NNS pobj
 |           +-- both DT det
 |           +-- mentioned VBN partmod
 |               +-- before IN advmod
 |               +-- in IN prep
 |                   +-- example NN pobj
 |                       +-- this DT det
 +-- . . punct

62
Input: The proxy can then do a simple lookup operation at both UDDI and registries .
Parse:
do VB ROOT
 +-- proxy NN nsubj
 |   +-- The DT det
 +-- can MD aux
 +-- then RB advmod
 +-- operation NN dobj
 |   +-- a DT det
 |   +-- simple JJ amod
 |   +-- lookup NN nn
 +-- at IN prep
 |   +-- UDDI NNP pobj
 |       +-- both CC preconj
 |       +-- and CC cc
 |       +-- registries NNS conj
 +-- . . punct

63
Input: It is clear that as the number of UDDI registries and clients increases , this process of lookup at only relevant UDDI registries is more scalable that doing a full search using the word computer at all UDDI registries. .
Parse:
clear JJ ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- scalable JJ ccomp
 |   +-- that IN mark
 |   +-- increases VBZ advcl
 |   |   +-- as IN mark
 |   |   +-- number NN nsubj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- registries NNS pobj
 |   |               +-- UDDI NNP nn
 |   |               +-- and CC cc
 |   |               +-- clients NNS conj
 |   +-- , , punct
 |   +-- process NN nsubj
 |   |   +-- this DT det
 |   |   +-- of IN prep
 |   |   |   +-- lookup NN pobj
 |   |   +-- at IN prep
 |   |       +-- registries NNS pobj
 |   |           +-- only RB advmod
 |   |           +-- relevant JJ amod
 |   |           +-- UDDI NNP nn
 |   +-- is VBZ cop
 |   +-- more RBR advmod
 |   +-- that IN prep
 |       +-- doing VBG pcomp
 |           +-- search NN dobj
 |               +-- a DT det
 |               +-- full JJ amod
 |               +-- using VBG partmod
 |                   +-- computer NN dobj
 |                       +-- the DT det
 |                       +-- word NN nn
 |                       +-- at RB prep
 |                           +-- registries. NNS pobj
 |                               +-- all DT det
 |                               +-- UDDI NNP nn
 +-- . . punct
