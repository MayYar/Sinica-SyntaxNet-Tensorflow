
1
Input: . The theory of operation context The notion of operation context was first proposed in the GOT algorithm -LRB- -RRB- and used in conjunction with the theory of causality in follow up GOTO and ANYUNDO algorithms -LRB- , -RRB- .
Parse:
context NN ROOT
 +-- . NFP punct
 +-- theory NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- operation NN pobj
 +-- proposed VBN dep
 |   +-- notion NN nsubjpass
 |   |   +-- The DT det
 |   |   +-- of IN prep
 |   |       +-- context NN pobj
 |   |           +-- operation NN nn
 |   +-- was VBD auxpass
 |   +-- first RB advmod
 |   +-- in IN prep
 |   |   +-- algorithm NNP pobj
 |   |       +-- the DT det
 |   |       +-- GOT NN nn
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- -RRB- -RRB- punct
 |   +-- and CC cc
 |   +-- used VBN conj
 |       +-- in IN prep
 |           +-- conjunction NN pobj
 |               +-- with IN prep
 |                   +-- theory NN pobj
 |                       +-- the DT det
 |                       +-- of IN prep
 |                       |   +-- causality NN pobj
 |                       +-- in IN prep
 |                           +-- follow VB pcomp
 |                               +-- up RP prt
 |                               +-- GOTO NNP dobj
 |                                   +-- and CC cc
 |                                   +-- algorithms NNS conj
 |                                   |   +-- ANYUNDO NNP nn
 |                                   +-- -LRB- -LRB- punct
 |                                   +-- , , punct
 |                                   +-- -RRB- -RRB- punct
 +-- . . punct

2
Input: In prior work , the context of an operation O was defined as a sequence of transformed operations which can be executed to bring the document from its initial state to the state on which O is defined .
Parse:
defined VBN ROOT
 +-- In IN prep
 |   +-- work NN pobj
 |       +-- prior JJ amod
 +-- , , punct
 +-- context NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- O NN pobj
 |           +-- an DT det
 |           +-- operation NN nn
 +-- was VBD auxpass
 +-- as IN prep
 |   +-- sequence NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |       |   +-- operations NNS pobj
 |       |       +-- transformed VBN amod
 |       +-- executed VBN rcmod
 |           +-- which WDT nsubjpass
 |           +-- can MD aux
 |           +-- be VB auxpass
 |           +-- bring VB xcomp
 |               +-- to TO aux
 |               +-- document NN dobj
 |               |   +-- the DT det
 |               +-- from IN prep
 |               |   +-- state NN pobj
 |               |       +-- its PRP$ poss
 |               |       +-- initial JJ amod
 |               +-- to IN prep
 |                   +-- state NN pobj
 |                       +-- the DT det
 |                       +-- defined VBN rcmod
 |                           +-- on IN prep
 |                           |   +-- which WDT pobj
 |                           +-- O NN nsubjpass
 |                           +-- is VBZ auxpass
 +-- . . punct

3
Input: This definition is directly coupled to the sequential history buffering strategy , which saves executed operations in their execution forms and orders .
Parse:
coupled VBN ROOT
 +-- definition NN nsubjpass
 |   +-- This DT det
 +-- is VBZ auxpass
 +-- directly RB advmod
 +-- to IN prep
 |   +-- strategy NN pobj
 |       +-- the DT det
 |       +-- sequential JJ amod
 |       +-- history NN nn
 |       +-- buffering VBG amod
 |       +-- , , punct
 |       +-- saves VBZ rcmod
 |           +-- which WDT nsubj
 |           +-- operations NNS dobj
 |           |   +-- executed VBN amod
 |           +-- in IN prep
 |               +-- forms NNS pobj
 |                   +-- their PRP$ poss
 |                   +-- execution NN nn
 |                   +-- and CC cc
 |                   +-- orders NNS conj
 +-- . . punct

4
Input: There was no explicit representation of an operation context .
Parse:
was VBD ROOT
 +-- There EX expl
 +-- representation NN nsubj
 |   +-- no DT det
 |   +-- explicit JJ amod
 |   +-- of IN prep
 |       +-- context NN pobj
 |           +-- an DT det
 |           +-- operation NN nn
 +-- . . punct

5
Input: Context relationships among operations are derived from the causality relationships plus the history buffer position relationships among operations -LRB- , -RRB- .
Parse:
derived VBN ROOT
 +-- relationships NNS nsubjpass
 |   +-- Context NN nn
 |   +-- among IN prep
 |       +-- operations NNS pobj
 +-- are VBP auxpass
 +-- from IN prep
 |   +-- relationships NNS pobj
 |       +-- the DT det
 |       +-- causality NN nn
 |       +-- plus CC cc
 |       +-- relationships NNS conj
 |           +-- the DT det
 |           +-- history NN nn
 |           +-- position NN nn
 |           |   +-- buffer NN nn
 |           +-- among IN prep
 |           |   +-- operations NNS pobj
 |           +-- -LRB- -LRB- punct
 |           +-- , , punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

6
Input: In this paper , the concept of operation context is defined as a set of original operations corresponding to the document state on which this operation is defined .
Parse:
defined VBN ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- concept NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- context NN pobj
 |           +-- operation NN nn
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- set NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- operations NNS pobj
 |               +-- original JJ amod
 |               +-- corresponding VBG partmod
 |                   +-- to IN prep
 |                       +-- state NN pobj
 |                           +-- the DT det
 |                           +-- document NN nn
 |                           +-- defined VBN rcmod
 |                               +-- on IN prep
 |                               |   +-- which WDT pobj
 |                               +-- operation NN nsubjpass
 |                               |   +-- this DT det
 |                               +-- is VBZ auxpass
 +-- . . punct

7
Input: This new concept of operation context is independent of the underlying operation buffering strategy and is explicitly represented as an operation set .
Parse:
independent JJ ROOT
 +-- concept NN nsubj
 |   +-- This DT det
 |   +-- new JJ amod
 |   +-- of IN prep
 |       +-- context NN pobj
 |           +-- operation NN nn
 +-- is VBZ cop
 +-- of IN prep
 |   +-- strategy NN pobj
 |       +-- the DT det
 |       +-- underlying VBG amod
 |       +-- operation NN nn
 |       +-- buffering NN nn
 +-- and CC cc
 +-- represented VBN conj
 |   +-- is VBZ auxpass
 |   +-- explicitly RB advmod
 |   +-- as IN prep
 |       +-- operation NN pobj
 |           +-- an DT det
 |           +-- set VBN partmod
 +-- . . punct

8
Input: Based on the set representation of operation context , essential OT conditions -LRB- CC CC -RRB- have been precisely and concisely captured .
Parse:
captured VBN ROOT
 +-- Based VBN prep
 |   +-- on IN pcomp
 |       +-- representation NN pobj
 |           +-- the DT det
 |           +-- set VBN amod
 |           +-- of IN prep
 |               +-- context NN pobj
 |                   +-- operation NN nn
 +-- , , punct
 +-- conditions NNS nsubjpass
 |   +-- essential JJ amod
 |   +-- OT NNP nn
 |   +-- -LRB- -LRB- punct
 |   +-- CC NN dep
 |   |   +-- CC NNP nn
 |   +-- -RRB- -RRB- punct
 +-- have VBP aux
 +-- been VBN auxpass
 +-- precisely RB advmod
 |   +-- and CC cc
 |   +-- concisely RB conj
 +-- . . punct

9
Input: Moreover , the context vector has been devised to efficiently represent both normal and inverse operations in a context .
Parse:
devised VBN ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- vector NN nsubjpass
 |   +-- the DT det
 |   +-- context NN nn
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- represent VB xcomp
 |   +-- to TO aux
 |   +-- efficiently RB advmod
 |   +-- operations NNS dobj
 |   |   +-- normal JJ amod
 |   |       +-- both DT preconj
 |   |       +-- and CC cc
 |   |       +-- inverse JJ conj
 |   +-- in IN prep
 |       +-- context NN pobj
 |           +-- a DT det
 +-- . . punct

10
Input: The context vector is more general than the state vector and potentially applicable to other distributed computing systems as well .
Parse:
general JJ ROOT
 +-- vector NN nsubj
 |   +-- The DT det
 |   +-- context NN nn
 +-- is VBZ cop
 +-- more RBR advmod
 +-- than IN prep
 |   +-- vector NN pobj
 |       +-- the DT det
 |       +-- state NN nn
 +-- and CC cc
 +-- applicable JJ conj
 |   +-- potentially RB advmod
 |   +-- to IN prep
 |   |   +-- systems NNS pobj
 |   |       +-- other JJ amod
 |   |       +-- distributed VBN amod
 |   |       +-- computing NN nn
 |   +-- well RB advmod
 |       +-- as RB advmod
 +-- . . punct

11
Input: Based on the theory of causality , prior OT algorithms have used state vectors to capture causal dependency relationships among original normal operations and to represent document states in terms of original normal operations .
Parse:
used VBN ROOT
 +-- Based VBN prep
 |   +-- on IN pcomp
 |       +-- theory NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- causality NN pobj
 +-- , , punct
 +-- algorithms NNS nsubj
 |   +-- prior JJ amod
 |   +-- OT NNP nn
 +-- have VBP aux
 +-- vectors NNS dobj
 |   +-- state NN nn
 +-- capture VB xcomp
 |   +-- to TO aux
 |   +-- relationships NNS dobj
 |   |   +-- causal NN amod
 |   |   +-- dependency NN nn
 |   |   +-- among IN prep
 |   |       +-- operations NNS pobj
 |   |           +-- original JJ amod
 |   |           +-- normal JJ amod
 |   +-- and CC cc
 |   +-- represent VB conj
 |       +-- to TO aux
 |       +-- states NNS dobj
 |       |   +-- document NN nn
 |       +-- in IN prep
 |           +-- terms NNS pobj
 |               +-- of IN prep
 |                   +-- operations NNS pobj
 |                       +-- original JJ amod
 |                       +-- normal JJ amod
 +-- . . punct

12
Input: However , causal dependency relationships are not defined for inverse or transformed operations , and state vectors can not represent document states with original inverse operations .
Parse:
defined VBN ROOT
 +-- However RB advmod
 +-- , , punct
 +-- relationships NNS nsubjpass
 |   +-- causal NN amod
 |   +-- dependency NN nn
 +-- are VBP auxpass
 +-- not RB neg
 +-- for IN prep
 |   +-- operations NNS pobj
 |       +-- inverse NN amod
 |           +-- or CC cc
 |           +-- transformed VBN conj
 +-- and CC cc
 +-- represent VB conj
 |   +-- vectors NNS nsubj
 |   |   +-- state NN nn
 |   +-- can MD aux
 |   +-- not RB neg
 |   +-- states NNS dobj
 |       +-- document NN nn
 |       +-- with IN prep
 |           +-- operations NNS pobj
 |               +-- original JJ amod
 |               +-- inverse NN nn
 +-- . . punct

13
Input: The theory of causality is unable to capture essential OT conditions -LRB- CC CC -RRB- for all types of operation original and transformed , normal and inverse operations .
Parse:
unable JJ ROOT
 +-- theory NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- causality NN pobj
 +-- is VBZ cop
 +-- capture VB xcomp
 |   +-- to TO aux
 |   +-- conditions NNS dobj
 |       +-- essential JJ amod
 |       +-- OT NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- CC NNP dep
 |       |   +-- CC NNP nn
 |       +-- -RRB- -RRB- punct
 |       +-- for IN prep
 |           +-- types NNS pobj
 |               +-- all DT det
 |               +-- of IN prep
 |               |   +-- operation NN pobj
 |               +-- original JJ amod
 |               |   +-- and CC cc
 |               |   +-- transformed VBN conj
 |               +-- , , punct
 |               +-- operations NNS appos
 |                   +-- normal JJ amod
 |                       +-- and CC cc
 |                       +-- inverse NN conj
 +-- . . punct

14
Input: . COT versus GOTO ANYUNDO Both COT and GOTO ANYUNDO are capable of doing and undoing any operations at anytime .
Parse:
capable JJ ROOT
 +-- . , punct
 +-- COT UH discourse
 +-- versus IN prep
 |   +-- ANYUNDO NNP pobj
 |       +-- GOTO NNP nn
 |       +-- COT NNP dep
 |           +-- Both DT preconj
 |           +-- and CC cc
 |           +-- GOTO NNP conj
 +-- ANYUNDO PRP nsubj
 +-- are VBP cop
 +-- of IN prep
 |   +-- doing VBG pcomp
 |       +-- and CC cc
 |       +-- undoing VBG conj
 |       +-- operations NNS dobj
 |       |   +-- any DT det
 |       +-- at IN prep
 |           +-- anytime RB pcomp
 +-- . . punct

15
Input: The main difference is that COT achieves this capability without using ET functions -LRB- thus eliminating the RP requirement for IT functions -RRB- , and without requiring IT functions to preserve CP , IP and IP .
Parse:
is VBZ ROOT
 +-- difference NN nsubj
 |   +-- The DT det
 |   +-- main JJ amod
 +-- achieves VBZ ccomp
 |   +-- that IN mark
 |   +-- COT NNP nsubj
 |   +-- capability NN dobj
 |   |   +-- this DT det
 |   +-- without IN prep
 |       +-- using VBG pcomp
 |       |   +-- functions NNS dobj
 |       |   |   +-- ET NNP nn
 |       |   +-- eliminating VBG dep
 |       |       +-- -LRB- -LRB- punct
 |       |       +-- thus RB advmod
 |       |       +-- requirement NN dobj
 |       |       |   +-- the DT det
 |       |       |   +-- RP NNP nn
 |       |       |   +-- for IN prep
 |       |       |       +-- functions NNS pobj
 |       |       |           +-- IT NN nn
 |       |       +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- without IN conj
 |           +-- requiring VBG pcomp
 |               +-- functions NNS dobj
 |               |   +-- IT PRP nn
 |               +-- preserve VB xcomp
 |                   +-- to TO aux
 |                   +-- CP NNP dobj
 |                       +-- , , punct
 |                       +-- IP NN conj
 |                       +-- and CC cc
 |                       +-- IP NNP conj
 +-- . . punct

16
Input: The avoidance of RP , CP , IP , and IP has significantly simplified the design of transformation functions and the OT system as a whole .
Parse:
simplified VBN ROOT
 +-- avoidance NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- RP NN pobj
 |           +-- , , punct
 |           +-- CP NNP conj
 |           +-- IP NN conj
 |           +-- and CC cc
 +-- has VBZ aux
 +-- significantly RB advmod
 +-- design NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- functions NNS pobj
 |   |       +-- transformation NN nn
 |   +-- and CC cc
 |   +-- system NN conj
 |       +-- the DT det
 |       +-- OT NNP nn
 |       +-- as IN prep
 |           +-- whole NN pobj
 |               +-- a DT det
 +-- . . punct

17
Input: COT is simpler than GOTO ANYUNDO -LRB- and prior OT algorithms based on the causality theory -RRB- because of the use of a single theory of operation context for capturing all OTrelated conditions -LRB- CC CC -RRB- , the uniformity of contextbased conditions for treating all types of operation , and the conciseness of these context based conditions .
Parse:
simpler JJR ROOT
 +-- COT NNP nsubj
 +-- is VBZ cop
 +-- than IN prep
 |   +-- ANYUNDO NNP pobj
 |       +-- GOTO NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- and CC cc
 |       +-- algorithms NNS conj
 |       |   +-- prior JJ amod
 |       |   +-- OT NNP nn
 |       |   +-- based VBN prep
 |       |       +-- on IN pcomp
 |       |           +-- theory NN pobj
 |       |               +-- the DT det
 |       |               +-- causality NN nn
 |       +-- -RRB- -RRB- punct
 +-- of IN prep
 |   +-- because IN mwe
 |   +-- use NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- theory NN pobj
 |       |       +-- a DT det
 |       |       +-- single JJ amod
 |       |       +-- of IN prep
 |       |           +-- context NN pobj
 |       |               +-- operation NN nn
 |       +-- for IN prep
 |           +-- capturing VBG pcomp
 |               +-- conditions NNS dobj
 |                   +-- all DT det
 |                   +-- OTrelated JJ amod
 |                   +-- CC NNP appos
 |                   |   +-- -LRB- -LRB- punct
 |                   |   +-- CC NNP nn
 |                   |   +-- -RRB- -RRB- punct
 |                   +-- , , punct
 |                   +-- uniformity NN appos
 |                       +-- the DT det
 |                       +-- of IN prep
 |                           +-- conditions NNS pobj
 |                               +-- contextbased VBN amod
 |                               +-- for IN prep
 |                                   +-- treating VBG pcomp
 |                                       +-- types NNS dobj
 |                                           +-- all DT det
 |                                           +-- of IN prep
 |                                               +-- operation NN pobj
 +-- , , punct
 +-- and CC cc
 +-- conciseness NN conj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- conditions NNS pobj
 |           +-- these DT det
 |           +-- based VBN amod
 |               +-- context NN dep
 +-- . . punct

18
Input: The COT based system is more efficient than the GOTOANYUNDO based system in solving IP and IP .
Parse:
efficient JJ ROOT
 +-- system NN nsubj
 |   +-- The DT det
 |   +-- based VBN amod
 |       +-- COT NNP dep
 +-- is VBZ cop
 +-- more RBR advmod
 +-- than IN prep
 |   +-- system NN pobj
 |       +-- the DT det
 |       +-- based VBN amod
 |       |   +-- GOTOANYUNDO NNP dep
 |       +-- in IN prep
 |           +-- solving VBG pcomp
 |               +-- IP NN dobj
 |                   +-- and CC cc
 |                   +-- IP JJ conj
 +-- . . punct

19
Input: In GOTOANYUNDO , the do part -LRB- a normal operation -RRB- and the undopart -LRB- an inverse operation -RRB- need to be coupled for the purpose of preserving IP -LRB- -RRB- .
Parse:
need VBP ROOT
 +-- In IN prep
 |   +-- GOTOANYUNDO NNP pobj
 +-- , , punct
 +-- part NN nsubj
 |   +-- the DT det
 |   +-- do VBP nn
 |   +-- -LRB- -LRB- punct
 |   +-- operation NN dep
 |   |   +-- a DT det
 |   |   +-- normal JJ amod
 |   +-- -RRB- -RRB- punct
 |   +-- and CC cc
 |   +-- undopart NN conj
 |       +-- the DT det
 |       +-- -LRB- -LRB- punct
 |       +-- operation NN dep
 |       |   +-- an DT det
 |       |   +-- inverse NN amod
 |       +-- -RRB- -RRB- punct
 +-- coupled VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- for IN prep
 |   |   +-- purpose NN pobj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- preserving VBG pcomp
 |   |               +-- IP NN dobj
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- . . punct

20
Input: An eager coupling strategy was adopted an inverse operation is coupled with its corresponding normal operation immediately after its execution .
Parse:
adopted VBN ROOT
 +-- strategy NN nsubjpass
 |   +-- An DT det
 |   +-- eager JJ amod
 |   +-- coupling NN nn
 +-- was VBD auxpass
 +-- coupled VBN ccomp
 |   +-- operation NN nsubjpass
 |   |   +-- an DT det
 |   |   +-- inverse NN nn
 |   +-- is VBZ auxpass
 |   +-- with IN prep
 |       +-- corresponding VBG pcomp
 |           +-- its PRP$ nsubj
 |           +-- operation NN dobj
 |           |   +-- normal JJ amod
 |           +-- after IN prep
 |               +-- immediately RB advmod
 |               +-- execution NN pobj
 |                   +-- its PRP$ poss
 +-- . . punct

21
Input: Under this scheme , inverse operations are not explicitly represented in the history buffer .
Parse:
represented VBN ROOT
 +-- Under IN prep
 |   +-- scheme NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- operations NNS nsubjpass
 |   +-- inverse NN nn
 +-- are VBP auxpass
 +-- not RB neg
 +-- explicitly RB advmod
 +-- in IN prep
 |   +-- buffer NN pobj
 |       +-- the DT det
 |       +-- history NN nn
 +-- . . punct

22
Input: When a normal operation is to be executed , however , it may need to be transformed against only the undo part of a do undo pair .
Parse:
need VB ROOT
 +-- is VBZ advcl
 |   +-- When WRB advmod
 |   +-- operation NN nsubj
 |   |   +-- a DT det
 |   |   +-- normal JJ amod
 |   +-- executed VBN xcomp
 |       +-- to TO aux
 |       +-- be VB auxpass
 +-- , , punct
 +-- however RB advmod
 +-- it PRP nsubj
 +-- may MD aux
 +-- transformed VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- against IN prep
 |       +-- part NN pobj
 |           +-- only RB advmod
 |           +-- the DT det
 |           +-- undo JJ amod
 |           +-- of IN prep
 |               +-- pair NN pobj
 |                   +-- a DT det
 |                   +-- undo JJ amod
 |                       +-- do VBP aux
 +-- . . punct

23
Input: To cope with this problem , an extra DeCouple GOTO ReCouple scheme has to be used to decouple a do undo pair before invoking GOTO and then recouple them afterwards -LRB- -RRB- .
Parse:
has VBZ ROOT
 +-- cope VB advcl
 |   +-- To TO aux
 |   +-- with IN prep
 |       +-- problem NN pobj
 |           +-- this DT det
 +-- , , punct
 +-- scheme NN nsubj
 |   +-- an DT det
 |   +-- extra JJ amod
 |   +-- DeCouple NNP nn
 |   +-- GOTO NNP nn
 |   +-- ReCouple NNP nn
 +-- used VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- decouple VB xcomp
 |       +-- to TO aux
 |       +-- undo NN ccomp
 |           +-- a DT nsubj
 |           +-- do VB aux
 |           +-- pair NN dobj
 |           +-- before IN prep
 |           |   +-- invoking VBG pcomp
 |           |       +-- GOTO NNP dobj
 |           +-- and CC cc
 |           +-- recouple VB conj
 |               +-- then RB advmod
 |               +-- them PRP dobj
 |               +-- afterwards RB advmod
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- . . punct

24
Input: However , the implementation of this decouple recouple scheme revealed it was rather intricate and causing many repeated transformations .
Parse:
revealed VBD ROOT
 +-- However RB advmod
 +-- , , punct
 +-- implementation NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- scheme NN pobj
 |           +-- this DT det
 |           +-- recouple NNS nn
 |               +-- decouple JJ amod
 +-- intricate JJ ccomp
 |   +-- it PRP nsubj
 |   +-- was VBD cop
 |   +-- rather RB advmod
 |   +-- and CC cc
 |   +-- causing VBG conj
 |       +-- transformations NNS dobj
 |           +-- many JJ amod
 |           +-- repeated VBN amod
 +-- . . punct

25
Input: In the COT algorithm , COT DO and COT UNDO are seamlessly integrated .
Parse:
integrated VBN ROOT
 +-- In IN prep
 |   +-- algorithm NNP pobj
 |       +-- the DT det
 |       +-- COT NNP nn
 +-- , , punct
 +-- DO VB nsubjpass
 |   +-- COT NNP nn
 |   +-- and CC cc
 |   +-- UNDO NNP conj
 |       +-- COT NNP nn
 +-- are VBP auxpass
 +-- seamlessly RB advmod
 +-- . . punct

26
Input: Inverse operations are explicitly represented in the operation context , and a lazy coupling strategy is adopted the coupling of a do undo pair occurs not immediately after executing each inverse , but only when both the do part and the undo part appear in the same transformation process at some late stage .
Parse:
represented VBN ROOT
 +-- operations NNS nsubjpass
 |   +-- Inverse JJ amod
 +-- are VBP auxpass
 +-- explicitly RB advmod
 +-- in IN prep
 |   +-- context NN pobj
 |       +-- the DT det
 |       +-- operation NN nn
 +-- , , punct
 +-- and CC cc
 +-- adopted VBN conj
 |   +-- strategy NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- coupling NN nn
 |   |       +-- lazy JJ amod
 |   +-- is VBZ auxpass
 |   +-- occurs VBZ ccomp
 |       +-- coupling NN nsubj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- pair NN pobj
 |       |           +-- a DT det
 |       |           +-- undo NN amod
 |       |               +-- do VBP dep
 |       +-- after IN prep
 |           +-- not RB neg
 |           +-- immediately RB advmod
 |           +-- executing VBG pcomp
 |           |   +-- inverse NN dobj
 |           |       +-- each DT det
 |           +-- , , punct
 |           +-- but CC cc
 |           +-- appear VBP conj
 |               +-- when WRB advmod
 |               |   +-- only RB advmod
 |               +-- part NN nsubj
 |               |   +-- both DT preconj
 |               |   +-- the DT det
 |               |   +-- do VBP nn
 |               |   +-- and CC cc
 |               |   +-- part NN conj
 |               |       +-- the DT det
 |               |       +-- undo JJ amod
 |               +-- in IN prep
 |               |   +-- process NN pobj
 |               |       +-- the DT det
 |               |       +-- same JJ amod
 |               |       +-- transformation NN nn
 |               +-- at IN prep
 |                   +-- stage NN pobj
 |                       +-- some DT det
 |                       +-- late JJ amod
 +-- . . punct

27
Input: These strategies help to avoid overhead transformations caused by the eager coupling scheme and the decouple recouple scheme .
Parse:
help VBP ROOT
 +-- strategies NNS nsubj
 |   +-- These DT det
 +-- avoid VB xcomp
 |   +-- to TO aux
 |   +-- transformations NNS dobj
 |       +-- overhead JJ amod
 |       +-- caused VBN partmod
 |           +-- by IN prep
 |               +-- scheme NN pobj
 |                   +-- the DT det
 |                   +-- eager JJ amod
 |                   +-- coupling NN nn
 |                   +-- and CC cc
 |                   +-- scheme NN conj
 |                       +-- the DT det
 |                       +-- decouple JJ amod
 |                       +-- recouple NN nn
 +-- . . punct

28
Input: In the GOTO ANYUNDO based system , the solution to IP is encapsulated in an IP preserving IT function , called IPP IT -LRB- -RRB- .
Parse:
encapsulated VBN ROOT
 +-- In IN prep
 |   +-- system NN pobj
 |       +-- the DT det
 |       +-- GOTO NNP nn
 |       +-- based VBN amod
 |           +-- ANYUNDO NNP dep
 +-- , , punct
 +-- solution NN nsubj
 |   +-- the DT det
 |   +-- to IN prep
 |       +-- IP NN pobj
 +-- is VBZ cop
 +-- in IN prep
 |   +-- IP NN pobj
 |       +-- an DT det
 |       +-- preserving VBG partmod
 |           +-- function NN dobj
 |               +-- IT PRP nn
 +-- called VBN dep
 |   +-- IPP UH dobj
 |   +-- IT PRP dep
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- . . punct

29
Input: Inside this function , an extended ET function has to be used , which may invoke the expensive GOTO algorithm to ensure RP with the corresponding IT function .
Parse:
has VBZ ROOT
 +-- Inside IN prep
 |   +-- function NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- function NN nsubj
 |   +-- an DT det
 |   +-- extended JJ amod
 |   +-- ET NN nn
 +-- used VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- , , punct
 |   +-- invoke VB ccomp
 |       +-- which WDT nsubj
 |       +-- may MD aux
 |       +-- algorithm NN dobj
 |           +-- the DT det
 |           +-- expensive JJ amod
 |           +-- GOTO NNP nn
 |           +-- ensure VB infmod
 |               +-- to TO aux
 |               +-- RP NNP dobj
 |               +-- with IN prep
 |                   +-- function NN pobj
 |                       +-- the DT det
 |                       +-- corresponding VBG amod
 |                       +-- IT NN nn
 +-- . . punct

30
Input: In contrast , the COT solution to IP is encapsulated in the high level procedure make IPsafe Inverse -LRB- O , CD -RRB- , which is more efficient since -LRB- -RRB- it avoids converting O to O back and forth multiple times for each Ox ? ? ? NCD -LRB- if IPP IT -LRB- O , Ox -RRB- were used instead -RRB- ; and -LRB- -RRB- the transform -LRB- -RRB- procedure is much cheaper than GOTO .
Parse:
encapsulated VBN ROOT
 +-- In IN prep
 |   +-- contrast NN pobj
 +-- , , punct
 +-- solution NN nsubj
 |   +-- the DT det
 |   +-- COT NNP nn
 |   +-- to IN prep
 |       +-- IP NN pobj
 +-- is VBZ cop
 +-- in IN prep
 |   +-- procedure NN pobj
 |       +-- the DT det
 |       +-- level NN nn
 |           +-- high JJ amod
 +-- make VB dep
 |   +-- Inverse NNP dobj
 |       +-- IPsafe NN nn
 |       +-- O NNP appos
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- , , punct
 |       |   +-- CD NNP appos
 |       |   +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- efficient JJ rcmod
 |           +-- which WDT nsubj
 |           +-- is VBZ cop
 |           +-- more RBR advmod
 |           +-- avoids VBZ advcl
 |               +-- since IN mark
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 |               +-- it PRP nsubj
 |               +-- converting VBG xcomp
 |                   +-- O PRP dobj
 |                   +-- to IN prep
 |                   |   +-- O NNP pobj
 |                   +-- back RB advmod
 |                   |   +-- and CC cc
 |                   |   +-- forth RB conj
 |                   +-- times NNS dobj
 |                   |   +-- multiple JJ amod
 |                   +-- for IN prep
 |                       +-- Ox NNP pobj
 |                           +-- each DT det
 +-- ? . punct
 +-- ? , punct
 +-- NCD NNP conj
 |   +-- -LRB- -LRB- punct
 |   +-- used VBN advcl
 |   |   +-- if IN mark
 |   |   +-- IPP NNP nsubjpass
 |   |   |   +-- IT PRP dep
 |   |   |       +-- -LRB- -LRB- punct
 |   |   |       +-- Ox NNP dep
 |   |   |       |   +-- O NNP dep
 |   |   |       |   +-- , , punct
 |   |   |       +-- -RRB- -RRB- punct
 |   |   +-- were VBD auxpass
 |   |   +-- instead RB advmod
 |   +-- -RRB- -RRB- punct
 +-- ; : punct
 +-- and CC cc
 +-- cheaper JJR conj
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 |   +-- transform NN nsubj
 |   |   +-- the DT det
 |   +-- procedure NN nsubj
 |   +-- is VBZ cop
 |   +-- much RB advmod
 |   +-- than IN prep
 |       +-- GOTO NNP pobj
 +-- . . punct

31
Input: . OT buffering strategies Another distinctive feature of the COT algorithm is the separation of the algorithm from the underlying operation buffering strategy .
Parse:
separation NN ROOT
 +-- OT NNP dep
 |   +-- . . punct
 |   +-- strategies NNS dobj
 |       +-- buffering VBG nn
 +-- feature NN nsubj
 |   +-- Another DT det
 |   +-- distinctive JJ amod
 |   +-- of IN prep
 |       +-- algorithm NNP pobj
 |           +-- the DT det
 |           +-- COT NNP nn
 +-- is VBZ cop
 +-- the DT det
 +-- of IN prep
 |   +-- algorithm NN pobj
 |       +-- the DT det
 +-- from IN prep
 |   +-- strategy NN pobj
 |       +-- the DT det
 |       +-- underlying VBG amod
 |       +-- operation NN nn
 |       +-- buffering NN nn
 +-- . . punct

32
Input: This has not only resulted in a cleaner and simpler logical structure to the algorithm itself , but also allowed a range of performance optimizations at the operation buffering level .
Parse:
has VBZ ROOT
 +-- This DT nsubj
 +-- only RB dep
 |   +-- not RB neg
 +-- resulted VBN conj
 |   +-- in IN prep
 |       +-- structure NN pobj
 |           +-- a DT det
 |           +-- logical JJ amod
 |           |   +-- cleaner JJR advmod
 |           |       +-- and CC cc
 |           |       +-- simpler JJR conj
 |           +-- to IN prep
 |               +-- algorithm NNP pobj
 |                   +-- the DT det
 |                   +-- itself PRP dep
 +-- , , punct
 +-- also RB cc
 |   +-- but CC cc
 +-- allowed VBD conj
 |   +-- range NN dobj
 |       +-- a DT det
 |       +-- of IN prep
 |       |   +-- optimizations NNS pobj
 |       |       +-- performance NN nn
 |       +-- at IN prep
 |           +-- level NN pobj
 |               +-- the DT det
 |               +-- operation NN nn
 |               +-- buffering NN nn
 +-- . . punct

33
Input: We have devised and implemented a buffering structure in which not only original operations but also transformed versions can be saved ; and all transformed operations from the same original operation are organized in the same version group .
Parse:
devised VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- and CC cc
 +-- implemented VBD conj
 +-- structure NN dobj
 |   +-- a DT det
 |   +-- buffering NN nn
 |   +-- saved VBN rcmod
 |       +-- in IN prep
 |       |   +-- which WDT pobj
 |       +-- operations NNS nsubjpass
 |       |   +-- only RB preconj
 |       |   |   +-- not RB neg
 |       |   +-- original JJ amod
 |       |   +-- also RB cc
 |       |   |   +-- but CC cc
 |       |   +-- versions NNS conj
 |       |       +-- transformed VBN amod
 |       +-- can MD aux
 |       +-- be VB auxpass
 +-- ; : punct
 +-- organized VBN conj
 |   +-- operations NNS nsubjpass
 |   |   +-- all DT det
 |   |   +-- transformed VBN amod
 |   |   +-- from IN prep
 |   |       +-- operation NN pobj
 |   |           +-- the DT det
 |   |           +-- same JJ amod
 |   |           +-- original JJ amod
 |   +-- are VBP auxpass
 |   +-- in IN prep
 |       +-- group NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- version NN nn
 +-- . . punct

34
Input: When an original operation is required at the COT algorithm level , the corresponding version group is searched for a version that matches the context requirement .
Parse:
searched VBN ROOT
 +-- required VBN advcl
 |   +-- When WRB advmod
 |   +-- operation NN nsubjpass
 |   |   +-- an DT det
 |   |   +-- original JJ amod
 |   +-- is VBZ auxpass
 |   +-- at IN prep
 |       +-- level NN pobj
 |           +-- the DT det
 |           +-- algorithm NNP nn
 |               +-- COT NNP nn
 +-- , , punct
 +-- group NN nsubjpass
 |   +-- the DT det
 |   +-- corresponding VBG amod
 |   +-- version NN nn
 +-- is VBZ auxpass
 +-- for IN prep
 |   +-- version NN pobj
 |       +-- a DT det
 |       +-- matches VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- requirement NN dobj
 |               +-- the DT det
 |               +-- context NN nn
 +-- . . punct

35
Input: If such a version already exists , it is used to represent the original operation in the transformation process , thus saving the overhead to transform the original operation into this version .
Parse:
used VBN ROOT
 +-- exists VBZ advcl
 |   +-- If IN mark
 |   +-- version NN nsubj
 |   |   +-- such PDT predet
 |   |   +-- a DT det
 |   +-- already RB advmod
 +-- , , punct
 +-- it PRP nsubjpass
 +-- is VBZ auxpass
 +-- represent VB xcomp
 |   +-- to TO aux
 |   +-- operation NN dobj
 |   |   +-- the DT det
 |   |   +-- original JJ amod
 |   +-- in IN prep
 |   |   +-- process NN pobj
 |   |       +-- the DT det
 |   |       +-- transformation NN nn
 |   +-- , , punct
 |   +-- saving VBG partmod
 |       +-- thus RB advmod
 |       +-- overhead NN dobj
 |       |   +-- the DT det
 |       +-- transform VB xcomp
 |           +-- to TO aux
 |           +-- operation NN dobj
 |           |   +-- the DT det
 |           |   +-- original JJ amod
 |           +-- into IN prep
 |               +-- version NN pobj
 |                   +-- this DT det
 +-- . . punct

36
Input: Under this buffering structure , various heuristics can be used to selectively save transformed versions to maximize their reuse and minimize their space usage .
Parse:
used VBN ROOT
 +-- Under IN prep
 |   +-- structure NN pobj
 |       +-- this DT det
 |       +-- buffering VBG nn
 +-- , , punct
 +-- heuristics NNS nsubjpass
 |   +-- various JJ amod
 +-- can MD aux
 +-- be VB auxpass
 +-- save VB xcomp
 |   +-- to TO aux
 |   +-- selectively RB advmod
 |   +-- versions NNS dobj
 |   |   +-- transformed VBN amod
 |   +-- maximize VB xcomp
 |       +-- to TO aux
 |       +-- reuse NN dobj
 |       |   +-- their PRP$ poss
 |       +-- and CC cc
 |       +-- minimize VB conj
 |           +-- usage NN dobj
 |               +-- their PRP$ poss
 |               +-- space NN nn
 +-- . . punct

37
Input: By experimentation , we have identified some useful heuristics that are effective in saving transformations for a number of common patterns of operation sequence .
Parse:
identified VBN ROOT
 +-- By IN prep
 |   +-- experimentation NN pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- have VBP aux
 +-- heuristics NNS dobj
 |   +-- some DT det
 |   +-- useful JJ amod
 |   +-- effective JJ rcmod
 |       +-- that WDT nsubj
 |       +-- are VBP cop
 |       +-- in IN prep
 |           +-- saving VBG pcomp
 |               +-- transformations NNS dobj
 |                   +-- for IN prep
 |                       +-- number NN pobj
 |                           +-- a DT det
 |                           +-- of IN prep
 |                               +-- patterns NNS pobj
 |                                   +-- common JJ amod
 |                                   +-- of IN prep
 |                                       +-- sequence NN pobj
 |                                           +-- operation NN nn
 +-- . . punct

38
Input: COT is not the first OT algorithm that buffers and uses original operations for transformation .
Parse:
algorithm NNP ROOT
 +-- COT UH nsubj
 +-- is VBZ cop
 +-- not RB neg
 +-- the DT det
 +-- first JJ amod
 +-- OT NNP nn
 +-- buffers NNS dep
 |   +-- that IN det
 +-- and CC cc
 +-- uses VBZ conj
 |   +-- operations NNS dobj
 |   |   +-- original JJ amod
 |   +-- for IN prep
 |       +-- transformation NN pobj
 +-- . . punct

39
Input: Several prior OT algorithms , including CCU -LRB- -RRB- , adOPTed -LRB- -RRB- , and GOTOANYUNDO -LRB- -RRB- , have also buffered original operations .
Parse:
buffered VBN ROOT
 +-- algorithms NNS nsubj
 |   +-- Several JJ amod
 |   +-- prior JJ amod
 |   +-- OT NNP nn
 |   +-- , , punct
 |   +-- including VBG prep
 |       +-- CCU RB pobj
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 |           +-- , , punct
 |           +-- adOPTed VBN conj
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- -RRB- -RRB- punct
 |           +-- and CC cc
 |           +-- GOTOANYUNDO NNP conj
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- have VBP aux
 +-- also RB advmod
 +-- operations NNS dobj
 |   +-- original JJ amod
 +-- . . punct

40
Input: COT is unique in its way of buffering and using original , as well as transformed , operations .
Parse:
unique JJ ROOT
 +-- COT NNP nsubj
 +-- is VBZ cop
 +-- in IN prep
 |   +-- way NN pobj
 |       +-- its PRP$ poss
 |       +-- of IN prep
 |           +-- buffering VBG pcomp
 |               +-- and CC cc
 |               +-- using VBG conj
 |                   +-- original JJ dobj
 |                       +-- , , punct
 |                       +-- well RB cc
 |                       |   +-- as RB advmod
 |                       |   +-- as IN mwe
 |                       +-- operations NNS conj
 |                           +-- transformed VBN amod
 |                           +-- , , punct
 +-- . . punct

41
Input: . OT correctness OT correctness is a central topic of discussion in OT research .
Parse:
topic NN ROOT
 +-- . . punct
 +-- correctness NN nsubj
 |   +-- correctness NN nn
 |   |   +-- OT NNP nn
 |   +-- OT NNP nn
 +-- is VBZ cop
 +-- a DT det
 +-- central JJ amod
 +-- of IN prep
     +-- discussion NN pobj
         +-- in IN prep
             +-- research NN pobj
                 +-- OT NNP nn

42
Input: In this section , we provide our observations and opinions on some important OT correctness issues .
Parse:
provide VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- observations NNS dobj
 |   +-- our PRP$ poss
 |   +-- and CC cc
 |   +-- opinions NNS conj
 |   +-- on IN prep
 |       +-- issues NNS pobj
 |           +-- some DT det
 |           +-- important JJ amod
 |           +-- correctness NN nn
 |               +-- OT NNP nn
 +-- . . punct

43
Input: OT is a complex system with multiple interrelated components .
Parse:
system NN ROOT
 +-- OT NNP nsubj
 +-- is VBZ cop
 +-- a DT det
 +-- complex JJ amod
 +-- with IN prep
 |   +-- components NNS pobj
 |       +-- multiple JJ amod
 |       +-- interrelated VBN amod
 +-- . . punct

44
Input: A system oriented approach is needed for addressing OT issues .
Parse:
needed VBN ROOT
 +-- approach NN nsubjpass
 |   +-- A DT det
 |   +-- oriented VBN amod
 |       +-- system NN dep
 +-- is VBZ auxpass
 +-- for IN prep
 |   +-- addressing VBG pcomp
 |       +-- issues NNS dobj
 |           +-- OT NNP nn
 +-- . . punct

45
Input: An experimental method , called puzzle detectionresolution , has commonly been used in exploring and refining OT solutions .
Parse:
used VBN ROOT
 +-- method NN nsubjpass
 |   +-- An DT det
 |   +-- experimental JJ amod
 |   +-- , , punct
 |   +-- called VBN partmod
 |       +-- detectionresolution NN dep
 |           +-- puzzle NN nn
 +-- has VBZ aux
 +-- commonly RB advmod
 +-- been VBN auxpass
 +-- in IN prep
 |   +-- exploring VBG pcomp
 |       +-- and CC cc
 |       +-- refining NN conj
 |       +-- solutions NNS dobj
 |           +-- OT NNP nn
 +-- . . punct

46
Input: Puzzles are subtle but representative scenarios in which certain OT properties conditions may be violated and the system may produce incorrect results .
Parse:
scenarios NNS ROOT
 +-- Puzzles NNS nsubj
 +-- are VBP cop
 +-- subtle JJ amod
 |   +-- but CC cc
 |   +-- representative JJ conj
 +-- violated VBN rcmod
 |   +-- in IN prep
 |   |   +-- which WDT pobj
 |   +-- conditions NNS nsubjpass
 |   |   +-- certain JJ amod
 |   |   +-- properties NNS nn
 |   |       +-- OT NNP nn
 |   +-- may MD aux
 |   +-- be VB auxpass
 +-- and CC cc
 +-- produce VB conj
 |   +-- system NN nsubj
 |   |   +-- the DT det
 |   +-- may MD aux
 |   +-- results NNS dobj
 |       +-- incorrect JJ amod
 +-- . . punct

47
Input: The ability to solve all known puzzles is a necessary condition and an important indicator of the soundness of an OT system .
Parse:
condition NN ROOT
 +-- ability NN nsubj
 |   +-- The DT det
 |   +-- solve VB infmod
 |       +-- to TO aux
 |       +-- puzzles NNS dobj
 |           +-- all DT det
 |           +-- known VBN amod
 +-- is VBZ cop
 +-- a DT det
 +-- necessary JJ amod
 +-- and CC cc
 +-- indicator NN conj
 |   +-- an DT det
 |   +-- important JJ amod
 |   +-- of IN prep
 |       +-- soundness NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- system NN pobj
 |                   +-- an DT det
 |                   +-- OT NNP nn
 +-- . . punct

48
Input: In research literature , simple puzzle scenarios are often used to illustrate the key reasons why an OT system works or fails .
Parse:
used VBN ROOT
 +-- In IN prep
 |   +-- literature NN pobj
 |       +-- research NN nn
 +-- , , punct
 +-- scenarios NNS nsubjpass
 |   +-- simple JJ amod
 |   +-- puzzle NN nn
 +-- are VBP auxpass
 +-- often RB advmod
 +-- illustrate VB xcomp
 |   +-- to TO aux
 |   +-- reasons NNS dobj
 |       +-- the DT det
 |       +-- key JJ amod
 |       +-- works VBZ rcmod
 |           +-- why WRB advmod
 |           +-- system NN nsubj
 |           |   +-- an DT det
 |           |   +-- OT NNP nn
 |           +-- or CC cc
 |           +-- fails VBZ conj
 +-- . . punct

49
Input: In real OT system design , however , a real implementation and comprehensive testing cases based on complex puzzle scenarios are crucial in validating a design .
Parse:
crucial JJ ROOT
 +-- In IN prep
 |   +-- design NN pobj
 |       +-- real JJ amod
 |       +-- OT NNP nn
 |       +-- system NN nn
 +-- , , punct
 +-- however RB advmod
 +-- implementation NN nsubj
 |   +-- a DT det
 |   +-- real JJ amod
 |   +-- and CC cc
 |   +-- cases NNS conj
 |       +-- comprehensive JJ amod
 |       +-- testing NN nn
 |       +-- based VBN partmod
 |           +-- on IN prep
 |               +-- scenarios NNS pobj
 |                   +-- complex JJ amod
 |                   +-- puzzle NN nn
 +-- are VBP cop
 +-- in IN prep
 |   +-- validating VBG pcomp
 |       +-- design NN dobj
 |           +-- a DT det
 +-- . . punct

50
Input: Theoretical methods have also been used to formally verify OT correctness with respect to some identified transformation properties conditions .
Parse:
used VBN ROOT
 +-- methods NNS nsubjpass
 |   +-- Theoretical JJ amod
 +-- have VBP aux
 +-- also RB advmod
 +-- been VBN auxpass
 +-- verify VB xcomp
 |   +-- to TO aux
 |   +-- formally RB advmod
 |   +-- correctness NN dobj
 |   |   +-- OT NNP nn
 |   +-- with IN prep
 |       +-- respect NN pobj
 |           +-- to IN prep
 |               +-- conditions NNS pobj
 |                   +-- some DT det
 |                   +-- identified VBN amod
 |                   +-- properties NNS nn
 |                       +-- transformation NN nn
 +-- . . punct

51
Input: Formal verification can be effective if the correctness issues have been well understood and the verification criteria and boundary conditions have been well defined .
Parse:
effective JJ ROOT
 +-- verification NN nsubj
 |   +-- Formal JJ amod
 +-- can MD aux
 +-- be VB cop
 +-- understood VBN advcl
 |   +-- if IN mark
 |   +-- issues NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- correctness NN nn
 |   +-- have VBP aux
 |   +-- been VBN auxpass
 |   +-- well RB advmod
 |   +-- and CC cc
 |   +-- defined VBN conj
 |       +-- criteria NNS nsubjpass
 |       |   +-- the DT det
 |       |   +-- verification NN nn
 |       |   +-- and CC cc
 |       |   +-- conditions NNS conj
 |       |       +-- boundary JJ amod
 |       +-- have VBP aux
 |       +-- been VBN auxpass
 |       +-- well RB advmod
 +-- . . punct

52
Input: In this regard , experimental methods like puzzle detection resolution can play an important role in gaining the necessary insights into the real correctness issues , and establishing suitable criteria and conditions for formal verification .
Parse:
play VB ROOT
 +-- In IN prep
 |   +-- regard NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- methods NNS nsubj
 |   +-- experimental JJ amod
 |   +-- like IN prep
 |       +-- resolution NN pobj
 |           +-- puzzle NN nn
 |           +-- detection NN nn
 +-- can MD aux
 +-- role NN dobj
 |   +-- an DT det
 |   +-- important JJ amod
 +-- in IN prep
 |   +-- gaining VBG pcomp
 |       +-- insights NNS dobj
 |       |   +-- the DT det
 |       |   +-- necessary JJ amod
 |       |   +-- into IN prep
 |       |       +-- issues NNS pobj
 |       |           +-- the DT det
 |       |           +-- correctness NN nn
 |       |               +-- real JJ amod
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- establishing VBG conj
 |           +-- criteria NNS dobj
 |               +-- suitable JJ amod
 |               +-- and CC cc
 |               +-- conditions NNS conj
 |               +-- for IN prep
 |                   +-- verification NN pobj
 |                       +-- formal JJ amod
 +-- . . punct

53
Input: A systematic approach is needed in conducting both experimental and theoretic OT research .
Parse:
needed VBN ROOT
 +-- approach NN nsubjpass
 |   +-- A DT det
 |   +-- systematic JJ amod
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- conducting VBG pcomp
 |       +-- research NN dobj
 |           +-- experimental JJ amod
 |           |   +-- both DT preconj
 |           |   +-- and CC cc
 |           |   +-- theoretic JJ conj
 |           +-- OT NNP nn
 +-- . . punct

54
Input: Many OT components and issues are intimately related , and a solution to one issue , if examined in isolation , is unlikely to be correct or complete .
Parse:
related VBN ROOT
 +-- components NNS nsubjpass
 |   +-- Many JJ amod
 |   +-- OT NNP nn
 |   +-- and CC cc
 |   +-- issues NNS conj
 +-- are VBP auxpass
 +-- intimately RB advmod
 +-- , , punct
 +-- and CC cc
 +-- unlikely JJ conj
 |   +-- solution NN nsubj
 |   |   +-- a DT det
 |   |   +-- to IN prep
 |   |       +-- issue NN pobj
 |   |           +-- one CD num
 |   +-- , , punct
 |   +-- examined VBN dep
 |   |   +-- if IN mark
 |   |   +-- in IN prep
 |   |       +-- isolation NN pobj
 |   +-- is VBZ cop
 |   +-- correct JJ xcomp
 |       +-- to TO aux
 |       +-- be VB cop
 |       +-- or CC cc
 |       +-- complete JJ conj
 +-- . . punct

55
Input: For example , a solution that works well for consistency maintenance -LRB- do -RRB- , may fail when both do and undo problems are considered ; and an undo solution -LRB- e.g .
Parse:
fail VB ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- solution NN nsubj
 |   +-- a DT det
 |   +-- works VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- well RB advmod
 |       +-- for IN prep
 |           +-- maintenance NN pobj
 |               +-- consistency NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- do VB dep
 |               +-- -RRB- -RRB- punct
 +-- may MD aux
 +-- considered VBN advcl
 |   +-- when WRB advmod
 |   +-- problems NNS nsubjpass
 |   |   +-- do VBP nn
 |   |       +-- both CC preconj
 |   |       +-- and CC cc
 |   |       +-- undo JJ conj
 |   +-- are VBP auxpass
 +-- ; : punct
 +-- and CC cc
 +-- solution NN conj
 |   +-- an DT det
 |   +-- undo JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- e.g NNP dep
 +-- . . punct

56
Input: preserving IP -RRB- may violate the solution to consistency maintenance -LRB- -RRB- .
Parse:
violate VB ROOT
 +-- preserving VBG csubj
 |   +-- IP NNP dobj
 |   +-- -RRB- -RRB- punct
 +-- may MD aux
 +-- solution NN dobj
 |   +-- the DT det
 |   +-- consistency VB infmod
 |       +-- to TO aux
 |       +-- maintenance NN dobj
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- . . punct

57
Input: A complete OT solution to both do and undo problems is significantly more difficult to design than a partial solution to only one of them .
Parse:
difficult JJ ROOT
 +-- solution NN nsubj
 |   +-- A DT det
 |   +-- complete JJ amod
 |   +-- OT NNP nn
 |   +-- do VB infmod
 |       +-- to IN aux
 |       +-- both CC preconj
 |       +-- and CC cc
 |       +-- undo JJ conj
 |       +-- problems NNS dobj
 +-- is VBZ cop
 +-- significantly RB advmod
 +-- more RBR advmod
 +-- design VB ccomp
 |   +-- to TO aux
 +-- than IN prep
 |   +-- solution NN pobj
 |       +-- a DT det
 |       +-- partial JJ amod
 |       +-- to IN prep
 |           +-- one CD pobj
 |               +-- only RB quantmod
 |               +-- of IN prep
 |                   +-- them PRP pobj
 +-- . . punct

58
Input: On the other hand , a difficult issue in one OT component may be resolved easily , or avoided altogether , if this issue is addressed from a different OT component .
Parse:
resolved VBN ROOT
 +-- On IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- issue NN nsubjpass
 |   +-- a DT det
 |   +-- difficult JJ amod
 |   +-- in IN prep
 |       +-- component NN pobj
 |           +-- one CD num
 |           +-- OT NNP nn
 +-- may MD aux
 +-- be VB auxpass
 +-- easily RB advmod
 +-- or CC cc
 +-- avoided VBN conj
 |   +-- altogether RB advmod
 |   +-- , , punct
 |   +-- addressed VBN advcl
 |       +-- if IN mark
 |       +-- issue NN nsubjpass
 |       |   +-- this DT det
 |       +-- is VBZ auxpass
 |       +-- from IN prep
 |           +-- component NN pobj
 |               +-- a DT det
 |               +-- different JJ amod
 |               +-- OT NNP nn
 +-- . . punct

59
Input: For example , it is known that devising and proving transformation functions capable of preserving properties CP , IP , and IP are difficult .
Parse:
known VBN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- it PRP nsubjpass
 +-- is VBZ auxpass
 +-- difficult JJ ccomp
 |   +-- that IN mark
 |   +-- devising VBG csubj
 |   |   +-- and CC cc
 |   |   +-- proving VBG conj
 |   |       +-- functions NNS dobj
 |   |           +-- transformation NN nn
 |   |           +-- capable JJ amod
 |   |               +-- of IN prep
 |   |                   +-- preserving VBG pcomp
 |   |                       +-- CP NNP dobj
 |   |                           +-- properties NNS nn
 |   |                           +-- , , punct
 |   |                           +-- IP JJ conj
 |   |                           +-- and CC cc
 |   |                           +-- IP NN conj
 |   +-- are VBP cop
 +-- . . punct

60
Input: However , these difficulties can be avoided by devising control algorithms -LRB- like COT -RRB- capable of breaking the pre conditions for requiring these properties ; it is also easier to prove a control algorithm is capable of breaking the pre conditions for these properties , than to prove transformation functions are capable of preserving them .
Parse:
avoided VBN ROOT
 +-- However RB advmod
 +-- , , punct
 +-- difficulties NNS nsubjpass
 |   +-- these DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- by IN prep
 |   +-- algorithms NNS pobj
 |       +-- control NN nn
 |       |   +-- devising VBG nn
 |       +-- -LRB- -LRB- punct
 |       +-- like IN prep
 |       |   +-- COT NNP pobj
 |       +-- -RRB- -RRB- punct
 |       +-- capable JJ amod
 |           +-- of IN prep
 |               +-- breaking VBG pcomp
 |                   +-- conditions NNS dobj
 |                       +-- the DT det
 |                       +-- pre JJ nn
 |                       +-- for IN prep
 |                           +-- requiring VBG pcomp
 |                               +-- properties NNS dobj
 |                                   +-- these DT det
 +-- ; : punct
 +-- easier JJR parataxis
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- also RB advmod
 |   +-- prove VB xcomp
 |   |   +-- to TO aux
 |   |   +-- control NN dobj
 |   |       +-- a DT det
 |   |       +-- capable JJ rcmod
 |   |           +-- algorithm NN nsubj
 |   |           +-- is VBZ cop
 |   |           +-- of IN prep
 |   |               +-- breaking VBG pcomp
 |   |                   +-- conditions NNS dobj
 |   |                       +-- the DT det
 |   |                       +-- pre JJ nn
 |   |                       +-- for IN prep
 |   |                           +-- properties NNS pobj
 |   |                               +-- these DT det
 |   +-- , , punct
 |   +-- prove VB advcl
 |       +-- than IN mark
 |       +-- to TO aux
 |       +-- capable JJ ccomp
 |           +-- functions NNS nsubj
 |           |   +-- transformation NN nn
 |           +-- are VBP cop
 |           +-- of IN prep
 |               +-- preserving VBG pcomp
 |                   +-- them PRP dobj
 +-- . . punct

61
Input: Different OT systems may have different divisions of responsibility among their components and hence different correctness requirements for these components .
Parse:
have VB ROOT
 +-- systems NNS nsubj
 |   +-- Different JJ amod
 |   +-- OT NNP nn
 +-- may MD aux
 +-- divisions NNS dobj
 |   +-- different JJ amod
 |   +-- of IN prep
 |   |   +-- responsibility NN pobj
 |   +-- among IN prep
 |   |   +-- components NNS pobj
 |   |       +-- their PRP$ poss
 |   +-- and CC cc
 |   +-- requirements NNS conj
 |       +-- different JJ amod
 |       |   +-- hence RB advmod
 |       +-- correctness NN nn
 |       +-- for IN prep
 |           +-- components NNS pobj
 |               +-- these DT det
 +-- . . punct

62
Input: Caution must be taken in interpreting correctness results .
Parse:
taken VBN ROOT
 +-- Caution NN nsubjpass
 +-- must MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- interpreting VBG pcomp
 |       +-- results NNS dobj
 |           +-- correctness NN nn
 +-- . . punct

63
Input: For example , CP and CP were proven to be necessary and sufficient for adOPTed based systems to converge -LRB- , -RRB- , but this result can not be generalized to all OT systems .
Parse:
proven VBN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- CP NNP nsubjpass
 |   +-- and CC cc
 |   +-- CP NNP conj
 +-- were VBD auxpass
 +-- necessary JJ xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- and CC cc
 |   +-- sufficient JJ conj
 |   +-- converge VB advcl
 |       +-- for IN mark
 |       +-- systems NNS nsubj
 |       |   +-- based VBN amod
 |       |       +-- adOPTed JJ dep
 |       +-- to TO aux
 |       +-- -LRB- -LRB- punct
 |       +-- , , punct
 |       +-- -RRB- -RRB- punct
 +-- but CC cc
 +-- generalized VBN conj
 |   +-- result NN nsubjpass
 |   |   +-- this DT det
 |   +-- can MD aux
 |   +-- not RB neg
 |   +-- be VB auxpass
 |   +-- to IN prep
 |       +-- systems NNS pobj
 |           +-- all DT det
 |           +-- OT NNP nn
 +-- . . punct

64
Input: In fact , CP and CP are neither sufficient nor necessary for many OT systems .
Parse:
sufficient JJ ROOT
 +-- In IN prep
 |   +-- fact NN pobj
 +-- , , punct
 +-- CP NNP nsubj
 |   +-- and CC cc
 |   +-- CP NNP conj
 +-- are VBP cop
 +-- neither CC preconj
 +-- nor CC cc
 +-- necessary JJ conj
 +-- for IN prep
 |   +-- systems NNS pobj
 |       +-- many JJ amod
 |       +-- OT NNP nn
 +-- . . punct

65
Input: They are insufficient because an OT system may need to preserve additional properties conditions , such as IP , IP , and those summarized in -LRB- -RRB- .
Parse:
insufficient JJ ROOT
 +-- They PRP nsubj
 +-- are VBP cop
 +-- need VB advcl
 |   +-- because IN mark
 |   +-- system NN nsubj
 |   |   +-- an DT det
 |   |   +-- OT NNP nn
 |   +-- may MD aux
 |   +-- preserve VB xcomp
 |       +-- to TO aux
 |       +-- conditions NNS dobj
 |           +-- additional JJ amod
 |           +-- properties NNS nn
 |           +-- , , punct
 |           +-- as IN prep
 |               +-- such JJ mwe
 |               +-- IP NN pobj
 |                   +-- , , punct
 |                   +-- IP UH conj
 |                   +-- and CC cc
 |                   +-- those DT conj
 |                       +-- summarized VBN partmod
 |                           +-- in IN prep
 |                               +-- -LRB- -LRB- punct
 |                               +-- -RRB- -RRB- punct
 +-- . . punct

66
Input: They are unnecessary if the pre conditions for requiring them have been broken .
Parse:
unnecessary JJ ROOT
 +-- They PRP nsubj
 +-- are VBP cop
 +-- broken VBN advcl
 |   +-- if IN mark
 |   +-- conditions NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- pre NN nn
 |   |   +-- for IN prep
 |   |       +-- requiring VBG pcomp
 |   |           +-- them PRP dobj
 |   +-- have VBP aux
 |   +-- been VBN auxpass
 +-- . . punct

67
Input: For example , neither CP nor CP is required in the REDUCE system based on the GOT algorithm for ensuring convergence -LRB- -RRB- .
Parse:
required VBN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- CP NNP nsubjpass
 |   +-- neither CC preconj
 |   +-- nor CC cc
 |   +-- CP NNP conj
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- system NN pobj
 |       +-- the DT det
 |       +-- REDUCE NN nn
 |       +-- based VBN partmod
 |           +-- on IN prep
 |               +-- algorithm NNP pobj
 |                   +-- the DT det
 |                   +-- GOT NNP nn
 +-- for IN prep
 |   +-- ensuring VBG pcomp
 |       +-- convergence NN dobj
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- . . punct

68
Input: CP is also not required by OT systems based on COT or some prior OT algorithms -LRB- , , -RRB- .
Parse:
required VBN ROOT
 +-- CP NN nsubjpass
 +-- is VBZ auxpass
 +-- also RB advmod
 +-- not RB neg
 +-- by IN prep
 |   +-- systems NNS pobj
 |       +-- OT NNP nn
 |       +-- based VBN partmod
 |       |   +-- on IN prep
 |       |       +-- COT NNP pobj
 |       +-- or CC cc
 |       +-- algorithms NNS conj
 |           +-- some DT det
 |           +-- prior JJ amod
 |           +-- OT NNP nn
 |           +-- -LRB- -LRB- punct
 |           +-- , , punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

69
Input: One OT correctness issue , which is often discussed in relation to the CP violation problem , is the false tie problem when two -LRB- or more -RRB- insert operations with the same position are IT transformed with each other , the position tie may be false if it was not original but caused by previous transformations .
Parse:
problem NN ROOT
 +-- issue NN nsubj
 |   +-- One CD num
 |   +-- OT NNP nn
 |   +-- correctness NN nn
 |   +-- , , punct
 |   +-- discussed VBN rcmod
 |       +-- which WDT nsubjpass
 |       +-- is VBZ auxpass
 |       +-- often RB advmod
 |       +-- in IN prep
 |           +-- relation NN pobj
 |               +-- to IN prep
 |                   +-- problem NN pobj
 |                       +-- the DT det
 |                       +-- CP NNP nn
 |                       +-- violation NN nn
 +-- is VBZ cop
 +-- the DT det
 +-- tie NN nn
 |   +-- false JJ amod
 +-- transformed VBN rcmod
 |   +-- insert JJ advcl
 |   |   +-- when WRB advmod
 |   |   +-- two CD nsubj
 |   |   |   +-- -LRB- -LRB- punct
 |   |   |   +-- or CC cc
 |   |   |   +-- more JJR conj
 |   |   |   +-- -RRB- -RRB- punct
 |   |   +-- operations NNS dobj
 |   |   +-- with IN prep
 |   |       +-- position NN pobj
 |   |           +-- the DT det
 |   |           +-- same JJ amod
 |   +-- are VBP auxpass
 |   +-- IT PRP nsubjpass
 |   +-- with IN prep
 |       +-- other JJ pobj
 |           +-- each DT det
 +-- , , punct
 +-- false JJ ccomp
 |   +-- tie NN nsubj
 |   |   +-- the DT det
 |   |   +-- position NN nn
 |   +-- may MD aux
 |   +-- be VB cop
 |   +-- original JJ advcl
 |   |   +-- if IN mark
 |   |   +-- it PRP nsubj
 |   |   +-- was VBD cop
 |   |   +-- not RB neg
 |   +-- but CC cc
 |   +-- caused VBN conj
 |       +-- by IN prep
 |           +-- transformations NNS pobj
 |               +-- previous JJ amod
 +-- . . punct

70
Input: An OT system may fail to produce correct results if the normal tie breaking rule -LRB- e.g .
Parse:
fail VB ROOT
 +-- system NN nsubj
 |   +-- An DT det
 |   +-- OT NNP nn
 +-- may MD aux
 +-- produce VB xcomp
 |   +-- to TO aux
 |   +-- results NNS dobj
 |       +-- correct JJ amod
 +-- e.g UH advcl
 |   +-- if IN mark
 |   +-- rule NN dep
 |   |   +-- the DT det
 |   |   +-- normal JJ amod
 |   |   +-- breaking VBG nn
 |   |       +-- tie NN nn
 |   +-- -LRB- -LRB- punct
 +-- . . punct

71
Input: based on site identifiers -RRB- is used to break false ties .
Parse:
used VBN ROOT
 +-- based VBN prep
 |   +-- on IN pcomp
 |       +-- identifiers NNS pobj
 |           +-- site NN nn
 +-- -RRB- -RRB- punct
 +-- is VBZ auxpass
 +-- break VB xcomp
 |   +-- to TO aux
 |   +-- ties NNS dobj
 |       +-- false JJ amod
 +-- . . punct

72
Input: This problem was long discovered in early OT work and a concrete scenario related to this problem was illustrated in Fig .
Parse:
discovered VBN ROOT
 +-- problem NN nsubjpass
 |   +-- This DT det
 +-- was VBD auxpass
 +-- long RB advmod
 +-- in IN prep
 |   +-- work NN pobj
 |       +-- early RB amod
 |       +-- OT NNP nn
 +-- and CC cc
 +-- illustrated VBN conj
 |   +-- scenario NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- concrete JJ amod
 |   |   +-- related VBN partmod
 |   |       +-- to IN prep
 |   |           +-- problem NN pobj
 |   |               +-- this DT det
 |   +-- was VBD auxpass
 |   +-- in IN prep
 |       +-- Fig NNP pobj
 +-- . . punct

73
Input: of -LRB- -RRB- .
Parse:
of IN ROOT
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- . . punct

74
Input: It is beyond the scope of this paper to discuss solutions to this problem , but it is worth pointing out that the false tie problem is different from the CP violation problem a false tie may occur without violating CP .
Parse:
is VBZ ROOT
 +-- It PRP nsubj
 +-- beyond IN prep
 |   +-- scope NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- paper NN pobj
 |               +-- this DT det
 +-- discuss VB xcomp
 |   +-- to TO aux
 |   +-- solutions NNS dobj
 |       +-- to IN prep
 |           +-- problem NN pobj
 |               +-- this DT det
 +-- , , punct
 +-- but CC cc
 +-- worth JJ conj
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- pointing VBG dep
 |       +-- out RP prt
 |       +-- different JJ ccomp
 |           +-- that IN mark
 |           +-- problem NN nsubj
 |           |   +-- the DT det
 |           |   +-- tie NN nn
 |           |       +-- false JJ amod
 |           +-- is VBZ cop
 |           +-- occur VB ccomp
 |               +-- from IN prep
 |               |   +-- problem NN pobj
 |               |       +-- the DT det
 |               |       +-- violation NN nn
 |               |           +-- CP NNP nn
 |               +-- tie NN nsubj
 |               |   +-- a DT det
 |               |   +-- false JJ amod
 |               +-- may MD aux
 |               +-- without IN prep
 |                   +-- violating VBG pcomp
 |                       +-- CP NNP dobj
 +-- . . punct

75
Input: In our view , the false tie problem is an issue at the transformation function level and its solution could and should be localized at this level as well .
Parse:
issue NN ROOT
 +-- In IN prep
 |   +-- view NN pobj
 |       +-- our PRP$ poss
 +-- , , punct
 +-- problem NN nsubj
 |   +-- the DT det
 |   +-- tie NN nn
 |       +-- false JJ amod
 +-- is VBZ cop
 +-- an DT det
 +-- at IN prep
 |   +-- level NN pobj
 |       +-- the DT det
 |       +-- transformation NN nn
 |       +-- function NN nn
 +-- and CC cc
 +-- could MD conj
 |   +-- solution NN nsubj
 |   |   +-- its PRP$ poss
 |   +-- and CC cc
 |   +-- localized VBN conj
 |       +-- should MD aux
 |       +-- be VB auxpass
 |       +-- at IN prep
 |       |   +-- level NN pobj
 |       |       +-- this DT det
 |       +-- well RB advmod
 |           +-- as RB advmod
 +-- . . punct

76
Input: For alternative views and approaches to this problem , the reader is referred to -LRB- , , -RRB- .
Parse:
referred VBN ROOT
 +-- For IN prep
 |   +-- views NNS pobj
 |       +-- alternative JJ amod
 |       +-- and CC cc
 |       +-- approaches NNS conj
 |       +-- to IN prep
 |           +-- problem NN pobj
 |               +-- this DT det
 +-- , , punct
 +-- reader NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- -LRB- -LRB- punct
 |   +-- , , punct
 |   +-- -RRB- -RRB- punct
 +-- . . punct

77
Input: The COT algorithm has been implemented and validated by a comprehensive testing suite covering all known OT puzzle scenarios .
Parse:
implemented VBN ROOT
 +-- algorithm NNP nsubjpass
 |   +-- The DT det
 |   +-- COT NNP nn
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- and CC cc
 +-- validated VBN conj
 +-- by IN prep
 |   +-- suite NN pobj
 |       +-- a DT det
 |       +-- comprehensive JJ amod
 |       +-- testing NN nn
 |       +-- covering VBG partmod
 |           +-- scenarios NNS dobj
 |               +-- all DT det
 |               +-- known VBN amod
 |               +-- OT NNP nn
 |               +-- puzzle NN nn
 +-- . . punct

78
Input: In this paper , informal analysis and simple puzzle scenarios have been used to show the correctness of COT with respect to various transformation properties conditions .
Parse:
used VBN ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- analysis NN nsubjpass
 |   +-- informal JJ amod
 |   +-- and CC cc
 |   +-- scenarios NNS conj
 |       +-- simple JJ amod
 |       +-- puzzle NN nn
 +-- have VBP aux
 +-- been VBN auxpass
 +-- show VB xcomp
 |   +-- to TO aux
 |   +-- correctness NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- COT NNP pobj
 |   +-- with IN prep
 |       +-- respect NN pobj
 |           +-- to IN prep
 |               +-- conditions NNS pobj
 |                   +-- various JJ amod
 |                   +-- properties NNS nn
 |                       +-- transformation NN nn
 +-- . . punct

79
Input: Formal verification of COT correctness with respect to these properties conditions , and quantitative analysis of the time and space complexity of COT , shall be reported in a journal version of this paper. .
Parse:
reported VBN ROOT
 +-- verification NN nsubjpass
 |   +-- Formal JJ amod
 |   +-- of IN prep
 |   |   +-- correctness NN pobj
 |   |       +-- COT NNP nn
 |   +-- with IN prep
 |       +-- respect NN pobj
 |           +-- to IN prep
 |               +-- conditions NNS pobj
 |                   +-- these DT det
 |                   +-- properties NNS nn
 |                   +-- , , punct
 |                   +-- and CC cc
 |                   +-- analysis NN conj
 |                       +-- quantitative JJ amod
 |                       +-- of IN prep
 |                           +-- time NN pobj
 |                               +-- the DT det
 |                               +-- and CC cc
 |                               +-- complexity NN conj
 |                               |   +-- space NN nn
 |                               +-- of IN prep
 |                                   +-- COT NNP pobj
 +-- , , punct
 +-- shall MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- version NN pobj
 |       +-- a DT det
 |       +-- journal NN nn
 |       +-- of IN prep
 |           +-- paper. NN pobj
 |               +-- this DT det
 +-- . . punct
