
1
Input: COT DO first invokes procedure transform -LRB- -RRB- to transform O against operations in DS ? ? ? C -LRB- O -RRB- -LRB- CC -RRB- .
Parse:
invokes NNS ROOT
 +-- COT UH nsubj
 +-- DO VB aux
 +-- first RB advmod
 +-- transform NN dobj
 |   +-- procedure NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- transform VB xcomp
 |   +-- to TO aux
 |   +-- O CD dobj
 |   +-- against IN prep
 |       +-- operations NNS pobj
 |           +-- in IN prep
 |               +-- DS NNP pobj
 +-- ? . punct
 +-- C NNP dep
 |   +-- -LRB- -LRB- punct
 |   +-- O NNP dep
 |   +-- -RRB- -RRB- punct
 |   +-- CC NNP appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- . . punct

2
Input: This is to upgrade the context of O to DS .
Parse:
is VBZ ROOT
 +-- This DT nsubj
 +-- upgrade VB xcomp
 |   +-- to TO aux
 |   +-- context NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- O NNP pobj
 |   +-- to IN prep
 |       +-- DS NNP pobj
 +-- . . punct

3
Input: In Step , it must be that C -LRB- O -RRB- = DS -LRB- CC -RRB- , so O is executed as is , and the original of O is added to DS -LRB- according to Definition Item -RRB- .
Parse:
be VB ROOT
 +-- In IN prep
 |   +-- Step NNP pobj
 +-- , , punct
 +-- it PRP nsubj
 +-- must MD aux
 +-- executed VBN ccomp
 |   +-- that IN mark
 |   +-- DS NNP nsubjpass
 |   |   +-- C NN nn
 |   |   |   +-- O NN dep
 |   |   |       +-- -LRB- -LRB- punct
 |   |   |       +-- -RRB- -RRB- punct
 |   |   +-- = SYM nn
 |   |   +-- CC NNP appos
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- so RB advmod
 |   +-- O NNP nsubjpass
 |   +-- is VBZ auxpass
 |   +-- is VBZ advcl
 |   |   +-- as IN mark
 |   +-- and CC cc
 |   +-- added VBN conj
 |       +-- original NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- O NN pobj
 |       +-- is VBZ auxpass
 |       +-- to IN prep
 |       |   +-- DS NNP pobj
 |       +-- -LRB- -LRB- punct
 |       +-- according VBG prep
 |       |   +-- to IN pcomp
 |       |       +-- Item NNP pobj
 |       |           +-- Definition NNP nn
 |       +-- -RRB- -RRB- punct
 +-- . . punct

4
Input: The heart of COT DO is transform -LRB- O , CD -RRB- , whose task is to transform O against operations in CD , which represents the context difference between C -LRB- O -RRB- and a new context on which O is to be defined .
Parse:
transform NN ROOT
 +-- heart NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- COT NNP pobj
 |           +-- DO VB amod
 +-- is VBZ cop
 +-- O NNP appos
 |   +-- -LRB- -LRB- punct
 |   +-- , , punct
 |   +-- CD NNP appos
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- is VBZ rcmod
 |   +-- task NN nsubj
 |   |   +-- whose WP$ poss
 |   +-- transform VB xcomp
 |       +-- to TO aux
 |       +-- O PRP dobj
 |       +-- against IN prep
 |       |   +-- operations NNS pobj
 |       |       +-- in IN prep
 |       |           +-- CD NNP pobj
 |       +-- , , punct
 |       +-- represents VBZ dep
 |           +-- which WDT nsubj
 |           +-- difference NN dobj
 |               +-- the DT det
 |               +-- context NN nn
 |               +-- between IN prep
 |                   +-- C NNP pobj
 |                       +-- O LS appos
 |                       |   +-- -LRB- -LRB- punct
 |                       |   +-- -RRB- -RRB- punct
 |                       +-- and CC cc
 |                       +-- context NN conj
 |                           +-- a DT det
 |                           +-- new JJ amod
 |                           +-- is VBZ rcmod
 |                               +-- on IN prep
 |                               |   +-- which WDT pobj
 |                               +-- O NN nsubj
 |                               +-- defined VBN xcomp
 |                                   +-- to TO aux
 |                                   +-- be VB auxpass
 +-- . . punct

5
Input: This procedure repeats the following three steps until CD becomes empty C -LRB- O -RRB- -LRB- CC -RRB- .
Parse:
repeats VBZ ROOT
 +-- procedure NN nsubj
 |   +-- This DT det
 +-- steps NNS dobj
 |   +-- the DT det
 |   +-- following VBG amod
 |   +-- three CD num
 +-- empty JJ advcl
 |   +-- until IN mark
 |   +-- CD NN nsubj
 |   +-- becomes VBZ cop
 |   +-- C NNP dobj
 |       +-- -LRB- -LRB- punct
 |       +-- O NN dep
 |       +-- -RRB- -RRB- punct
 |       +-- CC NNP dep
 +-- . . punct

6
Input: An operation Ox meeting this condition can be determined if all operations in CD are sorted in the order of their execution and sequentially retrieved .
Parse:
determined VBN ROOT
 +-- operation NN nsubjpass
 |   +-- An DT det
 |   +-- Ox , appos
 |   +-- meeting NN partmod
 |       +-- condition NN dobj
 |           +-- this DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- sorted VBN advcl
 |   +-- if IN mark
 |   +-- operations NNS nsubjpass
 |   |   +-- all DT det
 |   |   +-- in IN prep
 |   |       +-- CD NNP pobj
 |   +-- are VBP auxpass
 |   +-- in IN prep
 |       +-- order NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- execution NN pobj
 |                   +-- their PRP$ poss
 |                   +-- and CC cc
 |                   +-- sequentially RB conj
 |                   +-- retrieved VBD partmod
 +-- . . punct
