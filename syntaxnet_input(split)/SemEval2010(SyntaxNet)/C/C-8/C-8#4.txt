
1
Input: . Basic concept Conceptually , each operation O is associated with a context , denoted by C -LRB- O -RRB- , which corresponds to the document state on which the operation is defined .
Parse:
associated VBN ROOT
 +-- . . punct
 +-- concept NN nsubjpass
 |   +-- Basic NNP amod
 |   +-- O NN rcmod
 |       +-- Conceptually NNP nsubj
 |       +-- , , punct
 |       +-- operation NN nsubj
 |           +-- each DT det
 +-- is VBZ auxpass
 +-- with IN prep
     +-- context NN pobj
         +-- a DT det
         +-- , , punct
         +-- denoted VBN partmod
             +-- by IN prep
                 +-- C NNP pobj
                     +-- -LRB- -LRB- punct
                     +-- O NNP dep
                     +-- -RRB- -RRB- punct
                     +-- , , punct
                     +-- corresponds VBZ rcmod
                         +-- which WDT nsubj
                         +-- to IN prep
                             +-- state NN pobj
                                 +-- the DT det
                                 +-- document NN nn
                                 +-- defined VBN rcmod
                                     +-- on IN prep
                                     |   +-- which WDT pobj
                                     +-- operation NN nsubjpass
                                     |   +-- the DT det
                                     +-- is VBZ auxpass

2
Input: The significance of operation context is twofold -LRB- -RRB- an operation can be correctly executed only if its context and the current document state are the same ; and -LRB- -RRB- an operation can be correctly ITtransformed against another operation only if the contexts of these two operations are the same .
Parse:
twofold JJ ROOT
 +-- significance NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- context NN pobj
 |           +-- operation NN nn
 +-- is VBZ cop
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- executed VBN ccomp
 |   +-- operation NN nsubjpass
 |   |   +-- an DT det
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- correctly RB advmod
 |   +-- same JJ advcl
 |       +-- only RB advmod
 |       +-- if IN mark
 |       +-- context NN nsubj
 |       |   +-- its PRP$ poss
 |       |   +-- and CC cc
 |       |   +-- state NN conj
 |       |       +-- the DT det
 |       |       +-- current JJ amod
 |       |       +-- document NN nn
 |       +-- are VBP cop
 |       +-- the DT det
 +-- ; , punct
 +-- and CC cc
 +-- ITtransformed VBN conj
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 |   +-- operation NN nsubj
 |   |   +-- an DT det
 |   +-- can MD aux
 |   +-- be VB cop
 |   +-- correctly RB advmod
 |   +-- against IN prep
 |   |   +-- operation NN pobj
 |   |       +-- another DT det
 |   +-- same JJ advcl
 |       +-- only RB advmod
 |       +-- if IN mark
 |       +-- contexts NNS nsubj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- operations NNS pobj
 |       |           +-- these DT det
 |       |           +-- two CD num
 |       +-- are VBP cop
 |       +-- the DT det
 +-- . . punct

3
Input: In Figure , both O and O are defined on the same initial document so they are associated with the same context ; O is defined on the document state which includes the effect of O , so C -LRB- O -RRB- is different from C -LRB- O -RRB- or C -LRB- O -RRB- .
Parse:
defined VBN ROOT
 +-- In IN prep
 |   +-- Figure NN pobj
 +-- , , punct
 +-- O NN nsubjpass
 |   +-- both CC preconj
 |   +-- and CC cc
 |   +-- O NN conj
 +-- are VBP auxpass
 +-- on IN prep
 |   +-- document NN pobj
 |       +-- the DT det
 |       +-- same JJ amod
 |       +-- initial JJ amod
 +-- associated VBN advcl
 |   +-- so IN mark
 |   +-- they PRP nsubjpass
 |   +-- are VBP auxpass
 |   +-- with IN prep
 |       +-- context NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 +-- ; : punct
 +-- defined VBN parataxis
 |   +-- O NN nsubjpass
 |   +-- is VBZ auxpass
 |   +-- on IN prep
 |   |   +-- state NN pobj
 |   |       +-- the DT det
 |   |       +-- document NN nn
 |   |       +-- includes VBZ rcmod
 |   |           +-- which WDT nsubj
 |   |           +-- effect NN dobj
 |   |               +-- the DT det
 |   |               +-- of IN prep
 |   |                   +-- O NNP pobj
 |   +-- , , punct
 |   +-- so RB cc
 |   +-- different JJ conj
 |       +-- O NNP nsubj
 |       |   +-- C NNP nn
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- is VBZ cop
 |       +-- from IN prep
 |           +-- C NNP pobj
 |               +-- -LRB- -LRB- punct
 |               +-- O LS dep
 |               +-- -RRB- -RRB- punct
 |               +-- or CC cc
 |               +-- C NNP conj
 |                   +-- -LRB- -LRB- punct
 |                   +-- O NNP dep
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

4
Input: When O arrives at site , it can not be executed as is since C -LRB- O -RRB- does not match the current document state at site which includes the effect of O .
Parse:
executed VBN ROOT
 +-- arrives VBZ advcl
 |   +-- When WRB advmod
 |   +-- O PRP nsubj
 |   +-- at IN prep
 |       +-- site NN pobj
 +-- , , punct
 +-- it PRP nsubjpass
 +-- can MD aux
 +-- not RB neg
 +-- be VB auxpass
 +-- is VBZ advcl
 |   +-- as IN mark
 |   +-- match VB advcl
 |       +-- since IN mark
 |       +-- C NNP nsubj
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- O NN dep
 |       |   +-- -RRB- -RRB- punct
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- state NN dobj
 |           +-- the DT det
 |           +-- current JJ amod
 |           +-- document NN nn
 |           +-- at IN prep
 |           |   +-- site NN pobj
 |           +-- includes VBZ rcmod
 |               +-- which WDT nsubj
 |               +-- effect NN dobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- O NNP pobj
 +-- . . punct

5
Input: O can be correctly IT transformed against O since their contexts corresponds to the same initial document state .
Parse:
transformed VBN ROOT
 +-- O NN nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- correctly RB advmod
 +-- IT PRP nsubj
 +-- against IN prep
 |   +-- O NN pobj
 +-- corresponds VBZ advcl
 |   +-- since IN mark
 |   +-- contexts NNS nsubj
 |   |   +-- their PRP$ poss
 |   +-- to IN prep
 |       +-- state NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- initial JJ amod
 |           +-- document NN nn
 +-- . . punct

6
Input: When O arrives at site , it can not be executed as is either since C -LRB- O -RRB- does not match the current document state at site which includes the effects of both O and O .
Parse:
executed VBN ROOT
 +-- arrives VBZ advcl
 |   +-- When WRB advmod
 |   +-- O PRP nsubj
 |   +-- at IN prep
 |       +-- site NN pobj
 +-- , , punct
 +-- it PRP nsubjpass
 +-- can MD aux
 +-- not RB neg
 +-- be VB auxpass
 +-- as IN prep
 |   +-- is VBZ pobj
 +-- either RB advmod
 +-- match VB advcl
 |   +-- since IN mark
 |   +-- C NNP nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- O LS dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- state NN dobj
 |       +-- the DT det
 |       +-- current JJ amod
 |       +-- document NN nn
 |       +-- at IN prep
 |       |   +-- site NN pobj
 |       +-- includes VBZ rcmod
 |           +-- which WDT nsubj
 |           +-- effects NNS dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- O NNP pobj
 |                       +-- both DT preconj
 |                       +-- and CC cc
 |                       +-- O NNP conj
 +-- . . punct

7
Input: O can not be correctly IT transformed against O since their contexts are different , which is the root of the dOPT puzzle .
Parse:
transformed VBN ROOT
 +-- O PRP nsubjpass
 +-- can MD aux
 +-- not RB neg
 +-- be VB auxpass
 +-- correctly RB advmod
 +-- IT PRP nsubj
 +-- against IN prep
 |   +-- O NN pobj
 +-- different JJ advcl
 |   +-- since IN mark
 |   +-- contexts NNS nsubj
 |   |   +-- their PRP$ poss
 |   +-- are VBP cop
 |   +-- , , punct
 |   +-- root NN ccomp
 |       +-- which WDT nsubj
 |       +-- is VBZ cop
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- puzzle NN pobj
 |               +-- the DT det
 |               +-- dOPT NN nn
 +-- . . punct

8
Input: As discussed in Section , Undo -LRB- O -RRB- should be interpreted as an inverse O defined on the document state with the effect of O only .
Parse:
interpreted VBN ROOT
 +-- discussed VBN advcl
 |   +-- As IN mark
 |   +-- in IN prep
 |       +-- Section NN pobj
 |           +-- , , punct
 |           +-- O NNP appos
 |               +-- Undo NNP nn
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- should MD aux
 +-- be VB auxpass
 +-- as IN prep
 |   +-- inverse NN pobj
 |       +-- an DT det
 |       +-- defined VBN partmod
 |           +-- O FW advmod
 |           +-- on IN prep
 |           |   +-- state NN pobj
 |           |       +-- the DT det
 |           |       +-- document NN nn
 |           +-- with IN prep
 |               +-- effect NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- O FW pobj
 |                           +-- only RB advmod
 +-- . . punct

9
Input: . Set representation of operation context To facilitate comparison and manipulation of operation contexts for correct execution and transformation , it is necessary to explicitly represent operation context .
Parse:
necessary JJ ROOT
 +-- . , punct
 +-- representation NN nsubj
 |   +-- Set JJ amod
 |   +-- of IN prep
 |       +-- context NN pobj
 |           +-- operation NN nn
 |           +-- facilitate VB infmod
 |               +-- To TO aux
 |               +-- comparison NN dobj
 |                   +-- and CC cc
 |                   +-- manipulation NN conj
 |                   +-- of IN prep
 |                   |   +-- contexts NNS pobj
 |                   |       +-- operation NN nn
 |                   +-- for IN prep
 |                       +-- execution NN pobj
 |                           +-- correct JJ amod
 |                           +-- and CC cc
 |                           +-- transformation NN conj
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- represent VB xcomp
 |   +-- to TO aux
 |   +-- explicitly RB advmod
 |   +-- context NN dobj
 |       +-- operation NN nn
 +-- . . punct

10
Input: In OT systems , there are two different kinds of operation original operations which are generated by users , and transformed operations which are the outcomes of some transformations .
Parse:
are VBP ROOT
 +-- In IN prep
 |   +-- systems NNS pobj
 |       +-- OT NNP nn
 +-- , , punct
 +-- there EX expl
 +-- kinds NNS nsubj
 |   +-- two CD num
 |   +-- different JJ amod
 |   +-- of IN prep
 |   |   +-- operations NNS pobj
 |   |       +-- operation NN nn
 |   |       +-- original JJ amod
 |   +-- generated VBN rcmod
 |   |   +-- which WDT nsubjpass
 |   |   +-- are VBP auxpass
 |   |   +-- by IN prep
 |   |       +-- users NNS pobj
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- operations NNS conj
 |       +-- transformed VBN amod
 |       +-- outcomes NNS rcmod
 |           +-- which WDT nsubj
 |           +-- are VBP cop
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- transformations NNS pobj
 |                   +-- some DT det
 +-- . . punct

11
Input: Original operations can be further divided into two classes normal operations which are generated to do something , and inverse operations which are generated to undo some executed operations .
Parse:
divided VBN ROOT
 +-- operations NNS nsubjpass
 |   +-- Original JJ amod
 +-- can MD aux
 +-- be VB auxpass
 +-- further RB advmod
 +-- into IN prep
 |   +-- operations NNS pobj
 |       +-- classes NNS nn
 |       |   +-- two CD num
 |       +-- normal JJ amod
 |       +-- generated VBN rcmod
 |           +-- which WDT nsubjpass
 |           +-- are VBP auxpass
 |           +-- do VB xcomp
 |               +-- to TO aux
 |               +-- something NN dobj
 |                   +-- , , punct
 |                   +-- and CC cc
 |                   +-- operations NNS conj
 |                       +-- inverse VB amod
 |                       +-- generated VBN rcmod
 |                           +-- which WDT nsubjpass
 |                           +-- are VBP auxpass
 |                           +-- undo VB xcomp
 |                               +-- to TO aux
 |                               +-- operations NNS dobj
 |                                   +-- some DT det
 |                                   +-- executed VBN amod
 +-- . . punct

12
Input: For any operation O , its inverse is denoted by O .
Parse:
denoted VBN ROOT
 +-- For IN prep
 |   +-- operation NN pobj
 |       +-- any DT det
 |       +-- O NNP appos
 +-- , , punct
 +-- inverse NN nsubjpass
 |   +-- its PRP$ poss
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- O NNP pobj
 +-- . . punct

13
Input: Since every transformed operation must come from an original operation , we use the notation org -LRB- O -RRB- to denote the original operation of O .
Parse:
use VBP ROOT
 +-- come VB advcl
 |   +-- Since IN mark
 |   +-- operation NN nsubj
 |   |   +-- every DT det
 |   |   +-- transformed VBN amod
 |   +-- must MD aux
 |   +-- from IN prep
 |       +-- operation NN pobj
 |           +-- an DT det
 |           +-- original JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- org NN dobj
 |   +-- the DT det
 |   +-- notation NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- O NN dep
 |   +-- -RRB- -RRB- punct
 +-- denote VB xcomp
 |   +-- to TO aux
 |   +-- operation NN dobj
 |       +-- the DT det
 |       +-- original JJ amod
 |       +-- of IN prep
 |           +-- O NNP pobj
 +-- . . punct

14
Input: If O is an original operation , then org -LRB- O -RRB- = O .
Parse:
O NN ROOT
 +-- operation NN advcl
 |   +-- If IN mark
 |   +-- O PRP nsubj
 |   +-- is VBZ cop
 |   +-- an DT det
 |   +-- original JJ amod
 +-- , , punct
 +-- then RB advmod
 +-- org NNP nsubj
 |   +-- O NNP appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- = NFP dep
 +-- . . punct

15
Input: Since the context of an operation corresponds to the document state on which the operation is defined , the problem of context representation can be reduced into the problem of document state representation .
Parse:
reduced VBN ROOT
 +-- corresponds NNS advcl
 |   +-- Since IN mark
 |   +-- context NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- operation NN pobj
 |   |           +-- an DT det
 |   +-- to IN prep
 |       +-- state NN pobj
 |           +-- the DT det
 |           +-- document NN nn
 |           +-- defined VBN rcmod
 |               +-- on IN prep
 |               |   +-- which WDT pobj
 |               +-- operation NN nsubjpass
 |               |   +-- the DT det
 |               +-- is VBZ auxpass
 +-- , , punct
 +-- problem NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- representation NN pobj
 |           +-- context NN amod
 +-- can MD aux
 +-- be VB auxpass
 +-- into IN prep
 |   +-- problem NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- representation NN pobj
 |               +-- document NN nn
 |               +-- state NN nn
 +-- . . punct

16
Input: In an OT based group editor , each document state can be uniquely represented by the set of original operations executed so far on the document .
Parse:
represented VBN ROOT
 +-- In IN prep
 |   +-- editor NN pobj
 |       +-- an DT det
 |       +-- based VBN amod
 |       |   +-- OT NNP dep
 |       +-- group NN nn
 +-- , , punct
 +-- state NN nsubjpass
 |   +-- each DT det
 |   +-- document NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- uniquely RB advmod
 +-- by IN prep
 |   +-- set NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- operations NNS pobj
 |               +-- original JJ amod
 |               +-- executed VBN partmod
 |                   +-- far RB advmod
 |                   |   +-- so RB advmod
 |                   +-- on IN prep
 |                       +-- document NN pobj
 |                           +-- the DT det
 +-- . . punct

17
Input: These original operations may be executed in different orders or in different -LRB- original or transformed -RRB- forms at different sites , but the same document state must be achieved -LRB- according to the convergence requirement -LRB- -RRB- -RRB- .
Parse:
executed VBN ROOT
 +-- operations NNS nsubjpass
 |   +-- These DT det
 |   +-- original JJ amod
 +-- may MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- orders NNS pobj
 |   |   +-- different JJ amod
 |   +-- or CC cc
 |   +-- in IN conj
 |       +-- forms NNS pobj
 |           +-- different JJ amod
 |               +-- -LRB- -LRB- punct
 |               +-- original JJ dep
 |               |   +-- or CC cc
 |               |   +-- transformed VBN conj
 |               +-- -RRB- -RRB- punct
 +-- at IN prep
 |   +-- sites NNS pobj
 |       +-- different JJ amod
 +-- , , punct
 +-- but CC cc
 +-- achieved VBN conj
 |   +-- state NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- same JJ amod
 |   |   +-- document NN nn
 |   +-- must MD aux
 |   +-- be VB auxpass
 |   +-- -LRB- -LRB- punct
 |   +-- according VBG prep
 |       +-- to IN pcomp
 |           +-- requirement NN pobj
 |               +-- the DT det
 |               +-- convergence NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- . . punct

18
Input: We use original -LRB- normal and inverse -RRB- operations , rather than their transformed versions , to represent a document state .
Parse:
use VBP ROOT
 +-- We PRP nsubj
 +-- operations NNS dobj
 |   +-- original JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- normal JJ amod
 |   |   +-- and CC cc
 |   |   +-- inverse NN conj
 |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- rather RB cc
 |   |   +-- than IN mwe
 |   +-- versions NNS conj
 |       +-- their PRP$ poss
 |       +-- transformed VBN amod
 +-- , , punct
 +-- represent VB xcomp
 |   +-- to TO aux
 |   +-- state NN dobj
 |       +-- a DT det
 |       +-- document NN nn
 +-- . . punct

19
Input: Definition .
Parse:
Definition NN ROOT
 +-- . . punct
