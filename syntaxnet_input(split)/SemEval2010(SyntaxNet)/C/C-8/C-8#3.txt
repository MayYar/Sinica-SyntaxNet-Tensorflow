
1
Input: The theory of causality is central to distributed computing and to the design of all existing OT algorithms .
Parse:
central JJ ROOT
 +-- theory NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- causality NN pobj
 +-- is VBZ cop
 +-- to IN prep
 |   +-- computing NN pobj
 |   |   +-- distributed VBN amod
 |   +-- and CC cc
 |   +-- to IN conj
 |       +-- design NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- algorithms NNS pobj
 |                   +-- all DT det
 |                   +-- existing VBG amod
 |                   +-- OT NNP nn
 +-- . . punct

2
Input: Following Lamport -LRB- -RRB- , causal dependency independency relations among editing operations can be defined in terms of their generation and execution sequences -LRB- , -RRB- .
Parse:
defined VBN ROOT
 +-- Following VBG prep
 |   +-- Lamport NNP pobj
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- relations NNS nsubjpass
 |   +-- causal NN amod
 |   +-- independency NN nn
 |   |   +-- dependency NN nn
 |   +-- among IN prep
 |       +-- operations NNS pobj
 |           +-- editing NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- terms NNS pobj
 |       +-- of IN prep
 |           +-- generation NN pobj
 |               +-- their PRP$ poss
 |               +-- and CC cc
 |               +-- sequences NNS conj
 |               |   +-- execution NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- , , punct
 |               +-- -RRB- -RRB- punct
 +-- . . punct

3
Input: Definition .
Parse:
Definition NN ROOT
 +-- . . punct

4
Input: Causal dependency relation ? ? ? Given two operations Oa and Ob , generated at sites i and j , Ob is causal dependent on Oa , denoted by Oa ? ? ? Ob , iff -LRB- -RRB- i = j and the generation of Oa happened before the generation of Ob ; or -LRB- -RRB- i = j and the execution of Oa at site j happened before the generation of Ob ; or -LRB- -RRB- there exists an operation Ox , such that Oa ? ? ? Ox and Ox ? ? ? Ob .
Parse:
dependent JJ ROOT
 +-- relation NN nsubj
 |   +-- Causal NN nn
 |   +-- dependency NN nn
 |   +-- ? . punct
 |   +-- Given VBN prep
 |   |   +-- operations NNS dep
 |   |       +-- two CD num
 |   |       +-- Oa NNP dep
 |   |           +-- and CC cc
 |   |           +-- Ob NNP conj
 |   +-- , , punct
 |   +-- generated VBN partmod
 |   |   +-- at IN prep
 |   |       +-- sites NNS pobj
 |   |           +-- i PRP dep
 |   |               +-- and CC cc
 |   |               +-- j UH conj
 |   +-- Ob NNP appos
 +-- is VBZ cop
 +-- causal JJ advmod
 +-- on IN prep
 |   +-- Oa NNP pobj
 |       +-- , , punct
 |       +-- denoted VBN partmod
 |           +-- by IN prep
 |               +-- Oa NNP pobj
 +-- ? . punct
 +-- happened VBD ccomp
 |   +-- Ob UH nsubj
 |   |   +-- , , punct
 |   |   +-- iff NN conj
 |   |   |   +-- = VBD dep
 |   |   |       +-- -LRB- -LRB- punct
 |   |   |       +-- -RRB- -RRB- punct
 |   |   |       +-- i PRP nsubj
 |   |   |       +-- j NFP punct
 |   |   +-- and CC cc
 |   |   +-- generation NN conj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- Oa NNP pobj
 |   +-- before IN prep
 |       +-- generation NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- Ob NNP pobj
 +-- ; : punct
 +-- or CC cc
 +-- exists VBZ conj
 |   +-- = VBD dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   |   +-- i PRP nsubj
 |   |   +-- j NFP punct
 |   |   +-- and CC cc
 |   |   +-- happened VBD conj
 |   |   |   +-- execution NN nsubj
 |   |   |   |   +-- the DT det
 |   |   |   |   +-- of IN prep
 |   |   |   |   |   +-- Oa NNP pobj
 |   |   |   |   +-- at IN prep
 |   |   |   |       +-- j NNP pobj
 |   |   |   |           +-- site NN nn
 |   |   |   +-- before IN prep
 |   |   |       +-- generation NN pobj
 |   |   |           +-- the DT det
 |   |   |           +-- of IN prep
 |   |   |               +-- Ob NNP pobj
 |   |   +-- ; : punct
 |   |   +-- or CC cc
 |   +-- there EX expl
 |   +-- Ox NNP nsubj
 |       +-- an DT det
 |       +-- operation NN nn
 |       +-- , , punct
 |       +-- Oa NNP appos
 |           +-- such PDT predet
 |           +-- that IN det
 +-- Ox NNP dep
 |   +-- and CC cc
 |   +-- Ox NNP conj
 +-- Ob UH discourse
 +-- . . punct

5
Input: Definition .
Parse:
Definition NN ROOT
 +-- . . punct

6
Input: Causal independency relation Given two operations Oa and Ob , Oa and Ob are causalindependent or concurrent , denoted by Oa Ob , iff neither Oa ? ? ? Ob , nor Ob ? ? ? Oa .
Parse:
relation NN ROOT
 +-- Causal NN nn
 +-- independency NN nn
 +-- Given VBN prep
 |   +-- causalindependent JJ pcomp
 |       +-- operations NNS nsubj
 |       |   +-- two CD num
 |       |   +-- Oa NNP dep
 |       |       +-- and CC cc
 |       |       +-- Ob NNP conj
 |       |           +-- , , punct
 |       |           +-- Oa NNP conj
 |       |           +-- and CC cc
 |       |           +-- Ob NNP conj
 |       +-- are VBP cop
 |       +-- or CC cc
 |       +-- concurrent JJ conj
 |       +-- , , punct
 |       +-- denoted VBN conj
 |       |   +-- by IN prep
 |       |       +-- Ob NNP pobj
 |       |           +-- Oa NNP nn
 |       +-- iff VB conj
 |       +-- neither CC dep
 |       +-- Oa NNP conj
 +-- ? . punct
 +-- Ob NNP dep
 |   +-- , , punct
 |   +-- nor CC cc
 |   +-- Ob NNP conj
 +-- Oa NNP dep
 +-- . . punct

7
Input: Just as Vector Logical Clocks are used for capturing casuality in distributed systems -LRB- -RRB- , State Vectors have been used for capturing causal relationships among operations and for representing document states in OT systems -LRB- , , -RRB- .
Parse:
used VBN ROOT
 +-- used VBN advcl
 |   +-- Just RB advmod
 |   +-- as IN mark
 |   +-- Clocks NNPS nsubjpass
 |   |   +-- Vector NNP nn
 |   |   +-- Logical NNP nn
 |   +-- are VBP auxpass
 |   +-- for IN prep
 |       +-- capturing VBG pcomp
 |           +-- casuality NN dobj
 |           +-- in IN prep
 |               +-- systems NNS pobj
 |                   +-- distributed VBN amod
 |                   +-- -LRB- -LRB- punct
 |                   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- Vectors NNPS nsubjpass
 |   +-- State NNP nn
 +-- have VBP aux
 +-- been VBN auxpass
 +-- for IN prep
 |   +-- capturing VBG pcomp
 |   |   +-- relationships NNS dobj
 |   |       +-- causal NN amod
 |   |       +-- among IN prep
 |   |           +-- operations NNS pobj
 |   +-- and CC cc
 |   +-- for IN conj
 |       +-- representing VBG pcomp
 |           +-- states NNS dobj
 |               +-- document NN nn
 |               +-- in IN prep
 |                   +-- systems NNS pobj
 |                       +-- OT NNP nn
 |                       +-- -LRB- -LRB- punct
 |                       +-- , , punct
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

8
Input: To illustrate causal relations among operations , consider a real time group editing session with two sites in Figure .
Parse:
consider VB ROOT
 +-- illustrate VB advcl
 |   +-- To TO aux
 |   +-- relations NNS dobj
 |       +-- causal NN amod
 |       +-- among IN prep
 |           +-- operations NNS pobj
 +-- , , punct
 +-- session NN dobj
 |   +-- a DT det
 |   +-- time NN nn
 |   |   +-- real JJ amod
 |   +-- editing NN nn
 |   |   +-- group NN nn
 |   +-- with IN prep
 |       +-- sites NNS pobj
 |           +-- two CD num
 |           +-- in IN prep
 |               +-- Figure NN pobj
 +-- . . punct

9
Input: There are three editing operations in this scenario -LRB- the undo command Undo -LRB- O -RRB- and its relation with other operations shall be explained later -RRB- O generated at site , and O and O generated at site .
Parse:
are VBP ROOT
 +-- There EX expl
 +-- operations NNS nsubj
 |   +-- three CD num
 |   +-- editing VBG nn
 |   +-- in IN prep
 |   |   +-- scenario NN pobj
 |   |       +-- this DT det
 |   +-- -LRB- -LRB- punct
 |   +-- explained VBN dep
 |   |   +-- Undo NNP nsubjpass
 |   |   |   +-- the DT det
 |   |   |   +-- undo JJ amod
 |   |   |   +-- command NN nn
 |   |   |   +-- O NNP appos
 |   |   |   |   +-- -LRB- -LRB- punct
 |   |   |   |   +-- -RRB- -RRB- punct
 |   |   |   +-- and CC cc
 |   |   |   +-- relation NN conj
 |   |   |       +-- its PRP$ poss
 |   |   |       +-- with IN prep
 |   |   |           +-- operations NNS pobj
 |   |   |               +-- other JJ amod
 |   |   +-- shall MD aux
 |   |   +-- be VB auxpass
 |   |   +-- later RB advmod
 |   +-- -RRB- -RRB- punct
 |   +-- O PRP punct
 |   +-- generated VBN partmod
 |   |   +-- at IN prep
 |   |       +-- site NN pobj
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- O NNP conj
 |       +-- and CC cc
 |       +-- O NN conj
 |       +-- generated VBN partmod
 |           +-- at IN prep
 |               +-- site NN pobj
 +-- . . punct

10
Input: According to Definitions and , we have O ? ? ? O because the generation of O happened before the generation of O ; O O and O O because for each pair , neither operation '' s execution happened before the other operation '' s generation .
Parse:
have VBP ROOT
 +-- According VBG prep
 |   +-- to IN pcomp
 |       +-- Definitions NNPS pobj
 |           +-- and CC cc
 +-- , , punct
 +-- we PRP nsubj
 +-- O NN dobj
 +-- ? . punct
 +-- ? , punct
 +-- O , punct
 +-- happened VBD advcl
 |   +-- because IN mark
 |   +-- generation NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- O PRP pobj
 |   +-- before IN prep
 |   |   +-- generation NN pobj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- O NNP pobj
 |   +-- ; : punct
 |   +-- O NN parataxis
 |       +-- O NNP nsubj
 |       |   +-- O DT det
 |       |   +-- and CC cc
 |       |   +-- O NN conj
 |       +-- happened VBD advcl
 |           +-- because IN mark
 |           +-- for IN prep
 |           |   +-- pair NN pobj
 |           |       +-- each DT det
 |           +-- , , punct
 |           +-- execution NN nsubj
 |           |   +-- operation NN poss
 |           |       +-- neither DT det
 |           |       +-- '' '' punct
 |           |       +-- s POS possessive
 |           +-- before IN prep
 |               +-- generation NN pobj
 |                   +-- operation NN poss
 |                       +-- the DT det
 |                       +-- other JJ amod
 |                       +-- '' '' punct
 |                       +-- s POS possessive
 +-- . . punct

11
Input: In the following discussion , we shall use the term ITtransform to mean the use of the IT -LRB- Inclusion Transformation -RRB- function IT -LRB- Oa , Ob -RRB- , which transforms operation Oa against operation Ob in such a way that the impact of Ob is effectively included in Oa -LRB- -RRB- .
Parse:
use VB ROOT
 +-- In IN prep
 |   +-- discussion NN pobj
 |       +-- the DT det
 |       +-- following VBG amod
 +-- , , punct
 +-- we PRP nsubj
 +-- shall MD aux
 +-- ITtransform NN dobj
 |   +-- the DT det
 |   +-- term NN nn
 +-- mean VB xcomp
 |   +-- to TO aux
 |   +-- function VBP ccomp
 |       +-- use NN nsubj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- IT NNP pobj
 |       |           +-- the DT det
 |       |           +-- -LRB- -LRB- punct
 |       |           +-- Transformation NNP dep
 |       |           |   +-- Inclusion NNP nn
 |       |           +-- -RRB- -RRB- punct
 |       +-- IT PRP dobj
 |           +-- Oa UH appos
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- , , punct
 |           |   +-- Ob NNP appos
 |           |   +-- -RRB- -RRB- punct
 |           +-- , , punct
 |           +-- transforms VBZ rcmod
 |               +-- which WDT nsubj
 |               +-- Oa NNP dobj
 |               |   +-- operation NN nn
 |               +-- against IN prep
 |               |   +-- Ob NNP pobj
 |               |       +-- operation NN nn
 |               +-- in IN prep
 |                   +-- way NN pobj
 |                       +-- such PDT predet
 |                       +-- a DT det
 |                       +-- included VBN dep
 |                           +-- that IN mark
 |                           +-- impact NN nsubjpass
 |                           |   +-- the DT det
 |                           |   +-- of IN prep
 |                           |       +-- Ob NNP pobj
 |                           +-- is VBZ auxpass
 |                           +-- effectively RB advmod
 |                           +-- in IN prep
 |                               +-- Oa NNP pobj
 |                                   +-- -LRB- -LRB- punct
 |                                   +-- -RRB- -RRB- punct
 +-- . . punct

12
Input: This term is introduced to differentiate this special transformation function from other steps involved in a transformation process .
Parse:
introduced VBN ROOT
 +-- term NN nsubjpass
 |   +-- This DT det
 +-- is VBZ auxpass
 +-- differentiate VB xcomp
 |   +-- to TO aux
 |   +-- function NN dobj
 |   |   +-- this DT det
 |   |   +-- special JJ amod
 |   |   +-- transformation NN nn
 |   +-- from IN prep
 |       +-- steps NNS pobj
 |           +-- other JJ amod
 |           +-- involved VBN partmod
 |               +-- in IN prep
 |                   +-- process NN pobj
 |                       +-- a DT det
 |                       +-- transformation NN nn
 +-- . . punct

13
Input: Figure A real time group editing scenario .
Parse:
Figure NN ROOT
 +-- scenario NN dep
 |   +-- A DT det
 |   +-- time NN nn
 |   |   +-- real JJ amod
 |   +-- editing VBG nn
 |       +-- group NN nn
 +-- . . punct

14
Input: The scenario in Figure -LRB- without the undo command -RRB- has often been used to illustrate the dOPT puzzle .
Parse:
used VBN ROOT
 +-- scenario NN nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- Figure NNP pobj
 |           +-- -LRB- -LRB- punct
 |           +-- without IN prep
 |           |   +-- command NN pobj
 |           |       +-- the DT det
 |           |       +-- undo JJ amod
 |           +-- -RRB- -RRB- punct
 +-- has VBZ aux
 +-- often RB advmod
 +-- been VBN auxpass
 +-- illustrate VB xcomp
 |   +-- to TO aux
 |   +-- puzzle NN dobj
 |       +-- the DT det
 |       +-- dOPT NN nn
 +-- . . punct

15
Input: Under the dOPT algorithm -LRB- -RRB- , when O arrives at site , it will be ITtransformed against O since O O ; this is correct because O and O are defined on the same -LRB- initial -RRB- document state .
Parse:
ITtransformed VBN ROOT
 +-- Under IN prep
 |   +-- algorithm NNP pobj
 |       +-- the DT det
 |       +-- dOPT NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- arrives VBZ advcl
 |   +-- when WRB advmod
 |   +-- O PRP nsubj
 |   +-- at IN prep
 |       +-- site NN pobj
 +-- it PRP nsubj
 +-- will MD aux
 +-- be VB cop
 +-- against IN prep
 |   +-- O NN pobj
 +-- since IN prep
 |   +-- O NNP pobj
 |       +-- O NNP nn
 +-- ; : punct
 +-- correct JJ parataxis
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- defined VBN advcl
 |       +-- because IN mark
 |       +-- O FW nsubjpass
 |       |   +-- and CC cc
 |       |   +-- O NN conj
 |       +-- are VBP auxpass
 |       +-- on IN prep
 |           +-- state NN pobj
 |               +-- the DT det
 |               +-- same JJ amod
 |               +-- -LRB- -LRB- punct
 |               +-- initial JJ amod
 |               +-- -RRB- -RRB- punct
 |               +-- document NN nn
 +-- . . punct

16
Input: When O arrives at site , it will also be IT transformed against O since O O ; but this is incorrect because O is defined on the document state that contains the effect of O , whereas O is defined on the initial document state .
Parse:
transformed VBN ROOT
 +-- arrives VBZ advcl
 |   +-- When WRB advmod
 |   +-- O PRP nsubj
 |   +-- at IN prep
 |       +-- site NN pobj
 +-- , , punct
 +-- it PRP nsubjpass
 +-- will MD aux
 +-- also RB advmod
 +-- be VB auxpass
 +-- IT PRP nsubjpass
 +-- against IN prep
 |   +-- O NNP pobj
 +-- since IN prep
 |   +-- O NNP pobj
 |       +-- O CD num
 +-- ; , punct
 +-- but CC cc
 +-- incorrect JJ conj
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- defined VBN advcl
 |       +-- because IN mark
 |       +-- O FW nsubjpass
 |       +-- is VBZ auxpass
 |       +-- on IN prep
 |       |   +-- state NN pobj
 |       |       +-- the DT det
 |       |       +-- document NN nn
 |       |       +-- contains VBZ rcmod
 |       |           +-- that WDT nsubj
 |       |           +-- effect NN dobj
 |       |               +-- the DT det
 |       |               +-- of IN prep
 |       |                   +-- O NNP pobj
 |       +-- , , punct
 |       +-- defined VBN advcl
 |           +-- whereas IN mark
 |           +-- O NNP nsubjpass
 |           +-- is VBZ auxpass
 |           +-- on IN prep
 |               +-- state NN pobj
 |                   +-- the DT det
 |                   +-- initial JJ amod
 |                   +-- document NN nn
 +-- . . punct

17
Input: In this case , the parameters of O and O are not comparable and hence may not be IT transformed correctly .
Parse:
comparable JJ ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- parameters NNS nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- O NN pobj
 |           +-- and CC cc
 |           +-- O PRP conj
 +-- are VBP cop
 +-- not RB neg
 +-- and CC cc
 +-- hence RB advmod
 +-- transformed VBN conj
 |   +-- may MD aux
 |   +-- not RB neg
 |   +-- be VB auxpass
 |   +-- IT PRP nsubjpass
 |   +-- correctly RB advmod
 +-- . . punct

18
Input: The solution to this puzzle is first to IT transform O against O to produce O , which is defined on the document state including the effect of O -LRB- the same state on which O is defined -RRB- , and then to IT transform O against O -LRB- -RRB- .
Parse:
is VBZ ROOT
 +-- solution NN nsubj
 |   +-- The DT det
 |   +-- to IN prep
 |       +-- puzzle NN pobj
 |           +-- this DT det
 +-- transform VB ccomp
 |   +-- first RB advmod
 |   +-- to IN aux
 |   +-- IT PRP nsubj
 |   +-- O NN dobj
 |   +-- against IN prep
 |   |   +-- O PRP pobj
 |   +-- produce VB xcomp
 |   |   +-- to TO aux
 |   |   +-- O NNP dobj
 |   |       +-- , , punct
 |   |       +-- defined VBN rcmod
 |   |           +-- which WDT nsubjpass
 |   |           +-- is VBZ auxpass
 |   |           +-- on IN prep
 |   |           |   +-- state NN pobj
 |   |           |       +-- the DT det
 |   |           |       +-- document NN nn
 |   |           +-- including VBG prep
 |   |               +-- effect NN pobj
 |   |                   +-- the DT det
 |   |                   +-- of IN prep
 |   |                       +-- O NNP pobj
 |   |                           +-- -LRB- -LRB- punct
 |   |                           +-- state NN dep
 |   |                           |   +-- the DT det
 |   |                           |   +-- same JJ amod
 |   |                           |   +-- defined VBN rcmod
 |   |                           |       +-- on IN prep
 |   |                           |       |   +-- which WDT pobj
 |   |                           |       +-- O NN nsubjpass
 |   |                           |       +-- is VBZ auxpass
 |   |                           +-- -RRB- -RRB- punct
 |   +-- and CC cc
 |   +-- transform VB conj
 |       +-- then RB advmod
 |       +-- to IN aux
 |       +-- IT PRP nsubj
 |       +-- O $ dobj
 |       +-- against IN prep
 |           +-- O NNP pobj
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- . . punct

19
Input: From Definitions and , it is clear that the causaldependency relation is only defined for original operations -LRB- e.g .
Parse:
clear JJ ROOT
 +-- From IN prep
 |   +-- Definitions NNPS pobj
 |       +-- and CC cc
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- defined VBN ccomp
 |   +-- that IN mark
 |   +-- relation NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- causaldependency NN nn
 |   +-- is VBZ auxpass
 |   +-- only RB advmod
 |   +-- for IN prep
 |       +-- operations NNS pobj
 |           +-- original JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- e.g FW dep
 +-- . . punct

20
Input: O , O and O -RRB- directly generated by users , but not for transformed operations -LRB- e.g .
Parse:
O NNP ROOT
 +-- O LS dep
 |   +-- , , punct
 +-- and CC cc
 +-- O NNP conj
 |   +-- -RRB- -RRB- punct
 +-- generated VBN partmod
 |   +-- directly RB advmod
 |   +-- by IN prep
 |       +-- users NNS pobj
 +-- , , punct
 +-- but CC cc
 +-- not RB conj
 +-- for IN prep
 |   +-- operations NNS pobj
 |       +-- transformed VBN amod
 +-- -LRB- -LRB- punct
 +-- e.g UH dep
 +-- . . punct

21
Input: O -RRB- .
Parse:
O LS ROOT
 +-- -RRB- -RRB- punct
 +-- . . punct

22
Input: Furthermore , the concurrency relation does not capture the essential condition for correct IT transformation the two input operations must be defined on the same document state -LRB- -RRB- .
Parse:
capture VB ROOT
 +-- Furthermore RB advmod
 +-- , , punct
 +-- relation NN nsubj
 |   +-- the DT det
 |   +-- concurrency NN nn
 +-- does VBZ aux
 +-- not RB neg
 +-- condition NN dobj
 |   +-- the DT det
 |   +-- essential JJ amod
 |   +-- defined VBN rcmod
 |       +-- for IN prep
 |       |   +-- transformation NN pobj
 |       |       +-- correct JJ amod
 |       |       +-- IT NN nn
 |       +-- operations NNS nsubjpass
 |       |   +-- the DT det
 |       |   +-- two CD num
 |       |   +-- input NN nn
 |       +-- must MD aux
 |       +-- be VB auxpass
 |       +-- on IN prep
 |           +-- state NN pobj
 |               +-- the DT det
 |               +-- same JJ amod
 |               +-- document NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- . . punct

23
Input: Another major limitation of causality is its unsuitability for capturing OT conditions for inverse operations .
Parse:
unsuitability NN ROOT
 +-- limitation NN nsubj
 |   +-- Another DT det
 |   +-- major JJ amod
 |   +-- of IN prep
 |       +-- causality NN pobj
 +-- is VBZ cop
 +-- its PRP$ poss
 +-- for IN prep
 |   +-- capturing VBG pcomp
 |       +-- conditions NNS dobj
 |           +-- OT NNP nn
 |           +-- for IN prep
 |               +-- operations NNS pobj
 |                   +-- inverse NN amod
 +-- . . punct

24
Input: The Undo -LRB- O -RRB- command in Figure is interpreted as an inverse operation O .
Parse:
interpreted VBN ROOT
 +-- command NN nsubjpass
 |   +-- The DT det
 |   +-- O NNP nn
 |   |   +-- Undo NNP dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- in IN prep
 |       +-- Figure NNP pobj
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- O NN pobj
 |       +-- an DT det
 |       +-- inverse NN amod
 |       +-- operation NN nn
 +-- . . punct

25
Input: The correct undo effect for O is to eliminate the effect of O but retain the effects of other operations -LRB- i.e .
Parse:
is VBZ ROOT
 +-- effect NN nsubj
 |   +-- The DT det
 |   +-- correct JJ amod
 |   +-- undo JJ amod
 |   +-- for IN prep
 |       +-- O NN pobj
 +-- eliminate VB ccomp
 |   +-- to TO aux
 |   +-- effect NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- O NNP pobj
 |   +-- but CC cc
 |   +-- retain VB conj
 |       +-- effects NNS dobj
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- operations NNS pobj
 |           |       +-- other JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- i.e NN dep
 +-- . . punct

26
Input: O and O -RRB- -LRB- -RRB- .
Parse:
O UH ROOT
 +-- and CC cc
 +-- O NNP conj
 |   +-- -RRB- -RRB- punct
 |   +-- -LRB- -LRB- punct
 +-- . . punct

27
Input: To achieve this effect , O needs to be treated as an operation defined on the document state including the effect of O but not O and O , so that O can be transformed against O and O before its execution .
Parse:
needs VBZ ROOT
 +-- achieve VB advcl
 |   +-- To TO aux
 |   +-- effect NN dobj
 |       +-- this DT det
 +-- , , punct
 +-- O PRP nsubj
 +-- treated VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- as IN prep
 |   |   +-- operation NN pobj
 |   |       +-- an DT det
 |   |       +-- defined VBN partmod
 |   |           +-- on IN prep
 |   |               +-- state NN pobj
 |   |                   +-- the DT det
 |   |                   +-- document NN nn
 |   +-- including VBG prep
 |   |   +-- effect NN pobj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |       |   +-- O NNP pobj
 |   |       +-- but CC cc
 |   |       +-- O JJ conj
 |   |           +-- not RB neg
 |   |           +-- and CC cc
 |   |           +-- O NNP conj
 |   +-- , , punct
 |   +-- transformed VBN advcl
 |       +-- so IN mark
 |       +-- that IN mark
 |       +-- O PRP nsubjpass
 |       +-- can MD aux
 |       +-- be VB auxpass
 |       +-- against IN prep
 |       |   +-- O NN pobj
 |       |       +-- and CC cc
 |       |       +-- O , conj
 |       +-- before IN prep
 |           +-- execution NN pobj
 |               +-- its PRP$ poss
 +-- . . punct

28
Input: However , according to Lamport '' s happen before relation -LRB- -RRB- , Undo -LRB- O -RRB- is causally dependent on O , O , and O .
Parse:
happen VB ROOT
 +-- However RB advmod
 +-- , , punct
 +-- according VBG prep
 |   +-- to IN pcomp
 |       +-- Lamport NNP pobj
 +-- '' '' punct
 +-- s POS nsubj
 +-- before IN prep
 |   +-- relation NN pobj
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- dependent JJ ccomp
 |   +-- Undo NNP nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- O NNP dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- is VBZ cop
 |   +-- causally RB advmod
 |   +-- on IN prep
 |       +-- O NNP pobj
 |           +-- , , punct
 |           +-- O NNP conj
 |           +-- and CC cc
 +-- . . punct

29
Input: If O was to inherit the causal relation of Undo -LRB- O -RRB- , then it would be effectively treated as an operation defined on the document state with the effects of all three operations O , O , and O , which would prohibit O from being transformed against any operation , thus failing to achieve the correct undo effect .
Parse:
treated VBN ROOT
 +-- was VBD advcl
 |   +-- If IN mark
 |   +-- O PRP nsubj
 |   +-- inherit VB xcomp
 |       +-- to TO aux
 |       +-- relation NN dobj
 |           +-- the DT det
 |           +-- causal JJ amod
 |           +-- of IN prep
 |               +-- Undo NNP pobj
 |                   +-- -LRB- -LRB- punct
 |                   +-- O NNP dep
 |                   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- then RB advmod
 +-- it PRP nsubjpass
 +-- would MD aux
 +-- be VB auxpass
 +-- effectively RB advmod
 +-- as IN prep
 |   +-- operation NN pobj
 |       +-- an DT det
 |       +-- defined VBN partmod
 |           +-- on IN prep
 |           |   +-- state NN pobj
 |           |       +-- the DT det
 |           |       +-- document NN nn
 |           +-- with IN prep
 |               +-- effects NNS pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- operations NNS pobj
 |                           +-- all DT det
 |                           +-- three CD num
 |                           +-- O NNP dep
 |                           |   +-- , , punct
 |                           |   +-- O NNP conj
 |                           |   +-- and CC cc
 |                           |   +-- O NN conj
 |                           +-- , , punct
 |                           +-- prohibit VB rcmod
 |                               +-- which WDT nsubj
 |                               +-- would MD aux
 |                               +-- O , punct
 |                               +-- from IN prep
 |                                   +-- transformed VBN pcomp
 |                                       +-- being VBG auxpass
 |                                       +-- against IN prep
 |                                           +-- operation NN pobj
 |                                               +-- any DT det
 +-- failing VBG xcomp
 |   +-- thus RB advmod
 |   +-- achieve VB xcomp
 |       +-- to TO aux
 |       +-- effect NN dobj
 |           +-- the DT det
 |           +-- correct JJ amod
 |           +-- undo JJ amod
 +-- . . punct

30
Input: Moreover , after executing an inverse operation like O , the document state can no longer be properly represented by the state vector , which is only capable of representing original normal editing operations. .
Parse:
represented VBN ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- after IN prep
 |   +-- executing VBG pcomp
 |       +-- operation NN dobj
 |       |   +-- an DT det
 |       |   +-- inverse NN amod
 |       +-- like IN prep
 |           +-- O NNP pobj
 +-- state NN nsubjpass
 |   +-- the DT det
 |   +-- document NN nn
 +-- can MD aux
 +-- longer RBR advmod
 |   +-- no RB advmod
 +-- be VB auxpass
 +-- properly RB advmod
 +-- by IN prep
 |   +-- vector NN pobj
 |       +-- the DT det
 |       +-- state NN nn
 |       +-- , , punct
 |       +-- capable JJ rcmod
 |           +-- which WDT nsubj
 |           +-- is VBZ cop
 |           +-- only RB advmod
 |           +-- of IN prep
 |               +-- representing VBG pcomp
 |                   +-- operations. NNS dobj
 |                       +-- original JJ amod
 |                       +-- normal JJ amod
 |                       +-- editing NN nn
 +-- . . punct
