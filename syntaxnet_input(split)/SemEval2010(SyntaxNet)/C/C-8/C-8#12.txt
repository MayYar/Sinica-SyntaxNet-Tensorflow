
1
Input: A distinctive feature of COT is that in every transformation process -LRB- i.e .
Parse:
is VBZ ROOT
 +-- feature NN nsubj
 |   +-- A DT det
 |   +-- distinctive JJ amod
 |   +-- of IN prep
 |       +-- COT NNP pobj
 +-- i.e NN ccomp
 |   +-- that IN mark
 |   +-- in IN prep
 |   |   +-- process NN pobj
 |   |       +-- every DT det
 |   |       +-- transformation NN nn
 |   +-- -LRB- -LRB- punct
 +-- . . punct

2
Input: an invocation of transform -LRB- O , CD -RRB- -RRB- , the whole set of transformation target operations are determined in advance , and available in the context difference parameter CD -LRB- calculated by using context based conditions CC and CC -RRB- .
Parse:
determined VBN ROOT
 +-- invocation NN nsubjpass
 |   +-- an DT det
 |   +-- of IN prep
 |   |   +-- transform NN pobj
 |   +-- -LRB- -LRB- punct
 |   +-- O NNP dep
 |   |   +-- , , punct
 |   |   +-- CD NN appos
 |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- set NN appos
 |       +-- the DT det
 |       +-- whole JJ amod
 |       +-- of IN prep
 |           +-- operations NNS pobj
 |               +-- target NN nn
 |                   +-- transformation NN nn
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- advance NN pobj
 +-- , , punct
 +-- and CC cc
 +-- available JJ conj
 |   +-- in IN prep
 |       +-- CD NN pobj
 |           +-- the DT det
 |           +-- context NN nn
 |           +-- difference NN nn
 |           +-- parameter NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- calculated VBN partmod
 |           |   +-- by IN prep
 |           |       +-- using VBG pcomp
 |           |           +-- context NN dobj
 |           |               +-- based VBN prep
 |           |                   +-- conditions NNS pobj
 |           |                       +-- CC NNP dep
 |           |                           +-- and CC cc
 |           |                           +-- CC NNP conj
 |           +-- -RRB- -RRB- punct
 +-- . . punct

3
Input: With the knowledge of all operations involved in the transformation process , we are able to properly arrange these operations to break the pre conditions for CP , IP , and IP .
Parse:
able JJ ROOT
 +-- With IN prep
 |   +-- knowledge NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- operations NNS pobj
 |               +-- all DT det
 |               +-- involved VBN partmod
 |                   +-- in IN prep
 |                       +-- process NN pobj
 |                           +-- the DT det
 |                           +-- transformation NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- are VBP cop
 +-- arrange VB xcomp
 |   +-- to TO aux
 |   +-- properly RB advmod
 |   +-- operations NNS dobj
 |   |   +-- these DT det
 |   +-- break VB xcomp
 |       +-- to TO aux
 |       +-- conditions NNS dobj
 |           +-- the DT det
 |           +-- pre JJ nn
 |           +-- for IN prep
 |               +-- CP NNP pobj
 |                   +-- , , punct
 |                   +-- IP NN conj
 |                   +-- and CC cc
 |                   +-- IP NNP conj
 +-- . . punct

4
Input: . Extended transform -LRB- -RRB- procedure We extend the core procedure transform -LRB- O , CD -RRB- to take advantage of the global knowledge of operations in the contextdifference parameter CD for breaking PC CP , PC IP and PC IP .
Parse:
. . ROOT
 +-- transform NN dep
 |   +-- Extended VBN amod
 |   +-- -LRB- -LRB- punct
 |   +-- procedure NN dep
 |   |   +-- -RRB- -RRB- punct
 |   |   +-- extend VBP rcmod
 |   |       +-- We PRP nsubj
 |   |       +-- transform NN dobj
 |   |           +-- the DT det
 |   |           +-- core NN nn
 |   |           +-- procedure NN nn
 |   +-- O UH dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- , , punct
 |   |   +-- CD NN appos
 |   |   +-- -RRB- -RRB- punct
 |   +-- take VB dep
 |       +-- to TO aux
 |       +-- advantage NN dobj
 |       +-- of IN prep
 |           +-- knowledge NN pobj
 |               +-- the DT det
 |               +-- global JJ amod
 |               +-- of IN prep
 |               |   +-- operations NNS pobj
 |               |       +-- in IN prep
 |               |           +-- CD NN pobj
 |               |               +-- the DT det
 |               |               +-- contextdifference NN nn
 |               |               +-- parameter NN nn
 |               +-- for IN prep
 |                   +-- breaking VBG pcomp
 |                       +-- CP NNP dobj
 |                           +-- PC NN nn
 |                           +-- , , punct
 |                           +-- IP UH conj
 |                           |   +-- PC NN nn
 |                           +-- and CC cc
 |                           +-- IP NNP conj
 |                               +-- PC NN nn
 +-- . . punct

5
Input: The extended transform -LRB- -RRB- , as shown in Procedure , retains the structure and main elements of Procedure , but adds solutions to CP , IP , and IP in Step -LRB- ensure TPsafety -LRB- -RRB- -RRB- and in Step -LRB- c -RRB- -LRB- the if then part -RRB- .
Parse:
retains VBZ ROOT
 +-- transform NN nsubj
 |   +-- The DT det
 |   +-- extended JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- shown VBN dep
 |   +-- as IN mark
 |   +-- in IN prep
 |       +-- Procedure NNP pobj
 +-- structure NN dobj
 |   +-- the DT det
 |   +-- and CC cc
 |   +-- elements NNS conj
 |   |   +-- main JJ amod
 |   +-- of IN prep
 |       +-- Procedure NNP pobj
 +-- but CC cc
 +-- adds VBZ conj
 |   +-- solutions NNS dobj
 |       +-- to IN prep
 |           +-- CP NNP pobj
 |               +-- , , punct
 |               +-- IP NNP conj
 |               +-- and CC cc
 |               +-- IP NN conj
 |                   +-- in IN prep
 |                   |   +-- Step NNP pobj
 |                   +-- ensure VB dep
 |                       +-- -LRB- -LRB- punct
 |                       +-- TPsafety NN dobj
 |                       +-- -RRB- -RRB- punct
 +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- in IN conj
 |   +-- Step NNP pobj
 |       +-- -LRB- -LRB- punct
 |       +-- c LS dep
 |       +-- -RRB- -RRB- punct
 |       +-- part NN dep
 |           +-- the DT det
 |           +-- then RB advmod
 |               +-- if IN dep
 +-- . . punct

6
Input: Procedure .
Parse:
Procedure NNP ROOT
 +-- . . punct

7
Input: transform -LRB- O , CD -RRB- .
Parse:
transform NN ROOT
 +-- -LRB- -LRB- punct
 +-- O NNP dep
 |   +-- , , punct
 |   +-- CD NN appos
 +-- -RRB- -RRB- punct
 +-- . . punct
