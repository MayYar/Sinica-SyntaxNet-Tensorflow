
1
Input: .
Parse:
. . ROOT

2
Input: Given any operation Ox and a pair of operations -LRB- O , O -RRB- , it must be IT -LRB- IT -LRB- Ox , O -RRB- , O -RRB- = IT -LRB- Ox , I -RRB- = Ox , which means that -LRB- O , O -RRB- and I are equivalent with respect to the effect in transformation .
Parse:
IT PRP ROOT
 +-- Given VBN prep
 |   +-- Ox NNP pobj
 |       +-- any DT det
 |       +-- operation NN nn
 |       +-- and CC cc
 |       +-- pair NN conj
 |           +-- a DT det
 |           +-- of IN prep
 |           |   +-- operations NNS pobj
 |           +-- -LRB- -LRB- punct
 |           +-- O NNP dep
 |           |   +-- , , punct
 |           |   +-- O NNP appos
 |           +-- -RRB- -RRB- punct
 +-- , , punct
 +-- it PRP nsubj
 +-- must MD aux
 +-- be VB cop
 +-- -LRB- -LRB- punct
 +-- IT PRP dep
 |   +-- Ox NNP appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- , , punct
 |   |   +-- O NNP appos
 |   |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- O LS advmod
 +-- -RRB- -RRB- punct
 +-- = NFP cc
 +-- IT PRP conj
 |   +-- -LRB- -LRB- punct
 |   +-- Ox NNP dep
 |       +-- Ox NNP nn
 |       +-- , , punct
 |       +-- = , dep
 |       |   +-- I PRP dep
 |       |       +-- -RRB- -RRB- punct
 |       +-- means VBZ rcmod
 |           +-- which WDT nsubj
 |           +-- equivalent JJ ccomp
 |               +-- that IN mark
 |               +-- O NNP nsubj
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- , , punct
 |               |   +-- O NNP conj
 |               |   |   +-- -RRB- -RRB- punct
 |               |   +-- and CC cc
 |               |   +-- I PRP conj
 |               +-- are VBP cop
 |               +-- with IN prep
 |                   +-- respect NN pobj
 |                       +-- to IN prep
 |                           +-- effect NN pobj
 |                               +-- the DT det
 |                               +-- in IN prep
 |                                   +-- transformation NN pobj
 +-- . . punct

3
Input: and Ob , if Oa = IT -LRB- Oa , Ob -RRB- , Ob = IT -LRB- Ob , Oa -RRB- , and Oa = IT -LRB- Oa , Ob -RRB- , then it must be Oa = Oa , which means the transformed inverse operation Oa is equal to the inverse of the transformed operation Oa .
Parse:
Ob NNP ROOT
 +-- and CC cc
 +-- , , punct
 +-- Oa NNP advcl
 |   +-- if IN mark
 |   +-- IT PRP nsubj
 |   |   +-- Oa NNP nn
 |   |   +-- = SYM nn
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- Oa NNP dep
 |   |   |   +-- , , punct
 |   |   |   +-- Ob NNP appos
 |   |   +-- -RRB- -RRB- punct
 |   |   +-- , , punct
 |   |   +-- IT NNP conj
 |   |   |   +-- Ob NN nn
 |   |   |   +-- = SYM nn
 |   |   |   +-- Ob UH appos
 |   |   |       +-- -LRB- -LRB- punct
 |   |   |       +-- , , punct
 |   |   |       +-- Oa NNP appos
 |   |   |       +-- -RRB- -RRB- punct
 |   |   +-- and CC cc
 |   |   +-- IT PRP conj
 |   |       +-- Oa NNP nn
 |   |       +-- = SYM nn
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- Oa NNP dep
 |   |       |   +-- , , punct
 |   |       |   +-- Ob NNP appos
 |   |       +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- then RB advmod
 |   +-- it PRP nsubj
 |   +-- must MD aux
 |   +-- be VB cop
 |   +-- Oa NNP nn
 |   +-- = SYM nn
 |   +-- means VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- equal JJ ccomp
 |           +-- Oa NNP nsubj
 |           |   +-- the DT det
 |           |   +-- transformed VBN amod
 |           |   +-- operation NN nn
 |           |       +-- inverse NN nn
 |           +-- is VBZ cop
 |           +-- to IN prep
 |               +-- inverse NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- operation NN pobj
 |                           +-- the DT det
 |                           +-- transformed VBN amod
 |                           +-- Oa NNP appos
 +-- . . punct

4
Input: The above transformation properties are important discoveries of past research , but they are not unconditionally required .
Parse:
discoveries NNS ROOT
 +-- properties NNS nsubj
 |   +-- The DT det
 |   +-- above JJ amod
 |   +-- transformation NN nn
 +-- are VBP cop
 +-- important JJ amod
 +-- of IN prep
 |   +-- research NN pobj
 |       +-- past JJ amod
 +-- , , punct
 +-- but CC cc
 +-- required VBN conj
 |   +-- they PRP nsubjpass
 |   +-- are VBP auxpass
 |   +-- not RB neg
 |   +-- unconditionally RB advmod
 +-- . . punct

5
Input: The pre conditions for requiring them , however , were never explicitly stated in their specifications , which has unfortunately caused quite some misconceptions in OT literature .
Parse:
stated VBN ROOT
 +-- conditions NNS nsubjpass
 |   +-- The DT det
 |   +-- pre JJ nn
 |   +-- for IN prep
 |       +-- requiring VBG pcomp
 |           +-- them PRP dobj
 +-- , , punct
 +-- however RB advmod
 +-- were VBD auxpass
 +-- never RB neg
 +-- explicitly RB advmod
 +-- in IN prep
 |   +-- specifications NNS pobj
 |       +-- their PRP$ poss
 |       +-- , , punct
 |       +-- caused VBN rcmod
 |           +-- which WDT nsubj
 |           +-- has VBZ aux
 |           +-- unfortunately RB advmod
 |           +-- misconceptions NNS dobj
 |           |   +-- quite PDT predet
 |           |   +-- some DT det
 |           +-- in IN prep
 |               +-- literature NN pobj
 |                   +-- OT NNP nn
 +-- . . punct

6
Input: To explore alternative solutions to these properties , we explicitly state the Pre Conditions for CP , CP , IP , and IP as follows allows the same group of context independent operations to be executed in different orders .
Parse:
state VBP ROOT
 +-- explore VB advcl
 |   +-- To TO aux
 |   +-- solutions NNS dobj
 |       +-- alternative JJ amod
 |       +-- to IN prep
 |           +-- properties NNS pobj
 |               +-- these DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- explicitly RB advmod
 +-- Conditions NNPS dobj
 |   +-- the DT det
 |   +-- Pre NNP nn
 |   +-- for IN prep
 |       +-- CP NNP pobj
 |           +-- , , punct
 |           +-- CP NNP conj
 |           +-- IP NNP conj
 |           +-- and CC cc
 +-- follows VBZ advcl
 |   +-- as IN mark
 |   +-- allows VBZ acomp
 |       +-- executed VBN xcomp
 |           +-- group NN nsubjpass
 |           |   +-- the DT det
 |           |   +-- same JJ amod
 |           |   +-- of IN prep
 |           |       +-- operations NNS pobj
 |           |           +-- context NN amod
 |           |           +-- independent JJ amod
 |           +-- to TO aux
 |           +-- be VB auxpass
 |           +-- in IN prep
 |               +-- orders NNS pobj
 |                   +-- different JJ amod
 +-- . . punct

7
Input: allows an operation to be transformed against the same group of context independent operations in different orders .
Parse:
allows VBZ ROOT
 +-- transformed VBN xcomp
 |   +-- operation NN nsubjpass
 |   |   +-- an DT det
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- against IN prep
 |       +-- group NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- of IN prep
 |               +-- operations NNS pobj
 |                   +-- context NN nn
 |                   +-- independent JJ amod
 |                   +-- in IN prep
 |                       +-- orders NNS pobj
 |                           +-- different JJ amod
 +-- . . punct

8
Input: an operation Ox to be transformed against a pair of do and undo operations -LRB- O and O -RRB- one by one .
Parse:
operation NN ROOT
 +-- an DT det
 +-- Ox , punct
 +-- transformed VBN infmod
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- against IN prep
 |       +-- pair NN pobj
 |           +-- a DT det
 |           +-- of IN prep
 |           |   +-- operations NNS pobj
 |           |       +-- do VB nn
 |           |           +-- and CC cc
 |           |           +-- undo JJ conj
 |           +-- -LRB- -LRB- punct
 |           +-- O NNP dep
 |           |   +-- and CC cc
 |           |   +-- O NNP conj
 |           +-- -RRB- -RRB- punct
 |           +-- one CD appos
 |               +-- by IN prep
 |                   +-- one CD pobj
 +-- . . punct

9
Input: an inverse operation Oa to be transformed against another operation Ob that is context independent of Oa .
Parse:
operation NN ROOT
 +-- an DT det
 +-- inverse NN nn
 +-- Oa , punct
 +-- transformed VBN infmod
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- against IN prep
 |       +-- Ob NN pobj
 |           +-- another DT det
 |           +-- operation NN nn
 |           +-- context VBG rcmod
 |               +-- that WDT nsubj
 |               +-- is VBZ aux
 |               +-- independent JJ acomp
 |                   +-- of IN prep
 |                       +-- Oa NNP pobj
 +-- . . punct

10
Input: Convergence Property & in this paper -LRB- and in -LRB- -RRB- -RRB- are the same as Transformation Property & in -LRB- -RRB- .
Parse:
same JJ ROOT
 +-- Property NNP nsubj
 |   +-- Convergence NNP nn
 |   +-- & CC cc
 |   +-- in IN conj
 |       +-- paper NN pobj
 |       |   +-- this DT det
 |       +-- -LRB- -LRB- punct
 |       +-- and CC cc
 |       +-- in IN conj
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- -RRB- -RRB- punct
 +-- are VBP cop
 +-- the DT det
 +-- as IN prep
 |   +-- Property NNP pobj
 |       +-- Transformation NNP nn
 |       +-- & CC cc
 |       +-- in IN conj
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

11
Input: There is another Inverse Property -LRB- IP -RRB- that is required in an OT system for achieving the correct undo effect -LRB- -RRB- , but IP is not related to IT functions .
Parse:
is VBZ ROOT
 +-- There EX expl
 +-- Property NNP nsubj
 |   +-- another DT det
 |   +-- Inverse NNP nn
 |   +-- IP NNP appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- required VBN rcmod
 |   |   +-- that WDT nsubjpass
 |   |   +-- is VBZ auxpass
 |   |   +-- in IN prep
 |   |       +-- system NN pobj
 |   |           +-- an DT det
 |   |           +-- OT NNP nn
 |   |           +-- for IN prep
 |   |               +-- achieving VBG pcomp
 |   |                   +-- effect NN dobj
 |   |                       +-- the DT det
 |   |                       +-- correct JJ amod
 |   |                       +-- undo JJ nn
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- but CC cc
 +-- related VBN conj
 |   +-- IP NN nsubjpass
 |   +-- is VBZ auxpass
 |   +-- not RB neg
 |   +-- to IN prep
 |       +-- functions NNS pobj
 |           +-- IT NN nn
 +-- . . punct

12
Input: There are generally two ways to achieve OT correctness with respect to these transformation properties one is to design transformation functions capable of preserving these properties ; the other is to design control algorithms capable of breaking the pre conditions for requiring these properties .
Parse:
are VBP ROOT
 +-- There EX expl
 +-- generally RB advmod
 +-- ways NNS nsubj
 |   +-- two CD num
 |   +-- achieve VB infmod
 |   |   +-- to TO aux
 |   |   +-- correctness NN dobj
 |   |   |   +-- OT NNP nn
 |   |   +-- with IN prep
 |   |       +-- respect NN pobj
 |   |           +-- to IN prep
 |   |               +-- properties NNS pobj
 |   |                   +-- these DT det
 |   |                   +-- transformation NN nn
 |   +-- is VBZ rcmod
 |       +-- one CD nsubj
 |       +-- design VB xcomp
 |           +-- to TO aux
 |           +-- functions NNS dobj
 |               +-- transformation NN nn
 |               +-- capable JJ amod
 |                   +-- of IN prep
 |                       +-- preserving VBG pcomp
 |                           +-- properties NNS dobj
 |                               +-- these DT det
 +-- ; : punct
 +-- is VBZ parataxis
 |   +-- other JJ nsubj
 |   |   +-- the DT det
 |   +-- design VB xcomp
 |       +-- to TO aux
 |       +-- algorithms NNS dobj
 |           +-- control NN nn
 |           +-- capable JJ amod
 |               +-- of IN prep
 |                   +-- breaking VBG pcomp
 |                       +-- conditions NNS dobj
 |                           +-- the DT det
 |                           +-- pre JJ nn
 |                           +-- for IN prep
 |                               +-- requiring VBG pcomp
 |                                   +-- properties NNS dobj
 |                                       +-- these DT det
 +-- . . punct

13
Input: Past research has shown that it is relatively easy to design transformation functions capable of preserving CP , but non trivial to design and formally prove transformation functions capable of preserving CP , IP and IP .
Parse:
shown VBN ROOT
 +-- research NN nsubj
 |   +-- Past JJ amod
 +-- has VBZ aux
 +-- easy JJ ccomp
 |   +-- that IN mark
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- relatively RB advmod
 |   +-- design VB xcomp
 |       +-- to TO aux
 |       +-- functions NNS dobj
 |           +-- transformation NN nn
 |           +-- capable JJ amod
 |               +-- of IN prep
 |                   +-- preserving VBG pcomp
 |                       +-- CP NNP dobj
 +-- , , punct
 +-- but CC cc
 +-- trivial JJ conj
 |   +-- non FW dep
 |   +-- design VB ccomp
 |       +-- to TO aux
 |       +-- and CC cc
 |       +-- prove VB conj
 |       |   +-- formally RB advmod
 |       +-- functions NNS dobj
 |           +-- transformation NN nn
 |           +-- capable JJ amod
 |               +-- of IN prep
 |                   +-- preserving VBG pcomp
 |                       +-- CP NNP dobj
 |                           +-- , , punct
 |                           +-- IP NN conj
 |                           +-- and CC cc
 |                           +-- IP NNP conj
 +-- . . punct

14
Input: Counterexamples illustrating the violation of these properties in some early published transformation functions can be found in -LRB- , , , -RRB- .
Parse:
found VBN ROOT
 +-- Counterexamples NNS nsubjpass
 |   +-- illustrating VBG partmod
 |       +-- violation NN dobj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- properties NNS pobj
 |       |           +-- these DT det
 |       +-- in IN prep
 |           +-- functions NNS pobj
 |               +-- some DT det
 |               +-- early JJ amod
 |               +-- published VBN amod
 |               +-- transformation NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- -LRB- -LRB- punct
 |   +-- , , punct
 |   +-- -RRB- -RRB- punct
 +-- . . punct

15
Input: IT functions capable of preserving IP and IP had been devised in the context of ANYUNDO -LRB- -RRB- , but our experience in implementing these functions revealed that those solutions are quick intricate and inefficient -LRB- more analysis can be found in Section -RRB- .
Parse:
devised VBN ROOT
 +-- functions VBZ nsubjpass
 |   +-- IT NN nn
 |   +-- capable JJ amod
 |       +-- of IN prep
 |           +-- preserving VBG pcomp
 |               +-- IP NN dobj
 |                   +-- and CC cc
 |                   +-- IP NN conj
 +-- had VBD aux
 +-- been VBN auxpass
 +-- in IN prep
 |   +-- context NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- ANYUNDO NNP pobj
 |               +-- -LRB- -LRB- punct
 |               +-- -RRB- -RRB- punct
 +-- , , punct
 +-- but CC cc
 +-- revealed VBN conj
 |   +-- experience NN nsubj
 |   |   +-- our PRP$ poss
 |   |   +-- in IN prep
 |   |       +-- implementing VBG pcomp
 |   |           +-- functions NNS dobj
 |   |               +-- these DT det
 |   +-- intricate JJ ccomp
 |   |   +-- that IN mark
 |   |   +-- solutions NNS nsubj
 |   |   |   +-- those DT det
 |   |   +-- are VBP cop
 |   |   +-- quick JJ amod
 |   |   +-- and CC cc
 |   |   +-- inefficient JJ conj
 |   +-- found VBN parataxis
 |       +-- -LRB- -LRB- punct
 |       +-- analysis NN nsubjpass
 |       |   +-- more JJR amod
 |       +-- can MD aux
 |       +-- be VB auxpass
 |       +-- in IN prep
 |       |   +-- Section NN pobj
 |       +-- -RRB- -RRB- punct
 +-- . . punct

16
Input: Clearly , solving CP , IP and IP at the control algorithm level has the benefit of simplifying the design of transformation functions and the OT system as a whole .
Parse:
has VBZ ROOT
 +-- Clearly RB advmod
 +-- , , punct
 +-- solving VBG csubj
 |   +-- CP NNP dobj
 |   |   +-- , , punct
 |   |   +-- IP NN conj
 |   |   +-- and CC cc
 |   |   +-- IP NNP conj
 |   +-- at IN prep
 |       +-- level NN pobj
 |           +-- the DT det
 |           +-- control NN nn
 |           +-- algorithm NN nn
 +-- benefit NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- simplifying VBG pcomp
 |           +-- design NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |               |   +-- functions NNS pobj
 |               |       +-- transformation NN nn
 |               +-- and CC cc
 |               +-- system NN conj
 |                   +-- the DT det
 |                   +-- OT NNP nn
 |                   +-- as IN prep
 |                       +-- whole NN pobj
 |                           +-- a DT det
 +-- . . punct

17
Input: In the following section , we extend the basic COT algorithm to provide simple and efficient solutions to CP , IP and IP at the control algorithm level. .
Parse:
extend VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- the DT det
 |       +-- following VBG amod
 +-- , , punct
 +-- we PRP nsubj
 +-- algorithm NNP dobj
 |   +-- the DT det
 |   +-- basic JJ amod
 |   +-- COT NNP nn
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- solutions NNS dobj
 |   |   +-- simple JJ amod
 |   |       +-- and CC cc
 |   |       +-- efficient JJ conj
 |   +-- to IN prep
 |   |   +-- CP VB pobj
 |   |       +-- , , punct
 |   |       +-- IP NN conj
 |   |       +-- and CC cc
 |   |       +-- IP NNP conj
 |   +-- at IN prep
 |       +-- level. NN pobj
 |           +-- the DT det
 |           +-- control NN nn
 |           +-- algorithm NN nn
 +-- . . punct
