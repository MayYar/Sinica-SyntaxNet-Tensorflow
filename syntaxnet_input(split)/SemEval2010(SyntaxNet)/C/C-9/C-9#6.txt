
1
Input: DECENTRALIZED ADAPTIVE SERVICE MODEL
Parse:
MODEL NNP ROOT
 +-- DECENTRALIZED VBN amod
 +-- ADAPTIVE JJ amod
 +-- SERVICE NNP nn

2
Input: MODEL In EDAS a decentralized , adaptive service normally matches a traditional service accessed by users like a web server , an instant messaging server or a source code repository .
Parse:
matches VBZ ROOT
 +-- MODEL UH discourse
 +-- In IN prep
 |   +-- EDAS NNP pobj
 +-- service NN nsubj
 |   +-- a DT det
 |   +-- decentralized JJ amod
 |   +-- , , punct
 |   +-- adaptive JJ amod
 +-- normally RB advmod
 +-- service NN dobj
 |   +-- a DT det
 |   +-- traditional JJ amod
 |   +-- accessed VBN partmod
 |       +-- by IN prep
 |           +-- users NNS pobj
 +-- like IN prep
 |   +-- server NN pobj
 |       +-- a DT det
 |       +-- web NN nn
 |       +-- , , punct
 |       +-- server NN conj
 |       |   +-- an DT det
 |       |   +-- instant JJ amod
 |       |   +-- messaging NN nn
 |       +-- or CC cc
 |       +-- repository NN conj
 |           +-- a DT det
 |           +-- source NN nn
 |           +-- code NN nn
 +-- . . punct

3
Input: Such a service is represented by a fragmented object .
Parse:
represented VBN ROOT
 +-- service NN nsubjpass
 |   +-- Such PDT predet
 |   +-- a DT det
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- object NN pobj
 |       +-- a DT det
 |       +-- fragmented JJ amod
 +-- . . punct

4
Input: This object expands or shrinks in the scope spanned by the associated service environment depending on the service demands and for fault tolerance reasons .
Parse:
expands VBZ ROOT
 +-- object NN nsubj
 |   +-- This DT det
 +-- or CC cc
 +-- shrinks NNS conj
 +-- in IN prep
 |   +-- scope NN pobj
 |       +-- the DT det
 |       +-- spanned VBN partmod
 |           +-- by IN prep
 |               +-- environment NN pobj
 |               |   +-- the DT det
 |               |   +-- associated VBN amod
 |               |   +-- service NN nn
 |               |   +-- depending VBG prep
 |               |       +-- on IN pcomp
 |               |           +-- demands NNS pobj
 |               |               +-- the DT det
 |               |               +-- service NN nn
 |               +-- and CC cc
 |               +-- for IN conj
 |                   +-- reasons NNS pobj
 |                       +-- fault NN nn
 |                       +-- tolerance NN nn
 +-- . . punct

5
Input: Usually every part of the object is mobile and can be migrated if necessary .
Parse:
mobile JJ ROOT
 +-- Usually RB advmod
 +-- part NN nsubj
 |   +-- every DT det
 |   +-- of IN prep
 |       +-- object NN pobj
 |           +-- the DT det
 +-- is VBZ cop
 +-- and CC cc
 +-- migrated VBN conj
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- necessary JJ advcl
 |       +-- if IN mark
 +-- . . punct

6
Input: Each service has at least two interfaces one for management tasks and another service specific for the end user .
Parse:
has VBZ ROOT
 +-- service NN nsubj
 |   +-- Each DT det
 +-- one CD dobj
 |   +-- two CD num
 |   |   +-- least RBS dep
 |   |       +-- at IN advmod
 |   +-- interfaces NNS nn
 |   +-- for IN prep
 |   |   +-- tasks NNS pobj
 |   |       +-- management NN nn
 |   +-- and CC cc
 |   +-- service NN conj
 |       +-- another DT det
 |       +-- specific JJ amod
 |           +-- for IN prep
 |               +-- user NN pobj
 |                   +-- the DT det
 |                   +-- end NN nn
 +-- . . punct

7
Input: The management interface offers methods to start , stop , and configure service instances .
Parse:
offers VBZ ROOT
 +-- interface NN nsubj
 |   +-- The DT det
 |   +-- management NN nn
 +-- methods NNS dobj
 |   +-- start VB infmod
 |       +-- to TO aux
 |       +-- , , punct
 |       +-- stop VB conj
 |       +-- and CC cc
 |       +-- configure NN conj
 |           +-- instances NNS dobj
 |               +-- service NN nn
 +-- . . punct

8
Input: As this set of features requires an enormous implementation effort to do it anew for each service implementation we support the development of decentralized adaptive services through a framework and an extended version of IDL in combination with a special IDL compiler -LRB- -RRB- .
Parse:
support VBP ROOT
 +-- requires VBZ advcl
 |   +-- As IN mark
 |   +-- set NN nsubj
 |   |   +-- this DT det
 |   |   +-- of IN prep
 |   |       +-- features NNS pobj
 |   +-- effort NN dobj
 |       +-- an DT det
 |       +-- enormous JJ amod
 |       +-- implementation NN nn
 |       +-- do VB infmod
 |           +-- to TO aux
 |           +-- it PRP dobj
 |           +-- anew VB advmod
 |           +-- for IN prep
 |               +-- implementation NN pobj
 |                   +-- each DT det
 |                   +-- service NN nn
 +-- we PRP nsubj
 +-- development NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- services NNS pobj
 |           +-- decentralized VBN amod
 |           +-- adaptive JJ amod
 +-- through IN prep
 |   +-- framework NN pobj
 |       +-- a DT det
 |       +-- and CC cc
 |       +-- version NN conj
 |           +-- an DT det
 |           +-- extended JJ amod
 |           +-- of IN prep
 |           |   +-- IDL NNP pobj
 |           +-- in IN prep
 |           |   +-- combination NN pobj
 |           |       +-- with IN prep
 |           |           +-- compiler NN pobj
 |           |               +-- a DT det
 |           |               +-- special JJ amod
 |           |               +-- IDL NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

9
Input: The core idea is to develop a service in usual client server fashion as it is done in plain CORBA .
Parse:
is VBZ ROOT
 +-- idea NN nsubj
 |   +-- The DT det
 |   +-- core NN nn
 +-- develop VB xcomp
 |   +-- to TO aux
 |   +-- service NN dobj
 |   |   +-- a DT det
 |   +-- in IN prep
 |   |   +-- fashion NN pobj
 |   |       +-- usual JJ amod
 |   |       +-- server NN nn
 |   |           +-- client NN nn
 |   +-- done VBN advcl
 |       +-- as IN mark
 |       +-- it PRP nsubjpass
 |       +-- is VBZ auxpass
 |       +-- in IN prep
 |           +-- CORBA NNP pobj
 |               +-- plain JJ amod
 +-- . . punct

10
Input: This service then can be started and executed on the grid as a common servant .
Parse:
started VBN ROOT
 +-- service NN nsubjpass
 |   +-- This DT det
 +-- then RB advmod
 +-- can MD aux
 +-- be VB auxpass
 +-- and CC cc
 +-- executed VBN conj
 |   +-- on IN prep
 |   |   +-- grid NN pobj
 |   |       +-- the DT det
 |   +-- as IN prep
 |       +-- servant NN pobj
 |           +-- a DT det
 |           +-- common JJ amod
 +-- . . punct

11
Input: Additionally it should be possible to migrate the service .
Parse:
possible JJ ROOT
 +-- Additionally RB advmod
 +-- it PRP nsubj
 +-- should MD aux
 +-- be VB cop
 +-- migrate VB xcomp
 |   +-- to TO aux
 |   +-- service NN dobj
 |       +-- the DT det
 +-- . . punct

12
Input: This can be achieved by using value type based approach to describe the service state as done in -LRB- -RRB- or using the language supplied serialization mechanisms .
Parse:
achieved VBN ROOT
 +-- This DT nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- by IN prep
 |   +-- using VBG pcomp
 |       +-- approach NN dobj
 |       |   +-- based VBN amod
 |       |       +-- type NN dep
 |       |           +-- value NN nn
 |       +-- describe VB xcomp
 |       |   +-- to TO aux
 |       |   +-- state NN dobj
 |       |   |   +-- the DT det
 |       |   |   +-- service NN nn
 |       |   +-- done VBN advcl
 |       |       +-- as IN mark
 |       |       +-- in IN advmod
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 |       +-- or CC cc
 |       +-- using VBG conj
 |           +-- language NN dobj
 |               +-- the DT det
 |               +-- supplied VBD partmod
 |                   +-- mechanisms NNS dobj
 |                       +-- serialization NN nn
 +-- . . punct

13
Input: As we would like to tolerate node crashes and the service should be available during migration we support the active replication of the service .
Parse:
support VBP ROOT
 +-- like VB advcl
 |   +-- As IN mark
 |   +-- we PRP nsubj
 |   +-- would MD aux
 |   +-- tolerate VB xcomp
 |   |   +-- to TO aux
 |   |   +-- crashes NNS dobj
 |   |       +-- node NN nn
 |   +-- and CC cc
 |   +-- available JJ conj
 |       +-- service NN nsubj
 |       |   +-- the DT det
 |       +-- should MD aux
 |       +-- be VB cop
 |       +-- during IN prep
 |           +-- migration NN pobj
 +-- we PRP nsubj
 +-- replication NN dobj
 |   +-- the DT det
 |   +-- active JJ amod
 |   +-- of IN prep
 |       +-- service NN pobj
 |           +-- the DT det
 +-- . . punct

14
Input: This is achieved by generating special client side stubs that communicate with one of the replicas .
Parse:
achieved VBN ROOT
 +-- This DT nsubjpass
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- generating VBG pcomp
 |       +-- stubs NNS dobj
 |           +-- special JJ amod
 |           +-- side NN nn
 |           |   +-- client NN nn
 |           +-- communicate VBP rcmod
 |               +-- that WDT nsubj
 |               +-- with IN prep
 |                   +-- one CD pobj
 |                       +-- of IN prep
 |                           +-- replicas NNS pobj
 |                               +-- the DT det
 +-- . . punct

15
Input: To keep the connection between clients and the replicated object we use time bounded references -LRB- -RRB- that restrict the migration but make the usage of location services -LRB- to cope with outdate references -RRB- obsolete .
Parse:
use VBP ROOT
 +-- keep VB dep
 |   +-- To TO aux
 |   +-- connection NN dobj
 |       +-- the DT det
 |       +-- between IN prep
 |           +-- clients NNS pobj
 |               +-- and CC cc
 |               +-- object NN conj
 |                   +-- the DT det
 |                   +-- replicated VBN amod
 +-- we PRP nsubj
 +-- references NNS dobj
 |   +-- time NN nn
 |   +-- bounded VBN amod
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 |   +-- restrict VBP rcmod
 |       +-- that WDT nsubj
 |       +-- migration NN dobj
 |       |   +-- the DT det
 |       +-- but CC cc
 |       +-- make VB conj
 |           +-- obsolete JJ xcomp
 |               +-- usage NN nsubj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                   |   +-- services NNS pobj
 |                   |       +-- location NN nn
 |                   +-- cope VB dep
 |                       +-- -LRB- -LRB- punct
 |                       +-- to TO aux
 |                       +-- with IN prep
 |                       |   +-- references NNS pobj
 |                       |       +-- outdate JJ amod
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

16
Input: The replicas are synchronized via a group communication framework .
Parse:
synchronized VBN ROOT
 +-- replicas NNS nsubjpass
 |   +-- The DT det
 +-- are VBP auxpass
 +-- via IN prep
 |   +-- framework NN pobj
 |       +-- a DT det
 |       +-- communication NN nn
 |           +-- group NN nn
 +-- . . punct

17
Input: The IDL extension consists of additional modifiers that affect code generation for client and server side .
Parse:
consists VBZ ROOT
 +-- extension NN nsubj
 |   +-- The DT det
 |   +-- IDL NNP nn
 +-- of IN prep
 |   +-- modifiers NNS pobj
 |       +-- additional JJ amod
 |       +-- affect VBP rcmod
 |           +-- that WDT nsubj
 |           +-- generation NN dobj
 |           |   +-- code NN nn
 |           +-- for IN prep
 |               +-- side NN pobj
 |                   +-- client NN nn
 |                       +-- and CC cc
 |                       +-- server NN conj
 +-- . . punct

18
Input: These are retain to mark non modifying operations which allows faster responses and load balancing of those requests .
Parse:
retain JJ ROOT
 +-- These DT nsubj
 +-- are VBP cop
 +-- mark VB xcomp
 |   +-- to TO aux
 |   +-- operations NNS dobj
 |       +-- modifying VBG nn
 |       |   +-- non FW nn
 |       +-- allows VBZ rcmod
 |           +-- which WDT nsubj
 |           +-- responses NNS dobj
 |               +-- faster JJR amod
 |               +-- and CC cc
 |               +-- balancing VBG conj
 |               |   +-- load NN nn
 |               +-- of IN prep
 |                   +-- requests NNS pobj
 |                       +-- those DT det
 +-- . . punct

19
Input: Furthermore one can mark methods as local which indicates that they can be locally processed .
Parse:
mark VB ROOT
 +-- Furthermore RB advmod
 +-- one CD nsubj
 +-- can MD aux
 +-- methods NNS dobj
 +-- as IN prep
 |   +-- local JJ pobj
 +-- indicates VBZ dep
 |   +-- which WDT nsubj
 |   +-- processed VBN ccomp
 |       +-- that IN mark
 |       +-- they PRP nsubjpass
 |       +-- can MD aux
 |       +-- be VB auxpass
 |       +-- locally RB advmod
 +-- . . punct

20
Input: In this case the IDLcompiler creates placeholder for local execution .
Parse:
creates VBZ ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- this DT det
 +-- IDLcompiler NN nsubj
 |   +-- the DT det
 +-- placeholder JJR dobj
 +-- for IN prep
 |   +-- execution NN pobj
 |       +-- local JJ amod
 +-- . . punct

21
Input: Apart form methods that are usual static this is useful to implement client side contribution and interaction .
Parse:
form VB ROOT
 +-- Apart JJ aux
 +-- methods NNS dobj
 |   +-- static NN rcmod
 |       +-- that WDT nsubj
 |       +-- are VBP cop
 |       +-- usual JJ amod
 |       +-- useful JJ rcmod
 |           +-- this DT nsubj
 |           +-- is VBZ cop
 |           +-- implement VB xcomp
 |               +-- to TO aux
 |               +-- contribution NN dobj
 |                   +-- side NN nn
 |                   |   +-- client NN nn
 |                   +-- and CC cc
 |                   +-- interaction NN conj
 +-- . . punct

22
Input: For example if a client stub offers a method which results in a file transfer it is possible to integrate a custom protocol that forwards a modified request to the replicated object which returns not the file as in the common case but URLs that point to clients that previously requested the file .
Parse:
possible JJ ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- offers VBZ advcl
 |   +-- if IN mark
 |   +-- stub NN nsubj
 |   |   +-- a DT det
 |   |   +-- client NN nn
 |   +-- method NN dobj
 |       +-- a DT det
 |       +-- results VBZ rcmod
 |           +-- which WDT nsubj
 |           +-- in IN prep
 |               +-- transfer NN pobj
 |                   +-- a DT det
 |                   +-- file NN nn
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- integrate VB xcomp
 |   +-- to TO aux
 |   +-- protocol NN dobj
 |       +-- a DT det
 |       +-- custom NN nn
 |       +-- forwards VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- request NN dobj
 |               +-- a DT det
 |               +-- modified VBN amod
 |               +-- to IN prep
 |                   +-- object NN pobj
 |                       +-- the DT det
 |                       +-- replicated VBN amod
 |                       +-- returns VBZ rcmod
 |                           +-- which WDT nsubj
 |                           +-- file NN dobj
 |                           |   +-- not RB neg
 |                           |   +-- the DT det
 |                           |   +-- as IN prep
 |                           |       +-- in IN pcomp
 |                           |           +-- case NN pobj
 |                           |               +-- the DT det
 |                           |               +-- common JJ amod
 |                           +-- but CC cc
 |                           +-- URLs VB conj
 |                               +-- point VBP dobj
 |                               |   +-- that DT det
 |                               +-- to IN prep
 |                                   +-- clients NNS pobj
 |                                       +-- requested VBD rcmod
 |                                           +-- that WDT nsubj
 |                                           +-- previously RB advmod
 |                                           +-- file NN dobj
 |                                               +-- the DT det
 +-- . . punct

23
Input: Now the clientstub fetches the data from the offered location and responds as if it was supplied by the server object .
Parse:
fetches VBZ ROOT
 +-- Now RB advmod
 +-- clientstub NN nsubj
 |   +-- the DT det
 +-- data NNS dobj
 |   +-- the DT det
 |   +-- from IN prep
 |       +-- location NN pobj
 |           +-- the DT det
 |           +-- offered VBN amod
 +-- and CC cc
 +-- responds VBZ conj
 |   +-- supplied VBN advcl
 |       +-- as IN mark
 |       +-- if IN mark
 |       +-- it PRP nsubjpass
 |       +-- was VBD auxpass
 |       +-- by IN prep
 |           +-- object NN pobj
 |               +-- the DT det
 |               +-- server NN nn
 +-- . . punct

24
Input: This peer to peer based behavior as known from Napster is transparent to the client and can be switched on and off depending on environment conditions like load and community as needed .
Parse:
transparent JJ ROOT
 +-- peer NN nsubj
 |   +-- This DT det
 |   +-- peer VB infmod
 |       +-- to TO aux
 |       +-- behavior NN dobj
 |       |   +-- based VBN amod
 |       +-- known VBN advcl
 |           +-- as IN mark
 |           +-- from IN prep
 |               +-- Napster NNP pobj
 +-- is VBZ cop
 +-- to IN prep
 |   +-- client NN pobj
 |       +-- the DT det
 +-- and CC cc
 +-- switched VBN conj
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- on RP advmod
 |   |   +-- and CC cc
 |   |   +-- off RP conj
 |   +-- depending VBG prep
 |   |   +-- on IN pcomp
 |   |       +-- conditions NNS pobj
 |   |           +-- environment NN nn
 |   |           +-- like IN prep
 |   |               +-- load NN pobj
 |   |                   +-- and CC cc
 |   |                   +-- community NN conj
 |   +-- needed VBN advcl
 |       +-- as IN mark
 +-- . . punct

25
Input: Finally we provide another modifier to mark administrative operations .
Parse:
provide VBP ROOT
 +-- Finally RB advmod
 +-- we PRP nsubj
 +-- modifier NN dobj
 |   +-- another DT det
 |   +-- mark VB infmod
 |       +-- to TO aux
 |       +-- operations NNS dobj
 |           +-- administrative JJ amod
 +-- . . punct

26
Input: If a method is marked with admin an authentication is necessary .
Parse:
necessary JJ ROOT
 +-- marked VBN advcl
 |   +-- If IN mark
 |   +-- method NN nsubjpass
 |   |   +-- a DT det
 |   +-- is VBZ auxpass
 |   +-- with IN prep
 |       +-- admin NN pobj
 +-- authentication NN nsubj
 |   +-- an DT det
 +-- is VBZ cop
 +-- . . punct

27
Input: The method to authenticate is pluggable and might be by pass phrase , internet address or any other authentication scheme .
Parse:
pluggable JJ ROOT
 +-- method NN nsubj
 |   +-- The DT det
 |   +-- authenticate VB infmod
 |       +-- to TO aux
 +-- is VBZ cop
 +-- and CC cc
 +-- be VB conj
 |   +-- might MD aux
 |   +-- by IN prep
 |       +-- phrase NN pobj
 |           +-- pass NN nn
 |           +-- , , punct
 |           +-- address NN conj
 |           |   +-- internet NN nn
 |           +-- or CC cc
 |           +-- scheme NN conj
 |               +-- any DT det
 |               +-- other JJ amod
 |               +-- authentication NN nn
 +-- . . punct

28
Input: This modifier facilitates the creation of service management methods .
Parse:
facilitates VBZ ROOT
 +-- modifier NN nsubj
 |   +-- This DT det
 +-- creation NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- methods NNS pobj
 |           +-- management NN nn
 |               +-- service NN nn
 +-- . . punct

29
Input: Article .
Parse:
Article NN ROOT
 +-- . . punct
