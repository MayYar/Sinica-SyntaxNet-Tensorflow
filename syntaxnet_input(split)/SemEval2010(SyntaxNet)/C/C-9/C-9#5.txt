
1
Input: DECENTRALIZED RESOURCEMANAGEMENT
Parse:
DECENTRALIZED VBN ROOT
 +-- RESOURCEMANAGEMENT ADD dobj

2
Input: RESOURCEMANAGEMENT Resource management for long term services has other requirements than resource management in common grid computing environments .
Parse:
has VBZ ROOT
 +-- management NN nsubj
 |   +-- RESOURCEMANAGEMENT GW nn
 |   +-- Resource NN nn
 |   +-- for IN prep
 |       +-- services NNS pobj
 |           +-- term NN nn
 |               +-- long JJ amod
 +-- requirements NNS dobj
 |   +-- other JJ amod
 |   +-- than IN prep
 |       +-- management NN pobj
 |           +-- resource NN nn
 |           +-- in IN prep
 |               +-- environments NNS pobj
 |                   +-- grid NN nn
 |                   |   +-- common JJ amod
 |                   +-- computing NN nn
 +-- . . punct

3
Input: For instance even in the context of traditional grid systems it is very difficult to determine or even only estimate the resource requirements of a task -LRB- -RRB- .
Parse:
difficult JJ ROOT
 +-- For IN prep
 |   +-- instance NN pobj
 +-- in IN prep
 |   +-- even RB advmod
 |   +-- context NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- systems NNS pobj
 |               +-- traditional JJ amod
 |               +-- grid NN nn
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- very RB advmod
 +-- determine VB ccomp
 |   +-- to TO aux
 +-- or CC cc
 +-- estimate VBP conj
 |   +-- even RB advmod
 |   +-- only RB advmod
 |   +-- requirements NNS dobj
 |       +-- the DT det
 |       +-- resource NN nn
 |       +-- of IN prep
 |           +-- task NN pobj
 |               +-- a DT det
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- . . punct

4
Input: For long term services this is even harder , and it is likely that the resource demand frequently changes .
Parse:
harder RBR ROOT
 +-- For IN prep
 |   +-- services NNS pobj
 |       +-- term NN nn
 |           +-- long JJ amod
 +-- this DT nsubj
 +-- is VBZ cop
 +-- even RB advmod
 +-- , , punct
 +-- and CC cc
 +-- likely JJ conj
 |   +-- it PRP nsubj
 |   +-- is VBZ cop
 |   +-- changes VBZ ccomp
 |       +-- that IN mark
 |       +-- demand NN nsubj
 |       |   +-- the DT det
 |       |   +-- resource NN nn
 |       +-- frequently RB advmod
 +-- . . punct

5
Input: This turns Article Host FHost D Host E Host A Host C Service Environment Service B Service A Home Env .
Parse:
turns VBZ ROOT
 +-- This DT nsubj
 +-- Env NNP dep
 |   +-- Article NN dep
 |   +-- Host NNP dep
 |   +-- FHost NNP dep
 |   +-- D NNP dep
 |   +-- E NNP dep
 |   +-- Host NN dep
 |   +-- A DT dep
 |   +-- Service NNP dep
 |   |   +-- Service NNP nn
 |   |   |   +-- Environment NNP nn
 |   |   +-- B NNP nn
 |   +-- A DT det
 |   +-- Home NNP nn
 +-- . . punct

6
Input: Home Environment Home Environment Boundary of the fragmented object Service Manager Domain Manager Domain Manager Figure EDAS Scenario the optimal distribution of services over a set of nodes into a difficult problem .
Parse:
Boundary NNP ROOT
 +-- Environment NNP nsubj
 |   +-- Environment NNP nn
 |   |   +-- Home NNP nn
 |   +-- Home NNP nn
 +-- of IN prep
 |   +-- Scenario NN pobj
 |       +-- the DT det
 |       +-- Manager NNP nn
 |       |   +-- fragmented JJ amod
 |       |   +-- Service NN nn
 |       |   |   +-- object NN nn
 |       |   +-- Manager NN nn
 |       |   |   +-- Domain NNP nn
 |       |   |       +-- Manager NNP nn
 |       |   +-- Domain NNP nn
 |       +-- EDAS NNP nn
 |           +-- Figure NN nn
 +-- distribution NN dobj
 |   +-- the DT det
 |   +-- optimal JJ amod
 |   +-- of IN prep
 |   |   +-- services NNS pobj
 |   +-- over IN prep
 |       +-- set NN pobj
 |           +-- a DT det
 |           +-- of IN prep
 |           |   +-- nodes NNS pobj
 |           +-- into IN prep
 |               +-- problem NN pobj
 |                   +-- a DT det
 |                   +-- difficult JJ amod
 +-- . . punct

7
Input: In general the migration of services is a prerequisite of EDAS as it offers a solution if the initial distribution decision was wrong -LRB- e.g .
Parse:
prerequisite NN ROOT
 +-- In IN prep
 |   +-- general JJ pobj
 +-- migration NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- services NNS pobj
 +-- is VBZ cop
 +-- a DT det
 +-- of IN prep
 |   +-- EDAS NNP pobj
 +-- offers VBZ advcl
 |   +-- as IN mark
 |   +-- it PRP nsubj
 |   +-- solution NN dobj
 |   |   +-- a DT det
 |   +-- wrong JJ advcl
 |       +-- if IN mark
 |       +-- decision NN nsubj
 |       |   +-- the DT det
 |       |   +-- initial JJ amod
 |       |   +-- distribution NN nn
 |       +-- was VBD cop
 |       +-- -LRB- -LRB- punct
 |       +-- e.g UH discourse
 +-- . . punct

8
Input: initial start of previously unknown service -RRB- or the demand of services has changed substantially .
Parse:
changed VBN ROOT
 +-- start NN nsubj
 |   +-- initial JJ amod
 |   +-- of IN prep
 |   |   +-- service NN pobj
 |   |       +-- unknown JJ amod
 |   |           +-- previously RB advmod
 |   +-- -RRB- -RRB- punct
 |   +-- or CC cc
 |   +-- demand NN conj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- services NNS pobj
 +-- has VBZ aux
 +-- substantially RB advmod
 +-- . . punct

9
Input: But migration is costly , since the whole state of a service possibly including program code has to be transfered .
Parse:
costly JJ ROOT
 +-- But CC cc
 +-- migration NN nsubj
 +-- is VBZ cop
 +-- , , punct
 +-- has VBZ advcl
 |   +-- since IN mark
 |   +-- state NN nsubj
 |   |   +-- the DT det
 |   |   +-- whole JJ amod
 |   |   +-- of IN prep
 |   |       +-- service NN pobj
 |   |           +-- a DT det
 |   |           +-- including VBG prep
 |   |               +-- possibly RB advmod
 |   |               +-- code NN pobj
 |   |                   +-- program NN nn
 |   +-- transfered VBN xcomp
 |       +-- to TO aux
 |       +-- be VB auxpass
 +-- . . punct

10
Input: If the service is not replicated it will be unavailable during migration .
Parse:
unavailable JJ ROOT
 +-- replicated VBN advcl
 |   +-- If IN mark
 |   +-- service NN nsubjpass
 |   |   +-- the DT det
 |   +-- is VBZ auxpass
 |   +-- not RB neg
 +-- it PRP nsubj
 +-- will MD aux
 +-- be VB cop
 +-- during IN prep
 |   +-- migration NN pobj
 +-- . . punct

11
Input: Taking this into account a resource management should place services and adaptively rededicate resources between services and nodes as needed to prevent migration .
Parse:
place VB ROOT
 +-- Taking VBG dep
 |   +-- this DT dobj
 |   +-- into IN prep
 |       +-- account NN pobj
 +-- management NN nsubj
 |   +-- a DT det
 |   +-- resource NN nn
 +-- should MD aux
 +-- services NNS dobj
 |   +-- and CC cc
 |   +-- adaptively RB advmod
 |   +-- resources NNS conj
 |   |   +-- rededicate VBP nn
 |   +-- between IN prep
 |       +-- services NNS pobj
 |           +-- and CC cc
 |           +-- nodes NNS conj
 +-- needed VBN advcl
 |   +-- as IN mark
 |   +-- prevent VB xcomp
 |       +-- to TO aux
 |       +-- migration NN dobj
 +-- . . punct

12
Input: As EDAS aims at providing a grid like infrastructure for a large set of nodes that can join and leave the system all resource management tasks have to be decentralized to be scalable and should not require global knowledge .
Parse:
aims VBZ ROOT
 +-- As IN mark
 +-- EDAS NNP nsubj
 +-- at IN prep
 |   +-- providing VBG pcomp
 |       +-- grid NN dobj
 |       |   +-- a DT det
 |       |   +-- like IN prep
 |       |       +-- infrastructure NN pobj
 |       +-- for IN prep
 |           +-- set NN pobj
 |               +-- a DT det
 |               +-- large JJ amod
 |               +-- of IN prep
 |               |   +-- nodes NNS pobj
 |               +-- join VB rcmod
 |                   +-- that WDT nsubj
 |                   +-- can MD aux
 |                   +-- and CC cc
 |                   +-- leave VB conj
 |                   +-- system NN dobj
 |                       +-- the DT det
 |                       +-- have VBP rcmod
 |                           +-- tasks NNS nsubj
 |                           |   +-- all DT det
 |                           |   +-- management NN nn
 |                           |       +-- resource VBP nn
 |                           +-- decentralized VBN xcomp
 |                           |   +-- to TO aux
 |                           |   +-- be VB auxpass
 |                           |   +-- scalable JJ xcomp
 |                           |       +-- to TO aux
 |                           |       +-- be VB cop
 |                           +-- and CC cc
 |                           +-- require VB conj
 |                               +-- should MD aux
 |                               +-- not RB neg
 |                               +-- knowledge NN dobj
 |                                   +-- global JJ amod
 +-- . . punct

13
Input: The resource management can be structured into the following different tasks ? ? Adding and changing the assigned resources of a service environment ? ? Automatic placement of service at startup time and during migration due to overload ? ? Keeping all kind of resource limits , especially the limits of service environments ? ? Compensate leaving and crashed nodes In the next sections we will describe what kind of resource limits there are and how to do resource management based on these basic conditions .
Parse:
structured VBN ROOT
 +-- management NN nsubjpass
 |   +-- The DT det
 |   +-- resource NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- into IN prep
 |   +-- tasks NNS pobj
 |       +-- the DT det
 |       +-- following VBG amod
 |       +-- different JJ amod
 +-- ? . punct
 +-- Adding VBG xcomp
 |   +-- and CC cc
 |   +-- changing VBG conj
 |   +-- resources NNS dobj
 |   |   +-- the DT det
 |   |   +-- assigned VBN amod
 |   |   +-- of IN prep
 |   |       +-- environment NN pobj
 |   |           +-- a DT det
 |   |           +-- service NN nn
 |   +-- ? . punct
 |   +-- placement NN dobj
 |   |   +-- Automatic JJ amod
 |   |   +-- of IN prep
 |   |   |   +-- service NN pobj
 |   |   +-- at IN prep
 |   |       +-- time NN pobj
 |   |       |   +-- startup NN nn
 |   |       +-- and CC cc
 |   |       +-- during IN conj
 |   |           +-- migration NN pobj
 |   +-- to IN prep
 |   |   +-- due JJ mwe
 |   |   +-- overload NN pobj
 |   +-- ? , punct
 |   +-- Keeping VBG dep
 |   |   +-- kind NN dobj
 |   |       +-- all DT det
 |   |       +-- of IN prep
 |   |       |   +-- limits NNS pobj
 |   |       |       +-- resource NN nn
 |   |       +-- , , punct
 |   |       +-- limits NNS appos
 |   |           +-- especially RB advmod
 |   |           +-- the DT det
 |   |           +-- of IN prep
 |   |               +-- environments NNS pobj
 |   |                   +-- service NN nn
 |   +-- leaving VBG partmod
 |       +-- Compensate VB nsubj
 |       +-- and CC cc
 |       +-- crashed VBD conj
 |       +-- nodes NNS dobj
 |       +-- In IN prep
 |       |   +-- sections NNS pobj
 |       |       +-- the DT det
 |       |       +-- next JJ amod
 |       +-- describe VB ccomp
 |           +-- we PRP nsubj
 |           +-- will MD aux
 |           +-- are VBP dep
 |               +-- kind NN dobj
 |               |   +-- what WDT det
 |               |   +-- of IN prep
 |               |       +-- limits NNS pobj
 |               |           +-- resource NN nn
 |               +-- there EX expl
 |               +-- and CC cc
 |               +-- do VB conj
 |                   +-- how WRB advmod
 |                   +-- to TO aux
 |                   +-- management NN dobj
 |                       +-- resource VB nn
 |                       +-- based VBN partmod
 |                           +-- on IN prep
 |                               +-- conditions NNS pobj
 |                                   +-- these DT det
 |                                   +-- basic JJ amod
 +-- . . punct

14
Input: . Resource Limits Our approach manages resources on two stages , the node level and the service environment level .
Parse:
. . ROOT
 +-- Limits NNPS dep
 |   +-- Resource NN nn
 |   +-- manages VBZ rcmod
 |       +-- approach NN nsubj
 |       |   +-- Our PRP$ poss
 |       +-- resources NNS dobj
 |       +-- on IN prep
 |           +-- stages NNS pobj
 |               +-- two CD num
 |               +-- , , punct
 |               +-- level NN appos
 |                   +-- the DT det
 |                   +-- node NN nn
 |                   +-- and CC cc
 |                   +-- level NN conj
 |                       +-- the DT det
 |                       +-- environment NN nn
 |                           +-- service NN nn
 +-- . . punct

15
Input: At the node level we monitor usage of all kind of physical resources like disk space , memory , CPU and network bandwidth but also logical ones like open files , sockets and threads .
Parse:
monitor VBP ROOT
 +-- At IN prep
 |   +-- level NN pobj
 |       +-- the DT det
 |       +-- node NN nn
 +-- we PRP nsubj
 +-- usage NN dobj
 |   +-- of IN prep
 |       +-- kind NN pobj
 |           +-- all DT det
 |           +-- of IN prep
 |               +-- resources NNS pobj
 |                   +-- physical JJ amod
 |                   +-- like IN prep
 |                   |   +-- space NN pobj
 |                   |       +-- disk NN nn
 |                   |       +-- , , punct
 |                   |       +-- memory NN conj
 |                   |       +-- CPU NN conj
 |                   |       +-- and CC cc
 |                   |       +-- bandwidth NN conj
 |                   |           +-- network NN nn
 |                   +-- also RB cc
 |                   |   +-- but CC cc
 |                   +-- ones NNS conj
 |                       +-- logical JJ amod
 |                       +-- like IN prep
 |                           +-- files NNS pobj
 |                               +-- open JJ amod
 |                               +-- , , punct
 |                               +-- sockets NNS conj
 |                               +-- and CC cc
 |                               +-- threads NNS conj
 +-- . . punct

16
Input: The entity of monitoring is a service or a service component in case of a decentralized adaptive service .
Parse:
service NN ROOT
 +-- entity NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- monitoring NN pobj
 +-- is VBZ cop
 +-- a DT det
 +-- or CC cc
 +-- component NN conj
 |   +-- a DT det
 |   +-- service NN nn
 +-- in IN prep
 |   +-- case NN pobj
 |       +-- of IN prep
 |           +-- service NN pobj
 |               +-- a DT det
 |               +-- decentralized JJ amod
 |               +-- adaptive JJ amod
 +-- . . punct

17
Input: Every service has so called local limits that restrict the resource usage in context of the current node .
Parse:
called VBN ROOT
 +-- service NN nsubj
 |   +-- Every DT det
 +-- has VBZ aux
 +-- so RB advmod
 +-- limits NNS dobj
 |   +-- local JJ amod
 |   +-- restrict VBP rcmod
 |       +-- that WDT nsubj
 |       +-- usage NN dobj
 |       |   +-- the DT det
 |       |   +-- resource NN nn
 |       +-- in IN prep
 |           +-- context NN pobj
 |               +-- of IN prep
 |                   +-- node NN pobj
 |                       +-- the DT det
 |                       +-- current JJ amod
 +-- . . punct

18
Input: If a service runs the risk of exceeding such a local limit the home environment tries to extend the limits or notifies the responsible service environment if rededication is not possible .
Parse:
tries VBZ ROOT
 +-- runs VBZ advcl
 |   +-- If IN mark
 |   +-- service NN nsubj
 |       +-- a DT det
 +-- risk NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- exceeding VBG pcomp
 |           +-- limit NN iobj
 |           |   +-- such PDT predet
 |           |   +-- a DT det
 |           |   +-- local JJ amod
 |           +-- environment NN dobj
 |               +-- the DT det
 |               +-- home NN nn
 +-- extend VB xcomp
 |   +-- to TO aux
 |   +-- limits NNS iobj
 |   |   +-- the DT det
 |   |   +-- or CC cc
 |   |   +-- notifies NNS conj
 |   +-- environment NN dobj
 |   |   +-- the DT det
 |   |   +-- responsible JJ amod
 |   |   +-- service NN nn
 |   +-- possible JJ advcl
 |       +-- if IN mark
 |       +-- rededication NN nsubj
 |       +-- is VBZ cop
 |       +-- not RB neg
 +-- . . punct

19
Input: Reaching a local limit can be caused by two reasons an overloaded node or an overloaded service environment .
Parse:
caused VBN ROOT
 +-- limit NN nsubjpass
 |   +-- Reaching VBG predet
 |   +-- a DT det
 |   +-- local JJ amod
 +-- can MD aux
 +-- be VB auxpass
 +-- by IN prep
 |   +-- reasons NNS pobj
 |       +-- two CD num
 |       +-- node NN dep
 |           +-- an DT det
 |           +-- overloaded VBN amod
 |           +-- or CC cc
 |           +-- environment NN conj
 |               +-- an DT det
 |               +-- overloaded VBN amod
 |               +-- service NN nn
 +-- . . punct

20
Input: In the first case service migration might help , in the second case migration to another administrative domain might be an option , or simply reducing resource demand by stopping the service .
Parse:
help VB ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- first JJ amod
 +-- migration NN nsubj
 |   +-- service NN nn
 +-- might MD aux
 +-- , , punct
 +-- option NN ccomp
 |   +-- in IN prep
 |   |   +-- case NN pobj
 |   |       +-- the DT det
 |   |       +-- second JJ amod
 |   +-- migration NN nsubj
 |   |   +-- to IN prep
 |   |       +-- domain NN pobj
 |   |           +-- another DT det
 |   |           +-- administrative JJ amod
 |   +-- might MD aux
 |   +-- be VB cop
 |   +-- an DT det
 |   +-- , , punct
 |   +-- or CC cc
 |   +-- reducing VBG conj
 |       +-- simply RB advmod
 |       +-- demand NN dobj
 |       |   +-- resource NN nn
 |       +-- by IN prep
 |           +-- stopping VBG pcomp
 |               +-- service NN dobj
 |                   +-- the DT det
 +-- . . punct

21
Input: Of course there could be more than one service of the same service environment at a node .
Parse:
service NN ROOT
 +-- course RB advmod
 |   +-- Of RB advmod
 +-- there EX expl
 +-- could MD aux
 +-- be VB cop
 +-- one CD num
 |   +-- than IN quantmod
 |       +-- more JJR mwe
 +-- of IN prep
 |   +-- environment NN pobj
 |       +-- the DT det
 |       +-- same JJ amod
 |       +-- service NN nn
 |       +-- at IN prep
 |           +-- node NN pobj
 |               +-- a DT det
 +-- . . punct

22
Input: Therefore the assigned resources of a service environment at a node can be easily computed by summing up all local limits of its services .
Parse:
computed VBN ROOT
 +-- Therefore RB advmod
 +-- resources NNS nsubjpass
 |   +-- the DT det
 |   +-- assigned VBN amod
 |   +-- of IN prep
 |       +-- environment NN pobj
 |           +-- a DT det
 |           +-- service NN nn
 |           +-- at IN prep
 |               +-- node NN pobj
 |                   +-- a DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- easily RB advmod
 +-- by IN prep
 |   +-- summing VBG pcomp
 |       +-- up RP prt
 |       +-- limits NNS dobj
 |           +-- all DT det
 |           +-- local JJ amod
 |           +-- of IN prep
 |               +-- services NNS pobj
 |                   +-- its PRP$ poss
 +-- . . punct

23
Input: Furthermore each node has node limits that restrict the overall usage of certain resources .
Parse:
has VBZ ROOT
 +-- Furthermore RB advmod
 +-- node NN nsubj
 |   +-- each DT det
 +-- limits NNS dobj
 |   +-- node NN nn
 |   +-- restrict VBP rcmod
 |       +-- that WDT nsubj
 |       +-- usage NN dobj
 |           +-- the DT det
 |           +-- overall JJ amod
 |           +-- of IN prep
 |               +-- resources NNS pobj
 |                   +-- certain JJ amod
 +-- . . punct

24
Input: A node limit must never exceed the physical resource -LRB- e.g .
Parse:
exceed VB ROOT
 +-- limit NN nsubj
 |   +-- A DT det
 |   +-- node NN nn
 +-- must MD aux
 +-- never RB neg
 +-- resource NN dobj
 |   +-- the DT det
 |   +-- physical JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- e.g UH dep
 +-- . . punct

25
Input: disk space -RRB- of a node and might be much smaller , e.g. , for supporting local users .
Parse:
smaller JJR ROOT
 +-- space NN nsubj
 |   +-- disk NN nn
 |   +-- -RRB- -RRB- punct
 |   +-- of IN prep
 |   |   +-- node NN pobj
 |   |       +-- a DT det
 |   +-- and CC cc
 +-- might MD aux
 +-- be VB cop
 +-- much RB advmod
 +-- , , punct
 +-- e.g. NNP dep
 |   +-- , , punct
 |   +-- for IN prep
 |       +-- supporting VBG pcomp
 |           +-- users NNS dobj
 |               +-- local JJ amod
 +-- . . punct

26
Input: The sum of all local limits at a node must never exceed the node limit of a resource .
Parse:
exceed VB ROOT
 +-- sum NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- limits NNS pobj
 |           +-- all DT det
 |           +-- local JJ amod
 |           +-- at IN prep
 |               +-- node NN pobj
 |                   +-- a DT det
 +-- must MD aux
 +-- never RB neg
 +-- limit NN dobj
 |   +-- the DT det
 |   +-- node NN nn
 |   +-- of IN prep
 |       +-- resource NN pobj
 |           +-- a DT det
 +-- . . punct

27
Input: Therefore observing and controlling the local limits will keep the node limits and preventing overload .
Parse:
keep VB ROOT
 +-- observing VBG csubj
 |   +-- Therefore RB advmod
 |   +-- and CC cc
 |   +-- controlling VBG conj
 |   +-- limits NNS dobj
 |       +-- the DT det
 |       +-- local JJ amod
 +-- will MD aux
 +-- limits NNS dobj
 |   +-- the DT det
 |   +-- node NN nn
 +-- and CC cc
 +-- preventing VBG conj
 |   +-- overload NN dobj
 +-- . . punct
