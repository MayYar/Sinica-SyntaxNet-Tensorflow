
1
Input: Snoeren et al .
Parse:
al NNP ROOT
 +-- Snoeren NNP nn
 +-- et CC nn
 +-- . . punct

2
Input: -LRB- 36 -RRB- use an overlay mesh to achieve reliable and timely delivery of mission critical data .
Parse:
use VB ROOT
 +-- -LRB- -LRB- punct
 +-- 36 CD nsubj
 +-- -RRB- -RRB- punct
 +-- mesh NN dobj
 |   +-- an DT det
 |   +-- overlay JJ amod
 +-- achieve VB xcomp
 |   +-- to TO aux
 |   +-- data NNS dobj
 |       +-- delivery NN nn
 |       |   +-- reliable JJ amod
 |       |   |   +-- and CC cc
 |       |   |   +-- timely JJ conj
 |       |   +-- of IN prep
 |       |       +-- mission NN pobj
 |       +-- critical JJ amod
 +-- . . punct

3
Input: In this system , every node chooses n parents from which to receive duplicate packet streams .
Parse:
chooses VBZ ROOT
 +-- In IN prep
 |   +-- system NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- node NN nsubj
 |   +-- every DT det
 +-- receive VB xcomp
 |   +-- parents NNS nsubj
 |   |   +-- n JJ amod
 |   |   +-- from IN prep
 |   |       +-- which WDT pobj
 |   +-- to TO aux
 |   +-- streams NNS dobj
 |       +-- duplicate JJ amod
 |       +-- packet NN nn
 +-- . . punct

4
Input: Since its foremost emphasis is reliability , the system does not attempt to improve the bandwidth delivered to the overlay participants by sending disjoint data at each level .
Parse:
attempt VB ROOT
 +-- reliability NN advcl
 |   +-- Since IN mark
 |   +-- emphasis NN nsubj
 |   |   +-- its PRP$ poss
 |   |   +-- foremost JJ amod
 |   +-- is VBZ cop
 +-- , , punct
 +-- system NN nsubj
 |   +-- the DT det
 +-- does VBZ aux
 +-- not RB neg
 +-- improve VB xcomp
 |   +-- to TO aux
 |   +-- bandwidth NN dobj
 |   |   +-- the DT det
 |   |   +-- delivered VBN partmod
 |   |       +-- to IN prep
 |   |           +-- participants NNS pobj
 |   |               +-- the DT det
 |   |               +-- overlay NN nn
 |   +-- by IN prep
 |       +-- sending VBG pcomp
 |           +-- data NNS dobj
 |           |   +-- disjoint NN nn
 |           +-- at IN prep
 |               +-- level NN pobj
 |                   +-- each DT det
 +-- . . punct

5
Input: Further , during recovery from parent failure , it limits an overlay router '' s choice of parents to nodes with a level number that is less than its own level number .
Parse:
limits VBZ ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- during IN prep
 |   +-- recovery NN pobj
 |       +-- from IN prep
 |           +-- failure NN pobj
 |               +-- parent JJ amod
 +-- it PRP nsubj
 +-- choice NN dobj
 |   +-- router NN poss
 |   |   +-- an DT det
 |   |   +-- overlay NN nn
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- of IN prep
 |       +-- parents NNS pobj
 +-- to IN prep
 |   +-- nodes NNS pobj
 +-- with IN prep
 |   +-- number NN pobj
 |       +-- a DT det
 |       +-- level NN nn
 |       +-- less JJR rcmod
 |           +-- that WDT nsubj
 |           +-- is VBZ cop
 |           +-- than IN prep
 |               +-- number NN pobj
 |                   +-- its PRP$ poss
 |                   +-- own JJ amod
 |                   +-- level NN nn
 +-- . . punct

6
Input: The power of perpendicular downloads is perhaps best illustrated by Kazaa -LRB- 22 -RRB- , the popular peer to peer file swapping network .
Parse:
illustrated VBN ROOT
 +-- power NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- downloads NNS pobj
 |           +-- perpendicular JJ amod
 +-- is VBZ auxpass
 +-- perhaps RB advmod
 +-- best RBS advmod
 +-- by IN prep
 |   +-- Kazaa NNP pobj
 |       +-- -LRB- -LRB- punct
 |       +-- 22 CD dep
 |       +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- peer NN appos
 |           +-- the DT det
 |           +-- popular JJ amod
 |           +-- peer VB infmod
 |               +-- to TO aux
 |               +-- file NN dobj
 |                   +-- swapping VBG partmod
 |                       +-- network NN dobj
 +-- . . punct

7
Input: Kazaa nodes are organized into a scalable , hierarchical structure .
Parse:
organized VBN ROOT
 +-- nodes NNS nsubjpass
 |   +-- Kazaa NNP nn
 +-- are VBP auxpass
 +-- into IN prep
 |   +-- structure NN pobj
 |       +-- a DT det
 |       +-- scalable JJ amod
 |       +-- , , punct
 |       +-- hierarchical JJ amod
 +-- . . punct

8
Input: Individual users search for desired content in the structure and proceed to simultaneously download potentially disjoint pieces from nodes that already have it .
Parse:
search NN ROOT
 +-- users NNS nsubj
 |   +-- Individual JJ amod
 +-- for IN prep
 |   +-- content NN pobj
 |       +-- desired VBN amod
 +-- in IN prep
 |   +-- structure NN pobj
 |       +-- the DT det
 +-- and CC cc
 +-- proceed VB conj
 |   +-- download NN xcomp
 |       +-- to TO aux
 |       +-- simultaneously RB advmod
 |       +-- pieces NNS dobj
 |           +-- potentially RB advmod
 |           +-- disjoint NN nn
 |           +-- from IN prep
 |           |   +-- nodes NNS pobj
 |           +-- have VBP rcmod
 |               +-- that WDT nsubj
 |               +-- already RB advmod
 |               +-- it PRP dobj
 +-- . . punct

9
Input: Since Kazaa does not address the multicast communication model , a large fraction of users downloading the same file would consume more bandwidth than nodes organized into the Bullet overlay structure .
Parse:
consume VB ROOT
 +-- address VB advcl
 |   +-- Since IN mark
 |   +-- Kazaa NNP nsubj
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- model NN dobj
 |       +-- the DT det
 |       +-- multicast JJ amod
 |       +-- communication NN nn
 +-- , , punct
 +-- fraction NN nsubj
 |   +-- a DT det
 |   +-- large JJ amod
 |   +-- of IN prep
 |       +-- users NNS pobj
 |           +-- downloading VBG partmod
 |               +-- file NN dobj
 |                   +-- the DT det
 |                   +-- same JJ amod
 +-- would MD aux
 +-- bandwidth NN dobj
 |   +-- more JJR amod
 |   +-- than IN prep
 |       +-- nodes NNS pobj
 |           +-- organized VBN partmod
 |               +-- into IN prep
 |                   +-- structure NN pobj
 |                       +-- the DT det
 |                       +-- overlay NN nn
 |                           +-- Bullet NNP nn
 +-- . . punct

10
Input: Kazaa does not use erasure coding ; therefore it may take considerable time to locate the last few bytes .
Parse:
use VB ROOT
 +-- Kazaa NNP nsubj
 +-- does VBZ aux
 +-- not RB neg
 +-- coding VBG dobj
 |   +-- erasure NN nn
 +-- ; : punct
 +-- take VB parataxis
 |   +-- therefore RB advmod
 |   +-- it PRP nsubj
 |   +-- may MD aux
 |   +-- time NN dobj
 |   |   +-- considerable JJ amod
 |   +-- locate VB xcomp
 |       +-- to TO aux
 |       +-- bytes NNS dobj
 |           +-- the DT det
 |           +-- last JJ amod
 |           +-- few JJ amod
 +-- . . punct

11
Input: 294 BitTorrent -LRB- 3 -RRB- is another example of a file distribution system currently deployed on the Internet .
Parse:
example NN ROOT
 +-- BitTorrent NNP nsubj
 |   +-- 294 CD num
 |   +-- 3 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- another DT det
 +-- of IN prep
 |   +-- system NN pobj
 |       +-- a DT det
 |       +-- distribution NN nn
 |       |   +-- file NN nn
 |       +-- deployed VBN partmod
 |           +-- currently RB advmod
 |           +-- on IN prep
 |               +-- Internet NN pobj
 |                   +-- the DT det
 +-- . . punct

12
Input: It utilizes trackers that direct downloaders to random subsets of machines that already have portions of the file .
Parse:
utilizes VBZ ROOT
 +-- It PRP nsubj
 +-- trackers NNS dobj
 |   +-- direct JJ rcmod
 |       +-- that WDT nsubj
 |       +-- downloaders NNS dobj
 |       +-- to IN prep
 |           +-- subsets NNS pobj
 |               +-- random JJ amod
 |               +-- of IN prep
 |                   +-- machines NNS pobj
 |                       +-- have VBP rcmod
 |                           +-- that WDT nsubj
 |                           +-- already RB advmod
 |                           +-- portions NNS dobj
 |                               +-- of IN prep
 |                                   +-- file NN pobj
 |                                       +-- the DT det
 +-- . . punct

13
Input: The tracker poses a scalability limit , as it continuously updates the systemwide distribution of the file .
Parse:
poses VBZ ROOT
 +-- tracker NN nsubj
 |   +-- The DT det
 +-- limit NN dobj
 |   +-- a DT det
 |   +-- scalability NN nn
 +-- , , punct
 +-- updates VBZ advcl
 |   +-- as IN mark
 |   +-- it PRP nsubj
 |   +-- continuously RB advmod
 |   +-- distribution NN dobj
 |       +-- the DT det
 |       +-- systemwide JJ amod
 |       +-- of IN prep
 |           +-- file NN pobj
 |               +-- the DT det
 +-- . . punct

14
Input: Lowering the tracker communication rate could hurt the overall system performance , as information might be out of date .
Parse:
hurt VB ROOT
 +-- Lowering VBG csubj
 |   +-- rate NN dobj
 |       +-- the DT det
 |       +-- tracker NN nn
 |       +-- communication NN nn
 +-- could MD aux
 +-- performance NN dobj
 |   +-- the DT det
 |   +-- overall JJ amod
 |   +-- system NN nn
 +-- , , punct
 +-- be VB advcl
 |   +-- as IN mark
 |   +-- information NN nsubj
 |   +-- might MD aux
 |   +-- out IN prep
 |       +-- of IN pcomp
 |           +-- date NN pobj
 +-- . . punct

15
Input: Further , BitTorrent does not employ any strategy to disseminate data to different regions of the network , potentially making it more difficult to recover data depending on client access patterns .
Parse:
employ VB ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- BitTorrent NNP nsubj
 +-- does VBZ aux
 +-- not RB neg
 +-- strategy NN dobj
 |   +-- any DT det
 |   +-- disseminate VB infmod
 |       +-- to TO aux
 |       +-- data NNS dobj
 |       |   +-- to IN prep
 |       |       +-- regions NNS pobj
 |       |           +-- different JJ amod
 |       |           +-- of IN prep
 |       |               +-- network NN pobj
 |       |                   +-- the DT det
 |       +-- , , punct
 |       +-- making VBG partmod
 |           +-- potentially RB advmod
 |           +-- recover VB xcomp
 |               +-- it PRP nsubj
 |               +-- difficult JJ dep
 |               |   +-- more RBR advmod
 |               +-- to TO aux
 |               +-- data NNS dobj
 |               +-- depending VBG prep
 |                   +-- on IN pcomp
 |                       +-- patterns NNS pobj
 |                           +-- access NN nn
 |                               +-- client NN nn
 +-- . . punct

16
Input: Similar to Bullet , BitTorrent incorporates the notion of choking at each node with the goal of identifying receivers that benefit the most by downloading from that particular source .
Parse:
incorporates VBZ ROOT
 +-- Similar JJ advmod
 |   +-- to IN prep
 |       +-- Bullet NNP pobj
 +-- , , punct
 +-- BitTorrent NNP nsubj
 +-- notion NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- choking VBG pcomp
 |           +-- at IN prep
 |           |   +-- node NN pobj
 |           |       +-- each DT det
 |           +-- with IN prep
 |               +-- goal NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- identifying VBG pcomp
 |                           +-- receivers NNS dobj
 |                               +-- benefit VBP rcmod
 |                                   +-- that WDT nsubj
 |                                   +-- most JJS dobj
 |                                   |   +-- the DT det
 |                                   +-- by IN prep
 |                                       +-- downloading VBG pcomp
 |                                           +-- from IN prep
 |                                               +-- source NN pobj
 |                                                   +-- that DT det
 |                                                   +-- particular JJ amod
 +-- . . punct

17
Input: FastReplica -LRB- 11 -RRB- addresses the problem of reliable and efficient file distribution in content distribution networks -LRB- CDNs -RRB- .
Parse:
addresses VBZ ROOT
 +-- FastReplica NNP nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- 11 CD dep
 |   +-- -RRB- -RRB- punct
 +-- problem NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- distribution NN pobj
 |           +-- reliable JJ amod
 |           |   +-- and CC cc
 |           |   +-- efficient JJ conj
 |           +-- file NN nn
 |           +-- in IN prep
 |               +-- networks NNS pobj
 |                   +-- content JJ amod
 |                   +-- distribution NN nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- CDNs NNP dep
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

18
Input: In the basic algorithm , nodes are organized into groups of fixed size -LRB- n -RRB- , with full group membership information at each node .
Parse:
organized VBN ROOT
 +-- In IN prep
 |   +-- algorithm NN pobj
 |       +-- the DT det
 |       +-- basic JJ amod
 +-- , , punct
 +-- nodes NNS nsubjpass
 +-- are VBP auxpass
 +-- into IN prep
 |   +-- groups NNS pobj
 |       +-- of IN prep
 |           +-- size NN pobj
 |               +-- fixed VBN amod
 |               +-- -LRB- -LRB- punct
 |               +-- n CC dep
 |               +-- -RRB- -RRB- punct
 +-- with IN prep
 |   +-- information NN pobj
 |       +-- full JJ amod
 |       +-- membership NN nn
 |       |   +-- group NN nn
 |       +-- at IN prep
 |           +-- node NN pobj
 |               +-- each DT det
 +-- . . punct

19
Input: To distribute the file , a node splits it into n equal sized portions , sends the portions to other group members , and instructs them to download the missing pieces in parallel from other group members .
Parse:
splits VBZ ROOT
 +-- distribute VB advcl
 |   +-- To TO aux
 |   +-- file NN dobj
 |       +-- the DT det
 +-- , , punct
 +-- node NN nsubj
 |   +-- a DT det
 +-- it PRP dobj
 +-- into IN prep
 |   +-- portions NNS pobj
 |       +-- equal JJ amod
 |       |   +-- n RB advmod
 |       +-- sized JJ amod
 +-- sends VBZ conj
 |   +-- portions NNS dobj
 |   |   +-- the DT det
 |   +-- to IN prep
 |       +-- members NNS pobj
 |           +-- other JJ amod
 |           +-- group NN nn
 +-- and CC cc
 +-- instructs VBZ conj
 |   +-- them PRP dobj
 |   +-- download VB xcomp
 |       +-- to TO aux
 |       +-- pieces NNS dobj
 |       |   +-- the DT det
 |       |   +-- missing VBG amod
 |       |   +-- in IN prep
 |       |       +-- parallel NN pobj
 |       +-- from IN prep
 |           +-- members NNS pobj
 |               +-- other JJ amod
 |               +-- group NN nn
 +-- . . punct

20
Input: Since only a fixed portion of the file is transmitted along each of the overlay links , the impact of congestion is smaller than in the case of tree distribution .
Parse:
smaller JJR ROOT
 +-- transmitted VBN advcl
 |   +-- Since IN mark
 |   +-- portion NN nsubjpass
 |   |   +-- only RB advmod
 |   |   +-- a DT det
 |   |   +-- fixed VBN amod
 |   |   +-- of IN prep
 |   |       +-- file NN pobj
 |   |           +-- the DT det
 |   +-- is VBZ auxpass
 |   +-- along IN prep
 |       +-- each DT pobj
 |           +-- of IN prep
 |               +-- links NNS pobj
 |                   +-- the DT det
 |                   +-- overlay NN nn
 +-- , , punct
 +-- impact NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- congestion NN pobj
 +-- is VBZ cop
 +-- than IN prep
 |   +-- in IN pcomp
 |       +-- case NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- distribution NN pobj
 |                   +-- tree NN nn
 +-- . . punct

21
Input: However , since it treats all paths equally , FastReplica does not take full advantage of highbandwidth overlay links in the system .
Parse:
take VB ROOT
 +-- However RB advmod
 +-- , , punct
 +-- treats VBZ advcl
 |   +-- since IN mark
 |   +-- it PRP nsubj
 |   +-- paths NNS dobj
 |   |   +-- all DT det
 |   +-- equally RB advmod
 +-- FastReplica NNP nsubj
 +-- does VBZ aux
 +-- not RB neg
 +-- advantage NN dobj
 |   +-- full JJ amod
 |   +-- of IN prep
 |       +-- links NNS pobj
 |           +-- highbandwidth JJ amod
 |           +-- overlay NN nn
 |           +-- in IN prep
 |               +-- system NN pobj
 |                   +-- the DT det
 +-- . . punct

22
Input: Since it requires file store and forward logic at each level of the hierarchy necessary for scaling the system , it may not be applicable to high bandwidth streaming .
Parse:
applicable JJ ROOT
 +-- requires VBZ advcl
 |   +-- Since IN mark
 |   +-- it PRP nsubj
 |   +-- store NN dobj
 |   |   +-- file NN nn
 |   |   +-- and CC cc
 |   |   +-- logic NN conj
 |   |       +-- forward JJ amod
 |   +-- at IN prep
 |       +-- level NN pobj
 |           +-- each DT det
 |           +-- of IN prep
 |               +-- hierarchy JJ pobj
 |                   +-- the DT det
 |                   +-- necessary JJ amod
 |                       +-- for IN prep
 |                           +-- scaling VBG pcomp
 |                               +-- system NN dobj
 |                                   +-- the DT det
 +-- , , punct
 +-- it PRP nsubj
 +-- may MD aux
 +-- not RB neg
 +-- be VB cop
 +-- to IN prep
 |   +-- streaming VBG pobj
 |       +-- bandwidth NN nn
 |           +-- high JJ amod
 +-- . . punct

23
Input: There are numerous protocols that aim to add reliability to IP multicast .
Parse:
are VBP ROOT
 +-- There EX expl
 +-- protocols NNS nsubj
 |   +-- numerous JJ amod
 |   +-- aim VBP rcmod
 |       +-- that WDT nsubj
 |       +-- add VB xcomp
 |           +-- to TO aux
 |           +-- reliability NN dobj
 |           +-- to IN prep
 |           |   +-- IP NN pobj
 |           +-- multicast RB advmod
 +-- . . punct

24
Input: In Scalable Reliable Multicast -LRB- 16 -RRB- , nodes multicast retransmission requests for missed packets .
Parse:
requests NNS ROOT
 +-- In IN prep
 |   +-- Multicast NNP pobj
 |       +-- Scalable NNP nn
 |       +-- Reliable NNP nn
 |       +-- 16 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- , , punct
 +-- nodes NNS dep
 +-- multicast JJ amod
 +-- retransmission NN nn
 +-- for IN prep
 |   +-- packets NNS pobj
 |       +-- missed VBN amod
 +-- . . punct

25
Input: Two techniques attempt to improve the scalability of this approach
Parse:
attempt VBP ROOT
 +-- techniques NNS nsubj
 |   +-- Two CD num
 +-- improve VB xcomp
     +-- to TO aux
     +-- scalability NN dobj
         +-- the DT det
         +-- of IN prep
             +-- approach NN pobj
                 +-- this DT det

26
Input: However , it is difficult to find appropriate timer values and local scoping settings -LRB- via the TTL field -RRB- for a wide range of topologies , number of receivers , etc .
Parse:
difficult JJ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- find VB xcomp
 |   +-- to TO aux
 |   +-- values NNS dobj
 |   |   +-- appropriate JJ amod
 |   |   +-- timer NN nn
 |   |   +-- and CC cc
 |   |   +-- settings NNS conj
 |   |   |   +-- local JJ amod
 |   |   |   +-- scoping NN nn
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- via IN prep
 |   |   |   +-- field NN pobj
 |   |   |       +-- the DT det
 |   |   |       +-- TTL JJ amod
 |   |   +-- -RRB- -RRB- punct
 |   +-- for IN prep
 |       +-- range NN pobj
 |           +-- a DT det
 |           +-- wide JJ amod
 |           +-- of IN prep
 |           |   +-- topologies NNS pobj
 |           +-- , , punct
 |           +-- number NN appos
 |           |   +-- of IN prep
 |           |       +-- receivers NNS pobj
 |           +-- etc FW advmod
 +-- . . punct

27
Input: even when adaptive techniques are used .
Parse:
used VBN ROOT
 +-- when WRB advmod
 |   +-- even RB advmod
 +-- techniques NNS nsubjpass
 |   +-- adaptive JJ amod
 +-- are VBP auxpass
 +-- . . punct

28
Input: One recent study -LRB- 2 -RRB- shows that SRM may have significant overhead due to retransmission requests .
Parse:
shows VBZ ROOT
 +-- study NN nsubj
 |   +-- One CD num
 |   +-- recent JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- 2 CD dep
 |   +-- -RRB- -RRB- punct
 +-- have VB ccomp
 |   +-- that IN mark
 |   +-- SRM NNP nsubj
 |   +-- may MD aux
 |   +-- overhead NN dobj
 |   |   +-- significant JJ amod
 |   +-- to IN prep
 |       +-- due IN mwe
 |       +-- requests NNS pobj
 |           +-- retransmission NN nn
 +-- . . punct

29
Input: Bullet is closely related to efforts that use epidemic data propagation techniques to recover from losses in the nonreliable IP multicast tree .
Parse:
related JJ ROOT
 +-- Bullet NN nsubj
 +-- is VBZ cop
 +-- closely RB advmod
 +-- to IN prep
 |   +-- efforts NNS pobj
 |       +-- use VBP rcmod
 |           +-- that WDT nsubj
 |           +-- techniques NNS dobj
 |           |   +-- epidemic NN nn
 |           |   +-- propagation NN nn
 |           |       +-- data NNS nn
 |           +-- recover VB xcomp
 |               +-- to TO aux
 |               +-- from IN prep
 |                   +-- losses NNS pobj
 |                       +-- in IN prep
 |                           +-- tree NN pobj
 |                               +-- the DT det
 |                               +-- IP NN nn
 |                               |   +-- nonreliable JJ amod
 |                               +-- multicast JJ amod
 +-- . . punct

30
Input: In pbcast -LRB- 2 -RRB- , a node has global group membership , and periodically chooses a random subset of peers to send a digest of its received packets .
Parse:
has VBZ ROOT
 +-- In IN prep
 |   +-- pbcast NN pobj
 |       +-- -LRB- -LRB- punct
 |       +-- 2 CD dep
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- node NN nsubj
 |   +-- a DT det
 +-- membership NN dobj
 |   +-- global JJ amod
 |   +-- group NN nn
 +-- and CC cc
 +-- chooses VBZ conj
 |   +-- periodically RB advmod
 |   +-- subset NN dobj
 |   |   +-- a DT det
 |   |   +-- random JJ amod
 |   |   +-- of IN prep
 |   |       +-- peers NNS pobj
 |   +-- send VB xcomp
 |       +-- to TO aux
 |       +-- digest NN dobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- packets NNS pobj
 |                   +-- its PRP$ poss
 |                   +-- received VBN amod
 +-- . . punct

31
Input: A node that receives the digest responds to the sender with the missing packets in a last in , first out fashion .
Parse:
responds VBZ ROOT
 +-- node NN nsubj
 |   +-- A DT det
 |   +-- receives VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- digest JJS dobj
 |           +-- the DT det
 +-- to IN prep
 |   +-- sender NN pobj
 |       +-- the DT det
 +-- with IN prep
 |   +-- packets NNS pobj
 |       +-- the DT det
 |       +-- missing VBG amod
 +-- in IN prep
 |   +-- last JJ pobj
 |       +-- a DT det
 |       +-- in IN advmod
 |       +-- , , punct
 |       +-- out RP prep
 |           +-- first RB advmod
 |           +-- fashion NN pobj
 +-- . . punct

32
Input: Lbpcast -LRB- 14 -RRB- addresses pbcast '' s scalability issues -LRB- associated with global knowledge -RRB- by constructing , in a decentralized fashion , a partial group membership view at each node .
Parse:
Lbpcast UH ROOT
 +-- pbcast NN dep
 |   +-- -LRB- -LRB- punct
 |   +-- 14 CD num
 |   +-- -RRB- -RRB- punct
 |   +-- addresses NNS nn
 |   +-- '' '' punct
 |   +-- s POS punct
 |   +-- issues NNS dep
 |   |   +-- scalability NN nn
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- associated VBN partmod
 |   |   |   +-- with IN prep
 |   |   |       +-- knowledge NN pobj
 |   |   |           +-- global JJ amod
 |   |   +-- -RRB- -RRB- punct
 |   +-- by IN prep
 |       +-- constructing VBG pcomp
 |           +-- , , punct
 |           +-- in IN prep
 |               +-- fashion NN pobj
 |                   +-- a DT det
 |                   +-- decentralized JJ amod
 |                   +-- , , punct
 |                   +-- view NN appos
 |                       +-- a DT det
 |                       +-- partial JJ amod
 |                       +-- membership NN nn
 |                       |   +-- group NN nn
 |                       +-- at IN prep
 |                           +-- node NN pobj
 |                               +-- each DT det
 +-- . . punct

33
Input: The average size of the views is engineered to allow a message to reach all participants with high probability .
Parse:
engineered VBN ROOT
 +-- size NN nsubjpass
 |   +-- The DT det
 |   +-- average JJ amod
 |   +-- of IN prep
 |       +-- views NNS pobj
 |           +-- the DT det
 +-- is VBZ auxpass
 +-- allow VB xcomp
 |   +-- to TO aux
 |   +-- reach VB xcomp
 |       +-- message NN nsubj
 |       |   +-- a DT det
 |       +-- to TO aux
 |       +-- participants NNS dobj
 |       |   +-- all DT det
 |       +-- with IN prep
 |           +-- probability NN pobj
 |               +-- high JJ amod
 +-- . . punct

34
Input: Since lbpcast does not require an underlying tree for data distribution and relies on the push gossiping model , its network overhead can be quite high .
Parse:
high JJ ROOT
 +-- require VB advcl
 |   +-- Since IN mark
 |   +-- lbpcast NNP nsubj
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- tree NN dobj
 |   |   +-- an DT det
 |   |   +-- underlying JJ amod
 |   |   +-- for IN prep
 |   |       +-- distribution NN pobj
 |   |           +-- data NNS nn
 |   +-- and CC cc
 |   +-- relies VBZ conj
 |       +-- on IN prep
 |           +-- model NN pobj
 |               +-- the DT det
 |               +-- push JJ amod
 |               +-- gossiping VBG nn
 +-- , , punct
 +-- network NN nsubj
 |   +-- its PRP$ poss
 |   +-- overhead NN advmod
 +-- can MD aux
 +-- be VB cop
 +-- quite RB advmod
 +-- . . punct

35
Input: Compared to the reliable multicast efforts , Bullet behaves favorably in terms of the network overhead because nodes do not blindly request retransmissions from their peers .
Parse:
behaves NNS ROOT
 +-- Compared VBN prep
 |   +-- to IN pcomp
 |       +-- efforts NNS pobj
 |           +-- the DT det
 |           +-- reliable JJ amod
 |           +-- multicast JJ amod
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- favorably RB advmod
 +-- in IN prep
 |   +-- terms NNS pobj
 |       +-- of IN prep
 |           +-- network NN pobj
 |               +-- the DT det
 +-- overhead RB advmod
 +-- request NN advcl
 |   +-- because IN mark
 |   +-- nodes NNS nsubj
 |   +-- do VBP aux
 |   +-- not RB neg
 |   +-- blindly RB advmod
 |   +-- retransmissions NNS dobj
 |   +-- from IN prep
 |       +-- peers NNS pobj
 |           +-- their PRP$ poss
 +-- . . punct

36
Input: Instead , Bullet uses the summary views it obtains through RanSub to guide its actions toward nodes with disjoint content .
Parse:
uses VBZ ROOT
 +-- Instead RB advmod
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- views NNS dobj
 |   +-- the DT det
 |   +-- summary NN nn
 |   +-- obtains VBZ rcmod
 |       +-- it PRP nsubj
 |       +-- through IN prep
 |       |   +-- RanSub NNP pobj
 |       +-- guide VB xcomp
 |           +-- to TO aux
 |           +-- actions NNS dobj
 |               +-- its PRP$ poss
 |               +-- toward IN prep
 |                   +-- nodes NNS pobj
 |                       +-- with IN prep
 |                           +-- content NN pobj
 |                               +-- disjoint NN nn
 +-- . . punct

37
Input: Further , a Bullet node splits the retransmission load between all of its peers .
Parse:
splits VBZ ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- node NN nsubj
 |   +-- a DT det
 |   +-- Bullet NNP nn
 +-- load NN dobj
 |   +-- the DT det
 |   +-- retransmission NN nn
 |   +-- between IN prep
 |       +-- all DT pobj
 |           +-- of IN prep
 |               +-- peers NNS pobj
 |                   +-- its PRP$ poss
 +-- . . punct

38
Input: We note that pbcast nodes contain a mechanism to rate limit retransmitted packets and to send different packets in response to the same digest .
Parse:
note VBP ROOT
 +-- We PRP nsubj
 +-- contain VBP ccomp
 |   +-- that IN mark
 |   +-- nodes NNS nsubj
 |   |   +-- pbcast NN nn
 |   +-- mechanism NN dobj
 |       +-- a DT det
 |       +-- rate NN infmod
 |           +-- to TO aux
 |           +-- packets NNS dobj
 |           |   +-- retransmitted VBN nn
 |           |       +-- limit NN nn
 |           +-- and CC cc
 |           +-- send VB conj
 |               +-- to TO aux
 |               +-- packets NNS dobj
 |               |   +-- different JJ amod
 |               +-- in IN prep
 |                   +-- response NN pobj
 |                       +-- to IN prep
 |                           +-- digest NN pobj
 |                               +-- the DT det
 |                               +-- same JJ amod
 +-- . . punct

39
Input: However , this does not guarantee that packets received in parallel from multiple peers will not be duplicates .
Parse:
guarantee VB ROOT
 +-- However RB advmod
 +-- , , punct
 +-- this DT nsubj
 +-- does VBZ aux
 +-- not RB neg
 +-- duplicates NNS ccomp
 |   +-- that IN mark
 |   +-- packets NNS nsubj
 |   |   +-- received VBN partmod
 |   |       +-- in IN prep
 |   |           +-- parallel NN pobj
 |   |               +-- from IN prep
 |   |                   +-- peers NNS pobj
 |   |                       +-- multiple JJ amod
 |   +-- will MD aux
 |   +-- not RB neg
 |   +-- be VB cop
 +-- . . punct

40
Input: More importantly , the multicast recovery methods are limited by the bandwidth through the tree , while Bullet strives to provide more bandwidth to all receivers by making data deliberately disjoint throughout the tree .
Parse:
limited VBN ROOT
 +-- importantly RB advmod
 |   +-- More RBR advmod
 +-- , , punct
 +-- methods NNS nsubjpass
 |   +-- the DT det
 |   +-- multicast JJ amod
 |   +-- recovery NN nn
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- bandwidth NN pobj
 |       +-- the DT det
 |       +-- through IN prep
 |           +-- tree NN pobj
 |               +-- the DT det
 +-- strives VBZ advcl
 |   +-- while IN mark
 |   +-- Bullet NNP nsubj
 |   +-- provide VB xcomp
 |       +-- to TO aux
 |       +-- bandwidth NN dobj
 |       |   +-- more JJR amod
 |       +-- to IN prep
 |       |   +-- receivers NNS pobj
 |       |       +-- all DT det
 |       +-- by IN prep
 |           +-- making VBG pcomp
 |               +-- disjoint VB xcomp
 |                   +-- data NNS nsubj
 |                   +-- deliberately RB advmod
 |                   +-- throughout IN prep
 |                       +-- tree NN pobj
 |                           +-- the DT det
 +-- . . punct

41
Input: Narada -LRB- 19 -RRB- builds a delay optimized mesh interconnecting all participating nodes and actively measures the available bandwidth on overlay links .
Parse:
builds VBZ ROOT
 +-- Narada NNP nsubj
 |   +-- 19 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- mesh NN dobj
 |   +-- a DT det
 |   +-- delay NN nn
 |   +-- optimized VBN amod
 |   +-- interconnecting VBG partmod
 |       +-- nodes NNS dobj
 |           +-- all DT det
 |           +-- participating VBG amod
 +-- and CC cc
 +-- actively RB advmod
 +-- measures VBZ conj
 |   +-- bandwidth NN dobj
 |       +-- the DT det
 |       +-- available JJ amod
 |       +-- on IN prep
 |           +-- links NNS pobj
 |               +-- overlay NN nn
 +-- . . punct

42
Input: It then runs a standard routing protocol on top of the overlay mesh to construct forwarding trees using each node as a possible source .
Parse:
runs VBZ ROOT
 +-- It PRP nsubj
 +-- then RB advmod
 +-- protocol NN dobj
 |   +-- a DT det
 |   +-- standard JJ amod
 |   +-- routing NN nn
 +-- on IN prep
 |   +-- top NN pobj
 |       +-- of IN prep
 |           +-- mesh NN pobj
 |               +-- the DT det
 |               +-- overlay NN nn
 +-- construct VB xcomp
 |   +-- to TO aux
 |   +-- trees NNS dobj
 |       +-- forwarding NN nn
 |       +-- using VBG partmod
 |           +-- node NN dobj
 |           |   +-- each DT det
 |           +-- as IN prep
 |               +-- source NN pobj
 |                   +-- a DT det
 |                   +-- possible JJ amod
 +-- . . punct

43
Input: Narada nodes maintain global knowledge about all group participants , limiting system scalability to several tens of nodes .
Parse:
maintain VB ROOT
 +-- nodes NNS nsubj
 |   +-- Narada NNP nn
 +-- knowledge NN dobj
 |   +-- global JJ amod
 |   +-- about IN prep
 |       +-- participants NNS pobj
 |           +-- all DT det
 |           +-- group NN nn
 +-- , , punct
 +-- limiting VBG partmod
 |   +-- scalability NN dobj
 |   |   +-- system NN nn
 |   +-- to IN prep
 |       +-- tens NNS pobj
 |           +-- several JJ amod
 |           +-- of IN prep
 |               +-- nodes NNS pobj
 +-- . . punct

44
Input: Further , the bandwidth available through a Narada tree is still limited to the bandwidth available from each parent .
Parse:
limited VBN ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- bandwidth NN nsubjpass
 |   +-- the DT det
 |   +-- available JJ amod
 |       +-- through IN prep
 |           +-- tree NN pobj
 |               +-- a DT det
 |               +-- Narada NNP nn
 +-- is VBZ auxpass
 +-- still RB advmod
 +-- to IN prep
 |   +-- bandwidth NN pobj
 |       +-- the DT det
 |       +-- available JJ amod
 |           +-- from IN prep
 |               +-- parent NN pobj
 |                   +-- each DT det
 +-- . . punct

45
Input: On the other hand , the fundamental goal of Bullet is to increase bandwidth through download of disjoint data from multiple peers .
Parse:
is VBZ ROOT
 +-- On IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- goal NN nsubj
 |   +-- the DT det
 |   +-- fundamental JJ amod
 |   +-- of IN prep
 |       +-- Bullet NNP pobj
 +-- increase VB xcomp
 |   +-- to TO aux
 |   +-- bandwidth NN dobj
 |   +-- through IN prep
 |       +-- download NN pobj
 |           +-- of IN prep
 |               +-- data NNS pobj
 |                   +-- disjoint NN nn
 |                   +-- from IN prep
 |                       +-- peers NNS pobj
 |                           +-- multiple JJ amod
 +-- . . punct

46
Input: Overcast -LRB- 21 -RRB- is an example of a bandwidth efficient overlay tree construction algorithm .
Parse:
example NN ROOT
 +-- Overcast NNP nsubj
 |   +-- 21 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- an DT det
 +-- of IN prep
 |   +-- algorithm NN pobj
 |       +-- a DT det
 |       +-- efficient JJ amod
 |       |   +-- bandwidth NN npadvmod
 |       +-- construction NN nn
 |           +-- tree NN nn
 |               +-- overlay NN nn
 +-- . . punct

47
Input: In this system , all nodes join at the root and migrate down to the point in the tree where they are still able to maintain some minimum level of bandwidth .
Parse:
join VBP ROOT
 +-- In IN prep
 |   +-- system NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- nodes NNS nsubj
 |   +-- all DT det
 +-- at IN prep
 |   +-- root NN pobj
 |       +-- the DT det
 +-- and CC cc
 +-- migrate VB conj
 |   +-- down RB advmod
 |       +-- to IN prep
 |           +-- point NN pobj
 |               +-- the DT det
 |               +-- in IN prep
 |                   +-- tree NN pobj
 |                       +-- the DT det
 |                       +-- able JJ rcmod
 |                           +-- where WRB advmod
 |                           +-- they PRP nsubj
 |                           +-- are VBP cop
 |                           +-- still RB advmod
 |                           +-- maintain VB xcomp
 |                               +-- to TO aux
 |                               +-- level NN dobj
 |                                   +-- some DT det
 |                                   +-- minimum JJ amod
 |                                   +-- of IN prep
 |                                       +-- bandwidth NN pobj
 +-- . . punct

48
Input: Bullet is expected to be more resilient to node departures than any tree , including Overcast .
Parse:
expected VBN ROOT
 +-- Bullet NNP nsubjpass
 +-- is VBZ auxpass
 +-- resilient JJ xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- more RBR advmod
 |   +-- to TO prep
 |   |   +-- departures NNS pobj
 |   |       +-- node VB nn
 |   +-- than IN prep
 |       +-- tree NN pobj
 |           +-- any DT det
 |           +-- , , punct
 |           +-- including VBG prep
 |               +-- Overcast NNP pobj
 +-- . . punct

49
Input: Instead of a node waiting to get the data it missed from a new parent , a node can start getting data from its perpendicular peers .
Parse:
start VB ROOT
 +-- of IN prep
 |   +-- Instead RB advmod
 |   +-- node NN pobj
 |       +-- a DT det
 |       +-- waiting VBG partmod
 |           +-- get VB xcomp
 |               +-- to TO aux
 |               +-- data NNS dobj
 |                   +-- the DT det
 |                   +-- missed VBD rcmod
 |                       +-- it PRP nsubj
 |                       +-- from IN prep
 |                           +-- parent NN pobj
 |                               +-- a DT det
 |                               +-- new JJ amod
 +-- , , punct
 +-- node NN nsubj
 |   +-- a DT det
 +-- can MD aux
 +-- getting VBG xcomp
 |   +-- data NNS dobj
 |   +-- from IN prep
 |       +-- peers NNS pobj
 |           +-- its PRP$ poss
 |           +-- perpendicular JJ amod
 +-- . . punct

50
Input: This transition is seamless , as the node that is disconnected from its parent will start demanding more missing packets from its peers during the standard round of refreshing its filters .
Parse:
seamless JJ ROOT
 +-- transition NN nsubj
 |   +-- This DT det
 +-- is VBZ cop
 +-- , , punct
 +-- start VB advcl
 |   +-- as IN mark
 |   +-- node NN nsubj
 |   |   +-- the DT det
 |   |   +-- disconnected VBN rcmod
 |   |       +-- that WDT nsubjpass
 |   |       +-- is VBZ auxpass
 |   |       +-- from IN prep
 |   |           +-- parent NN pobj
 |   |               +-- its PRP$ poss
 |   +-- will MD aux
 |   +-- demanding VBG xcomp
 |       +-- packets NNS dobj
 |       |   +-- more JJR amod
 |       |   +-- missing JJ amod
 |       |   +-- from IN prep
 |       |       +-- peers NNS pobj
 |       |           +-- its PRP$ poss
 |       +-- during IN prep
 |           +-- round NN pobj
 |               +-- the DT det
 |               +-- standard JJ amod
 |               +-- of IN prep
 |                   +-- refreshing VBG pcomp
 |                       +-- filters NNS dobj
 |                           +-- its PRP$ poss
 +-- . . punct

51
Input: Overcast convergence time is limited by probes to immediate siblings and ancestors .
Parse:
limited VBN ROOT
 +-- time NN nsubjpass
 |   +-- Overcast JJ amod
 |   +-- convergence NN nn
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- probes NNS pobj
 |       +-- to IN prep
 |           +-- siblings NNS pobj
 |               +-- immediate JJ amod
 |               +-- and CC cc
 |               +-- ancestors NNS conj
 +-- . . punct

52
Input: Bullet is able to provide approximately a target bandwidth without having a fully converged tree .
Parse:
able JJ ROOT
 +-- Bullet NNP nsubj
 +-- is VBZ cop
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- bandwidth NN dobj
 |   |   +-- approximately RB advmod
 |   |   +-- a DT det
 |   |   +-- target NN nn
 |   +-- without IN prep
 |       +-- having VBG pcomp
 |           +-- tree NN dobj
 |               +-- a DT det
 |               +-- converged VBN amod
 |                   +-- fully RB advmod
 +-- . . punct

53
Input: In parallel to our own work , SplitStream -LRB- 9 -RRB- also has the goal of achieving high bandwidth data dissemination .
Parse:
has VBZ ROOT
 +-- In IN prep
 |   +-- parallel NN pobj
 |       +-- to IN prep
 |           +-- work NN pobj
 |               +-- our PRP$ poss
 |               +-- own JJ amod
 |               +-- , , punct
 |               +-- SplitStream NNP appos
 |                   +-- -LRB- -LRB- punct
 |                   +-- 9 CD dep
 |                   +-- -RRB- -RRB- punct
 +-- also RB advmod
 +-- goal NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- achieving VBG pcomp
 |           +-- dissemination NN dobj
 |               +-- bandwidth NN nn
 |               |   +-- high JJ amod
 |               +-- data NNS nn
 +-- . . punct

54
Input: It operates by splitting the multicast stream into k stripes , transmitting each stripe along a separate multicast tree built using Scribe -LRB- 34 -RRB- .
Parse:
operates VBZ ROOT
 +-- It PRP nsubj
 +-- by IN prep
 |   +-- splitting VBG pcomp
 |       +-- stream NN dobj
 |       |   +-- the DT det
 |       |   +-- multicast NN nn
 |       +-- into IN prep
 |       |   +-- stripes NNS pobj
 |       |       +-- k CD num
 |       +-- , , punct
 |       +-- transmitting VBG partmod
 |           +-- stripe NN dobj
 |           |   +-- each DT det
 |           +-- along IN prep
 |               +-- tree NN pobj
 |                   +-- a DT det
 |                   +-- separate JJ amod
 |                   +-- multicast NN nn
 |                   +-- built VBN partmod
 |                       +-- using VBG xcomp
 |                           +-- Scribe NNP dobj
 |                               +-- -LRB- -LRB- punct
 |                               +-- 34 CD dep
 |                               +-- -RRB- -RRB- punct
 +-- . . punct

55
Input: The key design goal of the tree construction mechanism is to have each node be an intermediate node in at most one tree -LRB- while observing both inbound and outbound node bandwidth constraints -RRB- , thereby reducing the impact of a single node '' s sudden departure on the rest of the system .
Parse:
is VBZ ROOT
 +-- goal NN nsubj
 |   +-- The DT det
 |   +-- key JJ amod
 |   +-- design NN nn
 |   +-- of IN prep
 |       +-- mechanism NN pobj
 |           +-- the DT det
 |           +-- construction NN nn
 |               +-- tree NN nn
 +-- have VB xcomp
 |   +-- to TO aux
 |   +-- node NN ccomp
 |   |   +-- node NN nsubj
 |   |   |   +-- each DT det
 |   |   +-- be VB cop
 |   |   +-- an DT det
 |   |   +-- intermediate JJ amod
 |   |   +-- in RB advmod
 |   |   +-- at IN prep
 |   |       +-- tree NN pobj
 |   |           +-- most JJS amod
 |   |           +-- one CD num
 |   +-- -LRB- -LRB- punct
 |   +-- observing VBG advcl
 |   |   +-- while IN mark
 |   |   +-- inbound JJ ccomp
 |   |       +-- both CC preconj
 |   |       +-- and CC cc
 |   |       +-- outbound VB conj
 |   |       +-- constraints NNS dobj
 |   |           +-- bandwidth NN nn
 |   |               +-- node NN nn
 |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- reducing VBG xcomp
 |       +-- thereby RB advmod
 |       +-- impact NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- departure NN pobj
 |                   +-- node NN poss
 |                   |   +-- a DT det
 |                   |   +-- single JJ amod
 |                   |   +-- '' '' punct
 |                   |   +-- s POS possessive
 |                   +-- sudden JJ amod
 |                   +-- on IN prep
 |                       +-- rest NN pobj
 |                           +-- the DT det
 |                           +-- of IN prep
 |                               +-- system NN pobj
 |                                   +-- the DT det
 +-- . . punct

56
Input: The join procedure can potentially sacrifice the interior node disjointness achieved by Scribe .
Parse:
sacrifice VB ROOT
 +-- procedure NN nsubj
 |   +-- The DT det
 |   +-- join NN nn
 +-- can MD aux
 +-- potentially RB advmod
 +-- disjointness NN dobj
 |   +-- the DT det
 |   +-- interior JJ amod
 |   +-- node NN nn
 |   +-- achieved VBN partmod
 |       +-- by IN prep
 |           +-- Scribe NNP pobj
 +-- . . punct

57
Input: Perhaps more importantly , SplitStream assumes that there is enough available bandwidth to carry each stripe on every link of the tree , including the links between the data source and the roots of individual stripe trees independently chosen by Scribe .
Parse:
assumes VBZ ROOT
 +-- importantly RB advmod
 |   +-- Perhaps RB advmod
 |   +-- more RBR advmod
 +-- , , punct
 +-- SplitStream NNP nsubj
 +-- is VBZ ccomp
 |   +-- that IN mark
 |   +-- there EX expl
 |   +-- bandwidth NN nsubj
 |       +-- enough JJ amod
 |       +-- available JJ amod
 |       +-- carry VB infmod
 |           +-- to TO aux
 |           +-- stripe NN dobj
 |           |   +-- each DT det
 |           +-- on IN prep
 |               +-- link NN pobj
 |                   +-- every DT det
 |                   +-- of IN prep
 |                   |   +-- tree NN pobj
 |                   |       +-- the DT det
 |                   +-- , , punct
 |                   +-- including VBG prep
 |                       +-- links NNS pobj
 |                           +-- the DT det
 |                           +-- between IN prep
 |                               +-- source NN pobj
 |                                   +-- the DT det
 |                                   +-- data NN nn
 |                                   +-- and CC cc
 |                                   +-- roots NNS conj
 |                                       +-- the DT det
 |                                       +-- of IN prep
 |                                           +-- trees NNS pobj
 |                                               +-- individual JJ amod
 |                                               +-- stripe NN nn
 |                                               +-- chosen VBN partmod
 |                                                   +-- independently RB advmod
 |                                                   +-- by IN prep
 |                                                       +-- Scribe NNP pobj
 +-- . . punct

58
Input: To some extent , Bullet and SplitStream are complementary .
Parse:
complementary JJ ROOT
 +-- To IN prep
 |   +-- extent NN pobj
 |       +-- some DT det
 +-- , , punct
 +-- Bullet NNP nsubj
 |   +-- and CC cc
 |   +-- SplitStream NNP conj
 +-- are VBP cop
 +-- . . punct

59
Input: For instance , Bullet could run on each of the stripes to maximize the bandwidth delivered to each node along each stripe .
Parse:
run VB ROOT
 +-- For IN prep
 |   +-- instance NN pobj
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- could MD aux
 +-- on IN prep
 |   +-- each DT pobj
 |       +-- of IN prep
 |           +-- stripes NNS pobj
 |               +-- the DT det
 +-- maximize VB xcomp
 |   +-- to TO aux
 |   +-- bandwidth NN dobj
 |       +-- the DT det
 |       +-- delivered VBN partmod
 |           +-- to IN prep
 |           |   +-- node NN pobj
 |           |       +-- each DT det
 |           +-- along IN prep
 |               +-- stripe NN pobj
 |                   +-- each DT det
 +-- . . punct

60
Input: CoopNet -LRB- 29 -RRB- considers live content streaming in a peerto peer environment , subject to high node churn .
Parse:
considers VBZ ROOT
 +-- CoopNet NNP nsubj
 |   +-- 29 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- content NN dobj
 |   +-- live JJ amod
 |   +-- streaming VBG partmod
 |   |   +-- in IN prep
 |   |       +-- environment NN pobj
 |   |           +-- a DT det
 |   |           +-- peerto JJ amod
 |   |           +-- peer NN nn
 |   +-- , , punct
 |   +-- subject JJ amod
 |       +-- to IN prep
 |           +-- churn NN pobj
 |               +-- high JJ amod
 |               +-- node NN nn
 +-- . . punct

61
Input: Consequently , the system favors resilience over network efficiency .
Parse:
favors VBZ ROOT
 +-- Consequently RB advmod
 +-- , , punct
 +-- system NN nsubj
 |   +-- the DT det
 +-- resilience VBP dobj
 |   +-- over IN prep
 |       +-- efficiency NN pobj
 |           +-- network NN nn
 +-- . . punct

62
Input: It uses a centralized approach for constructing either random or deterministic node disjoint -LRB- similar to SplitStream -RRB- trees , and it includes an MDC -LRB- 17 -RRB- adaptation framework based on scalable receiver feedback that attempts to maximize the signal to noise ratio perceived by receivers .
Parse:
uses VBZ ROOT
 +-- It PRP nsubj
 +-- approach NN dobj
 |   +-- a DT det
 |   +-- centralized JJ amod
 |   +-- for IN prep
 |       +-- constructing VBG pcomp
 |           +-- trees NNS dobj
 |               +-- disjoint NN nn
 |                   +-- random JJ amod
 |                   |   +-- either CC preconj
 |                   |   +-- or CC cc
 |                   |   +-- deterministic JJ conj
 |                   +-- node NN nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- similar JJ amod
 |                   |   +-- to IN prep
 |                   |       +-- SplitStream NNP pobj
 |                   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- and CC cc
 +-- includes VBZ conj
 |   +-- it PRP nsubj
 |   +-- framework NN dobj
 |       +-- MDC NN nn
 |       |   +-- an DT det
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- 17 CD dep
 |       |   +-- -RRB- -RRB- punct
 |       +-- adaptation NN nn
 |       +-- based VBN partmod
 |           +-- on IN prep
 |               +-- feedback NN pobj
 |                   +-- scalable JJ amod
 |                   +-- receiver NN nn
 |                   +-- attempts VBZ rcmod
 |                       +-- that WDT nsubj
 |                       +-- maximize VB xcomp
 |                           +-- to TO aux
 |                           +-- signal NN dobj
 |                           |   +-- the DT det
 |                           +-- to IN prep
 |                               +-- ratio NN pobj
 |                                   +-- noise NN nn
 |                                   +-- perceived VBN partmod
 |                                       +-- by IN prep
 |                                           +-- receivers NNS pobj
 +-- . . punct

63
Input: In the case of on demand streaming , CoopNet -LRB- 30 -RRB- addresses 295 the flash crowd problem at the central server by redirecting incoming clients to a fixed number of nodes that have previously retrieved portions of the same content .
Parse:
addresses VBZ ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- on IN pcomp
 |               +-- demand NN pobj
 |                   +-- streaming VBG partmod
 +-- , , punct
 +-- CoopNet NNP nsubj
 |   +-- 30 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- problem NN dobj
 |   +-- 295 CD num
 |   +-- the DT det
 |   +-- crowd NN nn
 |       +-- flash NN nn
 +-- at IN prep
 |   +-- server NN pobj
 |       +-- the DT det
 |       +-- central JJ amod
 +-- by IN prep
 |   +-- redirecting VBG pcomp
 |       +-- clients NNS dobj
 |       |   +-- incoming JJ amod
 |       +-- to IN prep
 |           +-- number NN pobj
 |               +-- a DT det
 |               +-- fixed VBN amod
 |               +-- of IN prep
 |               |   +-- nodes NNS pobj
 |               +-- retrieved VBN rcmod
 |                   +-- that WDT nsubj
 |                   +-- have VBP aux
 |                   +-- previously RB advmod
 |                   +-- portions NNS dobj
 |                       +-- of IN prep
 |                           +-- content NN pobj
 |                               +-- the DT det
 |                               +-- same JJ amod
 +-- . . punct

64
Input: Compared to CoopNet , Bullet provides nodes with a uniformly random subset of the system wide distribution of the file. .
Parse:
provides VBZ ROOT
 +-- Compared VBN prep
 |   +-- to IN pcomp
 |       +-- CoopNet NNP pobj
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- nodes NNS dobj
 +-- with IN prep
 |   +-- subset NN pobj
 |       +-- a DT det
 |       +-- uniformly JJ amod
 |       +-- random JJ amod
 |       +-- of IN prep
 |           +-- distribution NN pobj
 |               +-- the DT det
 |               +-- system NN nn
 |               +-- wide JJ amod
 |               +-- of IN prep
 |                   +-- file. NN pobj
 |                       +-- the DT det
 +-- . . punct
