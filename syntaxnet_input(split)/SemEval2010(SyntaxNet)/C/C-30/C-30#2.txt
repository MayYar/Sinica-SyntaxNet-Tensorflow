
1
Input: In this paper , we consider the following general problem .
Parse:
consider VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- problem NN dobj
 |   +-- the DT det
 |   +-- following VBG amod
 |   +-- general JJ amod
 +-- . . punct

2
Input: Given a sender and a large set of interested receivers spread across the Internet , how can we maximize the amount of bandwidth delivered to receivers ? Our problem domain includes software or video distribution and real time multimedia streaming .
Parse:
maximize VB ROOT
 +-- Given VBN prep
 |   +-- sender NN dep
 |       +-- a DT det
 |       +-- and CC cc
 |       +-- set NN conj
 |           +-- a DT det
 |           +-- large JJ amod
 |           +-- of IN prep
 |               +-- receivers NNS pobj
 |                   +-- interested JJ amod
 |                   +-- spread VBN partmod
 |                       +-- across IN prep
 |                           +-- Internet NN pobj
 |                               +-- the DT det
 +-- , , punct
 +-- how WRB advmod
 +-- can MD aux
 +-- we PRP nsubj
 +-- amount NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- bandwidth NN pobj
 |   +-- delivered VBN partmod
 |       +-- to IN prep
 |           +-- receivers NNS pobj
 +-- ? . punct
 +-- includes VBZ ccomp
 |   +-- domain NN nsubj
 |   |   +-- Our PRP$ poss
 |   |   +-- problem NN nn
 |   +-- software NN dobj
 |       +-- or CC cc
 |       +-- distribution NN conj
 |       |   +-- video NN nn
 |       +-- and CC cc
 |       +-- streaming VBG conj
 |           +-- multimedia NNS nsubj
 |               +-- time NN nn
 |                   +-- real JJ amod
 +-- . . punct

3
Input: Traditionally , native IP multicast has been the preferred method for delivering content to a set of receivers in a scalable fashion .
Parse:
method NN ROOT
 +-- Traditionally RB advmod
 +-- , , punct
 +-- multicast NN nsubj
 |   +-- native JJ amod
 |   +-- IP NN nn
 +-- has VBZ aux
 +-- been VBN cop
 +-- the DT det
 +-- preferred JJ amod
 +-- for IN prep
 |   +-- delivering VBG pcomp
 |       +-- content NN dobj
 |       +-- to IN prep
 |           +-- set NN pobj
 |               +-- a DT det
 |               +-- of IN prep
 |               |   +-- receivers NNS pobj
 |               +-- in IN prep
 |                   +-- fashion NN pobj
 |                       +-- a DT det
 |                       +-- scalable JJ amod
 +-- . . punct

4
Input: However , a number of considerations , including scale , reliability , and congestion control , have limited the wide scale deployment of IP multicast .
Parse:
limited VBN ROOT
 +-- However RB advmod
 +-- , , punct
 +-- number NN nsubj
 |   +-- a DT det
 |   +-- of IN prep
 |   |   +-- considerations NNS pobj
 |   +-- , , punct
 |   +-- including VBG prep
 |       +-- scale NN pobj
 |           +-- , , punct
 |           +-- reliability NN conj
 |           +-- and CC cc
 |           +-- control NN conj
 |               +-- congestion NN nn
 +-- have VBP aux
 +-- deployment NN dobj
 |   +-- the DT det
 |   +-- scale NN nn
 |   |   +-- wide JJ amod
 |   +-- of IN prep
 |       +-- multicast NN pobj
 |           +-- IP NN nn
 +-- . . punct

5
Input: Even if all these problems were to be addressed , IP multicast does not consider bandwidth when constructing its distribution tree .
Parse:
consider VB ROOT
 +-- were VBD advcl
 |   +-- Even RB advmod
 |   +-- if IN mark
 |   +-- problems NNS nsubj
 |   |   +-- all PDT predet
 |   |   +-- these DT det
 |   +-- addressed VBN xcomp
 |       +-- to TO aux
 |       +-- be VB auxpass
 +-- , , punct
 +-- multicast NN nsubj
 |   +-- IP FW nn
 +-- does VBZ aux
 +-- not RB neg
 +-- bandwidth NN dobj
 +-- constructing VBG advcl
 |   +-- when WRB advmod
 |   +-- tree NN dobj
 |       +-- its PRP$ poss
 |       +-- distribution NN nn
 +-- . . punct

6
Input: More recently , overlays have emerged as a promising alternative to multicast for network efficient point to multipoint data delivery .
Parse:
emerged VBN ROOT
 +-- recently RB advmod
 |   +-- More RBR advmod
 +-- , , punct
 +-- overlays NNS nsubj
 +-- have VBP aux
 +-- as IN prep
 |   +-- alternative NN pobj
 |       +-- a DT det
 |       +-- promising JJ amod
 |       +-- multicast VB infmod
 |           +-- to IN aux
 |           +-- for IN prep
 |           |   +-- point NN pobj
 |           |       +-- network NN nn
 |           |       +-- efficient JJ amod
 |           +-- multipoint VB xcomp
 |               +-- to IN aux
 |               +-- delivery NN dobj
 |                   +-- data NNS nn
 +-- . . punct

7
Input: Typical overlay structures attempt to mimic the structure of multicast routing trees .
Parse:
attempt NN ROOT
 +-- Typical JJ amod
 +-- structures NNS nn
 |   +-- overlay NN nn
 +-- mimic VB infmod
 |   +-- to TO aux
 |   +-- structure NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- trees NNS pobj
 |               +-- multicast JJ amod
 |               +-- routing NN nn
 +-- . . punct

8
Input: In network layer multicast however , interior nodes consist of high speed routers with limited processing power and extensibility .
Parse:
consist VBP ROOT
 +-- In IN prep
 |   +-- multicast NN pobj
 |       +-- network NN nn
 |       +-- layer NN nn
 +-- however RB advmod
 +-- , , punct
 +-- nodes NNS nsubj
 |   +-- interior NNP amod
 +-- of IN prep
 |   +-- routers NNS pobj
 |       +-- speed NN nn
 |       |   +-- high JJ amod
 |       +-- with IN prep
 |           +-- power NN pobj
 |               +-- limited JJ amod
 |               +-- processing NN nn
 |               +-- and CC cc
 |               +-- extensibility NN conj
 +-- . . punct

9
Input: Overlays , on the other hand , use programmable -LRB- and hence extensible -RRB- end hosts as interior nodes in the overlay tree , with these hosts acting as repeaters to multiple children down the tree .
Parse:
use VBP ROOT
 +-- Overlays NNS nsubj
 +-- , , punct
 +-- on IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- hosts NNS dobj
 |   +-- end NN nn
 |       +-- programmable JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- and CC cc
 |           +-- extensible JJ conj
 |           |   +-- hence RB advmod
 |           +-- -RRB- -RRB- punct
 +-- as IN prep
 |   +-- nodes NNS pobj
 |       +-- interior JJ amod
 |       +-- in IN prep
 |           +-- tree NN pobj
 |               +-- the DT det
 |               +-- overlay NN nn
 +-- with IN prep
 |   +-- acting VBG pcomp
 |       +-- hosts NNS nsubj
 |       |   +-- these DT det
 |       +-- as IN prep
 |           +-- repeaters NNS pobj
 |               +-- to IN prep
 |                   +-- children NNS pobj
 |                       +-- multiple JJ amod
 |                       +-- down IN prep
 |                           +-- tree NN pobj
 |                               +-- the DT det
 +-- . . punct

10
Input: Overlays have shown tremendous promise for multicast style applications .
Parse:
shown VBN ROOT
 +-- Overlays NNS nsubj
 +-- have VBP aux
 +-- promise NN dobj
 |   +-- tremendous JJ amod
 |   +-- for IN prep
 |       +-- applications NNS pobj
 |           +-- multicast JJ amod
 |           +-- style NN nn
 +-- . . punct

11
Input: However , we argue that a tree structure has fundamental limitations both for high bandwidth multicast and for high reliability .
Parse:
argue VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- has VBZ ccomp
 |   +-- that IN mark
 |   +-- structure NN nsubj
 |   |   +-- a DT det
 |   |   +-- tree NN nn
 |   +-- limitations NNS dobj
 |       +-- fundamental JJ amod
 |       +-- for IN prep
 |           +-- both DT preconj
 |           +-- multicast NN pobj
 |           |   +-- bandwidth NN nn
 |           |       +-- high JJ amod
 |           +-- and CC cc
 |           +-- for IN conj
 |               +-- reliability NN pobj
 |                   +-- high JJ amod
 +-- . . punct

12
Input: One difficulty with trees is that bandwidth is guaranteed to be monotonically decreasing moving down the tree .
Parse:
is VBZ ROOT
 +-- difficulty NN nsubj
 |   +-- One CD num
 |   +-- with IN prep
 |       +-- trees NNS pobj
 +-- guaranteed VBN ccomp
 |   +-- that IN mark
 |   +-- bandwidth NN nsubjpass
 |   +-- is VBZ auxpass
 |   +-- decreasing VBG xcomp
 |       +-- to TO aux
 |       +-- be VB aux
 |       +-- monotonically RB advmod
 |       +-- moving VBG partmod
 |           +-- down IN prep
 |               +-- tree NN pobj
 |                   +-- the DT det
 +-- . . punct

13
Input: Any loss high up the tree will reduce the bandwidth available to receivers lower down the tree .
Parse:
reduce VB ROOT
 +-- loss NN nsubj
 |   +-- Any DT det
 |   +-- high JJ amod
 |       +-- up RP prep
 |           +-- tree NN pobj
 |               +-- the DT det
 +-- will MD aux
 +-- bandwidth NN dobj
 |   +-- the DT det
 |   +-- available JJ amod
 |       +-- to IN prep
 |           +-- receivers NNS pobj
 |               +-- lower JJR advmod
 |               +-- down RP prep
 |                   +-- tree NN pobj
 |                       +-- the DT det
 +-- . . punct

14
Input: A number of techniques have been proposed to recover from losses and hence improve the available bandwidth in an overlay tree -LRB- 2 , 6 -RRB- .
Parse:
proposed VBN ROOT
 +-- number NN nsubjpass
 |   +-- A DT det
 |   +-- of IN prep
 |       +-- techniques NNS pobj
 +-- have VBP aux
 +-- been VBN auxpass
 +-- recover VB xcomp
 |   +-- to TO aux
 |   +-- from IN prep
 |   |   +-- losses NNS pobj
 |   +-- and CC cc
 |   +-- hence RB advmod
 |   +-- improve VB conj
 |       +-- bandwidth NN dobj
 |           +-- the DT det
 |           +-- available JJ amod
 |           +-- in IN prep
 |               +-- tree NN pobj
 |                   +-- an DT det
 |                   +-- overlay JJ amod
 |                   +-- -LRB- -LRB- punct
 |                   +-- 2 CD dep
 |                   |   +-- , , punct
 |                   |   +-- 6 CD num
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

15
Input: However , fundamentally , the bandwidth available to any host is limited by the bandwidth available from that node '' s single parent in the tree .
Parse:
limited VBN ROOT
 +-- However RB advmod
 +-- , , punct
 +-- fundamentally RB advmod
 +-- bandwidth NN nsubjpass
 |   +-- the DT det
 |   +-- available JJ amod
 |       +-- to IN prep
 |           +-- host NN pobj
 |               +-- any DT det
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- parent NN pobj
 |       +-- bandwidth NN poss
 |       |   +-- the DT det
 |       |   +-- available JJ amod
 |       |   |   +-- from IN prep
 |       |   |       +-- node NN pobj
 |       |   |           +-- that DT det
 |       |   +-- '' '' punct
 |       |   +-- s POS possessive
 |       +-- single JJ amod
 |       +-- in IN prep
 |           +-- tree NN pobj
 |               +-- the DT det
 +-- . . punct

16
Input: Thus , our work operates on the premise that the model for high bandwidth multicast data dissemination should be re examined .
Parse:
operates VBZ ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- work NN nsubj
 |   +-- our PRP$ poss
 +-- on IN prep
 |   +-- premise NN pobj
 |       +-- the DT det
 |       +-- examined VBN ccomp
 |           +-- that IN mark
 |           +-- model NN nsubjpass
 |           |   +-- the DT det
 |           |   +-- for IN prep
 |           |       +-- dissemination NN pobj
 |           |           +-- bandwidth NN nn
 |           |           |   +-- high JJ amod
 |           |           +-- multicast JJ amod
 |           |           +-- data NNS nn
 |           +-- should MD aux
 |           +-- be VB auxpass
 |           +-- re IN advmod
 +-- . . punct

17
Input: Rather than sending identical copies of the same data stream to all nodes in a tree and designing a scalable mechanism for recovering from loss , we propose that participants in a multicast overlay cooperate to strategically 282 transmit disjoint data sets to various points in the network .
Parse:
propose VBP ROOT
 +-- Rather RB advmod
 |   +-- than IN prep
 |       +-- sending VBG pcomp
 |           +-- copies NNS dobj
 |           |   +-- identical JJ amod
 |           |   +-- of IN prep
 |           |       +-- stream NN pobj
 |           |           +-- the DT det
 |           |           +-- same JJ amod
 |           |           +-- data NNS nn
 |           +-- to IN prep
 |           |   +-- nodes NNS pobj
 |           |       +-- all DT det
 |           |       +-- in IN prep
 |           |           +-- tree NN pobj
 |           |               +-- a DT det
 |           +-- and CC cc
 |           +-- designing VBG conj
 |               +-- mechanism NN dobj
 |                   +-- a DT det
 |                   +-- scalable JJ amod
 |                   +-- for IN prep
 |                       +-- recovering VBG pcomp
 |                           +-- from IN prep
 |                               +-- loss NN pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- cooperate NN ccomp
 |   +-- that DT mark
 |   +-- participants NNS nsubj
 |   |   +-- in IN prep
 |   |       +-- overlay NN pobj
 |   |           +-- a DT det
 |   |           +-- multicast NN nn
 |   +-- transmit NN xcomp
 |       +-- to TO aux
 |       +-- strategically RB advmod
 |       +-- 282 CD num
 |       +-- sets NNS dobj
 |       |   +-- disjoint NN nn
 |       |   +-- data NNS nn
 |       +-- to IN prep
 |           +-- points NNS pobj
 |               +-- various JJ amod
 |               +-- in IN prep
 |                   +-- network NN pobj
 |                       +-- the DT det
 +-- . . punct

18
Input: Here , the sender splits data into sequential blocks .
Parse:
splits NNS ROOT
 +-- Here RB advmod
 +-- , , punct
 +-- sender NN nsubj
 |   +-- the DT det
 +-- data NNS dobj
 +-- into IN prep
 |   +-- blocks NNS pobj
 |       +-- sequential JJ amod
 +-- . . punct

19
Input: Blocks are further subdivided into individual objects which are in turn transmitted to different points in the network .
Parse:
subdivided VBN ROOT
 +-- Blocks NNS nsubjpass
 +-- are VBP auxpass
 +-- further RB advmod
 +-- into IN prep
 |   +-- objects NNS pobj
 |       +-- individual JJ amod
 |       +-- transmitted VBN rcmod
 |           +-- which WDT nsubjpass
 |           +-- are VBP auxpass
 |           +-- in IN prep
 |           |   +-- turn NN pobj
 |           +-- to IN prep
 |               +-- points NNS pobj
 |                   +-- different JJ amod
 |                   +-- in IN prep
 |                       +-- network NN pobj
 |                           +-- the DT det
 +-- . . punct

20
Input: Nodes still receive a set of objects from their parents , but they are then responsible for locating peers that hold missing data objects .
Parse:
receive VB ROOT
 +-- Nodes NNS nsubj
 +-- still RB advmod
 +-- set NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- objects NNS pobj
 |           +-- from IN prep
 |               +-- parents NNS pobj
 |                   +-- their PRP$ poss
 +-- , , punct
 +-- but CC cc
 +-- responsible JJ conj
 |   +-- they PRP nsubj
 |   +-- are VBP cop
 |   +-- then RB advmod
 |   +-- for IN prep
 |       +-- locating VBG pcomp
 |           +-- peers NNS dobj
 |               +-- hold VBP rcmod
 |                   +-- that WDT nsubj
 |                   +-- objects NNS dobj
 |                       +-- missing VBG amod
 |                       +-- data NNS nn
 +-- . . punct

21
Input: We use a distributed algorithm that aims to make the availability of data items uniformly spread across all overlay participants .
Parse:
use VBP ROOT
 +-- We PRP nsubj
 +-- algorithm NN dobj
 |   +-- a DT det
 |   +-- distributed VBN amod
 |   +-- aims VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- make VB xcomp
 |           +-- to TO aux
 |           +-- availability NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- items NNS pobj
 |                       +-- data NNS nn
 |                       +-- spread VBN partmod
 |                           +-- uniformly RB advmod
 |                           +-- across IN prep
 |                               +-- participants NNS pobj
 |                                   +-- all DT det
 |                                   +-- overlay JJ amod
 +-- . . punct

22
Input: In this way , we avoid the problem of locating the last object , which may only be available at a few nodes .
Parse:
avoid VBP ROOT
 +-- In IN prep
 |   +-- way NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- problem NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- locating VBG pcomp
 |           +-- object NN dobj
 |               +-- the DT det
 |               +-- last JJ amod
 |               +-- , , punct
 |               +-- available JJ rcmod
 |                   +-- which WDT nsubj
 |                   +-- may MD aux
 |                   +-- only RB advmod
 |                   +-- be VB cop
 |                   +-- at IN prep
 |                       +-- nodes NNS pobj
 |                           +-- a DT det
 |                           +-- few JJ amod
 +-- . . punct

23
Input: One hypothesis of this work is that , relative to a tree , this model will result in higher bandwidth leveraging the bandwidth from simultaneous parallel downloads from multiple sources rather than a single parent and higher reliability retrieving data from multiple peers reduces the potential damage from a single node failure .
Parse:
is VBZ ROOT
 +-- hypothesis NN nsubj
 |   +-- One CD num
 |   +-- of IN prep
 |       +-- work NN pobj
 |           +-- this DT det
 +-- result VB ccomp
 |   +-- that IN mark
 |   +-- , , punct
 |   +-- relative JJ partmod
 |   |   +-- to IN prep
 |   |       +-- tree NN pobj
 |   |           +-- a DT det
 |   +-- model NN nsubj
 |   |   +-- this DT det
 |   +-- will MD aux
 |   +-- in IN prep
 |       +-- leveraging VBG pcomp
 |           +-- bandwidth NN nsubj
 |           |   +-- higher JJR amod
 |           +-- reduces VBZ ccomp
 |               +-- bandwidth NN nsubj
 |               |   +-- the DT det
 |               |   +-- from IN prep
 |               |   |   +-- sources NNS pobj
 |               |   |       +-- multiple JJ amod
 |               |   +-- rather RB cc
 |               |   |   +-- than IN mwe
 |               |   +-- parent NN conj
 |               |       +-- a DT det
 |               |       +-- single JJ amod
 |               |       +-- and CC cc
 |               |       +-- reliability NN conj
 |               |       |   +-- higher JJR amod
 |               |       +-- retrieving VBG partmod
 |               |           +-- data NNS dobj
 |               |               +-- from IN prep
 |               |                   +-- peers NNS pobj
 |               |                       +-- multiple JJ amod
 |               +-- damage NN dobj
 |                   +-- the DT det
 |                   +-- potential JJ amod
 |                   +-- from IN prep
 |                       +-- failure NN pobj
 |                           +-- a DT det
 |                           +-- single JJ amod
 |                           +-- node NN nn
 +-- . . punct

24
Input: To illustrate Bullet '' s behavior , consider a simple three node overlay with a root R and two children A and B .
Parse:
consider VB ROOT
 +-- illustrate VB advcl
 |   +-- To TO aux
 |   +-- behavior NN dobj
 |       +-- Bullet NNP poss
 |           +-- '' '' punct
 |           +-- s POS possessive
 +-- , , punct
 +-- overlay NN dobj
 |   +-- a DT det
 |   +-- simple JJ amod
 |   +-- three CD num
 |   +-- node NN nn
 |   +-- with IN prep
 |       +-- R NN pobj
 |           +-- a DT det
 |           +-- root NN nn
 |           +-- and CC cc
 |           +-- children NNS conj
 |               +-- two CD num
 |               +-- A NNP appos
 |                   +-- and CC cc
 |                   +-- B NN conj
 +-- . . punct

25
Input: R has 1 Mbps of available -LRB- TCP friendly -RRB- bandwidth to each of A and B .
Parse:
has VBZ ROOT
 +-- R NN nsubj
 +-- Mbps NNS dobj
 |   +-- 1 CD num
 |   +-- of IN prep
 |       +-- bandwidth NN pobj
 |           +-- available JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- friendly JJ amod
 |           |   +-- TCP NNP npadvmod
 |           +-- -RRB- -RRB- punct
 |           +-- to IN prep
 |               +-- each DT pobj
 |                   +-- of IN prep
 |                       +-- A NN pobj
 |                           +-- and CC cc
 |                           +-- B NN conj
 +-- . . punct

26
Input: However , there is also 1 Mbps of available bandwidth between A and B .
Parse:
is VBZ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- there EX expl
 +-- also RB advmod
 +-- Mbps NNS nsubj
 |   +-- 1 CD num
 |   +-- of IN prep
 |   |   +-- bandwidth NN pobj
 |   |       +-- available JJ amod
 |   +-- between IN prep
 |       +-- A NNP pobj
 |           +-- and CC cc
 |           +-- B NN conj
 +-- . . punct

27
Input: In this example , Bullet would transmit a disjoint set of data at 1 Mbps to each of A and B .
Parse:
transmit VB ROOT
 +-- In IN prep
 |   +-- example NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- would MD aux
 +-- set NN dobj
 |   +-- a DT det
 |   +-- disjoint NN nn
 |   +-- of IN prep
 |   |   +-- data NNS pobj
 |   +-- at IN prep
 |       +-- Mbps NNS pobj
 |           +-- 1 CD num
 |           +-- to IN prep
 |               +-- each DT pobj
 |                   +-- of IN prep
 |                       +-- A NNP pobj
 |                           +-- and CC cc
 |                           +-- B NN conj
 +-- . . punct

28
Input: A and B would then each independently discover the availability of disjoint data at the remote peer and begin streaming data to one another , effectively achieving a retrieval rate of 2 Mbps .
Parse:
discover VB ROOT
 +-- A DT nsubj
 |   +-- and CC cc
 |   +-- B NNP conj
 +-- would MD aux
 +-- then RB advmod
 +-- each DT nsubj
 +-- independently RB advmod
 +-- availability NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- data NNS pobj
 |           +-- disjoint NN nn
 |           +-- at IN prep
 |               +-- peer NN pobj
 |                   +-- the DT det
 |                   +-- remote JJ amod
 +-- and CC cc
 +-- begin VB conj
 |   +-- streaming VBG xcomp
 |   |   +-- data NNS dobj
 |   |   +-- to IN prep
 |   |       +-- one CD pobj
 |   |           +-- another DT dep
 |   +-- , , punct
 |   +-- achieving VBG xcomp
 |       +-- effectively RB advmod
 |       +-- rate NN dobj
 |           +-- a DT det
 |           +-- retrieval JJ amod
 |           +-- of IN prep
 |               +-- Mbps NNS pobj
 |                   +-- 2 CD num
 +-- . . punct

29
Input: On the other hand , any overlay tree is restricted to delivering at most 1 Mbps even with a scalable technique for recovering lost data .
Parse:
restricted VBN ROOT
 +-- On IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- tree NN nsubjpass
 |   +-- any DT det
 |   +-- overlay NN nn
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- delivering VBG pcomp
 |       +-- most RBS advmod
 |       |   +-- at IN advmod
 |       +-- Mbps NNS dobj
 |       |   +-- 1 CD num
 |       +-- with IN prep
 |           +-- even RB advmod
 |           +-- technique NN pobj
 |               +-- a DT det
 |               +-- scalable JJ amod
 |               +-- for IN prep
 |                   +-- recovering VBG pcomp
 |                       +-- data NNS dobj
 |                           +-- lost VBN amod
 +-- . . punct

30
Input: Any solution for achieving the above model must maintain a number of properties .
Parse:
maintain VB ROOT
 +-- solution NN nsubj
 |   +-- Any DT det
 |   +-- for IN prep
 |       +-- achieving VBG pcomp
 |           +-- model NN dobj
 |               +-- the DT det
 |               +-- above JJ amod
 +-- must MD aux
 +-- number NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- properties NNS pobj
 +-- . . punct

31
Input: First , it must be TCP friendly -LRB- 15 -RRB- .
Parse:
friendly JJ ROOT
 +-- First RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- must MD aux
 +-- be VB cop
 +-- TCP RB advmod
 +-- -LRB- -LRB- punct
 +-- 15 CD dep
 +-- -RRB- -RRB- punct
 +-- . . punct

32
Input: No flow should consume more than its fair share of the bottleneck bandwidth and each flow must respond to congestion signals -LRB- losses -RRB- by reducing its transmission rate .
Parse:
consume VB ROOT
 +-- flow NN nsubj
 |   +-- No DT det
 +-- should MD aux
 +-- more JJR dobj
 |   +-- than IN prep
 |       +-- share NN pobj
 |           +-- its PRP$ poss
 |           +-- fair JJ amod
 |           +-- of IN prep
 |               +-- bandwidth NN pobj
 |                   +-- the DT det
 |                   +-- bottleneck NN nn
 +-- and CC cc
 +-- respond VB conj
 |   +-- flow NN nsubj
 |   |   +-- each DT det
 |   +-- must MD aux
 |   +-- to IN prep
 |   |   +-- signals NNS pobj
 |   |       +-- congestion NN nn
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- losses NNS dep
 |   |       +-- -RRB- -RRB- punct
 |   +-- by IN prep
 |       +-- reducing VBG pcomp
 |           +-- rate NN dobj
 |               +-- its PRP$ poss
 |               +-- transmission NN nn
 +-- . . punct

33
Input: Second , it must impose low control overhead .
Parse:
impose VB ROOT
 +-- Second RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- must MD aux
 +-- control NN dobj
 |   +-- low JJ amod
 +-- overhead RB advmod
 +-- . . punct

34
Input: There are many possible sources of such overhead , including probing for available bandwidth between nodes , locating appropriate nodes to peer with for data retrieval and redundantly receiving the same data objects from multiple sources .
Parse:
are VBP ROOT
 +-- There EX expl
 +-- sources NNS nsubj
 |   +-- many JJ amod
 |   +-- possible JJ amod
 |   +-- of IN prep
 |   |   +-- overhead NN pobj
 |   |       +-- such JJ amod
 |   +-- , , punct
 |   +-- including VBG prep
 |       +-- probing VBG pcomp
 |           +-- for IN prep
 |           |   +-- bandwidth NN pobj
 |           |       +-- available JJ amod
 |           |       +-- between IN prep
 |           |           +-- nodes NNS pobj
 |           +-- , , punct
 |           +-- locating VBG conj
 |           |   +-- nodes NNS dobj
 |           |       +-- appropriate JJ amod
 |           |       +-- peer VB infmod
 |           |           +-- to TO aux
 |           |           +-- with IN prep
 |           |           +-- for IN prep
 |           |               +-- retrieval NN pobj
 |           |                   +-- data NNS nn
 |           +-- and CC cc
 |           +-- redundantly RB advmod
 |           +-- receiving VBG conj
 |               +-- objects NNS dobj
 |                   +-- the DT det
 |                   +-- same JJ amod
 |                   +-- data NN nn
 |                   +-- from IN prep
 |                       +-- sources NNS pobj
 |                           +-- multiple JJ amod
 +-- . . punct

35
Input: Third , the algorithm should be decentralized and scalable to thousands of participants .
Parse:
decentralized VBN ROOT
 +-- Third RB advmod
 +-- , , punct
 +-- algorithm NN nsubjpass
 |   +-- the DT det
 +-- should MD aux
 +-- be VB auxpass
 +-- and CC cc
 +-- scalable JJ conj
 |   +-- to IN prep
 |       +-- thousands NNS pobj
 |           +-- of IN prep
 |               +-- participants NNS pobj
 +-- . . punct

36
Input: No node should be required to learn or maintain global knowledge , for instance global group membership or the set of data objects currently available at all nodes .
Parse:
required VBN ROOT
 +-- node NN nsubjpass
 |   +-- No DT det
 +-- should MD aux
 +-- be VB auxpass
 +-- learn VB xcomp
 |   +-- to TO aux
 |   +-- or CC cc
 |   +-- maintain VB conj
 |   +-- knowledge NN dobj
 |   |   +-- global JJ amod
 |   +-- , , punct
 |   +-- for IN prep
 |       +-- membership NN pobj
 |           +-- instance NN nn
 |           +-- global JJ amod
 |           +-- group NN nn
 |           +-- or CC cc
 |           +-- set NN conj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- objects NNS pobj
 |                       +-- data NNS nn
 |                       +-- available JJ amod
 |                           +-- currently RB advmod
 |                           +-- at IN prep
 |                               +-- nodes NNS pobj
 |                                   +-- all DT det
 +-- . . punct

37
Input: Finally , the approach must be robust to individual failures .
Parse:
robust JJ ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- approach NN nsubj
 |   +-- the DT det
 +-- must MD aux
 +-- be VB cop
 +-- to IN prep
 |   +-- failures NNS pobj
 |       +-- individual JJ amod
 +-- . . punct

38
Input: For example , the failure of a single node should result only in a temporary reduction in the bandwidth delivered to a small subset of participants ; no single failure should result in the complete loss of data for any significant fraction of nodes , as might be the case for a single node failure high up in a multicast overlay tree .
Parse:
result VB ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- failure NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- node NN pobj
 |           +-- a DT det
 |           +-- single JJ amod
 +-- should MD aux
 +-- in IN prep
 |   +-- only RB advmod
 |   +-- reduction NN pobj
 |       +-- a DT det
 |       +-- temporary JJ amod
 |       +-- in IN prep
 |           +-- bandwidth NN pobj
 |               +-- the DT det
 |               +-- delivered VBN partmod
 |                   +-- to IN prep
 |                       +-- subset NN pobj
 |                           +-- a DT det
 |                           +-- small JJ amod
 |                           +-- of IN prep
 |                               +-- participants NNS pobj
 +-- ; : punct
 +-- result VB parataxis
 |   +-- failure NN nsubj
 |   |   +-- no DT det
 |   |   +-- single JJ amod
 |   +-- should MD aux
 |   +-- in IN prep
 |   |   +-- loss NN pobj
 |   |       +-- the DT det
 |   |       +-- complete JJ amod
 |   |       +-- of IN prep
 |   |       |   +-- data NNS pobj
 |   |       +-- for IN prep
 |   |           +-- fraction NN pobj
 |   |               +-- any DT det
 |   |               +-- significant JJ amod
 |   |               +-- of IN prep
 |   |                   +-- nodes NNS pobj
 |   +-- , , punct
 |   +-- case NN advcl
 |       +-- as IN mark
 |       +-- might MD aux
 |       +-- be VB cop
 |       +-- the DT det
 |       +-- for IN prep
 |           +-- failure NN pobj
 |               +-- a DT det
 |               +-- node NN nn
 |               |   +-- single JJ amod
 |               +-- high JJ amod
 |                   +-- up RP dep
 |                   +-- in IN prep
 |                       +-- tree NN pobj
 |                           +-- a DT det
 |                           +-- multicast JJ amod
 |                           +-- overlay NN nn
 +-- . . punct

39
Input: In this context , this paper presents the design and evaluation of Bullet , an algorithm for constructing an overlay mesh that attempts to maintain the above properties .
Parse:
presents VBZ ROOT
 +-- In IN prep
 |   +-- context NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- paper NN nsubj
 |   +-- this DT det
 +-- design NN dobj
 |   +-- the DT det
 |   +-- and CC cc
 |   +-- evaluation NN conj
 |   +-- of IN prep
 |       +-- Bullet NNP pobj
 |           +-- , , punct
 |           +-- algorithm NN appos
 |               +-- an DT det
 |               +-- for IN prep
 |                   +-- constructing VBG pcomp
 |                       +-- mesh NN dobj
 |                           +-- an DT det
 |                           +-- overlay NN nn
 |                           +-- attempts VBZ rcmod
 |                               +-- that WDT nsubj
 |                               +-- maintain VB xcomp
 |                                   +-- to TO aux
 |                                   +-- properties NNS dobj
 |                                       +-- the DT det
 |                                       +-- above JJ amod
 +-- . . punct

40
Input: Bullet nodes begin by self organizing into an overlay tree , which can be constructed by any of a number of existing techniques -LRB- 1 , 18 , 21 , 24 , 34 -RRB- .
Parse:
begin VB ROOT
 +-- nodes NNS nsubj
 |   +-- Bullet NN nn
 +-- by IN prep
 |   +-- self NN pobj
 +-- organizing VBG xcomp
 |   +-- into IN prep
 |       +-- tree NN pobj
 |           +-- an DT det
 |           +-- overlay NN nn
 |           +-- , , punct
 |           +-- constructed VBN rcmod
 |               +-- which WDT nsubjpass
 |               +-- can MD aux
 |               +-- be VB auxpass
 |               +-- by IN prep
 |                   +-- any DT pobj
 |                       +-- of IN prep
 |                           +-- number NN pobj
 |                               +-- a DT det
 |                               +-- of IN prep
 |                               |   +-- techniques NNS pobj
 |                               |       +-- existing VBG amod
 |                               +-- 1 CD appos
 |                                   +-- -LRB- -LRB- punct
 |                                   +-- , , punct
 |                                   +-- 18 CD num
 |                                   +-- 21 CD num
 |                                   +-- 24 CD num
 |                                   +-- 34 CD num
 |                                   +-- -RRB- -RRB- punct
 +-- . . punct

41
Input: Each Bullet node , starting with the root of the underlying tree , then transmits a disjoint set of data to each of its children , with the goal of maintaining uniform representativeness of each data item across all participants .
Parse:
transmits VBZ ROOT
 +-- node NN nsubj
 |   +-- Each DT det
 |   +-- Bullet NNP nn
 +-- , , punct
 +-- starting VBG partmod
 |   +-- with IN prep
 |       +-- root NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- tree NN pobj
 |                   +-- the DT det
 |                   +-- underlying VBG amod
 +-- then RB advmod
 +-- set NN dobj
 |   +-- a DT det
 |   +-- disjoint NN nn
 |   +-- of IN prep
 |       +-- data NNS pobj
 |           +-- to IN prep
 |               +-- each DT pobj
 |                   +-- of IN prep
 |                       +-- children NNS pobj
 |                           +-- its PRP$ poss
 +-- with IN prep
 |   +-- goal NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- maintaining VBG pcomp
 |               +-- representativeness NN dobj
 |               |   +-- uniform JJ amod
 |               |   +-- of IN prep
 |               |       +-- item NN pobj
 |               |           +-- each DT det
 |               |           +-- data NNS nn
 |               +-- across IN prep
 |                   +-- participants NNS pobj
 |                       +-- all DT det
 +-- . . punct

42
Input: The level of disjointness is determined by the bandwidth available to each of its children .
Parse:
determined VBN ROOT
 +-- level NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- disjointness NN pobj
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- bandwidth NN pobj
 |       +-- the DT det
 |       +-- available JJ amod
 |           +-- to IN prep
 |               +-- each DT pobj
 |                   +-- of IN prep
 |                       +-- children NNS pobj
 |                           +-- its PRP$ poss
 +-- . . punct

43
Input: Bullet then employs a scalable and efficient algorithm to enable nodes to quickly locate multiple peers capable of transmitting missing data items to the node .
Parse:
employs VBZ ROOT
 +-- Bullet NN nsubj
 +-- then RB advmod
 +-- algorithm NN dobj
 |   +-- a DT det
 |   +-- scalable JJ amod
 |       +-- and CC cc
 |       +-- efficient JJ conj
 +-- enable VB xcomp
 |   +-- to TO aux
 |   +-- nodes NNS dobj
 |   +-- locate VB xcomp
 |       +-- to TO aux
 |       +-- quickly RB advmod
 |       +-- peers NNS dobj
 |           +-- multiple JJ amod
 |           +-- capable JJ amod
 |               +-- of IN prep
 |                   +-- transmitting VBG pcomp
 |                       +-- items NNS dobj
 |                       |   +-- missing VBG amod
 |                       |   +-- data NNS nn
 |                       +-- to IN prep
 |                           +-- node NN pobj
 |                               +-- the DT det
 +-- . . punct

44
Input: Thus , Bullet layers a high bandwidth mesh on top of an arbitrary overlay tree .
Parse:
layers VBZ ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- mesh NN dobj
 |   +-- a DT det
 |   +-- high JJ amod
 |   +-- bandwidth NN nn
 +-- on IN prep
 |   +-- top NN pobj
 |       +-- of IN prep
 |           +-- tree NN pobj
 |               +-- an DT det
 |               +-- arbitrary JJ amod
 |               +-- overlay NN nn
 +-- . . punct

45
Input: Depending on the type of data being transmitted , Bullet can optionally employ a variety of encoding schemes , for instance Erasure codes -LRB- 7 , 26 , 25 -RRB- or Multiple Description Coding -LRB- 17 -RRB- , to efficiently disseminate data , adapt to variable bandwidth , and recover from losses .
Parse:
employ VB ROOT
 +-- Depending VBG prep
 |   +-- on IN pcomp
 |       +-- transmitted VBN pcomp
 |           +-- type NN nsubjpass
 |           |   +-- the DT det
 |           |   +-- of IN prep
 |           |       +-- data NNS pobj
 |           +-- being VBG auxpass
 +-- , , punct
 +-- Bullet NNP nsubj
 +-- can MD aux
 +-- optionally RB advmod
 +-- variety NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- schemes NNS pobj
 |           +-- encoding VBG nn
 +-- for IN prep
 |   +-- codes NNS pobj
 |       +-- instance NN nn
 |       +-- Erasure NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- 7 CD dep
 |       |   +-- , , punct
 |       |   +-- 26 CD num
 |       |   +-- 25 CD num
 |       +-- -RRB- -RRB- punct
 |       +-- or CC cc
 |       +-- Coding NNP conj
 |           +-- Multiple NNP nn
 |           +-- Description NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- 17 CD dep
 |           +-- -RRB- -RRB- punct
 +-- disseminate VB xcomp
 |   +-- to TO aux
 |   +-- efficiently RB advmod
 |   +-- data NNS dobj
 |   +-- , , punct
 |   +-- adapt VBP conj
 |   |   +-- to IN prep
 |   |       +-- bandwidth NN pobj
 |   |           +-- variable JJ amod
 |   +-- and CC cc
 |   +-- recover VB conj
 |       +-- from IN prep
 |           +-- losses NNS pobj
 +-- . . punct

46
Input: Finally , we use TFRC -LRB- 15 -RRB- to transfer data both down the overlay tree and among peers .
Parse:
use VBP ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- TFRC NNP dobj
 |   +-- 15 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- transfer VB xcomp
 |   +-- to TO aux
 |   +-- data NNS dobj
 |   +-- down IN prep
 |       +-- both DT preconj
 |       +-- tree NN pobj
 |       |   +-- the DT det
 |       |   +-- overlay NN nn
 |       +-- and CC cc
 |       +-- among IN conj
 |           +-- peers NNS pobj
 +-- . . punct

47
Input: This ensures that the entire overlay behaves in a congestion friendly manner , adjusting its transmission rate on a per connection basis based on prevailing network conditions .
Parse:
ensures VBZ ROOT
 +-- This DT nsubj
 +-- behaves NNS ccomp
 |   +-- that IN mark
 |   +-- overlay NN nsubj
 |   |   +-- the DT det
 |   |   +-- entire JJ amod
 |   +-- in IN prep
 |   |   +-- manner NN pobj
 |   |       +-- a DT det
 |   |       +-- friendly JJ amod
 |   |           +-- congestion NN npadvmod
 |   +-- , , punct
 |   +-- adjusting VBG xcomp
 |       +-- rate NN dobj
 |       |   +-- its PRP$ poss
 |       |   +-- transmission NN nn
 |       +-- on IN prep
 |       |   +-- basis NN pobj
 |       |       +-- a DT det
 |       |       +-- per IN nn
 |       |           +-- connection NN pobj
 |       +-- based VBN prep
 |           +-- on IN pcomp
 |               +-- conditions NNS pobj
 |                   +-- prevailing VBG amod
 |                   +-- network NN nn
 +-- . . punct

48
Input: One important benefit of our approach is that the bandwidth delivered by the Bullet mesh is somewhat independent of the bandwidth available through the underlying overlay tree .
Parse:
is VBZ ROOT
 +-- benefit NN nsubj
 |   +-- One CD num
 |   +-- important JJ amod
 |   +-- of IN prep
 |       +-- approach NN pobj
 |           +-- our PRP$ poss
 +-- independent JJ ccomp
 |   +-- that IN mark
 |   +-- bandwidth NN nsubj
 |   |   +-- the DT det
 |   |   +-- delivered VBN partmod
 |   |       +-- by IN prep
 |   |           +-- mesh NN pobj
 |   |               +-- the DT det
 |   |               +-- Bullet NNP nn
 |   +-- is VBZ cop
 |   +-- somewhat RB advmod
 |   +-- of IN prep
 |       +-- bandwidth NN pobj
 |           +-- the DT det
 |           +-- available JJ amod
 |               +-- through IN prep
 |                   +-- tree NN pobj
 |                       +-- the DT det
 |                       +-- underlying JJ amod
 |                       +-- overlay NN nn
 +-- . . punct

49
Input: One significant limitation to building high bandwidth overlay trees is the overhead associated with the tree construction protocol .
Parse:
overhead NN ROOT
 +-- limitation NN nsubj
 |   +-- One CD num
 |   +-- significant JJ amod
 |   +-- to IN prep
 |       +-- building VBG pcomp
 |           +-- trees NNS dobj
 |               +-- high JJ amod
 |               +-- overlay NN nn
 |                   +-- bandwidth NN nn
 +-- is VBZ cop
 +-- the DT det
 +-- associated VBN partmod
 |   +-- with IN prep
 |       +-- protocol NN pobj
 |           +-- the DT det
 |           +-- construction NN nn
 |               +-- tree NN nn
 +-- . . punct

50
Input: In these trees , it is critical that each participant locates a parent via probing with a high level of available bandwidth because it receives data from only a single source -LRB- its parent -RRB- .
Parse:
critical JJ ROOT
 +-- In IN prep
 |   +-- trees NNS pobj
 |       +-- these DT det
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- locates VBZ ccomp
 |   +-- that IN mark
 |   +-- participant NN nsubj
 |   |   +-- each DT det
 |   +-- parent NN dobj
 |   |   +-- a DT det
 |   +-- via IN prep
 |   |   +-- probing VBG pcomp
 |   |       +-- with IN prep
 |   |           +-- level NN pobj
 |   |               +-- a DT det
 |   |               +-- high JJ amod
 |   |               +-- of IN prep
 |   |                   +-- bandwidth NN pobj
 |   |                       +-- available JJ amod
 |   +-- receives VBZ advcl
 |       +-- because IN mark
 |       +-- it PRP nsubj
 |       +-- data NNS dobj
 |           +-- from IN prep
 |               +-- source NN pobj
 |                   +-- only RB advmod
 |                   +-- a DT det
 |                   +-- single JJ amod
 |                   +-- parent NN appos
 |                       +-- -LRB- -LRB- punct
 |                       +-- its PRP$ poss
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

51
Input: Thus , even once the tree is constructed , nodes must continue their probing to adapt to dynamically changing network conditions .
Parse:
continue VB ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- constructed VBN advcl
 |   +-- even RB advmod
 |   +-- once IN mark
 |   +-- tree NN nsubjpass
 |   |   +-- the DT det
 |   +-- is VBZ auxpass
 +-- nodes NNS nsubj
 +-- must MD aux
 +-- probing NN dobj
 |   +-- their PRP$ poss
 +-- adapt VB xcomp
 |   +-- to TO aux
 |   +-- to IN prep
 |       +-- conditions NNS pobj
 |           +-- changing VBG amod
 |           |   +-- dynamically RB advmod
 |           +-- network NN nn
 +-- . . punct

52
Input: While bandwidth probing is an active area of research -LRB- 20 , 35 -RRB- , accurate results generally require the transfer of a large amount of data to gain confidence in the results .
Parse:
require VBP ROOT
 +-- area NN advcl
 |   +-- While IN mark
 |   +-- bandwidth NN nsubj
 |   |   +-- probing VBG partmod
 |   +-- is VBZ cop
 |   +-- an DT det
 |   +-- active JJ amod
 |   +-- of IN prep
 |   |   +-- research NN pobj
 |   +-- 20 CD dep
 |       +-- -LRB- -LRB- punct
 |       +-- , , punct
 |       +-- 35 CD dep
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- results NNS nsubj
 |   +-- accurate JJ amod
 +-- generally RB advmod
 +-- transfer NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- amount NN pobj
 |   |       +-- a DT det
 |   |       +-- large JJ amod
 |   |       +-- of IN prep
 |   |           +-- data NNS pobj
 |   +-- gain VB infmod
 |       +-- to TO aux
 |       +-- confidence NN dobj
 |           +-- in IN prep
 |               +-- results NNS pobj
 |                   +-- the DT det
 +-- . . punct

53
Input: Our approach with Bullet allows receivers to obtain high bandwidth in aggregate using individual transfers from peers spread across the system .
Parse:
allows VBZ ROOT
 +-- approach NN nsubj
 |   +-- Our PRP$ poss
 |   +-- with IN prep
 |       +-- Bullet NNP pobj
 +-- obtain VB xcomp
 |   +-- receivers NNS nsubj
 |   +-- to TO aux
 |   +-- bandwidth NN dobj
 |       +-- high JJ amod
 |       +-- in IN prep
 |       |   +-- aggregate NN pobj
 |       +-- using VBG partmod
 |           +-- transfers NNS dobj
 |               +-- individual JJ amod
 |               +-- from IN prep
 |                   +-- peers NNS pobj
 |                       +-- spread VBN partmod
 |                           +-- across IN prep
 |                               +-- system NN pobj
 |                                   +-- the DT det
 +-- . . punct

54
Input: Thus , in Bullet , the bandwidth available from any individual peer is much less important than in any bandwidthoptimized tree .
Parse:
important JJ ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- Bullet NNP pobj
 +-- bandwidth NN nsubj
 |   +-- the DT det
 |   +-- available JJ amod
 |       +-- from IN prep
 |           +-- peer NN pobj
 |               +-- any DT det
 |               +-- individual JJ amod
 +-- is VBZ cop
 +-- less RBR advmod
 |   +-- much RB advmod
 +-- than IN prep
 |   +-- in IN pcomp
 |       +-- tree NN pobj
 |           +-- any DT det
 |           +-- bandwidthoptimized JJ amod
 +-- . . punct

55
Input: Further , all the bandwidth that would normally be consumed probing for bandwidth can be reallocated to streaming data across the Bullet mesh .
Parse:
reallocated VBN ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- bandwidth NN nsubjpass
 |   +-- all PDT predet
 |   +-- the DT det
 |   +-- consumed VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- would MD aux
 |       +-- normally RB advmod
 |       +-- be VB auxpass
 |       +-- probing VBG xcomp
 |           +-- for IN prep
 |               +-- bandwidth NN pobj
 +-- can MD aux
 +-- be VB auxpass
 +-- to IN prep
 |   +-- streaming VBG pcomp
 |       +-- data NNS dobj
 |           +-- across IN prep
 |               +-- mesh NN pobj
 |                   +-- the DT det
 |                   +-- Bullet NNP nn
 +-- . . punct

56
Input: We have completed a prototype of Bullet running on top of a number of overlay trees .
Parse:
completed VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- prototype NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |   |   +-- Bullet NNP pobj
 |   +-- running VBG partmod
 |       +-- on IN prep
 |           +-- top NN pobj
 |               +-- of IN prep
 |                   +-- number NN pobj
 |                       +-- a DT det
 |                       +-- of IN prep
 |                           +-- trees NNS pobj
 |                               +-- overlay NN nn
 +-- . . punct

57
Input: Our evaluation of a 1000 node overlay running across a wide variety of emulated 20 , 000 node network topologies shows that Bullet can deliver up to twice the bandwidth of a bandwidth optimized tree -LRB- using an o ? ine algorithm and global network topology information -RRB- , all while remaining TCP friendly .
Parse:
shows VBZ ROOT
 +-- evaluation NN nsubj
 |   +-- Our PRP$ poss
 |   +-- of IN prep
 |       +-- overlay NN pobj
 |           +-- a DT det
 |           +-- 1000 CD num
 |           +-- node NN nn
 |           +-- running VBG partmod
 |               +-- across IN prep
 |                   +-- variety NN pobj
 |                       +-- a DT det
 |                       +-- wide JJ amod
 |                       +-- of IN prep
 |                           +-- topologies NNS pobj
 |                               +-- emulated VBN amod
 |                               |   +-- 20 CD num
 |                               +-- , , punct
 |                               +-- 000 CD num
 |                               +-- network NN nn
 |                                   +-- node NN nn
 +-- deliver VB ccomp
 |   +-- that IN mark
 |   +-- Bullet NNP nsubj
 |   +-- can MD aux
 |   +-- bandwidth NN dobj
 |   |   +-- twice PDT num
 |   |   |   +-- up IN quantmod
 |   |   |   +-- to TO quantmod
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- tree NN pobj
 |   |           +-- a DT det
 |   |           +-- bandwidth NN nn
 |   |           +-- optimized VBN amod
 |   +-- -LRB- -LRB- punct
 |   +-- using VBG dep
 |       +-- o NN dobj
 |       |   +-- an DT det
 |       |   +-- ? . punct
 |       |   +-- algorithm NN dep
 |       |   |   +-- ine NN nn
 |       |   |   +-- and CC cc
 |       |   |   +-- information NN conj
 |       |   |       +-- global JJ amod
 |       |   |       +-- network NN nn
 |       |   |       +-- topology NN nn
 |       |   +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- remaining VBG advcl
 |           +-- while IN mark
 |           |   +-- all DT det
 |           +-- friendly JJ acomp
 |               +-- TCP NNP npadvmod
 +-- . . punct

58
Input: We also deployed our prototype across the PlanetLab -LRB- 31 -RRB- wide area testbed .
Parse:
deployed VBD ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- prototype NN dobj
     +-- our PRP$ poss
     +-- across IN prep
         +-- PlanetLab NNP pobj
             +-- the DT det
             +-- area NN appos
                 +-- -LRB- -LRB- punct
                 +-- 31 CD num
                 +-- -RRB- -RRB- punct
                 +-- wide JJ amod
                 +-- testbed VBN amod
                 +-- . . punct

59
Input: For these live Internet runs , we find that Bullet can deliver comparable bandwidth performance improvements .
Parse:
find VBP ROOT
 +-- For IN prep
 |   +-- runs NNS pobj
 |       +-- these DT det
 |       +-- live JJ amod
 |       +-- Internet NN nn
 +-- , , punct
 +-- we PRP nsubj
 +-- deliver VB ccomp
 |   +-- that IN mark
 |   +-- Bullet NNP nsubj
 |   +-- can MD aux
 |   +-- improvements NNS dobj
 |       +-- comparable JJ amod
 |       +-- performance NN nn
 |           +-- bandwidth NN nn
 +-- . . punct

60
Input: In both cases , the overhead of maintaining the Bullet mesh and locating the appropriate disjoint data is limited to 30 Kbps per node , acceptable for our target high bandwidth , large scale scenarios .
Parse:
limited VBN ROOT
 +-- In IN prep
 |   +-- cases NNS pobj
 |       +-- both DT det
 +-- , , punct
 +-- overhead NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- maintaining VBG pcomp
 |           +-- mesh NN dobj
 |           |   +-- the DT det
 |           |   +-- Bullet NNP nn
 |           +-- and CC cc
 |           +-- locating VBG conj
 |               +-- data NNS dobj
 |                   +-- the DT det
 |                   +-- appropriate JJ amod
 |                   +-- disjoint NN nn
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- Kbps NNS pobj
 |       +-- 30 CD num
 |       +-- per IN prep
 |       |   +-- node NN pobj
 |       +-- , , punct
 |       +-- acceptable JJ amod
 |           +-- for IN prep
 |               +-- bandwidth NN pobj
 |                   +-- target NN dep
 |                   |   +-- our PRP$ poss
 |                   +-- high JJ amod
 |                   +-- , , punct
 |                   +-- scenarios NNS appos
 |                       +-- scale NN nn
 |                           +-- large JJ amod
 +-- . . punct

61
Input: The remainder of this paper is organized as follows .
Parse:
organized VBN ROOT
 +-- remainder NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- paper NN pobj
 |           +-- this DT det
 +-- is VBZ auxpass
 +-- follows VBZ advcl
 |   +-- as IN mark
 +-- . . punct

62
Input: Section 2 presents Bullet '' s system components including RanSub , informed content delivery , and TFRC .
Parse:
presents VBZ ROOT
 +-- Section NN nsubj
 |   +-- 2 CD num
 +-- components NNS dobj
 |   +-- Bullet NNP poss
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- system NN nn
 |   +-- including VBG prep
 |       +-- RanSub NNP pobj
 |           +-- , , punct
 |           +-- delivery NN conj
 |           |   +-- informed VBN amod
 |           |   +-- content NN nn
 |           +-- and CC cc
 |           +-- TFRC NNP conj
 +-- . . punct

63
Input: Section 3 then details Bullet , an efficient data distribution system for bandwidth intensive applications .
Parse:
details VBZ ROOT
 +-- Section NN nsubj
 |   +-- 3 CD num
 +-- then RB advmod
 +-- Bullet NNP dobj
 |   +-- , , punct
 |   +-- system NN appos
 |       +-- an DT det
 |       +-- efficient JJ amod
 |       +-- distribution NN nn
 |       |   +-- data NN nn
 |       +-- for IN prep
 |           +-- applications NNS pobj
 |               +-- intensive JJ amod
 |                   +-- bandwidth NN npadvmod
 +-- . . punct

64
Input: Section 4 evaluates Bullet '' s performance for a variety of network topologies , and compares it to existing multicast techniques .
Parse:
evaluates VBZ ROOT
 +-- Section NN nsubj
 |   +-- 4 CD num
 +-- performance NN dobj
 |   +-- Bullet NNP poss
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- for IN prep
 |       +-- variety NN pobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- topologies NNS pobj
 |                   +-- network NN nn
 +-- , , punct
 +-- and CC cc
 +-- compares VBZ conj
 |   +-- it PRP dobj
 |   +-- to IN prep
 |       +-- techniques NNS pobj
 |           +-- existing VBG amod
 |           +-- multicast JJ amod
 +-- . . punct

65
Input: Section 5 places our work in the context of related efforts and Section 6 presents our conclusions. .
Parse:
places VBZ ROOT
 +-- Section NN nsubj
 |   +-- 5 CD num
 +-- work NN dobj
 |   +-- our PRP$ poss
 +-- in IN prep
 |   +-- context NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- efforts NNS pobj
 |               +-- related JJ amod
 +-- and CC cc
 +-- presents VBZ conj
 |   +-- Section NN nsubj
 |   |   +-- 6 CD num
 |   +-- conclusions. NNS dobj
 |       +-- our PRP$ poss
 +-- . . punct
