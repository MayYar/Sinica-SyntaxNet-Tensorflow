
1
Input: FRAMEWORK DESIGN Most existing protocol frameworks are event based .
Parse:
event NN ROOT
 +-- frameworks NNS nsubj
 |   +-- DESIGN NNP nn
 |   |   +-- FRAMEWORK NNP nn
 |   +-- Most JJS amod
 |   +-- protocol NN nn
 |       +-- existing VBG amod
 +-- are VBP cop
 +-- based VBN partmod
 +-- . . punct

2
Input: Examples are Cactus -LRB- 5 , 2 -RRB- , Appia -LRB- 1 , 16 -RRB- and Ensemble -LRB- 12 , 17 -RRB- .
Parse:
Cactus NNP ROOT
 +-- Examples NNS nsubj
 +-- are VBP cop
 +-- -LRB- -LRB- punct
 +-- 5 CD dep
 |   +-- , , punct
 |   +-- 2 CD num
 +-- -RRB- -RRB- punct
 +-- , , punct
 +-- Appia NNP conj
 |   +-- -LRB- -LRB- punct
 |   +-- 1 CD dep
 |   |   +-- , , punct
 |   |   +-- 16 CD num
 |   +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- 12 CD conj
 |   +-- Ensemble NNP dep
 |   +-- -LRB- -LRB- punct
 |   +-- , , punct
 |   +-- 17 CD amod
 |   +-- -RRB- -RRB- punct
 +-- . . punct

3
Input: In this section , we define the notion of an event in protocol frameworks .
Parse:
define VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- notion NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- event NN pobj
 |           +-- an DT det
 |           +-- in IN prep
 |               +-- frameworks NNS pobj
 |                   +-- protocol NN nn
 +-- . . punct

4
Input: We also explain how protocol modules are structured in event based frameworks .
Parse:
explain VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- structured VBN ccomp
 |   +-- how WRB advmod
 |   +-- modules NNS nsubjpass
 |   |   +-- protocol NN nn
 |   +-- are VBP auxpass
 |   +-- in IN prep
 |       +-- frameworks NNS pobj
 |           +-- based VBN amod
 |               +-- event NN dep
 +-- . . punct

5
Input: Events .
Parse:
Events NNS ROOT
 +-- . . punct

6
Input: An event is a special object for indirect communication between protocol modules in the same stack .
Parse:
object NN ROOT
 +-- event NN nsubj
 |   +-- An DT det
 +-- is VBZ cop
 +-- a DT det
 +-- special JJ amod
 +-- for IN prep
 |   +-- communication NN pobj
 |       +-- indirect JJ amod
 |       +-- between IN prep
 |       |   +-- modules NNS pobj
 |       |       +-- protocol NN nn
 |       +-- in IN prep
 |           +-- stack NN pobj
 |               +-- the DT det
 |               +-- same JJ amod
 +-- . . punct

7
Input: Events may transport some information , e.g .
Parse:
transport VB ROOT
 +-- Events NNS nsubj
 +-- may MD aux
 +-- information NN dobj
 |   +-- some DT det
 |   +-- , , punct
 |   +-- e.g NNP appos
 +-- . . punct

8
Input: a network message or some other data .
Parse:
message NN ROOT
 +-- a DT det
 +-- network NN nn
 +-- or CC cc
 +-- data NNS conj
 |   +-- some DT det
 |   +-- other JJ amod
 +-- . . punct

9
Input: With events , the communication is indirect , i.e .
Parse:
i.e NN ROOT
 +-- With IN prep
 |   +-- events NNS pobj
 +-- , , punct
 +-- communication NN nsubj
 |   +-- the DT det
 +-- is VBZ cop
 +-- indirect JJ amod
 +-- . . punct

10
Input: a protocol module that triggers an event is not aware of the module -LRB- s -RRB- that handle the event .
Parse:
aware JJ ROOT
 +-- module NN nsubj
 |   +-- a DT det
 |   +-- protocol NN nn
 |   +-- triggers VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- event NN dobj
 |           +-- an DT det
 +-- is VBZ cop
 +-- not RB neg
 +-- of IN prep
 |   +-- module NN pobj
 |       +-- the DT det
 |       +-- -LRB- -LRB- punct
 |       +-- s VBZ dep
 |       +-- -RRB- -RRB- punct
 |       +-- handle VBP rcmod
 |           +-- that WDT nsubj
 |           +-- event NN dobj
 |               +-- the DT det
 +-- . . punct

11
Input: Events enable one to many communication within a protocol stack .
Parse:
enable VBP ROOT
 +-- Events NNS nsubj
 +-- one CD dobj
 +-- to IN prep
 |   +-- communication NN pobj
 |       +-- many JJ amod
 |       +-- within IN prep
 |           +-- stack NN pobj
 |               +-- a DT det
 |               +-- protocol NN nn
 +-- . . punct

12
Input: Triggering an event can be done either synchronously or asynchronously .
Parse:
done VBN ROOT
 +-- event NN nsubjpass
 |   +-- Triggering VBG amod
 |   +-- an DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- synchronously RB advmod
 |   +-- either CC preconj
 |   +-- or CC cc
 |   +-- asynchronously RB conj
 +-- . . punct

13
Input: In the former case , the thread that triggers an event e is blocked until all protocol modules that handle e have terminated handling of event e .
Parse:
blocked VBN ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- former JJ amod
 +-- , , punct
 +-- thread NN nsubjpass
 |   +-- the DT det
 |   +-- triggers VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- e NN dobj
 |           +-- an DT det
 |           +-- event NN nn
 +-- is VBZ auxpass
 +-- terminated VBN advcl
 |   +-- until IN mark
 |   +-- modules NNS nsubj
 |   |   +-- all DT det
 |   |   +-- protocol NN nn
 |   |   +-- handle VBP rcmod
 |   |       +-- that WDT nsubj
 |   |       +-- e PRP dobj
 |   +-- have VBP aux
 |   +-- handling NN dobj
 |       +-- of IN prep
 |           +-- event NN pobj
 +-- e NFP punct
 +-- . . punct

14
Input: In the latter case , the thread that triggers the event is not blocked .
Parse:
blocked VBN ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- latter JJ amod
 +-- , , punct
 +-- thread NN nsubjpass
 |   +-- the DT det
 |   +-- triggers VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- event NN dobj
 |           +-- the DT det
 +-- is VBZ auxpass
 +-- not RB neg
 +-- . . punct

15
Input: Protocol Modules .
Parse:
Modules NNP ROOT
 +-- Protocol NNP nn
 +-- . . punct

16
Input: In event based protocol frameworks , a protocol module consists of a set of handlers .
Parse:
consists VBZ ROOT
 +-- In IN prep
 |   +-- frameworks NNS pobj
 |       +-- based VBN amod
 |       |   +-- event NN dep
 |       +-- protocol NN nn
 +-- , , punct
 +-- module NN nsubj
 |   +-- a DT det
 |   +-- protocol NN nn
 +-- of IN prep
 |   +-- set NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- handlers NNS pobj
 +-- . . punct

17
Input: Each handler is dedicated to handling of a specific event .
Parse:
dedicated VBN ROOT
 +-- handler NN nsubjpass
 |   +-- Each DT det
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- handling VBG pcomp
 |       +-- of IN prep
 |           +-- event NN pobj
 |               +-- a DT det
 |               +-- specific JJ amod
 +-- . . punct

18
Input: Handlers of the same protocol module may share data .
Parse:
share VB ROOT
 +-- Handlers NNS nsubj
 |   +-- of IN prep
 |       +-- module NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- protocol NN nn
 +-- may MD aux
 +-- data NNS dobj
 +-- . . punct

19
Input: Handlers can be dynamically bound to events .
Parse:
bound VBN ROOT
 +-- Handlers NNS nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- dynamically RB advmod
 +-- to IN prep
 |   +-- events NNS pobj
 +-- . . punct

20
Input: Handlers can also be unbound dynamically .
Parse:
unbound JJ ROOT
 +-- Handlers NNS nsubj
 +-- can MD aux
 +-- also RB advmod
 +-- be VB cop
 +-- dynamically RB advmod
 +-- . . punct

21
Input: Upon triggering some event e , all handlers bound to e are executed .
Parse:
executed VBN ROOT
 +-- Upon IN prep
 |   +-- triggering VBG pcomp
 |       +-- e NNS dobj
 |           +-- some DT det
 |           +-- event NN nn
 +-- , , punct
 +-- handlers NNS nsubjpass
 |   +-- all DT det
 |   +-- bound VBN partmod
 |       +-- to IN prep
 |           +-- e NN pobj
 +-- are VBP auxpass
 +-- . . punct

22
Input: If no handler is bound , the behavior is usually unspecified .
Parse:
unspecified JJ ROOT
 +-- bound VBN advcl
 |   +-- If IN mark
 |   +-- handler NN nsubjpass
 |   |   +-- no DT det
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- behavior NN nsubj
 |   +-- the DT det
 +-- is VBZ cop
 +-- usually RB advmod
 +-- . . punct

23
Input: Stack 1 P1 Q1 R1 S1 Network f e gg deliver send h Figure 2
Parse:
Stack VB ROOT
 +-- P1 CD dobj
 |   +-- 1 CD number
 |   +-- e SYM prep
 |       +-- Q1 CD num
 |       +-- Network NNP nn
 |       |   +-- S1 CD num
 |       |       +-- R1 CD number
 |       +-- f NNP nn
 +-- gg , punct
 +-- deliver VBP dep
     +-- send VB ccomp
         +-- Figure NN dobj
             +-- h NN nn
             +-- 2 CD num

24
Input: Events are represented by small letters , e.g .
Parse:
represented VBN ROOT
 +-- Events NNS nsubjpass
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- letters NNS pobj
 |       +-- small JJ amod
 |       +-- , , punct
 |       +-- e.g NFP appos
 +-- . . punct

25
Input: e , f , .. .
Parse:
e UH ROOT
 +-- , , punct
 +-- f UH dep
 +-- .. NFP punct
 +-- . . punct

26
Input: The fact that a protocol module can trigger an event is represented by an arrow starting from the module .
Parse:
represented VBN ROOT
 +-- fact NN nsubjpass
 |   +-- The DT det
 |   +-- trigger VB ccomp
 |       +-- that IN mark
 |       +-- module NN nsubj
 |       |   +-- a DT det
 |       |   +-- protocol NN nn
 |       +-- can MD aux
 |       +-- event NN dobj
 |           +-- an DT det
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- arrow NN pobj
 |       +-- an DT det
 |       +-- starting VBG partmod
 |           +-- from IN prep
 |               +-- module NN pobj
 |                   +-- the DT det
 +-- . . punct

27
Input: A white trapezoid inside a module box represents a handler defined by the protocol module .
Parse:
represents VBZ ROOT
 +-- trapezoid NN nsubj
 |   +-- A DT det
 |   +-- white JJ amod
 |   +-- inside IN prep
 |       +-- box NN pobj
 |           +-- a DT det
 |           +-- module NN nn
 +-- handler NN dobj
 |   +-- a DT det
 |   +-- defined VBN partmod
 |       +-- by IN prep
 |           +-- module NN pobj
 |               +-- the DT det
 |               +-- protocol NN nn
 +-- . . punct

28
Input: To mark that some handler is bound to event e , we use an arrow pointing to the handler -LRB- the label on the arrow represents the event e -RRB- .
Parse:
use VBP ROOT
 +-- mark VB advcl
 |   +-- To TO aux
 |   +-- bound VBN ccomp
 |       +-- that IN mark
 |       +-- handler NN nsubjpass
 |       |   +-- some DT det
 |       +-- is VBZ auxpass
 |       +-- event VB xcomp
 |           +-- to TO aux
 |           +-- e NFP punct
 +-- , , punct
 +-- we PRP nsubj
 +-- arrow NN dobj
 |   +-- an DT det
 |   +-- pointing VBG partmod
 |       +-- to IN prep
 |           +-- handler NN pobj
 |               +-- the DT det
 |               +-- represents VBZ dep
 |                   +-- -LRB- -LRB- punct
 |                   +-- label NN nsubj
 |                   |   +-- the DT det
 |                   |   +-- on IN prep
 |                   |       +-- arrow NN pobj
 |                   |           +-- the DT det
 |                   +-- e NN dobj
 |                   |   +-- the DT det
 |                   |   +-- event NN nn
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

29
Input: For example , the protocol module P1 triggers event e and handles event f -LRB- see Fig .
Parse:
triggers VBZ ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- P1 CD nsubj
 |   +-- the DT det
 |   +-- protocol NN nn
 |   +-- module NN nn
 +-- event NN dobj
 +-- e NFP punct
 +-- and CC cc
 +-- handles VBZ conj
 |   +-- f NN dobj
 |   |   +-- event NN nn
 |   +-- see VB parataxis
 |       +-- -LRB- -LRB- punct
 |       +-- Fig NNP dobj
 +-- . . punct

30
Input: 2 -RRB- .
Parse:
2 LS ROOT
 +-- -RRB- -RRB- punct
 +-- . . punct

31
Input: Note that the network is represented as a special protocol module that handles the send event -LRB- to send a message to another machine -RRB- and triggers the deliver event -LRB- upon receipt of a message from another machine -RRB- .
Parse:
Note VB ROOT
 +-- represented VBN ccomp
 |   +-- that IN mark
 |   +-- network NN nsubjpass
 |   |   +-- the DT det
 |   +-- is VBZ auxpass
 |   +-- as IN prep
 |       +-- module NN pobj
 |           +-- a DT det
 |           +-- special JJ amod
 |           +-- protocol NN nn
 |           +-- handles VBZ rcmod
 |               +-- that WDT nsubj
 |               +-- event NN dobj
 |               |   +-- the DT det
 |               |   +-- send NN nn
 |               +-- send VB xcomp
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- to TO aux
 |               |   +-- message NN dobj
 |               |   |   +-- a DT det
 |               |   +-- to IN prep
 |               |   |   +-- machine NN pobj
 |               |   |       +-- another DT det
 |               |   +-- -RRB- -RRB- punct
 |               +-- and CC cc
 |               +-- triggers VBZ conj
 |                   +-- event NN dobj
 |                   |   +-- the DT det
 |                   |   +-- deliver NN nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- upon IN prep
 |                   |   +-- receipt NN pobj
 |                   |       +-- of IN prep
 |                   |           +-- message NN pobj
 |                   |               +-- a DT det
 |                   |               +-- from IN prep
 |                   |                   +-- machine NN pobj
 |                   |                       +-- another DT det
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

32
Input: Specific Features .
Parse:
Features NNPS ROOT
 +-- Specific JJ amod
 +-- . . punct

33
Input: Some protocol frameworks have unique features .
Parse:
have VBP ROOT
 +-- frameworks NNS nsubj
 |   +-- Some DT det
 |   +-- protocol NN nn
 +-- features NNS dobj
 |   +-- unique JJ amod
 +-- . . punct

34
Input: Below , we present the features that influence composition and implementation of protocol modules .
Parse:
present VBP ROOT
 +-- Below RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- features NNS dobj
 |   +-- the DT det
 |   +-- influence NN rcmod
 |       +-- that WDT nsubj
 |       +-- composition NN dobj
 |           +-- and CC cc
 |           +-- implementation NN conj
 |           +-- of IN prep
 |               +-- modules NNS pobj
 |                   +-- protocol NN nn
 +-- . . punct

35
Input: In Cactus -LRB- 5 , 2 -RRB- , the programmer can give a priority number to a handler upon binding it to an event .
Parse:
give VB ROOT
 +-- In IN prep
 |   +-- Cactus NNP pobj
 |       +-- -LRB- -LRB- punct
 |       +-- 5 CD dep
 |       |   +-- , , punct
 |       |   +-- 2 CD num
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- programmer NN nsubj
 |   +-- the DT det
 +-- can MD aux
 +-- number NN dobj
 |   +-- a DT det
 |   +-- priority NN nn
 +-- to IN prep
 |   +-- handler NN pobj
 |       +-- a DT det
 +-- upon IN prep
 |   +-- binding VBG pcomp
 |       +-- it PRP dobj
 |       +-- to IN prep
 |           +-- event NN pobj
 |               +-- an DT det
 +-- . . punct

36
Input: When an event is triggered , all handlers are executed following the order of priority .
Parse:
executed VBN ROOT
 +-- triggered VBN advcl
 |   +-- When WRB advmod
 |   +-- event NN nsubjpass
 |   |   +-- an DT det
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- handlers NNS nsubjpass
 |   +-- all DT det
 +-- are VBP auxpass
 +-- following VBG prep
 |   +-- order NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- priority NN pobj
 +-- . . punct

37
Input: A handler h is also able to cancel the execution of an event trigger
Parse:
able JJ ROOT
 +-- h NN nsubj
 |   +-- A DT det
 |   +-- handler NN nn
 +-- is VBZ cop
 +-- also RB advmod
 +-- cancel VB xcomp
     +-- to TO aux
     +-- execution NN dobj
         +-- the DT det
         +-- of IN prep
             +-- trigger NN pobj
                 +-- an DT det
                 +-- event NN nn

38
Input: Appia -LRB- 1 , 16 -RRB- and Eva -LRB- 3 -RRB- introduce the notion of channels .
Parse:
introduce VB ROOT
 +-- Appia NNP nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- 1 CD dep
 |   |   +-- , , punct
 |   |   +-- 16 CD num
 |   +-- -RRB- -RRB- punct
 |   +-- and CC cc
 |   +-- Eva NNP conj
 |       +-- -LRB- -LRB- punct
 |       +-- 3 LS dep
 |       +-- -RRB- -RRB- punct
 +-- notion NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- channels NNS pobj
 +-- . . punct

39
Input: Channels allow to build routes of events in protocol stacks .
Parse:
allow VBP ROOT
 +-- Channels NNS nsubj
 +-- build VB xcomp
 |   +-- to TO aux
 |   +-- routes NNS dobj
 |       +-- of IN prep
 |           +-- events NNS pobj
 |               +-- in IN prep
 |                   +-- stacks NNS pobj
 |                       +-- protocol NN nn
 +-- . . punct

40
Input: Each protocol module has to subscribe to one or many channels .
Parse:
has VBZ ROOT
 +-- module NN nsubj
 |   +-- Each DT det
 |   +-- protocol NN nn
 +-- subscribe VB xcomp
 |   +-- to TO aux
 |   +-- to IN prep
 |       +-- channels NNS pobj
 |           +-- one CD num
 |               +-- or CC cc
 |               +-- many JJ conj
 +-- . . punct

41
Input: All events are triggered by specifying a channel they belong to .
Parse:
triggered VBN ROOT
 +-- events NNS nsubjpass
 |   +-- All DT det
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- specifying VBG pcomp
 |       +-- channel NN dobj
 |           +-- a DT det
 |           +-- belong VBP rcmod
 |               +-- they PRP nsubj
 |               +-- to IN prep
 +-- . . punct

42
Input: When a protocol module triggers an event e specifying channel c , all handlers bound to e that are part of a protocol that subscribes to c are executed -LRB- in the order prescribed by the definition of channel c -RRB- . .
Parse:
executed VBN ROOT
 +-- triggers VBZ advcl
 |   +-- When WRB advmod
 |   +-- module NN nsubj
 |   |   +-- a DT det
 |   |   +-- protocol NN nn
 |   +-- event NN dobj
 |   |   +-- an DT det
 |   +-- e , punct
 |   +-- specifying VBG partmod
 |       +-- c NN dobj
 |           +-- channel NN nn
 +-- , , punct
 +-- handlers NNS nsubjpass
 |   +-- all DT det
 |   +-- bound VBN partmod
 |   |   +-- to IN prep
 |   |       +-- e VB pobj
 |   +-- part NN rcmod
 |       +-- that WDT nsubj
 |       +-- are VBP cop
 |       +-- of IN prep
 |           +-- protocol NN pobj
 |               +-- a DT det
 |               +-- subscribes VBZ rcmod
 |                   +-- that WDT nsubj
 |                   +-- to IN prep
 |                       +-- c $ pobj
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- -LRB- -LRB- punct
 |   +-- order NN pobj
 |   |   +-- the DT det
 |   |   +-- prescribed VBN partmod
 |   |       +-- by IN prep
 |   |           +-- definition NN pobj
 |   |               +-- the DT det
 |   |               +-- of IN prep
 |   |                   +-- c NN pobj
 |   |                       +-- channel NN nn
 |   +-- -RRB- -RRB- punct
 +-- . . punct
