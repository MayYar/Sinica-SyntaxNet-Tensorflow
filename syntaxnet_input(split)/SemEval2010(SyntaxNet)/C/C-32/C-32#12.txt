
1
Input: Collaborative applications provide a shared work environment for groups of networked clients collaborating on a common task .
Parse:
provide VBP ROOT
 +-- applications NNS nsubj
 |   +-- Collaborative JJ amod
 +-- environment NN dobj
 |   +-- a DT det
 |   +-- shared VBN amod
 |   +-- work NN nn
 |   +-- for IN prep
 |       +-- groups NNS pobj
 |           +-- of IN prep
 |               +-- clients NNS pobj
 |                   +-- networked VBN amod
 |                   +-- collaborating VBG partmod
 |                       +-- on IN prep
 |                           +-- task NN pobj
 |                               +-- a DT det
 |                               +-- common JJ amod
 +-- . . punct

2
Input: They require strong consistency for shared persistent data and efficient access to fine grained objects .
Parse:
require VBP ROOT
 +-- They PRP nsubj
 +-- consistency NN dobj
 |   +-- strong JJ amod
 |   +-- for IN prep
 |       +-- access NN pobj
 |           +-- shared VBN amod
 |           +-- persistent JJ amod
 |           +-- data NNS nn
 |           |   +-- and CC cc
 |           |   +-- efficient JJ conj
 |           +-- to IN prep
 |               +-- objects NNS pobj
 |                   +-- fine JJ amod
 |                   +-- grained VBN amod
 +-- . . punct

3
Input: These properties are difficult to provide in wide area network because of high network latency .
Parse:
difficult JJ ROOT
 +-- properties NNS nsubj
 |   +-- These DT det
 +-- are VBP cop
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- in IN prep
 |       +-- network NN pobj
 |           +-- wide JJ amod
 |           +-- area NN nn
 +-- of IN prep
 |   +-- because IN mwe
 |   +-- latency NN pobj
 |       +-- network NN nn
 |           +-- high JJ amod
 +-- . . punct

4
Input: This paper described BuddyCache , a new transactional cooperative caching -LRB- 20 , 16 , 13 , 2 , 28 -RRB- technique that improves the latency of access to shared persistent objects for collaborative strong consistency applications in high latency network environments .
Parse:
described VBD ROOT
 +-- paper NN nsubj
 |   +-- This DT det
 +-- technique NN dobj
 |   +-- BuddyCache NNP nn
 |   |   +-- , , punct
 |   |   +-- caching NN appos
 |   |   |   +-- a DT det
 |   |   |   +-- new JJ amod
 |   |   |   +-- transactional JJ amod
 |   |   |   +-- cooperative JJ amod
 |   |   +-- 20 CD dep
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- , , punct
 |   |       +-- 16 CD num
 |   |       +-- 13 CD num
 |   |       +-- 2 CD num
 |   |       +-- 28 CD num
 |   |       +-- -RRB- -RRB- punct
 |   +-- improves VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- latency NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- access NN pobj
 |                   +-- to IN prep
 |                   |   +-- objects NNS pobj
 |                   |       +-- shared VBN amod
 |                   |       +-- persistent JJ amod
 |                   +-- for IN prep
 |                       +-- applications NNS pobj
 |                           +-- collaborative JJ amod
 |                           +-- strong JJ amod
 |                           +-- consistency NN nn
 |                           +-- in IN prep
 |                               +-- environments NNS pobj
 |                                   +-- high JJ amod
 |                                   +-- network NN nn
 |                                       +-- latency NN nn
 +-- . . punct

5
Input: The technique improves performance yet provides strong correctness and availability properties in the presence of node failures and slow clients .
Parse:
provides VBZ ROOT
 +-- performance NN nsubj
 |   +-- The DT det
 |   +-- technique NN nn
 |   +-- improves VBZ amod
 +-- yet RB advmod
 +-- correctness NN dobj
 |   +-- strong JJ amod
 |   +-- and CC cc
 |   +-- properties NNS conj
 |   |   +-- availability NN nn
 |   +-- in IN prep
 |       +-- presence NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- failures NNS pobj
 |                   +-- node NN nn
 |                   +-- and CC cc
 |                   +-- clients NNS conj
 |                       +-- slow JJ amod
 +-- . . punct

6
Input: BuddyCache uses redirection to fetch missing objects directly from group members caches , and to support peer update , a new lightweight application level multicast technique that gives group members consistent access to the new data committed within the collaborating group without imposing extra overhead outside the group .
Parse:
uses VBZ ROOT
 +-- BuddyCache NNP nsubj
 +-- redirection NN dobj
 +-- fetch VB xcomp
 |   +-- to TO aux
 |   +-- objects NNS dobj
 |   |   +-- missing VBG amod
 |   +-- directly RB advmod
 |   +-- from IN prep
 |   |   +-- caches NNS pobj
 |   |       +-- members NNS nn
 |   |           +-- group NN nn
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- support VB conj
 |       +-- to TO aux
 |       +-- update NN dobj
 |           +-- peer NN nn
 |           +-- , , punct
 |           +-- technique NN appos
 |               +-- a DT det
 |               +-- new JJ amod
 |               +-- level NN nn
 |               |   +-- lightweight JJ amod
 |               |   +-- application NN nn
 |               +-- multicast JJ amod
 |               +-- gives VBZ rcmod
 |                   +-- that WDT nsubj
 |                   +-- members NNS iobj
 |                   |   +-- group NN nn
 |                   +-- access NN dobj
 |                       +-- consistent JJ amod
 |                       +-- to IN prep
 |                           +-- data NNS pobj
 |                               +-- the DT det
 |                               +-- new JJ amod
 |                               +-- committed VBN partmod
 |                                   +-- within IN prep
 |                                   |   +-- group NN pobj
 |                                   |       +-- the DT det
 |                                   |       +-- collaborating NN amod
 |                                   +-- without IN prep
 |                                       +-- imposing VBG pcomp
 |                                           +-- overhead JJ dobj
 |                                           |   +-- extra JJ amod
 |                                           +-- outside IN prep
 |                                               +-- group NN pobj
 |                                                   +-- the DT det
 +-- . . punct

7
Input: Redirection , however , can interfere with object availability .
Parse:
interfere VB ROOT
 +-- Redirection NN nsubj
 +-- , , punct
 +-- however RB advmod
 +-- can MD aux
 +-- with IN prep
 |   +-- availability NN pobj
 |       +-- object NN nn
 +-- . . punct

8
Input: Solo commit , is a new validation technique that allows a client in a group to commit independently of slow or failed peers .
Parse:
technique NN ROOT
 +-- Solo NNP nsubj
 |   +-- commit VBP advmod
 +-- , , punct
 +-- is VBZ cop
 +-- a DT det
 +-- new JJ amod
 +-- validation NN nn
 +-- allows VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- commit VB xcomp
 |       +-- client NN nsubj
 |       |   +-- a DT det
 |       |   +-- in IN prep
 |       |       +-- group NN pobj
 |       |           +-- a DT det
 |       +-- to TO aux
 |       +-- independently RB advmod
 |       +-- of IN prep
 |           +-- peers NNS pobj
 |               +-- slow JJ amod
 |                   +-- or CC cc
 |                   +-- failed VBN conj
 +-- . . punct

9
Input: It provides fine grained validation using inexpensive coarse grain version information .
Parse:
provides VBZ ROOT
 +-- It PRP nsubj
 +-- validation NN dobj
 |   +-- grained VBN amod
 |       +-- fine RB advmod
 +-- using VBG xcomp
 |   +-- information NN dobj
 |       +-- inexpensive JJ amod
 |       +-- coarse NN amod
 |       +-- version NN nn
 |           +-- grain NN nn
 +-- . . punct

10
Input: We have designed and implemented BuddyCache prototype in Thor distributed transactional object storage system -LRB- 23 -RRB- and evaluated the benefits and costs of the system over a range of network latencies .
Parse:
designed VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- and CC cc
 +-- implemented VBN conj
 +-- prototype NN dobj
 |   +-- BuddyCache NNP nn
 +-- in IN prep
 |   +-- system NN pobj
 |       +-- distributed VBN amod
 |       |   +-- Thor NNP dep
 |       +-- transactional JJ amod
 |       +-- object NN nn
 |       +-- storage NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- 23 CD dep
 |       +-- -RRB- -RRB- punct
 +-- evaluated VBD conj
 |   +-- benefits NNS dobj
 |       +-- the DT det
 |       +-- and CC cc
 |       +-- costs NNS conj
 |       +-- of IN prep
 |       |   +-- system NN pobj
 |       |       +-- the DT det
 |       +-- over IN prep
 |           +-- range NN pobj
 |               +-- a DT det
 |               +-- of IN prep
 |                   +-- latencies NNS pobj
 |                       +-- network NN nn
 +-- . . punct

11
Input: Analytical results , supported by the system measurements using the multi user 007 benchmark indicate , that for typical Internet latencies BuddyCache provides significant performance benefits , e.g .
Parse:
indicate VBP ROOT
 +-- results NNS nsubj
 |   +-- Analytical JJ amod
 |   +-- , , punct
 |   +-- supported VBN partmod
 |       +-- by IN prep
 |       |   +-- measurements NNS pobj
 |       |       +-- the DT det
 |       |       +-- system NN nn
 |       +-- using VBG xcomp
 |           +-- user NN dobj
 |               +-- the DT det
 |               +-- multi JJ amod
 |               +-- benchmark NN dep
 |                   +-- 007 CD num
 +-- , , punct
 +-- provides VBZ ccomp
 |   +-- that IN mark
 |   +-- for IN prep
 |   |   +-- latencies NNS pobj
 |   |       +-- typical JJ amod
 |   |       +-- Internet NN nn
 |   +-- BuddyCache NNP nsubj
 |   +-- benefits NNS dobj
 |       +-- significant JJ amod
 |       +-- performance NN nn
 |       +-- , , punct
 |       +-- e.g UH appos
 +-- . . punct

12
Input: for latencies ranging from 40 to 80 milliseconds round trip time , clients using the BuddyCache can reduce by up to 50 % the latency of access to shared objects compared to the clients accessing the repository directly .
Parse:
reduce VB ROOT
 +-- for IN prep
 |   +-- latencies NNS pobj
 |       +-- ranging VBG partmod
 |           +-- from IN prep
 |               +-- 40 CD pobj
 |               +-- to IN prep
 |                   +-- milliseconds NNS pobj
 |                       +-- 80 CD num
 |                       +-- time NN dep
 |                           +-- round JJ amod
 |                           +-- trip NN nn
 +-- , , punct
 +-- clients NNS nsubj
 |   +-- using VBG partmod
 |       +-- BuddyCache NNP dobj
 |           +-- the DT det
 +-- can MD aux
 +-- by IN prep
 |   +-- % NN pobj
 |       +-- 50 CD num
 |           +-- to IN quantmod
 |               +-- up IN dep
 +-- latency NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- access NN pobj
 |           +-- to IN prep
 |               +-- objects NNS pobj
 |                   +-- shared VBN amod
 +-- compared VBN prep
 |   +-- to IN pcomp
 |       +-- accessing VBG pcomp
 |           +-- clients NNS nsubj
 |           |   +-- the DT det
 |           +-- repository NN dobj
 |           |   +-- the DT det
 |           +-- directly RB advmod
 +-- . . punct

13
Input: The main contributions of the paper are
Parse:
are VBP ROOT
 +-- contributions NNS nsubj
     +-- The DT det
     +-- main JJ amod
     +-- of IN prep
         +-- paper NN pobj
             +-- the DT det
