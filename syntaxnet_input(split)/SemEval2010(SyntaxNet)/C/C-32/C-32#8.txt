
1
Input: Figure 3
Parse:
Figure NN ROOT
 +-- 3 CD num

2
Input: benefits are strongly workload dependent .
Parse:
dependent JJ ROOT
 +-- benefits NNS nsubj
 +-- are VBP cop
 +-- strongly RB advmod
 +-- workload JJ advmod
 +-- . . punct

3
Input: In general , invalidation based coherence protocols are efficient since invalidations are small , batched and piggybacked on other messages .
Parse:
efficient JJ ROOT
 +-- In IN prep
 |   +-- general JJ pobj
 +-- , , punct
 +-- protocols NNS nsubj
 |   +-- based VBN amod
 |   |   +-- invalidation NN dep
 |   +-- coherence NN nn
 +-- are VBP cop
 +-- small JJ advcl
 |   +-- since IN mark
 |   +-- invalidations NNS nsubj
 |   +-- are VBP cop
 |   +-- , , punct
 |   +-- batched VBN conj
 |   +-- and CC cc
 |   +-- piggybacked VBN conj
 |       +-- on IN prep
 |           +-- messages NNS pobj
 |               +-- other JJ amod
 +-- . . punct

4
Input: Moreover , invalidation protocols match the current hardware trend for increasing client cache sizes .
Parse:
match VBP ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- protocols NNS nsubj
 |   +-- invalidation NN nn
 +-- trend NN dobj
 |   +-- the DT det
 |   +-- current JJ amod
 |   +-- hardware NN nn
 |   +-- for IN prep
 |       +-- sizes NNS pobj
 |           +-- increasing VBG amod
 |           +-- cache NN nn
 |               +-- client NN nn
 +-- . . punct

5
Input: Larger caches are likely to contain much more data than is actively used .
Parse:
likely JJ ROOT
 +-- caches NNS nsubj
 |   +-- Larger NN nn
 +-- are VBP cop
 +-- contain VB xcomp
 |   +-- to TO aux
 |   +-- data NNS dobj
 |       +-- more JJR amod
 |       |   +-- much RB advmod
 |       +-- used VBN dep
 |           +-- than IN mark
 |           +-- is VBZ auxpass
 |           +-- actively RB advmod
 +-- . . punct

6
Input: Update based protocols that propagate updates to low interest objects in a wide area network would be wasteful .
Parse:
wasteful JJ ROOT
 +-- protocols NNS nsubj
 |   +-- based VBN amod
 |   |   +-- Update NN dep
 |   +-- propagate VBP rcmod
 |       +-- that WDT nsubj
 |       +-- updates NNS dobj
 |       +-- to TO prep
 |           +-- objects NNS pobj
 |               +-- interest NN nn
 |               |   +-- low JJ amod
 |               +-- in IN prep
 |                   +-- network NN pobj
 |                       +-- a DT det
 |                       +-- wide JJ amod
 |                       +-- area NN nn
 +-- would MD aux
 +-- be VB cop
 +-- . . punct

7
Input: Nevertheless , invalidation based coherence protocols can perform poorly in high latency networks -LRB- 12 -RRB- if the object '' s new value is likely to be of interest to another group member .
Parse:
perform VB ROOT
 +-- Nevertheless RB advmod
 +-- , , punct
 +-- protocols NNS nsubj
 |   +-- based VBN amod
 |   |   +-- invalidation NN dep
 |   +-- coherence NN amod
 +-- can MD aux
 +-- poorly RB advmod
 +-- in IN prep
 |   +-- networks NNS pobj
 |       +-- high JJ amod
 |       +-- latency NN nn
 +-- -LRB- -LRB- punct
 +-- 12 CD dobj
 +-- -RRB- -RRB- punct
 +-- likely JJ advcl
 |   +-- if IN mark
 |   +-- value NN nsubj
 |   |   +-- object NN poss
 |   |   |   +-- the DT det
 |   |   |   +-- '' '' punct
 |   |   |   +-- s POS possessive
 |   |   +-- new JJ amod
 |   +-- is VBZ cop
 |   +-- be VB xcomp
 |       +-- to TO aux
 |       +-- of IN prep
 |           +-- interest NN pobj
 |               +-- to IN prep
 |                   +-- member NN pobj
 |                       +-- another DT det
 |                       +-- group NN nn
 +-- . . punct

8
Input: With an invalidation based protocol , one member '' s update will invalidate another member '' s cached copy , causing the latter to perform a high latency fetch of the new value from the server .
Parse:
invalidate VB ROOT
 +-- With IN prep
 |   +-- protocol NN pobj
 |       +-- an DT det
 |       +-- based VBN amod
 |           +-- invalidation NN dep
 +-- , , punct
 +-- update NN nsubj
 |   +-- member NN poss
 |       +-- one CD num
 |       +-- '' '' punct
 |       +-- s POS possessive
 +-- will MD aux
 +-- copy NN dobj
 |   +-- member NN poss
 |   |   +-- another DT det
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- cached VBN amod
 +-- causing VBG partmod
 |   +-- perform VB xcomp
 |       +-- latter JJ nsubj
 |       |   +-- the DT det
 |       +-- to TO aux
 |       +-- fetch NN dobj
 |       |   +-- a DT det
 |       |   +-- high JJ amod
 |       |   +-- latency NN nn
 |       |   +-- of IN prep
 |       |       +-- value NN pobj
 |       |           +-- the DT det
 |       |           +-- new JJ amod
 |       +-- from IN prep
 |           +-- server NN pobj
 |               +-- the DT det
 +-- . . punct

9
Input: BuddyCache circumvents this well known bandwidth vs .
Parse:
circumvents VBZ ROOT
 +-- BuddyCache NN nsubj
 +-- bandwidth NN dobj
 |   +-- this DT det
 |   +-- known VBN amod
 |       +-- well RB advmod
 +-- vs RB advmod
 +-- . . punct

10
Input: latency trade off imposed by update and invalidation protocols in wide area network environments .
Parse:
trade NN ROOT
 +-- latency NN nn
 +-- off RP dep
 +-- imposed VBN partmod
 |   +-- by IN prep
 |       +-- protocols NNS pobj
 |           +-- update NN nn
 |           |   +-- and CC cc
 |           |   +-- invalidation NN conj
 |           +-- in IN prep
 |               +-- environments NNS pobj
 |                   +-- area NN nn
 |                   |   +-- wide JJ amod
 |                   +-- network NN nn
 +-- . . punct

11
Input: It avoids the latency penalty of invalidations by using the redirector to retain and propagate updates committed by one client to other clients within the group .
Parse:
avoids VBZ ROOT
 +-- It PRP nsubj
 +-- penalty NN dobj
 |   +-- the DT det
 |   +-- latency NN nn
 |   +-- of IN prep
 |       +-- invalidations NNS pobj
 +-- by IN prep
 |   +-- using VBG pcomp
 |       +-- redirector NN dobj
 |       |   +-- the DT det
 |       +-- retain VB xcomp
 |           +-- to TO aux
 |           +-- and CC cc
 |           +-- propagate VB conj
 |           +-- updates NNS dobj
 |               +-- committed VBN partmod
 |                   +-- by IN prep
 |                   |   +-- client NN pobj
 |                   |       +-- one CD num
 |                   +-- to IN prep
 |                       +-- clients NNS pobj
 |                           +-- other JJ amod
 |                           +-- within IN prep
 |                               +-- group NN pobj
 |                                   +-- the DT det
 +-- . . punct

12
Input: This avoids the bandwidth penalty of updates because servers propagate invalidations to the redirectors .
Parse:
avoids VBZ ROOT
 +-- This DT nsubj
 +-- penalty NN dobj
 |   +-- the DT det
 |   +-- bandwidth JJ nn
 |   +-- of IN prep
 |       +-- updates NNS pobj
 +-- propagate VBP advcl
 |   +-- because IN mark
 |   +-- servers NNS nsubj
 |   +-- invalidations NNS dobj
 |   +-- to IN prep
 |       +-- redirectors NNS pobj
 |           +-- the DT det
 +-- . . punct

13
Input: As far as we know , this use of localized multicast in BuddyCache redirector is new and has not been used in earlier caching systems .
Parse:
new JJ ROOT
 +-- far RB advmod
 |   +-- As RB advmod
 |   +-- know VBP ccomp
 |       +-- as IN mark
 |       +-- we PRP nsubj
 +-- , , punct
 +-- use NN nsubj
 |   +-- this DT det
 |   +-- of IN prep
 |       +-- multicast NN pobj
 |           +-- localized VBN amod
 |           +-- in IN prep
 |               +-- redirector NN pobj
 |                   +-- BuddyCache NNP nn
 +-- is VBZ cop
 +-- and CC cc
 +-- used VBN conj
 |   +-- has VBZ aux
 |   +-- not RB neg
 |   +-- been VBN auxpass
 |   +-- in IN prep
 |       +-- systems NNS pobj
 |           +-- earlier JJR amod
 |           +-- caching VBG nn
 +-- . . punct

14
Input: The peer update works as follows .
Parse:
works VBZ ROOT
 +-- update NN nsubj
 |   +-- The DT det
 |   +-- peer NN nn
 +-- follows VBZ advcl
 |   +-- as IN mark
 +-- . . punct

15
Input: An update commit request from a client arriving at the redirector contains the object updates .
Parse:
commit VBP ROOT
 +-- update NN nsubj
 |   +-- An DT det
 +-- contains VBZ ccomp
 |   +-- request NN nsubj
 |   |   +-- from IN prep
 |   |       +-- client NN pobj
 |   |           +-- a DT det
 |   |           +-- arriving VBG partmod
 |   |               +-- at IN prep
 |   |                   +-- redirector NN pobj
 |   |                       +-- the DT det
 |   +-- updates NNS dobj
 |       +-- the DT det
 |       +-- object NN nn
 +-- . . punct

16
Input: Redirector retains the updates and propagates the request to the coordinating server .
Parse:
retains VBZ ROOT
 +-- Redirector NN nsubj
 +-- updates NNS dobj
 |   +-- the DT det
 +-- and CC cc
 +-- propagates VBZ conj
 |   +-- request NN dobj
 |       +-- the DT det
 |       +-- to IN prep
 |           +-- server NN pobj
 |               +-- the DT det
 |               +-- coordinating VBG nn
 +-- . . punct

17
Input: After the transaction commits , the coordinator server sends a commit reply to the redirector of the committing client group .
Parse:
sends VBZ ROOT
 +-- commits VBZ advcl
 |   +-- After IN mark
 |   +-- transaction NN nsubj
 |       +-- the DT det
 +-- , , punct
 +-- server NN nsubj
 |   +-- the DT det
 |   +-- coordinator NN nn
 +-- reply NN dobj
 |   +-- a DT det
 |   +-- commit NN nn
 |   +-- to IN prep
 |       +-- redirector NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- group NN pobj
 |                   +-- the DT det
 |                   +-- committing VBG amod
 |                   +-- client NN nn
 +-- . . punct

18
Input: The redirector forwards the reply to the committing client , and also propagates the retained committed updates to the clients caching the modified pages -LRB- see figure 3 -RRB- .
Parse:
forwards VBZ ROOT
 +-- redirector NN nsubj
 |   +-- The DT det
 +-- reply NN dobj
 |   +-- the DT det
 |   +-- to IN prep
 |       +-- client NN pobj
 |           +-- the DT det
 |           +-- committing VBG amod
 +-- , , punct
 +-- and CC cc
 +-- also RB advmod
 +-- propagates VBZ conj
 |   +-- updates NNS dobj
 |   |   +-- the DT det
 |   |   +-- retained VBN amod
 |   |   +-- committed JJ amod
 |   +-- to IN prep
 |       +-- clients NNS pobj
 |           +-- the DT det
 |           +-- caching VBG partmod
 |               +-- pages NNS dobj
 |                   +-- the DT det
 |                   +-- modified VBN amod
 |                   +-- see VB dep
 |                       +-- -LRB- -LRB- punct
 |                       +-- figure NN dobj
 |                       |   +-- 3 CD num
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

19
Input: Since the groups outside the BuddyCache propagate invalidations , there is no extra overhead outside the committing group .
Parse:
is VBZ ROOT
 +-- propagate NN advcl
 |   +-- Since IN mark
 |   +-- groups NNS nsubj
 |   |   +-- the DT det
 |   |   +-- outside IN prep
 |   |       +-- BuddyCache NNP pobj
 |   |           +-- the DT det
 |   +-- invalidations NNS dobj
 +-- , , punct
 +-- there EX expl
 +-- overhead NN nsubj
 |   +-- no DT det
 |   +-- extra JJ amod
 |   +-- outside IN prep
 |       +-- group NN pobj
 |           +-- the DT det
 |           +-- committing VBG amod
 +-- . . punct

20
Input: 3.3 Solo commit In the OCC protocol , clients acknowledge server invalidations -LRB- or updates -RRB- to indicate removal of stale data .
Parse:
acknowledge VBP ROOT
 +-- 3.3 CD nsubj
 |   +-- commit VBP rcmod
 |       +-- Solo NNP nsubj
 |       +-- In IN prep
 |           +-- protocol NN pobj
 |               +-- the DT det
 |               +-- OCC NN nn
 +-- , , punct
 +-- clients NNS nsubj
 +-- invalidations NNS dobj
 |   +-- server NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- or CC cc
 |   +-- updates NNS conj
 |   +-- -RRB- -RRB- punct
 +-- indicate VB xcomp
 |   +-- to TO aux
 |   +-- removal NN dobj
 |       +-- of IN prep
 |           +-- data NNS pobj
 |               +-- stale JJ amod
 +-- . . punct

21
Input: The straightforward group acknowledgement protocol where redirector collects and propagates a collective acknowledge29 Redirector commit ok ABORT Client 1 Client 2 Server commit -LRB- P -LRB- x -RRB- -RRB- commit -LRB- P -LRB- x -RRB- -RRB- ok + inv -LRB- P -LRB- x -RRB- -RRB- inv -LRB- P -LRB- x -RRB- -RRB- commit -LRB- P -LRB- x -RRB- -RRB- commit -LRB- P -LRB- x -RRB- -RRB- ack -LRB- P -LRB- x -RRB- -RRB- ack -LRB- P -LRB- x -RRB- -RRB- Figure 4
Parse:
commit VB ROOT
 +-- protocol NN nsubj
 |   +-- The DT det
 |   +-- straightforward JJ amod
 |   +-- group NN nn
 |   +-- acknowledgement NN nn
 |   +-- collects VBZ rcmod
 |       +-- where WRB advmod
 |       +-- redirector NN nsubj
 |       +-- and CC cc
 |       +-- propagates VBZ conj
 |       +-- Redirector NNP dobj
 |           +-- a DT det
 |           +-- collective JJ amod
 |           +-- acknowledge29 CD num
 +-- Figure NN dobj
     +-- ok JJ dep
     +-- Client NNP dep
     |   +-- ABORT NNP nn
     |   +-- commit NN dep
     |       +-- 1 CD num
     |       +-- Client NN nn
     |       |   +-- 2 CD num
     |       +-- Server NN nn
     |       +-- P NN dep
     |           +-- -LRB- -LRB- punct
     |           +-- x SYM dep
     |           +-- -RRB- -RRB- punct
     +-- commit VB dep
     +-- P NN dep
     |   +-- -LRB- -LRB- punct
     |   +-- x SYM dep
     |   +-- -RRB- -RRB- punct
     +-- + SYM dep
     +-- inv NNP dep
     +-- P NNP dep
     |   +-- -LRB- -LRB- punct
     |   +-- x SYM dep
     |   +-- -RRB- -RRB- punct
     +-- inv NN dep
     +-- ack NN dep
     +-- x LS dep
     |   +-- -LRB- -LRB- punct
     |   +-- P NN nn
     |   +-- -RRB- -RRB- punct
     +-- 4 CD num

22
Input: E.g .
Parse:
E.g NNP ROOT
 +-- . . punct

23
Input: an engineer that commits a repeated revision to the same shared design object -LRB- and therefore holds the latest version of the object -RRB- may need to abort if the group acknowledgement has not propagated to the server .
Parse:
need VB ROOT
 +-- engineer NN nsubj
 |   +-- an DT det
 |   +-- commits VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- revision NN dobj
 |       |   +-- a DT det
 |       |   +-- repeated VBN amod
 |       +-- to IN prep
 |       |   +-- object NN pobj
 |       |       +-- the DT det
 |       |       +-- same JJ amod
 |       |       +-- shared JJ amod
 |       |       +-- design NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- and CC cc
 |       +-- holds VBZ conj
 |       |   +-- therefore RB advmod
 |       |   +-- version NN dobj
 |       |       +-- the DT det
 |       |       +-- latest JJS amod
 |       |       +-- of IN prep
 |       |           +-- object NN pobj
 |       |               +-- the DT det
 |       +-- -RRB- -RRB- punct
 +-- may MD aux
 +-- abort VB xcomp
 |   +-- to TO aux
 +-- propagated VBN advcl
 |   +-- if IN mark
 |   +-- acknowledgement NN nsubj
 |   |   +-- the DT det
 |   |   +-- group NN nn
 |   +-- has VBZ aux
 |   +-- not RB neg
 |   +-- to IN prep
 |       +-- server NN pobj
 |           +-- the DT det
 +-- . . punct

24
Input: Consider a situation depicted in figure 4 where Client1 commits a transaction T that reads the latest version of an object x on page P recently modified by Client1 .
Parse:
Consider VB ROOT
 +-- situation NN dobj
 |   +-- a DT det
 |   +-- depicted VBN partmod
 |       +-- in IN prep
 |           +-- figure NN pobj
 |               +-- 4 CD num
 |               +-- commits VBZ rcmod
 |                   +-- where WRB advmod
 |                   +-- Client1 CD nsubj
 |                   +-- T NN dobj
 |                       +-- a DT det
 |                       +-- transaction NN nn
 |                       +-- reads VBZ rcmod
 |                           +-- that WDT nsubj
 |                           +-- version NN dobj
 |                               +-- the DT det
 |                               +-- latest JJS amod
 |                               +-- of IN prep
 |                               |   +-- object NN pobj
 |                               |       +-- an DT det
 |                               +-- x , punct
 |                               +-- on IN prep
 |                               |   +-- P NN pobj
 |                               |       +-- page NN nn
 |                               +-- modified VBN partmod
 |                                   +-- recently RB advmod
 |                                   +-- by IN prep
 |                                       +-- Client1 NNP pobj
 +-- . . punct

25
Input: If the commit request for T reaches the server before the collective acknowledgement from Client2 for the last modification of x arrives at the server , the OCC validation procedure considers x to be stale and aborts T -LRB- because , as explained above , an invalidation unacknowledged by a client , acts as indication to the server that the cached object value is stale at the client -RRB- .
Parse:
considers VBZ ROOT
 +-- reaches VBZ advcl
 |   +-- If IN mark
 |   +-- request NN nsubj
 |   |   +-- the DT det
 |   |   +-- commit NN nn
 |   |   +-- for IN prep
 |   |       +-- T NNP pobj
 |   +-- server NN dobj
 |   |   +-- the DT det
 |   +-- before IN prep
 |       +-- acknowledgement NN pobj
 |           +-- the DT det
 |           +-- collective JJ amod
 |           +-- from IN prep
 |           |   +-- Client2 NNP pobj
 |           +-- for IN prep
 |               +-- modification NN pobj
 |                   +-- the DT det
 |                   +-- last JJ amod
 |                   +-- of IN prep
 |                   |   +-- arrives VBZ pobj
 |                   |       +-- x , punct
 |                   +-- at IN prep
 |                       +-- server NN pobj
 |                           +-- the DT det
 +-- , , punct
 +-- procedure NN nsubj
 |   +-- the DT det
 |   +-- OCC NNP nn
 |   +-- validation NN nn
 +-- x , punct
 +-- T NNP xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- stale JJ amod
 |   |   +-- and CC cc
 |   |   +-- aborts NNS conj
 |   +-- -LRB- -LRB- punct
 |   +-- acts VBZ advcl
 |   |   +-- because RB mark
 |   |   +-- , , punct
 |   |   +-- explained VBD advcl
 |   |   |   +-- as IN mark
 |   |   |   +-- above RB advmod
 |   |   +-- invalidation NN nsubj
 |   |   |   +-- an DT det
 |   |   |   +-- unacknowledged JJ amod
 |   |   |       +-- by IN prep
 |   |   |           +-- client NN pobj
 |   |   |               +-- a DT det
 |   |   +-- as IN prep
 |   |   |   +-- indication NN pobj
 |   |   |       +-- to IN prep
 |   |   |           +-- server NN pobj
 |   |   |               +-- the DT det
 |   |   +-- stale JJ ccomp
 |   |       +-- that IN mark
 |   |       +-- value NN nsubj
 |   |       |   +-- the DT det
 |   |       |   +-- cached VBN amod
 |   |       |   +-- object NN nn
 |   |       +-- is VBZ cop
 |   |       +-- at IN prep
 |   |           +-- client NN pobj
 |   |               +-- the DT det
 |   +-- -RRB- -RRB- punct
 +-- . . punct

26
Input: Note that while invalidations are not required for the correctness of the OCC protocol , they are very important for the performance since they reduce the performance penalties of aborts and false sharing .
Parse:
Note VB ROOT
 +-- important JJ ccomp
 |   +-- that IN mark
 |   +-- required VBN advcl
 |   |   +-- while IN mark
 |   |   +-- invalidations NNS nsubjpass
 |   |   +-- are VBP auxpass
 |   |   +-- not RB neg
 |   |   +-- for IN prep
 |   |       +-- correctness NN pobj
 |   |           +-- the DT det
 |   |           +-- of IN prep
 |   |               +-- protocol NN pobj
 |   |                   +-- the DT det
 |   |                   +-- OCC NNP nn
 |   +-- , , punct
 |   +-- they PRP nsubj
 |   +-- are VBP cop
 |   +-- very RB advmod
 |   +-- for IN prep
 |   |   +-- performance NN pobj
 |   |       +-- the DT det
 |   +-- reduce VBP advcl
 |       +-- since IN mark
 |       +-- they PRP nsubj
 |       +-- penalties NNS dobj
 |           +-- the DT det
 |           +-- performance NN nn
 |           +-- of IN prep
 |               +-- aborts NNS pobj
 |                   +-- and CC cc
 |                   +-- sharing NN conj
 |                       +-- false JJ amod
 +-- . . punct

27
Input: The asynchronous invalidations are an important part of the reason OCC has competitive performance with PSAA -LRB- 33 -RRB- , the best performing avoidance based protocol -LRB- 3 -RRB- .
Parse:
part NN ROOT
 +-- invalidations NNS nsubj
 |   +-- The DT det
 |   +-- asynchronous JJ amod
 +-- are VBP cop
 +-- an DT det
 +-- important JJ amod
 +-- of IN prep
 |   +-- reason NN pobj
 |       +-- the DT det
 |       +-- has VBZ rcmod
 |           +-- OCC NNP nsubj
 |           +-- performance NN dobj
 |               +-- competitive JJ amod
 |               +-- with IN prep
 |                   +-- PSAA NNP pobj
 |                       +-- -LRB- -LRB- punct
 |                       +-- 33 CD dep
 |                       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- protocol NN appos
 |   +-- the DT det
 |   +-- performing VBG amod
 |   |   +-- best JJS advmod
 |   +-- based VBN amod
 |   |   +-- avoidance NN dep
 |   +-- 3 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- . . punct

28
Input: Nevertheless , since invalidations are sent and processed asynchronously , invalidation processing may be arbitrarily delayed at a client .
Parse:
delayed VBN ROOT
 +-- Nevertheless RB advmod
 +-- , , punct
 +-- sent VBN advcl
 |   +-- since IN mark
 |   +-- invalidations NNS nsubjpass
 |   +-- are VBP auxpass
 |   +-- and CC cc
 |   +-- processed VBN conj
 |       +-- asynchronously RB advmod
 +-- processing NN nsubjpass
 |   +-- invalidation NN nn
 +-- may MD aux
 +-- be VB auxpass
 +-- arbitrarily RB advmod
 +-- at IN prep
 |   +-- client NN pobj
 |       +-- a DT det
 +-- . . punct

29
Input: Lease based schemes -LRB- time out based -RRB- have been proposed to improve the availability of hierarchical callback based coherence protocols -LRB- 32 -RRB- but the asynchronous nature of invalidations makes the lease based approaches inappropriate for asynchronous invalidations .
Parse:
proposed VBN ROOT
 +-- schemes NNS nsubjpass
 |   +-- based VBN amod
 |   |   +-- Lease NN dep
 |   +-- -LRB- -LRB- punct
 |   +-- time NN dep
 |   |   +-- out RP dep
 |   |   +-- based VBN partmod
 |   +-- -RRB- -RRB- punct
 +-- have VBP aux
 +-- been VBN auxpass
 +-- improve VB xcomp
 |   +-- to TO aux
 |   +-- availability NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- protocols NNS pobj
 |               +-- hierarchical JJ amod
 |               +-- based VBN amod
 |               |   +-- callback NN dep
 |               +-- coherence NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- 32 CD dep
 |               +-- -RRB- -RRB- punct
 +-- but CC cc
 +-- makes VBZ conj
 |   +-- nature NN nsubj
 |   |   +-- the DT det
 |   |   +-- asynchronous JJ amod
 |   |   +-- of IN prep
 |   |       +-- invalidations NNS pobj
 |   +-- lease NN dobj
 |   |   +-- the DT det
 |   +-- inappropriate JJ xcomp
 |       +-- approaches NNS nsubj
 |       |   +-- based VBN amod
 |       +-- for IN prep
 |           +-- invalidations NNS pobj
 |               +-- asynchronous JJ amod
 +-- . . punct

30
Input: The Solo commit validation protocol allows a client with up to date objects to commit a transaction even if the group acknowledgement is delayed due to slow or crashed peers .
Parse:
allows VBZ ROOT
 +-- protocol NN nsubj
 |   +-- The DT det
 |   +-- Solo NNP amod
 |   +-- commit VBP nn
 |   +-- validation NN nn
 +-- commit VB xcomp
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   |   +-- with IN prep
 |   |       +-- objects NNS pobj
 |   |           +-- up IN nn
 |   |               +-- to IN pcomp
 |   |                   +-- date NN pobj
 |   +-- to TO aux
 |   +-- transaction NN dobj
 |   |   +-- a DT det
 |   +-- delayed VBN advcl
 |       +-- even RB advmod
 |       +-- if IN mark
 |       +-- acknowledgement NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- group NN nn
 |       +-- is VBZ auxpass
 |       +-- to IN prep
 |           +-- due IN mwe
 |           +-- peers NNS pobj
 |               +-- slow JJ amod
 |                   +-- or CC cc
 |                   +-- crashed VBN conj
 +-- . . punct

31
Input: The protocol requires clients to include extra information with the transaction read sets in the commit message , to indicate to the server the objects read by the transaction are up to date .
Parse:
requires VBZ ROOT
 +-- protocol NN nsubj
 |   +-- The DT det
 +-- clients NNS dobj
 +-- include VB xcomp
 |   +-- to TO aux
 |   +-- read VBD ccomp
 |       +-- information NN nsubj
 |       |   +-- extra JJ amod
 |       |   +-- with IN prep
 |       |       +-- transaction NN pobj
 |       |           +-- the DT det
 |       +-- sets NNS dobj
 |       |   +-- in IN prep
 |       |       +-- message NN pobj
 |       |           +-- the DT det
 |       |           +-- commit NN nn
 |       +-- , , punct
 |       +-- indicate VB xcomp
 |           +-- to TO aux
 |           +-- to IN prep
 |           |   +-- server NN pobj
 |           |       +-- the DT det
 |           +-- are VBP ccomp
 |               +-- objects NNS nsubj
 |               |   +-- the DT det
 |               |   +-- read VBN partmod
 |               |       +-- by IN prep
 |               |           +-- transaction NN pobj
 |               |               +-- the DT det
 |               +-- up IN prep
 |                   +-- to IN pcomp
 |                       +-- date NN pobj
 +-- . . punct

32
Input: Object version numbers could provide a simple way to track up to date objects but , as mentioned above , maintaining per object version numbers imposes unacceptably high overheads -LRB- in disk storage , I O costs and directory size -RRB- on the entire object system when objects are small -LRB- 23 -RRB- .
Parse:
provide VB ROOT
 +-- numbers NNS nsubj
 |   +-- Object VB amod
 |   +-- version NN nn
 +-- could MD aux
 +-- way NN dobj
 |   +-- a DT det
 |   +-- simple JJ amod
 |   +-- track VB infmod
 |       +-- to TO aux
 |       +-- up RP prt
 |       +-- to IN prep
 |           +-- objects NNS pobj
 |               +-- date NN nn
 +-- but CC cc
 +-- , , punct
 +-- imposes VBZ conj
 |   +-- mentioned VBN advcl
 |   |   +-- as IN mark
 |   |   +-- above RB advmod
 |   +-- , , punct
 |   +-- maintaining VBG csubj
 |   |   +-- per IN prep
 |   |       +-- numbers NNS pobj
 |   |           +-- version NN nn
 |   |               +-- object NN nn
 |   +-- overheads NNS dobj
 |   |   +-- high JJ amod
 |   |       +-- unacceptably RB advmod
 |   +-- O VBP parataxis
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- in IN prep
 |   |   |   +-- storage NN pobj
 |   |   |       +-- disk NN nn
 |   |   +-- , , punct
 |   |   +-- I PRP nsubj
 |   |   +-- costs NNS dobj
 |   |   |   +-- and CC cc
 |   |   |   +-- size NN conj
 |   |   |       +-- directory NN nn
 |   |   +-- -RRB- -RRB- punct
 |   +-- on IN prep
 |   |   +-- system NN pobj
 |   |       +-- the DT det
 |   |       +-- entire JJ amod
 |   |       +-- object NN nn
 |   +-- small JJ advcl
 |   |   +-- when WRB advmod
 |   |   +-- objects NNS nsubj
 |   |   +-- are VBP cop
 |   +-- -LRB- -LRB- punct
 |   +-- 23 CD dobj
 |   +-- -RRB- -RRB- punct
 +-- . . punct

33
Input: Instead , solo commit uses coarse grain page version numbers to identify fine grain object versions .
Parse:
uses VBZ ROOT
 +-- Instead RB advmod
 +-- , , punct
 +-- commit VBP nsubj
 |   +-- solo NNP amod
 +-- numbers NNS dobj
 |   +-- coarse JJ amod
 |   +-- version NN nn
 |       +-- page NN nn
 |           +-- grain NN nn
 +-- identify VB xcomp
 |   +-- to TO aux
 |   +-- versions NNS dobj
 |       +-- fine JJ amod
 |       +-- object NN nn
 |           +-- grain NN nn
 +-- . . punct

34
Input: A page version number is incremented at a server when at transaction that modifies objects on the page commits .
Parse:
incremented VBN ROOT
 +-- number NN nsubjpass
 |   +-- A DT det
 |   +-- version NN nn
 |       +-- page NN nn
 +-- is VBZ auxpass
 +-- at IN prep
 |   +-- server NN pobj
 |       +-- a DT det
 +-- modifies VBZ advcl
 |   +-- when WRB advmod
 |   +-- at IN prep
 |   |   +-- transaction NN pobj
 |   +-- that WDT nsubj
 |   +-- objects VBZ dobj
 |   +-- on IN prep
 |       +-- commits NNS pobj
 |           +-- the DT det
 |           +-- page NN nn
 +-- . . punct

35
Input: Updates committed by a single transaction and corresponding invalidations are therefore uniquely identified by the modified page version number .
Parse:
identified VBN ROOT
 +-- Updates NNS nsubjpass
 |   +-- committed VBN partmod
 |       +-- by IN prep
 |           +-- transaction NN pobj
 |               +-- a DT det
 |               +-- single JJ amod
 |               +-- and CC cc
 |               +-- invalidations NNS conj
 |                   +-- corresponding VBG amod
 +-- are VBP auxpass
 +-- therefore RB advmod
 +-- uniquely RB advmod
 +-- by IN prep
 |   +-- number NN pobj
 |       +-- the DT det
 |       +-- modified VBN amod
 |       +-- version NN nn
 |           +-- page NN nn
 +-- . . punct

36
Input: Page version numbers are propagated to clients in fetch replies , commit replies and with invalidations , and clients include page version numbers in commit requests sent to the servers .
Parse:
propagated VBN ROOT
 +-- numbers NNS nsubjpass
 |   +-- version NN nn
 |       +-- Page NN nn
 +-- are VBP auxpass
 +-- to IN prep
 |   +-- clients NNS pobj
 |       +-- in IN prep
 |           +-- replies NNS pobj
 |               +-- fetch NN nn
 +-- , , punct
 +-- commit VBP ccomp
 |   +-- replies NNS dobj
 |   +-- and CC cc
 |   +-- with IN conj
 |       +-- invalidations NNS pobj
 +-- and CC cc
 +-- include VBP conj
 |   +-- clients NNS nsubj
 |   +-- numbers NNS dobj
 |       +-- version NN nn
 |       |   +-- page NN nn
 |       +-- in IN prep
 |           +-- requests NNS pobj
 |               +-- commit NN nn
 |               +-- sent VBN partmod
 |                   +-- to IN prep
 |                       +-- servers NNS pobj
 |                           +-- the DT det
 +-- . . punct

37
Input: If a transaction fails validation due to missing group acknowledgement , the server checks page version numbers of the objects in the transaction read set and allows the transaction to commit if the client has read from the latest page version .
Parse:
read VB ROOT
 +-- fails VBZ advcl
 |   +-- If IN mark
 |   +-- transaction NN nsubj
 |   |   +-- a DT det
 |   +-- validation NN dobj
 |   +-- to IN prep
 |       +-- due IN mwe
 |       +-- acknowledgement NN pobj
 |           +-- missing VBG amod
 |           +-- group NN nn
 +-- , , punct
 +-- numbers NNS nsubj
 |   +-- the DT det
 |   +-- version NN nn
 |   |   +-- page NN nn
 |   |       +-- checks NNS nn
 |   |           +-- server NN nn
 |   +-- of IN prep
 |       +-- objects NNS pobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- transaction NN pobj
 |                   +-- the DT det
 +-- set VBN dobj
 +-- and CC cc
 +-- allows VBZ conj
 |   +-- commit VB xcomp
 |       +-- transaction NN nsubj
 |       |   +-- the DT det
 |       +-- to TO aux
 |       +-- read VBN advcl
 |           +-- if IN mark
 |           +-- client NN nsubj
 |           |   +-- the DT det
 |           +-- has VBZ aux
 |           +-- from IN prep
 |               +-- version NN pobj
 |                   +-- the DT det
 |                   +-- latest JJS amod
 |                   +-- page NN nn
 +-- . . punct

38
Input: The page version numbers enable independent commits but page version checks only detect page level conflicts .
Parse:
enable VBP ROOT
 +-- numbers NNS nsubj
 |   +-- The DT det
 |   +-- version NN nn
 |       +-- page NN nn
 +-- commits NNS dobj
 |   +-- independent JJ amod
 +-- but CC cc
 +-- detect VBP conj
 |   +-- checks VBZ nsubj
 |   |   +-- version NN nn
 |   |       +-- page NN nn
 |   +-- only RB advmod
 |   +-- conflicts NNS dobj
 |       +-- level NN nn
 |           +-- page NN nn
 +-- . . punct

39
Input: To detect object level conflicts and avoid the problem of false sharing we need the acknowledged invalidations .
Parse:
need VBP ROOT
 +-- detect VB dep
 |   +-- To TO aux
 |   +-- conflicts NNS dobj
 |   |   +-- level NN nn
 |   |       +-- object JJ amod
 |   +-- and CC cc
 |   +-- avoid VB conj
 |       +-- problem NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- sharing NN pobj
 |                   +-- false JJ amod
 +-- we PRP nsubj
 +-- invalidations NNS dobj
 |   +-- the DT det
 |   +-- acknowledged VBN amod
 +-- . . punct

40
Input: Section 4 describes the details of the implementation of solo commit support for fine grain sharing .
Parse:
describes VBZ ROOT
 +-- Section NN nsubj
 |   +-- 4 CD num
 +-- commit VBP ccomp
 |   +-- details NNS nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- implementation NN pobj
 |   |           +-- the DT det
 |   |           +-- of IN prep
 |   |               +-- solo NN pobj
 |   +-- support NN dobj
 |       +-- for IN prep
 |           +-- sharing NN pobj
 |               +-- fine JJ amod
 |               +-- grain NN nn
 +-- . . punct

41
Input: 3.4 Group Configuration The BuddyCache architecture supports multiple concurrent peer groups .
Parse:
supports VBZ ROOT
 +-- Group NNP nsubj
 |   +-- 3.4 NNP nn
 |   +-- architecture NN dep
 |       +-- Configuration NNP nn
 |       +-- The DT det
 |       +-- BuddyCache NNP nn
 +-- groups NNS dobj
 |   +-- multiple JJ amod
 |   +-- concurrent JJ amod
 |   +-- peer NN nn
 +-- . . punct

42
Input: Potentially , it may be faster to access data cached in another peer group than to access a remote server .
Parse:
faster JJR ROOT
 +-- Potentially RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- may MD aux
 +-- be VB cop
 +-- access VB xcomp
 |   +-- to TO aux
 |   +-- data NNS dobj
 |       +-- cached VBN partmod
 |           +-- in IN prep
 |               +-- group NN pobj
 |                   +-- another DT det
 |                   +-- peer NN amod
 +-- access VB advcl
 |   +-- than IN mark
 |   +-- to TO aux
 |   +-- server NN dobj
 |       +-- a DT det
 |       +-- remote JJ amod
 +-- . . punct

43
Input: In such case extending BuddyCache protocols to support multi level peer caching could be worthwhile .
Parse:
worthwhile JJ ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- such JJ amod
 +-- extending VBG csubj
 |   +-- protocols NNS dobj
 |       +-- BuddyCache NNP nn
 |       +-- support VB infmod
 |           +-- to TO aux
 |           +-- caching NN dobj
 |               +-- level NN nn
 |               |   +-- multi JJ amod
 |               +-- peer NN nn
 +-- could MD aux
 +-- be VB cop
 +-- . . punct

44
Input: We have not pursued this possibility for several reasons .
Parse:
pursued VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- not RB neg
 +-- possibility NN dobj
 |   +-- this DT det
 +-- for IN prep
 |   +-- reasons NNS pobj
 |       +-- several JJ amod
 +-- . . punct

45
Input: In web caching workloads , simply increasing the population of clients in a proxy cache often increases the overall cache hit rate -LRB- 30 -RRB- .
Parse:
increases VBZ ROOT
 +-- In IN prep
 |   +-- workloads NNS pobj
 |       +-- caching NN nn
 |           +-- web NN nn
 +-- , , punct
 +-- increasing VBG csubj
 |   +-- simply RB advmod
 |   +-- population NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- clients NNS pobj
 |   +-- in IN prep
 |       +-- cache NN pobj
 |           +-- a DT det
 |           +-- proxy NN nn
 +-- often RB advmod
 +-- rate NN dobj
 |   +-- the DT det
 |   +-- overall JJ amod
 |   +-- hit VBN amod
 |   |   +-- cache NN dep
 |   +-- -LRB- -LRB- punct
 |   +-- 30 CD dep
 |   +-- -RRB- -RRB- punct
 +-- . . punct

46
Input: In BuddyCache applications , however , we expect sharing to result mainly from explicit client interaction and collaboration , suggesting that inter group fetching is unlikely to occur .
Parse:
expect VBP ROOT
 +-- In IN prep
 |   +-- applications NNS pobj
 |       +-- BuddyCache NNP nn
 +-- , , punct
 +-- however RB advmod
 +-- we PRP nsubj
 +-- result VB xcomp
 |   +-- sharing NN nsubj
 |   +-- to TO aux
 |   +-- from IN prep
 |       +-- mainly RB advmod
 |       +-- interaction NN pobj
 |           +-- explicit JJ amod
 |           +-- client NN nn
 |           +-- and CC cc
 |           +-- collaboration NN conj
 +-- suggesting VBG xcomp
 |   +-- unlikely JJ ccomp
 |       +-- that IN mark
 |       +-- fetching VBG nsubj
 |       |   +-- group NN nn
 |       |       +-- inter NN nn
 |       +-- is VBZ cop
 |       +-- occur VB xcomp
 |           +-- to TO aux
 +-- . . punct

47
Input: Moreover , measurements from multi level web caching systems -LRB- 9 -RRB- indicate that a multilevel system may not be advantageous unless the network connection between the peer groups is very fast .
Parse:
indicate VBP ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- measurements NNS nsubj
 |   +-- from IN prep
 |   |   +-- systems NNS pobj
 |   |       +-- level NN nn
 |   |       |   +-- multi JJ amod
 |   |       +-- caching NN nn
 |   |           +-- web NN nn
 |   +-- 9 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- advantageous JJ ccomp
 |   +-- that IN mark
 |   +-- system NN nsubj
 |   |   +-- a DT det
 |   |   +-- multilevel JJ amod
 |   +-- may MD aux
 |   +-- not RB neg
 |   +-- be VB cop
 |   +-- fast JJ advcl
 |       +-- unless IN mark
 |       +-- connection NN nsubj
 |       |   +-- the DT det
 |       |   +-- network NN nn
 |       |   +-- between IN prep
 |       |       +-- groups NNS pobj
 |       |           +-- the DT det
 |       |           +-- peer NN nn
 |       +-- is VBZ cop
 |       +-- very RB advmod
 +-- . . punct

48
Input: We are primarily interested in environments where closely collaborating peers have fast close range connectivity , but the connection between peer groups may be slow .
Parse:
interested JJ ROOT
 +-- We PRP nsubj
 +-- are VBP cop
 +-- primarily RB advmod
 +-- in IN prep
 |   +-- environments NNS pobj
 |       +-- have VBP rcmod
 |           +-- where WRB advmod
 |           +-- peers NNS nsubj
 |           |   +-- collaborating VBG amod
 |           |       +-- closely RB advmod
 |           +-- connectivity NN dobj
 |               +-- close JJ amod
 |               |   +-- fast JJ advmod
 |               +-- range NN nn
 +-- , , punct
 +-- but CC cc
 +-- slow JJ conj
 |   +-- connection NN nsubj
 |   |   +-- the DT det
 |   |   +-- between IN prep
 |   |       +-- groups NNS pobj
 |   |           +-- peer NN nn
 |   +-- may MD aux
 |   +-- be VB cop
 +-- . . punct

49
Input: As a result , we decided that support for inter group fetching in BuddyCache is not a high priority right now .
Parse:
decided VBD ROOT
 +-- As IN prep
 |   +-- result NN pobj
 |       +-- a DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- priority NN ccomp
 |   +-- that IN mark
 |   +-- support NN nsubj
 |   |   +-- for IN prep
 |   |       +-- group NN pobj
 |   |           +-- inter NN nn
 |   |           +-- fetching VBG partmod
 |   |               +-- in IN prep
 |   |                   +-- BuddyCache NNP pobj
 |   +-- is VBZ cop
 |   +-- not RB neg
 |   +-- a DT det
 |   +-- high JJ amod
 |   +-- now RB advmod
 |       +-- right RB advmod
 +-- . . punct

50
Input: To support heterogenous resource rich and resource poor peers , the BuddyCache redirector can be configured to run either in one of the peer nodes or , when available , in a separate node within the site infrastructure .
Parse:
configured VBN ROOT
 +-- support VB advcl
 |   +-- To TO aux
 |   +-- peers NNS dobj
 |       +-- rich JJ amod
 |       |   +-- resource NN npadvmod
 |       |   |   +-- heterogenous JJ amod
 |       |   +-- and CC cc
 |       |   +-- resource VB conj
 |       +-- poor JJ amod
 +-- , , punct
 +-- redirector NN nsubjpass
 |   +-- the DT det
 |   +-- BuddyCache NNP nn
 +-- can MD aux
 +-- be VB auxpass
 +-- run VB xcomp
 |   +-- to TO aux
 |   +-- in IN prep
 |   |   +-- node NN pobj
 |   |       +-- a DT det
 |   |       +-- separate JJ amod
 |   |       +-- within IN prep
 |   |           +-- infrastructure NN pobj
 |   |               +-- the DT det
 |   |               +-- site NN nn
 |   +-- available JJ advcl
 |   |   +-- when WRB advmod
 |   +-- , , punct
 +-- . . punct

51
Input: Moreover , in a resource rich infrastructure node , the redirector can be configured as a stand by peer cache to receive pages fetched by other peers , emulating a central cache somewhat similar to a regional web proxy cache .
Parse:
configured VBN ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- node NN pobj
 |       +-- a DT det
 |       +-- rich JJ amod
 |       |   +-- resource NN npadvmod
 |       +-- infrastructure NN nn
 +-- redirector NN nsubjpass
 |   +-- the DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- as IN prep
 |   +-- stand NN pobj
 |       +-- a DT det
 +-- by IN prep
 |   +-- cache NN pobj
 |       +-- peer NN nn
 +-- receive VB xcomp
 |   +-- to TO aux
 |   +-- pages NNS dobj
 |   |   +-- fetched VBN partmod
 |   |       +-- by IN prep
 |   |           +-- peers NNS pobj
 |   |               +-- other JJ amod
 |   +-- , , punct
 |   +-- emulating VBG partmod
 |       +-- cache NN dobj
 |           +-- a DT det
 |           +-- central JJ amod
 |           +-- similar JJ amod
 |               +-- somewhat RB advmod
 |               +-- to IN prep
 |                   +-- cache NN pobj
 |                       +-- a DT det
 |                       +-- regional JJ amod
 |                       +-- proxy NN nn
 |                           +-- web NN nn
 +-- . . punct

52
Input: From the BuddyCache cache coherence protocol point of view , however , such a stand by peer cache is equivalent to a regular peer cache and therefore we do not consider this case separately in the discussion in this paper. .
Parse:
equivalent JJ ROOT
 +-- From IN prep
 |   +-- point NN pobj
 |       +-- the DT det
 |       +-- BuddyCache NNP nn
 |       +-- cache NN nn
 |       +-- protocol NN nn
 |       |   +-- coherence NN amod
 |       +-- of IN prep
 |           +-- view NN pobj
 +-- , , punct
 +-- however RB advmod
 +-- stand NN nsubj
 |   +-- such PDT predet
 |   +-- a DT det
 |   +-- by IN prep
 |       +-- cache NN pobj
 |           +-- peer NN nn
 +-- is VBZ cop
 +-- to IN prep
 |   +-- cache NN pobj
 |       +-- a DT det
 |       +-- regular JJ amod
 |       +-- peer NN nn
 +-- and CC cc
 +-- consider VB conj
 |   +-- therefore RB advmod
 |   +-- we PRP nsubj
 |   +-- do VBP aux
 |   +-- not RB neg
 |   +-- case NN dobj
 |   |   +-- this DT det
 |   +-- separately RB advmod
 |   +-- in IN prep
 |       +-- discussion NN pobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- paper. NN pobj
 |                   +-- this DT det
 +-- . . punct
