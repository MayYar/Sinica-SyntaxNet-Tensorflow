
1
Input: Improvements in network connectivity erode the distinction between local and wide area computing and , increasingly , users expect their work environment to follow them wherever they go .
Parse:
erode VBP ROOT
 +-- Improvements NNS nsubj
 |   +-- in IN prep
 |       +-- connectivity NN pobj
 |           +-- network NN nn
 +-- distinction NN dobj
 |   +-- the DT det
 |   +-- between IN prep
 |       +-- computing NN pobj
 |           +-- local JJ amod
 |           |   +-- and CC cc
 |           |   +-- wide JJ conj
 |           +-- area NN nn
 |           +-- and CC cc
 |           +-- , , punct
 |           +-- increasingly RB advmod
 +-- , , punct
 +-- expect VBP ccomp
 |   +-- users NNS nsubj
 |   +-- follow VB xcomp
 |       +-- environment NN nsubj
 |       |   +-- their PRP$ poss
 |       |   +-- work NN nn
 |       +-- to TO aux
 |       +-- them PRP dobj
 |       +-- go VBP advcl
 |           +-- wherever WRB advmod
 |           +-- they PRP nsubj
 +-- . . punct

2
Input: Nevertheless , distributed applications may perform poorly in wide area network environments .
Parse:
perform VB ROOT
 +-- Nevertheless RB advmod
 +-- , , punct
 +-- applications NNS nsubj
 |   +-- distributed VBN amod
 +-- may MD aux
 +-- poorly RB advmod
 +-- in IN prep
 |   +-- environments NNS pobj
 |       +-- wide JJ amod
 |       +-- area NN nn
 |       +-- network NN nn
 +-- . . punct

3
Input: Network bandwidth problems will improve in the foreseeable future , but improvement in network latency is fundamentally limited .
Parse:
improve VB ROOT
 +-- problems NNS nsubj
 |   +-- Network NNP nn
 |   +-- bandwidth NN nn
 +-- will MD aux
 +-- in IN prep
 |   +-- future NN pobj
 |       +-- the DT det
 |       +-- foreseeable JJ amod
 +-- , , punct
 +-- but CC cc
 +-- limited JJ conj
 |   +-- improvement NN nsubj
 |   |   +-- in IN prep
 |   |       +-- latency NN pobj
 |   |           +-- network NN nn
 |   +-- is VBZ cop
 |   +-- fundamentally RB advmod
 +-- . . punct

4
Input: BuddyCache is a new object caching technique that addresses the network latency problem for collaborative applications in wide area network environment .
Parse:
technique NN ROOT
 +-- BuddyCache NNP nsubj
 +-- is VBZ cop
 +-- a DT det
 +-- new JJ amod
 +-- object NN nn
 +-- caching VBG nn
 +-- addresses VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- problem NN dobj
 |       +-- the DT det
 |       +-- network NN nn
 |       +-- latency NN nn
 |       +-- for IN prep
 |           +-- applications NNS pobj
 |               +-- collaborative JJ amod
 |               +-- in IN prep
 |                   +-- environment NN pobj
 |                       +-- wide JJ amod
 |                       +-- area NN nn
 |                       +-- network NN nn
 +-- . . punct

5
Input: Collaborative applications provide a shared work environment for groups of networked users collaborating on a common task , for example a team of engineers jointly overseeing a construction project .
Parse:
provide VBP ROOT
 +-- applications NNS nsubj
 |   +-- Collaborative JJ amod
 +-- environment NN dobj
 |   +-- a DT det
 |   +-- shared VBN amod
 |   +-- work NN nn
 |   +-- for IN prep
 |   |   +-- groups NNS pobj
 |   |       +-- of IN prep
 |   |       |   +-- users NNS pobj
 |   |       |       +-- networked VBN amod
 |   |       +-- collaborating VBG partmod
 |   |           +-- on IN prep
 |   |               +-- task NN pobj
 |   |                   +-- a DT det
 |   |                   +-- common JJ amod
 |   +-- , , punct
 |   +-- team NN appos
 |       +-- for IN prep
 |       |   +-- example NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- engineers NNS pobj
 |               +-- overseeing VBG partmod
 |                   +-- jointly RB advmod
 |                   +-- project NN dobj
 |                       +-- a DT det
 |                       +-- construction NN nn
 +-- . . punct

6
Input: Strong consistency collaborative applications , for example CAD systems , use client server transactional object storage systems to ensure consistent access to shared persistent data .
Parse:
use VB ROOT
 +-- applications NNS nsubj
 |   +-- Strong JJ amod
 |   +-- consistency NN amod
 |   +-- collaborative JJ amod
 |   +-- , , punct
 |   +-- systems NNS appos
 |       +-- for IN prep
 |       |   +-- example NN pobj
 |       +-- CAD NNP nn
 +-- systems NNS dobj
 |   +-- server NN nn
 |   |   +-- client NN nn
 |   +-- transactional JJ amod
 |   +-- storage NN nn
 |       +-- object NN nn
 +-- ensure VB xcomp
 |   +-- to TO aux
 |   +-- access NN dobj
 |       +-- consistent JJ amod
 |       +-- to IN prep
 |           +-- data NNS pobj
 |               +-- shared VBN amod
 |               +-- persistent JJ amod
 +-- . . punct

7
Input: Up to now however , users have rarely considered running consistent network storage systems over wide area networks as performance would be unacceptable -LRB- 24 -RRB- .
Parse:
considered VBN ROOT
 +-- Up IN prep
 |   +-- to IN pcomp
 |       +-- now RB pcomp
 +-- however RB advmod
 +-- , , punct
 +-- users NNS nsubj
 +-- have VBP aux
 +-- rarely RB advmod
 +-- running VBG xcomp
 |   +-- systems NNS dobj
 |   |   +-- consistent JJ amod
 |   |   +-- network NN nn
 |   |   +-- storage NN nn
 |   |   +-- over IN prep
 |   |       +-- networks NNS pobj
 |   |           +-- area NN nn
 |   |               +-- wide JJ amod
 |   +-- unacceptable JJ advcl
 |       +-- as IN mark
 |       +-- performance NN nsubj
 |       +-- would MD aux
 |       +-- be VB cop
 |       +-- -LRB- -LRB- punct
 |       +-- 24 CD dep
 |       +-- -RRB- -RRB- punct
 +-- . . punct

8
Input: For transactional storage systems , the high cost of wide area network interactions to maintain data consistency is the main cost limiting the performance and therefore , in wide area network environments , collaborative applications have been adapted to use weaker consistency storage systems -LRB- 22 -RRB- .
Parse:
cost NN ROOT
 +-- For IN prep
 |   +-- systems NNS pobj
 |       +-- transactional JJ amod
 |       +-- storage NN nn
 +-- , , punct
 +-- cost NN nsubj
 |   +-- the DT det
 |   +-- high JJ amod
 |   +-- of IN prep
 |       +-- interactions NNS pobj
 |           +-- wide JJ amod
 |           +-- area NN nn
 |           +-- network NN nn
 |           +-- maintain VB infmod
 |               +-- to TO aux
 |               +-- consistency NN dobj
 |                   +-- data NNS nn
 +-- is VBZ cop
 +-- the DT det
 +-- main JJ amod
 +-- limiting VBG dep
 |   +-- performance NN dobj
 |       +-- the DT det
 +-- and CC cc
 +-- adapted VBN conj
 |   +-- therefore RB advmod
 |   +-- , , punct
 |   +-- in IN prep
 |   |   +-- environments NNS pobj
 |   |       +-- wide JJ amod
 |   |       +-- area NN nn
 |   |       +-- network NN nn
 |   +-- applications NNS nsubjpass
 |   |   +-- collaborative JJ amod
 |   +-- have VBP aux
 |   +-- been VBN auxpass
 |   +-- use VB xcomp
 |       +-- to TO aux
 |       +-- systems NNS dobj
 |       |   +-- weaker JJR amod
 |       |   +-- consistency NN nn
 |       |   +-- storage NN nn
 |       +-- 22 CD dep
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

9
Input: Adapting an application to use weak consistency storage system requires significant effort since the application needs to be rewritten to deal with a different storage system semantics .
Parse:
requires VBZ ROOT
 +-- Adapting VBG csubj
 |   +-- application NN dobj
 |       +-- an DT det
 |       +-- use VB infmod
 |           +-- to TO aux
 |           +-- system NN dobj
 |               +-- weak JJ amod
 |               +-- consistency NN amod
 |               +-- storage NN nn
 +-- effort NN dobj
 |   +-- significant JJ amod
 +-- needs VBZ advcl
 |   +-- since IN mark
 |   +-- application NN nsubj
 |   |   +-- the DT det
 |   +-- rewritten VBN xcomp
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- deal VB xcomp
 |           +-- to TO aux
 |           +-- with IN prep
 |               +-- semantics NNS pobj
 |                   +-- a DT det
 |                   +-- different JJ amod
 |                   +-- system NN nn
 |                       +-- storage NN nn
 +-- . . punct

10
Input: If shared persistent objects could be accessed with low latency , a new field of distributed strong consistency applications could be opened .
Parse:
opened VBN ROOT
 +-- accessed VBN advcl
 |   +-- If IN mark
 |   +-- objects NNS nsubjpass
 |   |   +-- shared VBN amod
 |   |   +-- persistent JJ amod
 |   +-- could MD aux
 |   +-- be VB auxpass
 |   +-- with IN prep
 |       +-- latency NN pobj
 |           +-- low JJ amod
 +-- , , punct
 +-- field NN nsubjpass
 |   +-- a DT det
 |   +-- new JJ amod
 |   +-- of IN prep
 |       +-- applications NNS pobj
 |           +-- distributed VBN amod
 |           +-- strong JJ amod
 |           +-- consistency NN nn
 +-- could MD aux
 +-- be VB auxpass
 +-- . . punct

11
Input: Cooperative web caching -LRB- 10 , 11 , 15 -RRB- is a well known approach to reducing client interaction with a server by allowing one client to obtain missing objects from a another client instead of the server .
Parse:
approach NN ROOT
 +-- caching NN nsubj
 |   +-- Cooperative JJ amod
 |   +-- web NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- 10 CD dep
 |   |   +-- , , punct
 |   |   +-- 11 CD num
 |   |   +-- 15 CD num
 |   +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- a DT det
 +-- known VBN amod
 |   +-- well RB advmod
 +-- to IN prep
 |   +-- reducing VBG pcomp
 |       +-- interaction NN dobj
 |       |   +-- client NN nn
 |       |   +-- with IN prep
 |       |       +-- server NN pobj
 |       |           +-- a DT det
 |       +-- by IN prep
 |           +-- allowing VBG pcomp
 |               +-- obtain VB xcomp
 |                   +-- client NN nsubj
 |                   |   +-- one CD num
 |                   +-- to TO aux
 |                   +-- objects NNS dobj
 |                   |   +-- missing VBG amod
 |                   +-- from IN prep
 |                   |   +-- client NN pobj
 |                   |       +-- a DT det
 |                   |       +-- another DT det
 |                   +-- of IN prep
 |                       +-- instead RB advmod
 |                       +-- server NN pobj
 |                           +-- the DT det
 +-- . . punct

12
Input: Collaborative applications seem a particularly good match to benefit from this approach since one of the hard problems , namely determining what objects are cached where , becomes easy in small groups typical of collaborative settings .
Parse:
seem VBP ROOT
 +-- applications NNS nsubj
 |   +-- Collaborative JJ amod
 +-- benefit VB xcomp
 |   +-- match NN nsubj
 |   |   +-- a DT det
 |   |   +-- good JJ amod
 |   |       +-- particularly RB advmod
 |   +-- to TO aux
 |   +-- from IN prep
 |   |   +-- approach NN pobj
 |   |       +-- this DT det
 |   +-- since IN prep
 |   |   +-- one CD pobj
 |   |       +-- of IN prep
 |   |           +-- problems NNS pobj
 |   |               +-- the DT det
 |   |               +-- hard JJ amod
 |   +-- , , punct
 |   +-- determining VBG partmod
 |       +-- namely RB advmod
 |       +-- cached VBN ccomp
 |           +-- what WDT dobj
 |           +-- objects NNS nsubj
 |           +-- are VBP cop
 |           +-- easy JJ advcl
 |               +-- where WRB advmod
 |               +-- , , punct
 |               +-- becomes VBZ cop
 |               +-- in IN prep
 |                   +-- groups NNS pobj
 |                       +-- small JJ amod
 |                       +-- typical JJ amod
 |                           +-- of IN prep
 |                               +-- settings NNS pobj
 |                                   +-- collaborative JJ amod
 +-- . . punct

13
Input: However , cooperative web caching techniques do not provide two important properties needed by collaborative applications , strong consistency and efficient 26 access to fine grained objects .
Parse:
provide VB ROOT
 +-- However RB advmod
 +-- , , punct
 +-- techniques NNS nsubj
 |   +-- cooperative JJ amod
 |   +-- caching VBG nn
 |       +-- web NN nn
 +-- do VBP aux
 +-- not RB neg
 +-- properties NNS dobj
 |   +-- two CD num
 |   +-- important JJ amod
 |   +-- needed VBN partmod
 |       +-- by IN prep
 |           +-- applications NNS pobj
 |               +-- collaborative JJ amod
 |               +-- , , punct
 |               +-- consistency NN conj
 |               |   +-- strong JJ amod
 |               +-- and CC cc
 |               +-- access NN conj
 |                   +-- efficient JJ amod
 |                   +-- 26 CD num
 |                   +-- to IN prep
 |                       +-- objects NNS pobj
 |                           +-- fine JJ amod
 |                           +-- grained VBN amod
 +-- . . punct

14
Input: Cooperative object caching systems -LRB- 2 -RRB- provide these properties .
Parse:
provide VB ROOT
 +-- systems NNS nsubj
 |   +-- object NN nn
 |   |   +-- Cooperative JJ amod
 |   +-- caching VBG nn
 |   +-- 2 LS appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- properties NNS dobj
 |   +-- these DT det
 +-- . . punct

15
Input: However , they rely on interaction with the server to provide fine grain cache coherence that avoids the problem of false sharing when accesses to unrelated objects appear to conflict because they occur on the same physical page .
Parse:
rely VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- they PRP nsubj
 +-- on IN prep
 |   +-- interaction NN pobj
 |       +-- with IN prep
 |           +-- server NN pobj
 |               +-- the DT det
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- coherence NN dobj
 |       +-- fine JJ amod
 |       +-- cache NN nn
 |       |   +-- grain NN nn
 |       +-- avoids VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- problem NN dobj
 |           |   +-- the DT det
 |           |   +-- of IN prep
 |           |       +-- sharing NN pobj
 |           |           +-- false JJ amod
 |           +-- appear VBP advcl
 |               +-- when WRB advmod
 |               +-- accesses NNS nsubj
 |               |   +-- to IN prep
 |               |       +-- objects NNS pobj
 |               |           +-- unrelated JJ amod
 |               +-- to IN prep
 |               |   +-- conflict NN pobj
 |               +-- occur VBP advcl
 |                   +-- because IN mark
 |                   +-- they PRP nsubj
 |                   +-- on IN prep
 |                       +-- page NN pobj
 |                           +-- the DT det
 |                           +-- same JJ amod
 |                           +-- physical JJ amod
 +-- . . punct

16
Input: Interaction with the server increases latency .
Parse:
Interaction NN ROOT
 +-- with IN prep
 |   +-- latency NN pobj
 |       +-- the DT det
 |       +-- increases NNS nn
 |           +-- server NN nn
 +-- . . punct

17
Input: The contribution of this work is extending cooperative caching techniques to provide strong consistency and efficient access to fine grain objects in wide area environments .
Parse:
extending VBG ROOT
 +-- contribution NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- work NN pobj
 |           +-- this DT det
 +-- is VBZ aux
 +-- techniques NNS dobj
 |   +-- cooperative JJ amod
 |   +-- caching VBG nn
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- access NN dobj
 |       +-- strong JJ amod
 |       +-- consistency NN amod
 |       |   +-- and CC cc
 |       |   +-- efficient JJ conj
 |       +-- to IN prep
 |           +-- objects NNS pobj
 |               +-- fine JJ amod
 |               +-- grain NN nn
 |               +-- in IN prep
 |                   +-- environments NNS pobj
 |                       +-- wide JJ amod
 |                       +-- area NN nn
 +-- . . punct

18
Input: Consider a team of engineers employed by a construction company overseeing a remote project and working in a shed at the construction site .
Parse:
Consider VB ROOT
 +-- team NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- engineers NNS pobj
 |           +-- employed VBN partmod
 |               +-- by IN prep
 |                   +-- company NN pobj
 |                       +-- a DT det
 |                       +-- construction NN nn
 |                       +-- overseeing VBG dep
 |                           +-- project NN dobj
 |                           |   +-- a DT det
 |                           |   +-- remote JJ amod
 |                           +-- and CC cc
 |                           +-- working VBG conj
 |                               +-- in IN prep
 |                                   +-- shed NN pobj
 |                                       +-- a DT det
 |                                       +-- at IN prep
 |                                           +-- site NN pobj
 |                                               +-- the DT det
 |                                               +-- construction NN nn
 +-- . . punct

19
Input: The engineers use a collaborative CAD application to revise and update complex project design documents .
Parse:
use VBP ROOT
 +-- engineers NNS nsubj
 |   +-- The DT det
 +-- application NN dobj
 |   +-- a DT det
 |   +-- collaborative JJ amod
 |   +-- CAD NN nn
 +-- revise VB xcomp
 |   +-- to TO aux
 |   +-- and CC cc
 |   +-- update VB conj
 |   +-- documents NNS dobj
 |       +-- complex JJ amod
 |       +-- project NN nn
 |       +-- design NN nn
 +-- . . punct

20
Input: The shared documents are stored in transactional repository servers at the company home site .
Parse:
stored VBN ROOT
 +-- documents NNS nsubjpass
 |   +-- The DT det
 |   +-- shared VBN amod
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- servers NNS pobj
 |       +-- transactional JJ amod
 |       +-- repository JJ amod
 +-- at IN prep
 |   +-- site NN pobj
 |       +-- the DT det
 |       +-- company NN nn
 |       +-- home NN nn
 +-- . . punct

21
Input: The engineers use workstations running repository clients .
Parse:
use VBP ROOT
 +-- engineers NNS nsubj
 |   +-- The DT det
 +-- workstations NNS dobj
 +-- running VBG xcomp
 |   +-- clients NNS dobj
 |       +-- repository NN nn
 +-- . . punct

22
Input: The workstations are interconnected by a fast local Ethernet but the network connection to the home repository servers is slow .
Parse:
interconnected VBN ROOT
 +-- workstations NNS nsubjpass
 |   +-- The DT det
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- Ethernet NNP pobj
 |       +-- a DT det
 |       +-- fast JJ amod
 |       +-- local JJ amod
 +-- but CC cc
 +-- slow JJ conj
 |   +-- connection NN nsubj
 |   |   +-- the DT det
 |   |   +-- network NN nn
 |   |   +-- to IN prep
 |   |       +-- servers NNS pobj
 |   |           +-- the DT det
 |   |           +-- repository NN nn
 |   |               +-- home NN nn
 |   +-- is VBZ cop
 +-- . . punct

23
Input: To improve access latency , clients fetch objects from repository servers and cache and access them locally .
Parse:
fetch VBP ROOT
 +-- improve VB advcl
 |   +-- To TO aux
 |   +-- latency NN dobj
 |       +-- access NN nn
 +-- , , punct
 +-- clients NNS nsubj
 +-- objects NNS dobj
 +-- from IN prep
 |   +-- servers NNS pobj
 |       +-- repository JJ amod
 |       +-- and CC cc
 |       +-- cache NN conj
 +-- and CC cc
 +-- access VB conj
 |   +-- them PRP dobj
 |   +-- locally RB advmod
 +-- . . punct

24
Input: A coherence protocol ensures that client caches remain consistent when objects are modified .
Parse:
ensures VBZ ROOT
 +-- protocol NN nsubj
 |   +-- A DT det
 |   +-- coherence NN amod
 +-- consistent JJ ccomp
 |   +-- that IN mark
 |   +-- caches NNS nsubj
 |   |   +-- client NN nn
 |   +-- remain VBP cop
 |   +-- modified VBN advcl
 |       +-- when WRB advmod
 |       +-- objects NNS nsubjpass
 |       +-- are VBP auxpass
 +-- . . punct

25
Input: The performance problem facing the collaborative application is coordinating with the servers consistent access to shared objects .
Parse:
coordinating VBG ROOT
 +-- problem NN nsubj
 |   +-- The DT det
 |   +-- performance NN nn
 |   +-- facing VBG partmod
 |       +-- application NN dobj
 |           +-- the DT det
 |           +-- collaborative JJ amod
 +-- is VBZ aux
 +-- with IN prep
 |   +-- access NN pobj
 |       +-- the DT det
 |       +-- servers NNS nn
 |       +-- consistent JJ amod
 |       +-- to IN prep
 |           +-- objects NNS pobj
 |               +-- shared VBN amod
 +-- . . punct

26
Input: With BuddyCache , a group of close by collaborating clients , connected to storage repository via a high latency link , can avoid interactions with the server if needed objects , updates or coherency information are available in some client in the group .
Parse:
avoid VB ROOT
 +-- With IN prep
 |   +-- BuddyCache NNP pobj
 +-- , , punct
 +-- group NN nsubj
 |   +-- a DT det
 |   +-- of IN prep
 |   |   +-- close NN pobj
 |   +-- by IN prep
 |       +-- clients NNS pobj
 |           +-- collaborating VBG amod
 |           +-- , , punct
 |           +-- connected VBN partmod
 |               +-- to IN prep
 |               |   +-- repository NN pobj
 |               |       +-- storage NN nn
 |               +-- via IN prep
 |                   +-- link NN pobj
 |                       +-- a DT det
 |                       +-- high JJ amod
 |                       +-- latency NN nn
 +-- can MD aux
 +-- interactions NNS dobj
 |   +-- with IN prep
 |       +-- server NN pobj
 |           +-- the DT det
 +-- available JJ advcl
 |   +-- if IN mark
 |   +-- objects NNS nsubj
 |   |   +-- needed VBN amod
 |   |   +-- , , punct
 |   |   +-- updates NNS conj
 |   |   +-- or CC cc
 |   |   +-- information NN conj
 |   |       +-- coherency NN nn
 |   +-- are VBP cop
 |   +-- in IN prep
 |       +-- client NN pobj
 |           +-- some DT det
 |           +-- in IN prep
 |               +-- group NN pobj
 |                   +-- the DT det
 +-- . . punct

27
Input: BuddyCache presents two main technical challenges .
Parse:
presents VBZ ROOT
 +-- BuddyCache NN nsubj
 +-- challenges NNS dobj
 |   +-- two CD num
 |   +-- main JJ amod
 |   +-- technical JJ amod
 +-- . . punct

28
Input: One challenge is how to provide efficient access to shared finegrained objects in the collaborative group without imposing performance overhead on the entire caching system .
Parse:
is VBZ ROOT
 +-- challenge NN nsubj
 |   +-- One CD num
 +-- provide VB ccomp
 |   +-- how WRB advmod
 |   +-- to TO aux
 |   +-- access NN dobj
 |   |   +-- efficient JJ amod
 |   |   +-- to IN prep
 |   |       +-- objects NNS pobj
 |   |           +-- shared VBN amod
 |   |           +-- finegrained JJ amod
 |   |           +-- in IN prep
 |   |               +-- group NN pobj
 |   |                   +-- the DT det
 |   |                   +-- collaborative JJ amod
 |   +-- without IN prep
 |       +-- imposing VBG pcomp
 |           +-- performance NN dobj
 |           +-- overhead RB advmod
 |           +-- on IN prep
 |               +-- system NN pobj
 |                   +-- the DT det
 |                   +-- entire JJ amod
 |                   +-- caching NN nn
 +-- . . punct

29
Input: The other challenge is to support fine grain cache coherence in the presence of slow and failed nodes .
Parse:
is VBZ ROOT
 +-- challenge NN nsubj
 |   +-- The DT det
 |   +-- other JJ amod
 +-- support VB xcomp
 |   +-- to TO aux
 |   +-- coherence NN dobj
 |   |   +-- fine JJ amod
 |   |   +-- cache NN nn
 |   |       +-- grain NN nn
 |   +-- in IN prep
 |       +-- presence NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- nodes NNS pobj
 |                   +-- slow JJ amod
 |                       +-- and CC cc
 |                       +-- failed VBD conj
 +-- . . punct

30
Input: BuddyCache uses a redirection approach similar to one used in cooperative web caching systems -LRB- 11 -RRB- .
Parse:
uses VBZ ROOT
 +-- BuddyCache NNP nsubj
 +-- approach NN dobj
 |   +-- a DT det
 |   +-- redirection NN nn
 |   +-- similar JJ amod
 |       +-- to IN prep
 |           +-- one CD pobj
 |               +-- used VBN partmod
 |                   +-- in IN prep
 |                       +-- systems NNS pobj
 |                           +-- cooperative JJ amod
 |                           +-- caching VBG nn
 |                           |   +-- web NN nn
 |                           +-- -LRB- -LRB- punct
 |                           +-- 11 CD dep
 |                           +-- -RRB- -RRB- punct
 +-- . . punct

31
Input: A redirector server , interposed between the clients and the remote servers , runs on the same network as the collaborating group and , when possible , replaces the function of the remote servers .
Parse:
runs VBZ ROOT
 +-- server NN nsubj
 |   +-- A DT det
 |   +-- redirector NN nn
 |   +-- , , punct
 |   +-- interposed VBN partmod
 |       +-- between IN prep
 |           +-- clients NNS pobj
 |               +-- the DT det
 |               +-- and CC cc
 |               +-- servers NNS conj
 |                   +-- the DT det
 |                   +-- remote JJ amod
 +-- , , punct
 +-- on IN prep
 |   +-- network NN pobj
 |       +-- the DT det
 |       +-- same JJ amod
 |       +-- as IN prep
 |           +-- group NN pobj
 |               +-- the DT det
 |               +-- collaborating NN amod
 +-- and CC cc
 +-- replaces VBZ conj
 |   +-- possible JJ advcl
 |   |   +-- when WRB advmod
 |   +-- , , punct
 |   +-- function NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- servers NNS pobj
 |               +-- the DT det
 |               +-- remote JJ amod
 +-- . . punct

32
Input: If the client request can not be served locally , the redirector forwards it to a remote server .
Parse:
forwards VBZ ROOT
 +-- served VBN advcl
 |   +-- If IN mark
 |   +-- request NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- client NN nn
 |   +-- can MD aux
 |   +-- not RB neg
 |   +-- be VB auxpass
 |   +-- locally RB advmod
 +-- , , punct
 +-- redirector NN nsubj
 |   +-- the DT det
 +-- it PRP dobj
 +-- to IN prep
 |   +-- server NN pobj
 |       +-- a DT det
 |       +-- remote JJ amod
 +-- . . punct

33
Input: When one of the clients in the group fetches a shared object from the repository , the object is likely to be needed by other clients .
Parse:
likely JJ ROOT
 +-- fetches VBZ advcl
 |   +-- When WRB advmod
 |   +-- one CD nsubj
 |   |   +-- of IN prep
 |   |       +-- clients NNS pobj
 |   |           +-- the DT det
 |   |           +-- in IN prep
 |   |               +-- group NN pobj
 |   |                   +-- the DT det
 |   +-- object NN dobj
 |   |   +-- a DT det
 |   |   +-- shared VBN amod
 |   +-- from IN prep
 |       +-- repository NN pobj
 |           +-- the DT det
 +-- , , punct
 +-- object NN nsubj
 |   +-- the DT det
 +-- is VBZ cop
 +-- needed VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- by IN prep
 |       +-- clients NNS pobj
 |           +-- other JJ amod
 +-- . . punct

34
Input: BuddyCache redirects subsequent requests for this object to the caching client .
Parse:
redirects VBZ ROOT
 +-- BuddyCache NN nsubj
 +-- requests NNS dobj
 |   +-- subsequent JJ amod
 |   +-- for IN prep
 |       +-- object NN pobj
 |           +-- this DT det
 |           +-- to IN prep
 |               +-- client NN pobj
 |                   +-- the DT det
 |                   +-- caching VBG nn
 +-- . . punct

35
Input: Similarly , when a client creates or modifies a shared object , the new data is likely to be of potential interest to all group members .
Parse:
likely JJ ROOT
 +-- Similarly RB advmod
 +-- , , punct
 +-- creates VBZ advcl
 |   +-- when WRB advmod
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   +-- or CC cc
 |   +-- modifies NNS conj
 |   +-- object NN dobj
 |       +-- a DT det
 |       +-- shared VBN amod
 +-- data NNS nsubj
 |   +-- the DT det
 |   +-- new JJ amod
 +-- is VBZ cop
 +-- be VB xcomp
 |   +-- to TO aux
 |   +-- of IN prep
 |       +-- interest NN pobj
 |           +-- potential JJ amod
 |           +-- to IN prep
 |               +-- members NNS pobj
 |                   +-- all DT det
 |                   +-- group NN nn
 +-- . . punct

36
Input: BuddyCache uses redirection to support peer update , a lightweight application level multicast technique that provides group members with consistent access to the new data committed within the collaborating group without imposing extra overhead outside the group .
Parse:
uses VBZ ROOT
 +-- BuddyCache NNP nsubj
 +-- redirection NN dobj
 +-- support VB xcomp
 |   +-- to TO aux
 |   +-- update NN dobj
 |       +-- peer NN nn
 |       +-- , , punct
 |       +-- technique NN appos
 |           +-- a DT det
 |           +-- level NN nn
 |           |   +-- lightweight JJ amod
 |           |   +-- application NN nn
 |           +-- multicast JJ amod
 |           +-- provides VBZ rcmod
 |               +-- that WDT nsubj
 |               +-- members NNS dobj
 |               |   +-- group NN nn
 |               +-- with IN prep
 |                   +-- access NN pobj
 |                       +-- consistent JJ amod
 |                       +-- to IN prep
 |                       |   +-- data NNS pobj
 |                       |       +-- the DT det
 |                       |       +-- new JJ amod
 |                       |       +-- committed VBN partmod
 |                       |           +-- within IN prep
 |                       |               +-- group NN pobj
 |                       |                   +-- the DT det
 |                       |                   +-- collaborating NN amod
 |                       +-- without IN prep
 |                           +-- imposing VBG pcomp
 |                               +-- overhead JJ dobj
 |                               |   +-- extra JJ amod
 |                               +-- outside IN prep
 |                                   +-- group NN pobj
 |                                       +-- the DT det
 +-- . . punct

37
Input: Nevertheless , in a transactional system , redirection interferes with shared object availability .
Parse:
interferes VBZ ROOT
 +-- Nevertheless RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- system NN pobj
 |       +-- a DT det
 |       +-- transactional JJ amod
 +-- redirection NN nsubj
 +-- with IN prep
 |   +-- availability NN pobj
 |       +-- shared VBN amod
 |       +-- object NN nn
 +-- . . punct

38
Input: Solo commit , is a validation technique used by BuddyCache to avoid the undesirable client dependencies that reduce object availability when some client nodes in the group are slow , or clients fail independently .
Parse:
slow JJ ROOT
 +-- technique NN nsubj
 |   +-- Solo NNP nsubj
 |   |   +-- commit VBP advmod
 |   +-- , , punct
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- validation NN nn
 |   +-- used VBN partmod
 |       +-- by IN prep
 |       |   +-- BuddyCache NNP pobj
 |       +-- avoid VB xcomp
 |           +-- to TO aux
 |           +-- dependencies NNS dobj
 |               +-- the DT det
 |               +-- undesirable JJ amod
 |               +-- client NN nn
 |               +-- reduce VBP rcmod
 |                   +-- that WDT nsubj
 |                   +-- availability NN dobj
 |                   |   +-- object NN nn
 |                   +-- nodes VBZ advcl
 |                       +-- when WRB advmod
 |                       +-- client NN nsubj
 |                       |   +-- some DT det
 |                       +-- in IN prep
 |                           +-- group NN pobj
 |                               +-- the DT det
 +-- are VBP cop
 +-- , , punct
 +-- or CC cc
 +-- fail VBP conj
 |   +-- clients NNS nsubj
 |   +-- independently RB advmod
 +-- . . punct

39
Input: A salient feature of solo commit is supporting fine grained validation using inexpensive coarse grained coherence information .
Parse:
supporting VBG ROOT
 +-- feature NN nsubj
 |   +-- A DT det
 |   +-- salient JJ amod
 |   +-- of IN prep
 |       +-- commit NN pobj
 |           +-- solo NN amod
 +-- is VBZ aux
 +-- validation NN dobj
 |   +-- grained VBN amod
 |   |   +-- fine RB advmod
 |   +-- using VBG partmod
 |       +-- information NN dobj
 |           +-- inexpensive JJ amod
 |           +-- coarse NN amod
 |           +-- grained VBN amod
 |           +-- coherence NN amod
 +-- . . punct

40
Input: Since redirection supports the performance benefits of reducing interaction with the server but introduces extra processing cost due to availability mechanisms and request forwarding , this raises the question is the cure worse than the disease ? We designed and implemented a BuddyCache prototype and studied its performance benefits and costs using analytical modeling and system measurements .
Parse:
raises VBZ ROOT
 +-- supports VBZ advcl
 |   +-- Since IN mark
 |   +-- redirection NN nsubj
 |   +-- benefits NNS dobj
 |   |   +-- the DT det
 |   |   +-- performance NN nn
 |   |   +-- of IN prep
 |   |       +-- reducing VBG pcomp
 |   |           +-- interaction NN dobj
 |   |               +-- with IN prep
 |   |                   +-- server NN pobj
 |   |                       +-- the DT det
 |   +-- but CC cc
 |   +-- introduces VBZ conj
 |       +-- cost NN dobj
 |       |   +-- extra JJ amod
 |       |   +-- processing NN nn
 |       +-- to IN prep
 |           +-- due IN mwe
 |           +-- mechanisms NNS pobj
 |               +-- availability NN nn
 |               +-- and CC cc
 |               +-- forwarding NN conj
 |                   +-- request NN nn
 +-- , , punct
 +-- this DT nsubj
 +-- worse JJR dep
 |   +-- question NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ cop
 |   +-- cure NN nsubj
 |   |   +-- the DT det
 |   +-- than IN prep
 |   |   +-- disease NN pobj
 |   |       +-- the DT det
 |   +-- ? , punct
 |   +-- designed VBD parataxis
 |       +-- We PRP nsubj
 |       +-- and CC cc
 |       +-- implemented VBD conj
 |       +-- prototype NN dobj
 |       |   +-- a DT det
 |       |   +-- BuddyCache NNP nn
 |       +-- studied VBD conj
 |           +-- benefits NNS dobj
 |           |   +-- its PRP$ poss
 |           |   +-- performance NN nn
 |           |   +-- and CC cc
 |           |   +-- costs NNS conj
 |           +-- using VBG xcomp
 |               +-- measurements NNS dobj
 |                   +-- analytical JJ amod
 |                   +-- modeling NN nn
 |                       +-- and CC cc
 |                       +-- system NN conj
 +-- . . punct

41
Input: We compared the storage system performance with and without BuddyCache and considered how the cost benefit balance is affected by network latency .
Parse:
compared VBD ROOT
 +-- We PRP nsubj
 +-- performance NN dobj
 |   +-- the DT det
 |   +-- system NN nn
 |   |   +-- storage NN nn
 |   +-- with IN prep
 |       +-- and CC cc
 |       +-- without IN conj
 |           +-- BuddyCache NNP pobj
 +-- and CC cc
 +-- considered VBD conj
 |   +-- affected VBN ccomp
 |       +-- how WRB advmod
 |       +-- balance NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- benefit NN nn
 |       |       +-- cost NN nn
 |       +-- is VBZ auxpass
 |       +-- by IN prep
 |           +-- latency NN pobj
 |               +-- network NN nn
 +-- . . punct

42
Input: Analytical results , supported by measurements based on the multi user 007 benchmark , indicate that for typical Internet latencies BuddyCache provides significant performance benefits , e.g .
Parse:
indicate VBP ROOT
 +-- results NNS nsubj
 |   +-- Analytical JJ amod
 |   +-- , , punct
 |   +-- supported VBN partmod
 |       +-- by IN prep
 |           +-- measurements NNS pobj
 |               +-- based VBN partmod
 |                   +-- on IN prep
 |                       +-- user NN pobj
 |                           +-- the DT det
 |                           +-- multi JJ amod
 |                           +-- benchmark NN dep
 |                               +-- 007 CD num
 +-- provides VBZ ccomp
 |   +-- that IN mark
 |   +-- for IN prep
 |   |   +-- latencies NNS pobj
 |   |       +-- typical JJ amod
 |   |       +-- Internet NN nn
 |   +-- BuddyCache NNP nsubj
 |   +-- benefits NNS dobj
 |       +-- significant JJ amod
 |       +-- performance NN nn
 |       +-- , , punct
 |       +-- e.g UH appos
 +-- . . punct

43
Input: for latencies ranging from 40 to 80 milliseconds round trip time , clients using the BuddyCache can reduce by up to 50 % the latency of access to shared objects compared to the clients accessing the repository directly .
Parse:
reduce VB ROOT
 +-- for IN prep
 |   +-- latencies NNS pobj
 |       +-- ranging VBG partmod
 |           +-- from IN prep
 |               +-- 40 CD pobj
 |               +-- to IN prep
 |                   +-- milliseconds NNS pobj
 |                       +-- 80 CD num
 |                       +-- time NN dep
 |                           +-- round JJ amod
 |                           +-- trip NN nn
 +-- , , punct
 +-- clients NNS nsubj
 |   +-- using VBG partmod
 |       +-- BuddyCache NNP dobj
 |           +-- the DT det
 +-- can MD aux
 +-- by IN prep
 |   +-- % NN pobj
 |       +-- 50 CD num
 |           +-- to IN quantmod
 |               +-- up IN dep
 +-- latency NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- access NN pobj
 |           +-- to IN prep
 |               +-- objects NNS pobj
 |                   +-- shared VBN amod
 +-- compared VBN prep
 |   +-- to IN pcomp
 |       +-- accessing VBG pcomp
 |           +-- clients NNS nsubj
 |           |   +-- the DT det
 |           +-- repository NN dobj
 |           |   +-- the DT det
 |           +-- directly RB advmod
 +-- . . punct

44
Input: These strong performance gains could make transactional object storage systems more attractive for collaborative applications in wide area environments. .
Parse:
make VB ROOT
 +-- gains NNS nsubj
 |   +-- These DT det
 |   +-- strong JJ amod
 |   +-- performance NN nn
 +-- could MD aux
 +-- attractive JJ xcomp
 |   +-- systems NNS nsubj
 |   |   +-- transactional JJ amod
 |   |   +-- storage NN nn
 |   |       +-- object NN nn
 |   +-- more RBR advmod
 |   +-- for IN prep
 |       +-- applications NNS pobj
 |           +-- collaborative JJ amod
 |           +-- in IN prep
 |               +-- environments. NNS pobj
 |                   +-- wide JJ amod
 |                   +-- area NN nn
 +-- . . punct
