
1
Input: In this section we provide the details of the BuddyCache implementation .
Parse:
provide VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- details NNS dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- implementation NN pobj
 |           +-- the DT det
 |           +-- BuddyCache NNP nn
 +-- . . punct

2
Input: We have implemented BuddyCache in the Thor client server object oriented database -LRB- 23 -RRB- .
Parse:
implemented VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- BuddyCache NNP dobj
 +-- in IN prep
 |   +-- database NN pobj
 |       +-- the DT det
 |       +-- Thor NNP nn
 |       +-- server NN nn
 |       |   +-- client NN nn
 |       +-- oriented VBN amod
 |       |   +-- object NN dep
 |       +-- -LRB- -LRB- punct
 |       +-- 23 CD dep
 |       +-- -RRB- -RRB- punct
 +-- . . punct

3
Input: Thor supports high performance access to distributed objects and therefore provides a good test platform to investigate BuddyCache performance .
Parse:
supports VBZ ROOT
 +-- Thor NN nsubj
 +-- access NN dobj
 |   +-- performance NN nn
 |   |   +-- high JJ amod
 |   +-- to IN prep
 |       +-- objects NNS pobj
 |           +-- distributed VBN amod
 +-- and CC cc
 +-- therefore RB advmod
 +-- provides VBZ conj
 |   +-- platform NN dobj
 |       +-- a DT det
 |       +-- good JJ amod
 |       +-- test NN nn
 |       +-- investigate VB infmod
 |           +-- to TO aux
 |           +-- performance NN dobj
 |               +-- BuddyCache NNP nn
 +-- . . punct

4
Input: 30 4.1 Base Storage System Thor servers provide persistent storage for objects and clients cache copies of these objects .
Parse:
provide VBP ROOT
 +-- servers NNS nsubj
 |   +-- 4.1 CD num
 |   |   +-- 30 CD number
 |   +-- System NNP nn
 |   |   +-- Storage NN nn
 |   |       +-- Base NN nn
 |   +-- Thor NNP nn
 +-- storage NN dobj
 |   +-- persistent JJ amod
 +-- for IN prep
 |   +-- objects NNS pobj
 |       +-- and CC cc
 |       +-- copies NNS conj
 |       |   +-- cache NN nn
 |       |       +-- clients NNS nn
 |       +-- of IN prep
 |           +-- objects NNS pobj
 |               +-- these DT det
 +-- . . punct

5
Input: Applications run at the clients and interact with the system by making calls on methods of cached objects .
Parse:
run VBP ROOT
 +-- Applications NNS nsubj
 +-- at IN prep
 |   +-- clients NNS pobj
 |       +-- the DT det
 +-- and CC cc
 +-- interact VB conj
 |   +-- with IN prep
 |   |   +-- system NN pobj
 |   |       +-- the DT det
 |   +-- by IN prep
 |       +-- making VBG pcomp
 |           +-- calls NNS dobj
 |               +-- on IN prep
 |                   +-- methods NNS pobj
 |                       +-- of IN prep
 |                           +-- objects NNS pobj
 |                               +-- cached VBN amod
 +-- . . punct

6
Input: All method calls occur within atomic transactions .
Parse:
occur VBP ROOT
 +-- calls NNS nsubj
 |   +-- All DT det
 |   +-- method NN nn
 +-- within IN prep
 |   +-- transactions NNS pobj
 |       +-- atomic JJ amod
 +-- . . punct

7
Input: Clients communicate with servers to fetch pages or to commit a transaction .
Parse:
communicate VBP ROOT
 +-- Clients NNS nsubj
 +-- with IN prep
 |   +-- servers NNS pobj
 +-- fetch VB xcomp
 |   +-- to TO aux
 |   +-- pages NNS dobj
 |   +-- or CC cc
 |   +-- commit VB conj
 |       +-- to TO aux
 |       +-- transaction NN dobj
 |           +-- a DT det
 +-- . . punct

8
Input: The servers have a disk for storing persistent objects , a stable transaction log , and volatile memory .
Parse:
have VBP ROOT
 +-- servers NNS nsubj
 |   +-- The DT det
 +-- disk NN dobj
 |   +-- a DT det
 |   +-- for IN prep
 |       +-- storing VBG pcomp
 |           +-- objects NNS dobj
 |               +-- persistent JJ amod
 |               +-- , , punct
 |               +-- log NN conj
 |               |   +-- a DT det
 |               |   +-- transaction NN nn
 |               |       +-- stable JJ amod
 |               +-- and CC cc
 |               +-- memory NN conj
 |                   +-- volatile JJ amod
 +-- . . punct

9
Input: The disk is organized as a collection of pages which are the units of disk access .
Parse:
organized VBN ROOT
 +-- disk NN nsubjpass
 |   +-- The DT det
 +-- is VBZ auxpass
 +-- as IN prep
 |   +-- collection NN pobj
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- pages NNS pobj
 |               +-- units NNS rcmod
 |                   +-- which WDT nsubj
 |                   +-- are VBP cop
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- access NN pobj
 |                           +-- disk NN nn
 +-- . . punct

10
Input: The stable log holds commit information and object modifications for committed transactions .
Parse:
holds VBZ ROOT
 +-- log NN nsubj
 |   +-- The DT det
 |   +-- stable JJ amod
 +-- commit VB ccomp
 |   +-- modifications NNS dobj
 |       +-- information NN nn
 |       |   +-- and CC cc
 |       |   +-- object NN conj
 |       +-- for IN prep
 |           +-- transactions NNS pobj
 |               +-- committed JJ amod
 +-- . . punct

11
Input: The server memory contains cache directory and a recoverable modified object cache called the MOB .
Parse:
contains VBZ ROOT
 +-- memory NN nsubj
 |   +-- The DT det
 |   +-- server NN nn
 +-- directory NN dobj
 |   +-- cache NN nn
 |   +-- and CC cc
 |   +-- cache NN conj
 |       +-- a DT det
 |       +-- recoverable JJ amod
 |       +-- modified VBN amod
 |       +-- object NN nn
 |       +-- called VBN partmod
 |           +-- MOB NN dep
 |               +-- the DT det
 +-- . . punct

12
Input: The directory keeps track of which pages are cached by which clients .
Parse:
keeps VBZ ROOT
 +-- directory NN nsubj
 |   +-- The DT det
 +-- track NN dobj
 |   +-- cached VBN rcmod
 |       +-- of IN prep
 |       |   +-- which WDT pobj
 |       +-- pages NNS nsubjpass
 |       +-- are VBP auxpass
 |       +-- by IN prep
 |           +-- clients NNS pobj
 |               +-- which WDT det
 +-- . . punct

13
Input: The MOB holds recently modified objects that have not yet been written back to their pages on disk .
Parse:
holds VBZ ROOT
 +-- MOB NNP nsubj
 |   +-- The DT det
 +-- objects NNS dobj
 |   +-- modified VBN amod
 |   |   +-- recently RB advmod
 |   +-- written VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- have VBP aux
 |       +-- not RB neg
 |       +-- yet RB advmod
 |       +-- been VBN auxpass
 |       +-- back RB advmod
 |           +-- to IN prep
 |               +-- pages NNS pobj
 |                   +-- their PRP$ poss
 |                   +-- on IN prep
 |                       +-- disk NN pobj
 +-- . . punct

14
Input: As MOB fills up , a background process propagates modified objects to the disk -LRB- 21 , 26 -RRB- .
Parse:
modified VBD ROOT
 +-- fills VBZ advcl
 |   +-- As IN mark
 |   +-- MOB NNP nsubj
 |   +-- up RP prt
 +-- , , punct
 +-- process NN nsubj
 |   +-- a DT det
 |   +-- background NN nn
 +-- propagates VBZ aux
 +-- objects NNS dobj
 +-- to IN prep
 |   +-- disk NN pobj
 |       +-- the DT det
 |       +-- 21 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- , , punct
 |           +-- 26 CD appos
 |           +-- -RRB- -RRB- punct
 +-- . . punct

15
Input: 4.2 Base Cache Coherence Transactions are serialized using optimistic concurrency control OCC -LRB- 3 -RRB- described in Section 3.1 .
Parse:
serialized VBN ROOT
 +-- Transactions NNPS nsubj
 |   +-- 4.2 CD num
 |   +-- Cache NNP nn
 |   |   +-- Base NNP nn
 |   +-- Coherence NNP nn
 +-- are VBP cop
 +-- using VBG xcomp
 |   +-- OCC NNP dobj
 |       +-- control NN nn
 |       |   +-- optimistic JJ amod
 |       |   +-- concurrency NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- 3 CD num
 |       +-- -RRB- -RRB- punct
 |       +-- described VBN partmod
 |           +-- in IN prep
 |               +-- Section NN pobj
 |                   +-- 3.1 CD num
 +-- . . punct

16
Input: We provide some of the relevant OCC protocol implementation details .
Parse:
provide VBP ROOT
 +-- We PRP nsubj
 +-- some DT dobj
 |   +-- of IN prep
 |       +-- details NNS pobj
 |           +-- the DT det
 |           +-- relevant JJ amod
 |           +-- OCC NNP nn
 |           +-- implementation NN nn
 |               +-- protocol NN nn
 +-- . . punct

17
Input: The client keeps track of objects that are read and modified by its transaction ; it sends this information , along with new copies of modified objects , to the servers when it tries to commit the transaction .
Parse:
keeps VBZ ROOT
 +-- client NN nsubj
 |   +-- The DT det
 +-- track NN dobj
 |   +-- of IN prep
 |       +-- objects NNS pobj
 |           +-- read VBN rcmod
 |               +-- that WDT nsubjpass
 |               +-- are VBP auxpass
 |               +-- and CC cc
 |               +-- modified VBN conj
 |               +-- by IN prep
 |                   +-- transaction NN pobj
 |                       +-- its PRP$ poss
 +-- ; : punct
 +-- sends VBZ parataxis
 |   +-- it PRP nsubj
 |   +-- information NN dobj
 |   |   +-- this DT det
 |   +-- , , punct
 |   +-- along IN prep
 |   |   +-- with IN pcomp
 |   |       +-- copies NNS pobj
 |   |           +-- new JJ amod
 |   |           +-- of IN prep
 |   |               +-- objects NNS pobj
 |   |                   +-- modified VBN amod
 |   +-- to IN prep
 |   |   +-- servers NNS pobj
 |   |       +-- the DT det
 |   +-- tries VBZ advcl
 |       +-- when WRB advmod
 |       +-- it PRP nsubj
 |       +-- commit VB xcomp
 |           +-- to TO aux
 |           +-- transaction NN dobj
 |               +-- the DT det
 +-- . . punct

18
Input: The servers determine whether the commit is possible , using a two phase commit protocol if the transaction used objects at multiple servers .
Parse:
determine VBP ROOT
 +-- servers NNS nsubj
 |   +-- The DT det
 +-- possible JJ ccomp
 |   +-- whether IN mark
 |   +-- commit NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ cop
 +-- , , punct
 +-- using VBG xcomp
 |   +-- commit VB ccomp
 |       +-- phase NN nsubj
 |       |   +-- a DT det
 |       |   +-- two CD num
 |       +-- protocol NN dobj
 |       +-- used VBD advcl
 |           +-- if IN mark
 |           +-- transaction NN nsubj
 |           |   +-- the DT det
 |           +-- objects VBZ dobj
 |           +-- at IN prep
 |               +-- servers NNS pobj
 |                   +-- multiple JJ amod
 +-- . . punct

19
Input: If the transaction commits , the new copies of modified objects are appended to the log and also inserted in the MOB .
Parse:
appended VBN ROOT
 +-- commits VBZ advcl
 |   +-- If IN mark
 |   +-- transaction NN nsubj
 |       +-- the DT det
 +-- , , punct
 +-- copies NNS nsubjpass
 |   +-- the DT det
 |   +-- new JJ amod
 |   +-- of IN prep
 |       +-- objects NNS pobj
 |           +-- modified VBN amod
 +-- are VBP auxpass
 +-- to IN prep
 |   +-- log NN pobj
 |       +-- the DT det
 +-- and CC cc
 +-- also RB advmod
 +-- inserted VBN conj
 |   +-- in IN prep
 |       +-- MOB NN pobj
 |           +-- the DT det
 +-- . . punct

20
Input: The MOB is recoverable , i.e .
Parse:
i.e NN ROOT
 +-- MOB NNP nsubj
 |   +-- The DT det
 +-- is VBZ cop
 +-- recoverable JJ amod
 +-- , , punct
 +-- . . punct

21
Input: if the server crashes , the MOB is reconstructed at recovery by scanning the log .
Parse:
reconstructed VBN ROOT
 +-- crashes VBZ advcl
 |   +-- if IN mark
 |   +-- server NN nsubj
 |       +-- the DT det
 +-- , , punct
 +-- MOB NN nsubjpass
 |   +-- the DT det
 +-- is VBZ auxpass
 +-- at IN prep
 |   +-- recovery NN pobj
 +-- by IN prep
 |   +-- scanning VBG pcomp
 |       +-- log NN dobj
 |           +-- the DT det
 +-- . . punct

22
Input: Since objects are not locked before being used , a transaction commit can cause caches to contain obsolete objects .
Parse:
cause VB ROOT
 +-- locked VBN advcl
 |   +-- Since IN mark
 |   +-- objects NNS nsubjpass
 |   +-- are VBP auxpass
 |   +-- not RB neg
 |   +-- before IN prep
 |       +-- used VBN pcomp
 |           +-- being VBG auxpass
 +-- , , punct
 +-- commit NN nsubj
 |   +-- a DT det
 |   +-- transaction NN nn
 +-- can MD aux
 +-- caches NNS dobj
 |   +-- contain VB infmod
 |       +-- to TO aux
 |       +-- objects NNS dobj
 |           +-- obsolete JJ amod
 +-- . . punct

23
Input: Servers will abort a transaction that used obsolete objects .
Parse:
abort VB ROOT
 +-- Servers NNS nsubj
 +-- will MD aux
 +-- transaction NN dobj
 |   +-- a DT det
 |   +-- used VBD rcmod
 |       +-- that WDT nsubj
 |       +-- objects NNS dobj
 |           +-- obsolete JJ amod
 +-- . . punct

24
Input: However , to reduce the probability of aborts , servers notify clients when their objects become obsolete by sending them invalidation messages ; a server uses its directory and the information about the committing transaction to determine what invalidation messages to send .
Parse:
notify VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- reduce VB advcl
 |   +-- to TO aux
 |   +-- probability NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- aborts NNS pobj
 +-- servers NNS nsubj
 +-- clients NNS dobj
 +-- obsolete JJ advcl
 |   +-- when WRB advmod
 |   +-- objects NNS nsubj
 |   |   +-- their PRP$ poss
 |   +-- become VBP cop
 |   +-- by IN prep
 |       +-- sending VBG pcomp
 |           +-- them PRP iobj
 |           +-- messages NNS dobj
 |               +-- invalidation NN nn
 +-- ; : punct
 +-- uses VBZ parataxis
 |   +-- server NN nsubj
 |   |   +-- a DT det
 |   +-- directory NN dobj
 |   |   +-- its PRP$ poss
 |   |   +-- and CC cc
 |   |   +-- information NN conj
 |   |       +-- the DT det
 |   +-- about IN prep
 |   |   +-- transaction NN pobj
 |   |       +-- the DT det
 |   |       +-- committing VBG amod
 |   +-- determine VB xcomp
 |       +-- to TO aux
 |       +-- send VB ccomp
 |           +-- what WP dobj
 |           +-- messages NNS nsubj
 |           |   +-- invalidation NN nn
 |           +-- to TO aux
 +-- . . punct

25
Input: Invalidation messages are small because they simply identify obsolete objects .
Parse:
small JJ ROOT
 +-- messages NNS nsubj
 |   +-- Invalidation NN nn
 +-- are VBP cop
 +-- identify VBP advcl
 |   +-- because IN mark
 |   +-- they PRP nsubj
 |   +-- simply RB advmod
 |   +-- objects NNS dobj
 |       +-- obsolete JJ amod
 +-- . . punct

26
Input: Furthermore , they are sent in the background , batched and piggybacked on other messages .
Parse:
sent VBN ROOT
 +-- Furthermore RB advmod
 +-- , , punct
 +-- they PRP nsubjpass
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- background NN pobj
 |       +-- the DT det
 |       +-- , , punct
 |       +-- batched VBN conj
 |       +-- and CC cc
 |       +-- piggybacked VBN conj
 |           +-- on IN prep
 |               +-- messages NNS pobj
 |                   +-- other JJ amod
 +-- . . punct

27
Input: When a client receives an invalidation message , it removes obsolete objects from its cache and aborts the current transaction if it used them .
Parse:
removes VBZ ROOT
 +-- receives VBZ advcl
 |   +-- When WRB advmod
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   +-- message NN dobj
 |       +-- an DT det
 |       +-- invalidation NN amod
 +-- , , punct
 +-- it PRP nsubj
 +-- objects NNS dobj
 |   +-- obsolete JJ amod
 +-- from IN prep
 |   +-- cache NN pobj
 |       +-- its PRP$ poss
 |       +-- and CC cc
 |       +-- aborts NNS conj
 +-- transaction NN dobj
 |   +-- the DT det
 |   +-- current JJ amod
 +-- used VBD advcl
 |   +-- if IN mark
 |   +-- it PRP nsubj
 |   +-- them PRP dobj
 +-- . . punct

28
Input: The client continues to retain pages containing invalidated objects ; these pages are now incomplete with holes in place of the invalidated objects .
Parse:
continues VBZ ROOT
 +-- client NN nsubj
 |   +-- The DT det
 +-- retain VB xcomp
 |   +-- to TO aux
 |   +-- pages NNS dobj
 |       +-- containing VBG partmod
 |           +-- objects NNS dobj
 |               +-- invalidated JJ amod
 +-- ; : punct
 +-- incomplete JJ parataxis
 |   +-- pages NNS nsubj
 |   |   +-- these DT det
 |   +-- are VBP cop
 |   +-- now RB advmod
 |   +-- with IN prep
 |       +-- holes NNS pobj
 |           +-- in IN prep
 |               +-- place NN pobj
 |                   +-- of IN prep
 |                       +-- objects NNS pobj
 |                           +-- the DT det
 |                           +-- invalidated VBN amod
 +-- . . punct

29
Input: Performing invalidation on an object basis means that false sharing does not cause unnecessary aborts ; keeping incomplete pages in the client cache means that false sharing does not lead to unnecessary cache misses .
Parse:
means VBZ ROOT
 +-- Performing VBG csubj
 |   +-- invalidation NN dobj
 |   +-- on IN prep
 |       +-- basis NN pobj
 |           +-- an DT det
 |           +-- object JJ amod
 +-- cause VB ccomp
 |   +-- that IN mark
 |   +-- sharing NN nsubj
 |   |   +-- false JJ amod
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- aborts NNS dobj
 |       +-- unnecessary JJ amod
 +-- ; : punct
 +-- means VBZ parataxis
 |   +-- keeping VBG csubj
 |   |   +-- pages NNS dobj
 |   |   |   +-- incomplete JJ amod
 |   |   +-- in IN prep
 |   |       +-- cache NN pobj
 |   |           +-- the DT det
 |   |           +-- client NN nn
 |   +-- lead VB ccomp
 |       +-- that IN mark
 |       +-- sharing NN nsubj
 |       |   +-- false JJ amod
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- to IN prep
 |           +-- misses NNS pobj
 |               +-- unnecessary JJ amod
 |               +-- cache NN nn
 +-- . . punct

30
Input: Clients acknowledge invalidations to indicate removal of stale data as explained in Section 3.1 .
Parse:
acknowledge VBP ROOT
 +-- Clients NNS nsubj
 +-- invalidations NNS dobj
 +-- indicate VB xcomp
 |   +-- to TO aux
 |   +-- removal NN dobj
 |   |   +-- of IN prep
 |   |       +-- data NNS pobj
 |   |           +-- stale JJ amod
 |   +-- explained VBN advcl
 |       +-- as IN mark
 |       +-- in IN prep
 |           +-- Section NN pobj
 |               +-- 3.1 CD num
 +-- . . punct

31
Input: Invalidation messages prevent some aborts , and accelerate those that must happen thus wasting less work and o ? oading detection of aborts from servers to clients .
Parse:
prevent VBP ROOT
 +-- messages NNS nsubj
 |   +-- Invalidation NN nn
 +-- aborts NNS dobj
 |   +-- some DT det
 +-- , , punct
 +-- and CC cc
 +-- accelerate VB conj
 |   +-- those DT dobj
 |       +-- happen VB rcmod
 |       |   +-- that WDT nsubj
 |       |   +-- must MD aux
 |       |   +-- wasting VBG xcomp
 |       |       +-- thus RB advmod
 |       |       +-- work NN dobj
 |       |           +-- less JJR amod
 |       |           +-- and CC cc
 |       |           +-- o NN conj
 |       +-- ? . punct
 |       +-- detection NN dep
 |           +-- oading VBG nn
 |           +-- of IN prep
 |           |   +-- aborts NNS pobj
 |           +-- from IN prep
 |               +-- servers NNS pobj
 |               +-- to IN prep
 |                   +-- clients NNS pobj
 +-- . . punct

32
Input: When a transaction aborts , its client restores the cached copies of modified objects to the state they had before the transaction started ; this is possible because a client makes a copy of an object the first time it is modified by a transaction .
Parse:
restores VBZ ROOT
 +-- aborts VBZ advcl
 |   +-- When WRB advmod
 |   +-- transaction NN nsubj
 |       +-- a DT det
 +-- , , punct
 +-- client NN nsubj
 |   +-- its PRP$ poss
 +-- copies NNS dobj
 |   +-- the DT det
 |   +-- cached VBN amod
 |   +-- of IN prep
 |       +-- objects NNS pobj
 |           +-- modified VBN amod
 +-- to IN prep
 |   +-- state NN pobj
 |       +-- the DT det
 |       +-- had VBD rcmod
 |           +-- they PRP nsubj
 |           +-- started VBD advcl
 |               +-- before IN mark
 |               +-- transaction NN nsubj
 |                   +-- the DT det
 +-- ; : punct
 +-- possible JJ parataxis
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- makes VBZ advcl
 |       +-- because IN mark
 |       +-- client NN nsubj
 |       |   +-- a DT det
 |       +-- copy NN iobj
 |       |   +-- a DT det
 |       |   +-- of IN prep
 |       |       +-- object NN pobj
 |       |           +-- an DT det
 |       +-- time NN dobj
 |           +-- the DT det
 |           +-- first JJ amod
 |           +-- modified VBN rcmod
 |               +-- it PRP nsubjpass
 |               +-- is VBZ auxpass
 |               +-- by IN prep
 |                   +-- transaction NN pobj
 |                       +-- a DT det
 +-- . . punct

33
Input: 4.3 Redirection The redirector runs on the same local network as the peer group , in one of the peer nodes , or in a special node within the infrastructure .
Parse:
Redirection NNP ROOT
 +-- 4.3 CD num
 +-- runs VBZ rcmod
 |   +-- redirector NN nsubj
 |   |   +-- The DT det
 |   +-- on IN prep
 |       +-- network NN pobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- local JJ amod
 |           +-- as IN prep
 |               +-- group NN pobj
 |                   +-- the DT det
 |                   +-- peer NN nn
 +-- , , punct
 +-- in IN prep
 |   +-- one CD pobj
 |   |   +-- of IN prep
 |   |       +-- nodes NNS pobj
 |   |           +-- the DT det
 |   |           +-- peer NN nn
 |   +-- , , punct
 |   +-- or CC cc
 |   +-- in IN conj
 |       +-- node NN pobj
 |           +-- a DT det
 |           +-- special JJ amod
 |           +-- within IN prep
 |               +-- infrastructure NN pobj
 |                   +-- the DT det
 +-- . . punct

34
Input: It maintains a directory of pages available in the peer group and provides fast centralized fetch redirection -LRB- see figure 2 -RRB- between the peer caches .
Parse:
maintains VBZ ROOT
 +-- It PRP nsubj
 +-- directory NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- pages NNS pobj
 |           +-- available JJ amod
 |               +-- in IN prep
 |                   +-- group NN pobj
 |                       +-- the DT det
 |                       +-- peer NN nn
 +-- and CC cc
 +-- provides VBZ conj
 |   +-- redirection NN dobj
 |   |   +-- centralized JJ amod
 |   |   |   +-- fast RB advmod
 |   |   +-- fetch NN nn
 |   +-- see VB parataxis
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- figure NN dobj
 |   |   |   +-- 2 CD num
 |   |   +-- -RRB- -RRB- punct
 |   +-- between IN prep
 |       +-- caches NNS pobj
 |           +-- the DT det
 |           +-- peer NN nn
 +-- . . punct

35
Input: To improve performance , clients inform the redirector when they evict pages or objects by piggybacking that information on messages sent to the redirector .
Parse:
inform VBP ROOT
 +-- improve VB advcl
 |   +-- To TO aux
 |   +-- performance NN dobj
 +-- , , punct
 +-- clients NNS nsubj
 +-- redirector NN dobj
 |   +-- the DT det
 +-- evict VBP advcl
 |   +-- when WRB advmod
 |   +-- they PRP nsubj
 |   +-- pages NNS dobj
 |   |   +-- or CC cc
 |   |   +-- objects NNS conj
 |   +-- by IN prep
 |       +-- piggybacking VBG pcomp
 |           +-- information NN dobj
 |           |   +-- that DT det
 |           +-- on IN prep
 |               +-- messages NNS pobj
 |                   +-- sent VBN partmod
 |                       +-- to IN prep
 |                           +-- redirector NN pobj
 |                               +-- the DT det
 +-- . . punct

36
Input: To ensure up to date objects are fetched from the group cache the redirector tracks the status of the pages .
Parse:
tracks VBZ ROOT
 +-- ensure VB csubj
 |   +-- To TO aux
 |   +-- fetched VBN advcl
 |       +-- up RP mark
 |       +-- to IN prep
 |       |   +-- date NN pobj
 |       +-- objects NNS nsubjpass
 |       +-- are VBP auxpass
 |       +-- from IN prep
 |           +-- group NN pobj
 |               +-- the DT det
 |               +-- cache NN partmod
 |                   +-- redirector NN dobj
 |                       +-- the DT det
 +-- status NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- pages NNS pobj
 |           +-- the DT det
 +-- . . punct

37
Input: A cached page is either complete in which case it contains consistent values for all the objects , or incomplete , in which case some of the objects on a page are marked invalid .
Parse:
complete JJ ROOT
 +-- page NN nsubj
 |   +-- A DT det
 |   +-- cached VBN amod
 +-- is VBZ cop
 +-- either CC advmod
 +-- contains VBZ rcmod
 |   +-- in IN prep
 |   |   +-- case NN pobj
 |   |       +-- which WDT det
 |   +-- it PRP nsubj
 |   +-- values NNS dobj
 |       +-- consistent JJ amod
 |       +-- for IN prep
 |       |   +-- objects NNS pobj
 |       |       +-- all PDT predet
 |       |       +-- the DT det
 |       +-- , , punct
 |       +-- or CC cc
 |       +-- incomplete JJ conj
 |       +-- marked VBN rcmod
 |           +-- in IN prep
 |           |   +-- case NN pobj
 |           |       +-- which WDT det
 |           +-- some DT nsubjpass
 |           |   +-- of IN prep
 |           |   |   +-- objects NNS pobj
 |           |   |       +-- the DT det
 |           |   +-- on IN prep
 |           |       +-- page NN pobj
 |           |           +-- a DT det
 |           +-- are VBP auxpass
 |           +-- invalid JJ acomp
 +-- . . punct

38
Input: Only complete pages are used by the peer fetch .
Parse:
used VBN ROOT
 +-- pages NNS nsubjpass
 |   +-- Only RB advmod
 |   +-- complete JJ amod
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- fetch NN pobj
 |       +-- the DT det
 |       +-- peer NN nn
 +-- . . punct

39
Input: The protocol for maintaining page status when pages are updated and invalidated is described in Section 4.4 .
Parse:
described VBN ROOT
 +-- protocol NN nsubjpass
 |   +-- The DT det
 |   +-- for IN prep
 |       +-- maintaining VBG pcomp
 |           +-- status NN dobj
 |           |   +-- page NN nn
 |           +-- updated VBN advcl
 |               +-- when WRB advmod
 |               +-- pages NNS nsubjpass
 |               +-- are VBP auxpass
 |               +-- and CC cc
 |               +-- invalidated VBN conj
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- Section NNP pobj
 |       +-- 4.4 CD num
 +-- . . punct

40
Input: When a client request has to be processed at the servers , e.g. , a complete requested page is unavailable in the peer group or a peer needs to commit a transaction , the redirector acts as a server proxy
Parse:
unavailable JJ ROOT
 +-- has VBZ advcl
 |   +-- When WRB advmod
 |   +-- request NN nsubj
 |   |   +-- a DT det
 |   |   +-- client NN nn
 |   +-- processed VBN xcomp
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- at IN prep
 |           +-- servers NNS pobj
 |               +-- the DT det
 |               +-- , , punct
 |               +-- e.g. NNP appos
 +-- , , punct
 +-- page NN nsubj
 |   +-- a DT det
 |   +-- complete JJ amod
 |   +-- requested VBN amod
 +-- is VBZ cop
 +-- in IN prep
 |   +-- group NN pobj
 |       +-- the DT det
 |       +-- peer NN nn
 |       +-- or CC cc
 |       +-- needs NNS conj
 |           +-- a DT det
 |           +-- peer NN amod
 |           +-- commit VB infmod
 |               +-- to TO aux
 |               +-- transaction NN dobj
 |                   +-- a DT det
 +-- acts VBZ parataxis
     +-- redirector NN nsubj
     |   +-- the DT det
     +-- as IN prep
         +-- proxy NN pobj
             +-- a DT det
             +-- server NN nn

41
Input: In addition , in response to invalidations sent by a server , the redirector distributes the update or invalidation information to clients caching the modified page and , after all clients acknowledge , propagates the group acknowledgment back to the server -LRB- see figure 3 -RRB- .
Parse:
distributes VBZ ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- in IN prep
 |   +-- response NN pobj
 |       +-- to IN prep
 |           +-- invalidations NNS pobj
 |               +-- sent VBN partmod
 |                   +-- by IN prep
 |                       +-- server NN pobj
 |                           +-- a DT det
 +-- redirector NN nsubj
 |   +-- the DT det
 +-- update NN dobj
 |   +-- the DT det
 |   +-- or CC cc
 |   +-- information NN conj
 |       +-- invalidation NN nn
 +-- to IN prep
 |   +-- clients NNS pobj
 |       +-- caching VBG partmod
 |           +-- page NN dobj
 |               +-- the DT det
 |               +-- modified VBN amod
 +-- and CC cc
 +-- propagates VBZ conj
 |   +-- acknowledge VBP advcl
 |   |   +-- after IN mark
 |   |   +-- clients NNS nsubj
 |   |       +-- all DT det
 |   +-- , , punct
 |   +-- acknowledgment NN ccomp
 |       +-- group NN nsubj
 |       |   +-- the DT det
 |       +-- back RB advmod
 |       |   +-- to IN prep
 |       |       +-- server NN pobj
 |       |           +-- the DT det
 |       +-- see VB dep
 |           +-- -LRB- -LRB- punct
 |           +-- figure NN dobj
 |           |   +-- 3 CD num
 |           +-- -RRB- -RRB- punct
 +-- . . punct

42
Input: The redirector server protocol is , in effect , the client server protocol used in the base Thor storage system , where the combined peer group cache is playing the role of a single client cache in the base system .
Parse:
used VBN ROOT
 +-- protocol NN nsubjpass
 |   +-- The DT det
 |   +-- redirector NN nn
 |   +-- server NN nn
 +-- is VBZ auxpass
 +-- , , punct
 +-- in IN prep
 |   +-- system NN pobj
 |       +-- the DT det
 |       +-- base NN nn
 |       +-- Thor NNP nn
 |       +-- storage NN nn
 |       +-- , , punct
 |       +-- playing VBG rcmod
 |           +-- where WRB advmod
 |           +-- cache NN nsubj
 |           |   +-- the DT det
 |           |   +-- combined VBN amod
 |           |   +-- peer NN nn
 |           |   +-- group NN nn
 |           +-- is VBZ aux
 |           +-- role NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- cache NN pobj
 |                       +-- a DT det
 |                       +-- single JJ amod
 |                       +-- client NN nn
 |                       +-- in IN prep
 |                           +-- system NN pobj
 |                               +-- the DT det
 |                               +-- base NN nn
 +-- protocol NN nsubj
 |   +-- the DT det
 |   +-- server NN nn
 |       +-- client NN nn
 +-- . . punct

43
Input: 4.4 Peer Update The peer update is implemented as follows .
Parse:
Update VB ROOT
 +-- Peer NNP nsubj
 |   +-- 4.4 CD num
 +-- implemented VBN ccomp
 |   +-- update NN nsubjpass
 |   |   +-- The DT det
 |   |   +-- peer NN nn
 |   +-- is VBZ auxpass
 |   +-- follows VBZ advcl
 |       +-- as IN mark
 +-- . . punct

44
Input: An update commit request from a client arriving at the redirector contains the object updates .
Parse:
commit VBP ROOT
 +-- update NN nsubj
 |   +-- An DT det
 +-- contains VBZ ccomp
 |   +-- request NN nsubj
 |   |   +-- from IN prep
 |   |       +-- client NN pobj
 |   |           +-- a DT det
 |   |           +-- arriving VBG partmod
 |   |               +-- at IN prep
 |   |                   +-- redirector NN pobj
 |   |                       +-- the DT det
 |   +-- updates NNS dobj
 |       +-- the DT det
 |       +-- object NN nn
 +-- . . punct

45
Input: Redirector retains the updates and propagates the request to the coordinator server .
Parse:
retains VBZ ROOT
 +-- Redirector NN nsubj
 +-- updates NNS dobj
 |   +-- the DT det
 +-- and CC cc
 +-- propagates VBZ conj
 |   +-- request NN dobj
 |       +-- the DT det
 |       +-- to IN prep
 |           +-- server NN pobj
 |               +-- the DT det
 |               +-- coordinator NN nn
 +-- . . punct

46
Input: After a transaction commits , using a two phase commit if needed , the coordinator server sends a commit reply to the redirector of the committing client group .
Parse:
sends VBZ ROOT
 +-- commits VBZ advcl
 |   +-- After IN mark
 |   +-- transaction NN nsubj
 |   |   +-- a DT det
 |   +-- , , punct
 |   +-- using VBG xcomp
 |       +-- phase NN dobj
 |           +-- a DT det
 |           +-- two CD num
 |           +-- commit NN partmod
 |               +-- needed VBN advcl
 |                   +-- if IN mark
 +-- , , punct
 +-- server NN nsubj
 |   +-- the DT det
 |   +-- coordinator NN nn
 +-- reply NN dobj
 |   +-- a DT det
 |   +-- commit NN nn
 |   +-- to IN prep
 |       +-- redirector NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- group NN pobj
 |                   +-- the DT det
 |                   +-- committing VBG amod
 |                   +-- client NN nn
 +-- . . punct

47
Input: The redirector forwards the reply to the committing client .
Parse:
forwards VBZ ROOT
 +-- redirector NN nsubj
 |   +-- The DT det
 +-- reply NN dobj
 |   +-- the DT det
 |   +-- to IN prep
 |       +-- client NN pobj
 |           +-- the DT det
 |           +-- committing VBG amod
 +-- . . punct

48
Input: It waits for the invalidations to arrive to propagate corresponding retained -LRB- committed -RRB- updates to the clients caching the modified pages -LRB- see figure 3. -RRB- Participating servers that are home to objects modified by the transaction generate object invalidations for each cache group that caches pages containing the modified objects -LRB- including the committing group -RRB- .
Parse:
waits VBZ ROOT
 +-- It PRP nsubj
 +-- arrive VB advcl
 |   +-- for IN mark
 |   +-- invalidations NNS nsubj
 |   |   +-- the DT det
 |   +-- to TO aux
 |   +-- propagate VB xcomp
 |       +-- to TO aux
 |       +-- updates NNS dobj
 |       |   +-- corresponding VBG amod
 |       |   +-- retained VBN amod
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- committed VBN amod
 |       |   +-- -RRB- -RRB- punct
 |       +-- to IN prep
 |           +-- clients NNS pobj
 |               +-- the DT det
 |               +-- caching VBG partmod
 |                   +-- pages NNS dobj
 |                       +-- the DT det
 |                       +-- modified VBN amod
 +-- see VB parataxis
 |   +-- -LRB- -LRB- punct
 |   +-- figure NN dobj
 |   |   +-- 3. CD num
 |   +-- -RRB- -RRB- punct
 +-- generate VB ccomp
 |   +-- servers NNS nsubj
 |   |   +-- Participating VBG nn
 |   |   +-- home NN rcmod
 |   |       +-- that WDT nsubj
 |   |       +-- are VBP cop
 |   |       +-- to IN prep
 |   |           +-- objects NNS pobj
 |   |               +-- modified VBN partmod
 |   |                   +-- by IN prep
 |   |                       +-- transaction NN pobj
 |   |                           +-- the DT det
 |   +-- invalidations NNS dobj
 |       +-- object NN nn
 |       +-- for IN prep
 |           +-- group NN pobj
 |               +-- each DT det
 |               +-- cache NN nn
 |               +-- caches VBZ rcmod
 |                   +-- that WDT nsubj
 |                   +-- pages NNS dobj
 |                       +-- containing VBG partmod
 |                           +-- objects NNS dobj
 |                               +-- the DT det
 |                               +-- modified VBN amod
 |                               +-- -LRB- -LRB- punct
 |                               +-- including VBG prep
 |                               |   +-- group NN pobj
 |                               |       +-- the DT det
 |                               |       +-- committing VBG amod
 |                               +-- -RRB- -RRB- punct
 +-- . . punct

49
Input: The invalidations are sent lazily to the redirectors to ensure that all the clients in the groups caching the modified objects get rid of the stale data .
Parse:
sent VBN ROOT
 +-- invalidations NNS nsubjpass
 |   +-- The DT det
 +-- are VBP auxpass
 +-- lazily RB advmod
 +-- to IN prep
 |   +-- redirectors NNS pobj
 |       +-- the DT det
 +-- ensure VB xcomp
 |   +-- to TO aux
 |   +-- rid VBN ccomp
 |       +-- that IN mark
 |       +-- clients NNS nsubjpass
 |       |   +-- all PDT predet
 |       |   +-- the DT det
 |       |   +-- in IN prep
 |       |       +-- groups NNS pobj
 |       |           +-- the DT det
 |       |           +-- caching VBG partmod
 |       |               +-- objects NNS dobj
 |       |                   +-- the DT det
 |       |                   +-- modified VBN amod
 |       +-- get VB auxpass
 |       +-- of IN prep
 |           +-- data NNS pobj
 |               +-- the DT det
 |               +-- stale JJ amod
 +-- . . punct

50
Input: In cache groups other than the committing group , redirectors propagates the invalidations to all the clients caching the modified pages , collect the client acknowledgments and after completing the collection , propagate collective acknowledgments back to the server .
Parse:
propagates VBZ ROOT
 +-- In IN prep
 |   +-- groups NNS pobj
 |       +-- cache NN nn
 |       +-- other JJ amod
 |           +-- than IN prep
 |               +-- group NN pobj
 |                   +-- the DT det
 |                   +-- committing VBG amod
 +-- , , punct
 +-- redirectors NNS nsubj
 +-- invalidations NNS dobj
 |   +-- the DT det
 +-- to IN prep
 |   +-- clients NNS pobj
 |       +-- all PDT predet
 |       +-- the DT det
 |       +-- caching VBG partmod
 |           +-- pages NNS dobj
 |               +-- the DT det
 |               +-- modified VBN amod
 +-- collect VB conj
 |   +-- acknowledgments NNS dobj
 |       +-- the DT det
 |       +-- client NN nn
 +-- and CC cc
 +-- propagate VB conj
 |   +-- after IN prep
 |   |   +-- completing VBG pcomp
 |   |       +-- collection NN dobj
 |   |           +-- the DT det
 |   +-- , , punct
 |   +-- acknowledgments NNS dobj
 |   |   +-- collective JJ amod
 |   +-- back RB advmod
 |       +-- to IN prep
 |           +-- server NN pobj
 |               +-- the DT det
 +-- . . punct

51
Input: Within the committing client group , the arriving invalidations are not propagated .
Parse:
propagated VBN ROOT
 +-- Within IN prep
 |   +-- group NN pobj
 |       +-- the DT det
 |       +-- committing VBG amod
 |       +-- client NN nn
 +-- , , punct
 +-- invalidations NNS nsubjpass
 |   +-- the DT det
 |   +-- arriving VBG amod
 +-- are VBP auxpass
 +-- not RB neg
 +-- . . punct

52
Input: Instead , updates are sent to clients caching those objects '' pages , the updates are acknowledged by the client , and the collective acknowledgment is propagated to the server .
Parse:
sent VBN ROOT
 +-- Instead RB advmod
 +-- , , punct
 +-- updates NNS nsubjpass
 +-- are VBP auxpass
 +-- to IN prep
 |   +-- clients NNS pobj
 |       +-- caching VBG partmod
 |           +-- pages NNS dobj
 |               +-- those DT det
 |               +-- objects NNS nn
 |               +-- '' '' punct
 +-- acknowledged VBN ccomp
 |   +-- updates NNS nsubjpass
 |   |   +-- the DT det
 |   +-- are VBP auxpass
 |   +-- by IN prep
 |   |   +-- client NN pobj
 |   |       +-- the DT det
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- propagated VBN conj
 |       +-- acknowledgment NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- collective JJ amod
 |       +-- is VBZ auxpass
 |       +-- to IN prep
 |           +-- server NN pobj
 |               +-- the DT det
 +-- . . punct

53
Input: An invalidation renders a cached page unavailable for peer fetch changing the status of a complete page p into an incomplete .
Parse:
renders VBZ ROOT
 +-- invalidation NN nsubj
 |   +-- An DT det
 +-- page NN dobj
 |   +-- a DT det
 |   +-- cached VBN amod
 |   +-- unavailable JJ amod
 |       +-- for IN prep
 |           +-- changing VBG pcomp
 |               +-- fetch NN nsubj
 |               |   +-- peer NN nn
 |               +-- status NN dobj
 |               |   +-- the DT det
 |               |   +-- of IN prep
 |               |       +-- page NN pobj
 |               |           +-- a DT det
 |               |           +-- complete JJ amod
 |               +-- p , punct
 |               +-- into IN prep
 |                   +-- incomplete NN pobj
 |                       +-- an DT det
 +-- . . punct

54
Input: In contrast , an update of a complete page preserves the complete page status .
Parse:
preserves VBZ ROOT
 +-- In IN prep
 |   +-- contrast NN pobj
 +-- , , punct
 +-- update NN nsubj
 |   +-- an DT det
 |   +-- of IN prep
 |       +-- page NN pobj
 |           +-- a DT det
 |           +-- complete JJ amod
 +-- status NN dobj
 |   +-- the DT det
 |   +-- complete JJ amod
 |   +-- page NN nn
 +-- . . punct

55
Input: As shown by studies of the 31 fragment reconstruction -LRB- 2 -RRB- , such update propagation allows to avoid the performance penalties of false sharing .
Parse:
allows VBZ ROOT
 +-- shown VBN advcl
 |   +-- As IN mark
 |   +-- by IN prep
 |       +-- studies NNS pobj
 |           +-- of IN prep
 |               +-- reconstruction NN pobj
 |                   +-- the DT det
 |                   +-- 31 CD num
 |                   +-- fragment JJ amod
 |                   +-- -LRB- -LRB- punct
 |                   +-- 2 CD dep
 |                   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- propagation NN nsubj
 |   +-- such JJ amod
 |   +-- update NN nn
 +-- avoid VB xcomp
 |   +-- to TO aux
 |   +-- penalties NNS dobj
 |       +-- the DT det
 |       +-- performance NN nn
 |       +-- of IN prep
 |           +-- sharing NN pobj
 |               +-- false JJ amod
 +-- . . punct

56
Input: That is , when clients within a group modify different objects on the same page , the page retains its complete status and remains available for peer fetch .
Parse:
is VBZ ROOT
 +-- That DT nsubj
 +-- , , punct
 +-- retains VBZ ccomp
 |   +-- modify VB advcl
 |   |   +-- when WRB advmod
 |   |   +-- clients NNS nsubj
 |   |   |   +-- within IN prep
 |   |   |       +-- group NN pobj
 |   |   |           +-- a DT det
 |   |   +-- objects NNS dobj
 |   |   |   +-- different JJ amod
 |   |   +-- on IN prep
 |   |       +-- page NN pobj
 |   |           +-- the DT det
 |   |           +-- same JJ amod
 |   +-- , , punct
 |   +-- page NN nsubj
 |   |   +-- the DT det
 |   +-- status NN dobj
 |   |   +-- its PRP$ poss
 |   |   +-- complete JJ amod
 |   +-- and CC cc
 |   +-- available JJ conj
 |       +-- remains VBZ cop
 |       +-- for IN prep
 |           +-- fetch NN pobj
 |               +-- peer NN nn
 +-- . . punct

57
Input: Therefore , the effect of peer update is similar to eager fragment reconstruction -LRB- 2 -RRB- .
Parse:
similar JJ ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- effect NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- update NN pobj
 |           +-- peer NN nn
 +-- is VBZ cop
 +-- to IN prep
 |   +-- reconstruction NN pobj
 |       +-- eager JJ amod
 |       +-- fragment NN nn
 |       +-- 2 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

58
Input: We have also considered the possibility of allowing a peer to fetch an incomplete page -LRB- with invalid objects marked accordingly -RRB- but decided against this possibility because of the extra complexity involved in tracking invalid objects .
Parse:
considered VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- also RB advmod
 +-- possibility NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- allowing VBG pcomp
 |           +-- fetch VB xcomp
 |               +-- peer NN nsubj
 |               |   +-- a DT det
 |               +-- to TO aux
 |               +-- page NN dobj
 |               |   +-- an DT det
 |               |   +-- incomplete JJ amod
 |               +-- -LRB- -LRB- punct
 |               +-- with IN prep
 |               |   +-- objects NNS pobj
 |               |       +-- invalid JJ amod
 |               |       +-- marked VBN partmod
 |               |           +-- accordingly RB advmod
 |               +-- -RRB- -RRB- punct
 +-- but CC cc
 +-- decided VBD conj
 |   +-- against IN prep
 |   |   +-- possibility NN pobj
 |   |       +-- this DT det
 |   +-- of IN prep
 |       +-- because IN mwe
 |       +-- complexity NN pobj
 |           +-- the DT det
 |           +-- extra JJ amod
 |           +-- involved VBN partmod
 |               +-- in IN prep
 |                   +-- tracking VBG pcomp
 |                       +-- objects NNS dobj
 |                           +-- invalid JJ amod
 +-- . . punct

59
Input: 4.5 Vcache The solo commit validation protocol allows clients with up to date objects to commit independently of slower -LRB- or failed -RRB- group members .
Parse:
Vcache NFP ROOT
 +-- 4.5 CD num
 +-- allows VBZ rcmod
 |   +-- protocol NN nsubj
 |   |   +-- The DT det
 |   |   +-- commit VBP nn
 |   |   |   +-- solo NN nn
 |   |   +-- validation NN nn
 |   +-- commit VB xcomp
 |       +-- clients NNS nsubj
 |       |   +-- with IN prep
 |       |       +-- objects NNS pobj
 |       |           +-- up RP nn
 |       |               +-- to IN pcomp
 |       |                   +-- date NN pobj
 |       +-- to TO aux
 |       +-- independently RB advmod
 |       +-- of IN prep
 |           +-- members NNS pobj
 |               +-- slower JJR amod
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- or CC cc
 |               |   +-- failed VBN conj
 |               +-- -RRB- -RRB- punct
 |               +-- group NN nn
 +-- . . punct

60
Input: As explained in Section 3.3 , the solo commit protocol allows a transaction T to pass validation if extra coherence information supplied by the client indicates that transaction T has read up to date objects .
Parse:
allows VBZ ROOT
 +-- explained VBN advcl
 |   +-- As IN mark
 |   +-- in IN prep
 |       +-- Section NN pobj
 |           +-- 3.3 CD num
 +-- , , punct
 +-- protocol NN nsubj
 |   +-- the DT det
 |   +-- commit VBP nn
 |       +-- solo NN nn
 +-- pass VB xcomp
 |   +-- T NNP nsubj
 |   |   +-- transaction NN nsubj
 |   |       +-- a DT det
 |   +-- to TO aux
 |   +-- validation NN dobj
 |   +-- indicates VBZ advcl
 |       +-- if IN mark
 |       +-- information NN nsubj
 |       |   +-- extra JJ amod
 |       |   +-- coherence NN amod
 |       |   +-- supplied VBN partmod
 |       |       +-- by IN prep
 |       |           +-- client NN pobj
 |       |               +-- the DT det
 |       +-- read VBN ccomp
 |           +-- that IN mark
 |           +-- T NNP nsubj
 |           |   +-- transaction NN nn
 |           +-- has VBZ aux
 |           +-- up RP prt
 |           +-- to IN prep
 |               +-- objects NNS pobj
 |                   +-- date NN nn
 +-- . . punct

61
Input: Clients use page version numbers to provide this extra coherence information .
Parse:
use VBP ROOT
 +-- Clients NNS nsubj
 +-- numbers NNS dobj
 |   +-- version NN nn
 |       +-- page NN nn
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- this DT iobj
 |   +-- information NN dobj
 |       +-- extra JJ amod
 |       +-- coherence NN amod
 +-- . . punct

62
Input: That is , a client includes the page version number corresponding to each object in the read object set sent in the commit request to the server .
Parse:
includes VBZ ROOT
 +-- is VBZ advmod
 |   +-- That DT advmod
 +-- , , punct
 +-- client NN nsubj
 |   +-- a DT det
 +-- number NN dobj
 |   +-- the DT det
 |   +-- version NN nn
 |   |   +-- page NN nn
 |   +-- corresponding VBG partmod
 |       +-- to IN prep
 |       |   +-- object NN pobj
 |       |       +-- each DT det
 |       +-- in IN prep
 |           +-- object NN pobj
 |               +-- the DT det
 |               +-- read VBN amod
 |               +-- set VBN partmod
 |               +-- sent VBN partmod
 |                   +-- in IN prep
 |                   |   +-- commit NN pobj
 |                   |       +-- the DT det
 |                   +-- request NN dobj
 |                       +-- to IN prep
 |                           +-- server NN pobj
 |                               +-- the DT det
 +-- . . punct

63
Input: Since a unique page version number corresponds to each committed object update , the page version number associated with an object allows the validation procedure at the server to check if the client transaction has read up to date objects .
Parse:
allows VBZ ROOT
 +-- corresponds NNS advcl
 |   +-- Since IN mark
 |   +-- number NN nsubj
 |   |   +-- a DT det
 |   |   +-- unique JJ amod
 |   |   +-- version NN nn
 |   |       +-- page NN nn
 |   +-- to IN prep
 |       +-- update NN pobj
 |           +-- each DT det
 |           +-- committed JJ amod
 |           +-- object NN nn
 +-- , , punct
 +-- number NN nsubj
 |   +-- the DT det
 |   +-- version NN nn
 |   |   +-- page NN nn
 |   +-- associated VBN partmod
 |       +-- with IN prep
 |           +-- object NN pobj
 |               +-- an DT det
 +-- check VB xcomp
 |   +-- procedure NN nsubj
 |   |   +-- the DT det
 |   |   +-- validation NN nn
 |   |   +-- at IN prep
 |   |       +-- server NN pobj
 |   |           +-- the DT det
 |   +-- to TO aux
 |   +-- read VBN advcl
 |       +-- if IN mark
 |       +-- transaction NN nsubj
 |       |   +-- the DT det
 |       |   +-- client NN nn
 |       +-- has VBZ aux
 |       +-- up RP prt
 |       +-- to IN prep
 |           +-- objects NNS pobj
 |               +-- date NN nn
 +-- . . punct

64
Input: The use of coarse grain page versions to identify object versions avoids the high penalty of maintaining persistent object versions for small objects , but requires an extra protocol at the client to maintain the mapping from a cached object to the identifying page version -LRB- ObjectToVersion -RRB- .
Parse:
avoids VBZ ROOT
 +-- use NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |   |   +-- versions NNS pobj
 |   |       +-- coarse JJ amod
 |   |       +-- page NN nn
 |   |           +-- grain NN nn
 |   +-- identify VB infmod
 |       +-- to TO aux
 |       +-- versions NNS dobj
 |           +-- object JJ amod
 +-- penalty NN dobj
 |   +-- the DT det
 |   +-- high JJ amod
 |   +-- of IN prep
 |       +-- maintaining VBG pcomp
 |           +-- versions NNS dobj
 |               +-- persistent JJ amod
 |               +-- object NN nn
 |               +-- for IN prep
 |                   +-- objects NNS pobj
 |                       +-- small JJ amod
 +-- , , punct
 +-- but CC cc
 +-- requires VBZ conj
 |   +-- protocol NN dobj
 |   |   +-- an DT det
 |   |   +-- extra JJ amod
 |   +-- at IN prep
 |   |   +-- client NN pobj
 |   |       +-- the DT det
 |   +-- maintain VB xcomp
 |       +-- to TO aux
 |       +-- mapping NN dobj
 |       |   +-- the DT det
 |       +-- from IN prep
 |       |   +-- object NN pobj
 |       |       +-- a DT det
 |       |       +-- cached VBN amod
 |       +-- to IN prep
 |           +-- version NN pobj
 |               +-- the DT det
 |               +-- identifying NN amod
 |               +-- page NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- ObjectToVersion NNP dep
 |               +-- -RRB- -RRB- punct
 +-- . . punct

65
Input: The main implementation issue is concerned with maintaining this mapping efficiently .
Parse:
concerned VBN ROOT
 +-- issue NN nsubj
 |   +-- The DT det
 |   +-- main JJ amod
 |   +-- implementation NN nn
 +-- is VBZ cop
 +-- with IN prep
 |   +-- maintaining VBG pcomp
 |       +-- mapping NN dobj
 |       |   +-- this DT det
 |       +-- efficiently RB advmod
 +-- . . punct

66
Input: At the server side , when modifications commit , servers associate page version numbers with the invalidations .
Parse:
numbers NNS ROOT
 +-- At IN prep
 |   +-- side NN pobj
 |       +-- the DT det
 |       +-- server NN nn
 +-- , , punct
 +-- commit VBP advcl
 |   +-- when WRB advmod
 |   +-- modifications NNS nsubj
 +-- version NN dep
 |   +-- page NN nn
 |       +-- servers NNS nn
 |       +-- associate NN nn
 +-- with IN prep
 |   +-- invalidations NNS pobj
 |       +-- the DT det
 +-- . . punct

67
Input: At validation time , if an unacknowledged invalidation is pending for an object x read by a transaction T , the validation procedure checks if the version number for x in T '' s read set matches the version number for highest pending invalidation for x , in which case the object value is current , otherwise T fails validation .
Parse:
read VBN ROOT
 +-- At IN prep
 |   +-- time NN pobj
 |       +-- validation NN nn
 +-- , , punct
 +-- pending VBG advcl
 |   +-- if IN mark
 |   +-- invalidation NN nsubj
 |   |   +-- an DT det
 |   |   +-- unacknowledged JJ amod
 |   +-- is VBZ cop
 |   +-- for IN prep
 |       +-- object NN pobj
 |           +-- an DT det
 +-- x , punct
 +-- by IN prep
 |   +-- transaction NN pobj
 |       +-- a DT det
 |       +-- T NNP appos
 +-- checks NNS dobj
 |   +-- the DT det
 |   +-- validation NN nn
 |   +-- procedure NN nn
 |   +-- read VBN dep
 |       +-- if IN mark
 |       +-- number NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- version NN nn
 |       |   +-- for IN prep
 |       |       +-- x , punct
 |       |       +-- in IN prep
 |       |       |   +-- T NNP pobj
 |       |       +-- '' '' punct
 |       +-- s POS auxpass
 |       +-- set VBN dep
 |           +-- matches NNS iobj
 |           +-- number NN dobj
 |           |   +-- the DT det
 |           |   +-- version NN nn
 |           +-- for IN prep
 |           |   +-- invalidation NN pobj
 |           |       +-- highest JJS amod
 |           |       +-- pending VBG amod
 |           |       +-- for IN prep
 |           |           +-- x $ pobj
 |           +-- , , punct
 |           +-- current JJ ccomp
 |           |   +-- in IN prep
 |           |   |   +-- case NN pobj
 |           |   |       +-- which WDT det
 |           |   +-- value NN nsubj
 |           |   |   +-- the DT det
 |           |   |   +-- object NN nn
 |           |   +-- is VBZ cop
 |           +-- fails VBZ parataxis
 |               +-- otherwise RB advmod
 |               +-- T NNP nsubj
 |               +-- validation NN dobj
 +-- . . punct

68
Input: We note again that the page version number based checks , and the invalidation acknowledgment based checks are complimentary in the solo commit validation and both are needed .
Parse:
note VBP ROOT
 +-- We PRP nsubj
 +-- again RB advmod
 +-- complimentary JJ ccomp
 |   +-- that IN mark
 |   +-- checks NNS nsubj
 |   |   +-- the DT det
 |   |   +-- version NN nn
 |   |   |   +-- page NN nn
 |   |   +-- based VBN amod
 |   |   |   +-- number NN dep
 |   |   +-- , , punct
 |   |   +-- and CC cc
 |   |   +-- checks NNS conj
 |   |       +-- the DT det
 |   |       +-- based VBN amod
 |   |           +-- acknowledgment NN dep
 |   |               +-- invalidation NN nn
 |   +-- are VBP cop
 |   +-- in IN prep
 |   |   +-- validation NN pobj
 |   |       +-- the DT det
 |   |       +-- commit VBP nn
 |   |           +-- solo NN nn
 |   +-- and CC cc
 |   +-- needed VBN conj
 |       +-- both DT nsubjpass
 |       +-- are VBP auxpass
 +-- . . punct

69
Input: The page version number check allows the validation to proceed before invalidation acknowledgments arrive but by itself a page version number check detects page level conflicts and is not sufficient to support fine grain coherence without the object level invalidations .
Parse:
allows VBZ ROOT
 +-- check NN nsubj
 |   +-- The DT det
 |   +-- version NN nn
 |   |   +-- page NN nn
 |   +-- number NN nn
 +-- proceed VB xcomp
 |   +-- validation NN nsubj
 |   |   +-- the DT det
 |   +-- to TO aux
 |   +-- arrive VBP advcl
 |       +-- before IN mark
 |       +-- acknowledgments NNS nsubj
 |           +-- invalidation NN nn
 +-- but CC cc
 +-- check VBP conj
 |   +-- by IN prep
 |   |   +-- itself PRP pobj
 |   +-- a DT det
 |   +-- version NN nn
 |   |   +-- page NN nn
 |   +-- number NN nn
 |   +-- conflicts NNS dobj
 |       +-- level NN nn
 |           +-- page NN nn
 |               +-- detects NNS nn
 +-- and CC cc
 +-- sufficient JJ conj
 |   +-- is VBZ cop
 |   +-- not RB neg
 |   +-- support VB xcomp
 |       +-- to TO aux
 |       +-- coherence NN dobj
 |       |   +-- fine JJ amod
 |       |   +-- grain NN nn
 |       +-- without IN prep
 |           +-- invalidations NNS pobj
 |               +-- the DT det
 |               +-- level NN nn
 |                   +-- object NN nn
 +-- . . punct

70
Input: We now describe how the client manages the mapping ObjectToVersion .
Parse:
describe VBP ROOT
 +-- We PRP nsubj
 +-- now RB advmod
 +-- manages VBZ ccomp
 |   +-- how WRB advmod
 |   +-- client NN nsubj
 |   |   +-- the DT det
 |   +-- ObjectToVersion NN dobj
 |       +-- the DT det
 |       +-- mapping NN nn
 +-- . . punct

71
Input: The client maintains a page version number for each cached page .
Parse:
maintains VBZ ROOT
 +-- client NN nsubj
 |   +-- The DT det
 +-- number NN dobj
 |   +-- a DT det
 |   +-- version NN nn
 |   |   +-- page NN nn
 |   +-- for IN prep
 |       +-- page NN pobj
 |           +-- each DT det
 |           +-- cached VBN amod
 +-- . . punct

72
Input: The version number satisfies the following invariant V P about the state of objects on a page
Parse:
satisfies VBZ ROOT
 +-- number NN nsubj
 |   +-- The DT det
 |   +-- version NN nn
 +-- P NN dobj
 |   +-- the DT det
 |   +-- following VBG amod
 |   +-- invariant NN nn
 |   +-- V NN nn
 |   +-- about IN prep
 |       +-- state NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- objects NNS pobj
 +-- on IN prep
     +-- page NN pobj
         +-- a DT det

73
Input: New object values and new page version numbers arrive when a client fetches a page or when a commit reply or invalidations arrive for this page .
Parse:
arrive VBP ROOT
 +-- values NNS nsubj
 |   +-- New JJ amod
 |   +-- object NN nn
 |   +-- and CC cc
 |   +-- numbers NNS conj
 |       +-- new JJ amod
 |       +-- version NN nn
 |           +-- page NN nn
 +-- fetches VBZ advcl
 |   +-- when WRB advmod
 |   +-- client NN nsubj
 |   |   +-- a DT det
 |   +-- page NN dobj
 |   |   +-- a DT det
 |   +-- or CC cc
 |   +-- arrive VBP conj
 |       +-- when WRB advmod
 |       +-- reply NN nsubj
 |       |   +-- a DT det
 |       |   +-- commit NN nn
 |       |   +-- or CC cc
 |       |   +-- invalidations NNS conj
 |       +-- for IN prep
 |           +-- page NN pobj
 |               +-- this DT det
 +-- . . punct

74
Input: The new object values modify the page and , therefore , the page version number needs to be updated to maintain the invariant V P .
Parse:
modify VBP ROOT
 +-- values NNS nsubj
 |   +-- The DT det
 |   +-- new JJ amod
 |   +-- object NN nn
 +-- page NN dobj
 |   +-- the DT det
 +-- and CC cc
 +-- , , punct
 +-- needs VBZ conj
 |   +-- therefore RB advmod
 |   +-- , , punct
 |   +-- number NN nsubj
 |   |   +-- the DT det
 |   |   +-- version NN nn
 |   |       +-- page NN nn
 |   +-- updated VBN xcomp
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- maintain VB xcomp
 |           +-- to TO aux
 |           +-- P NN dobj
 |               +-- the DT det
 |               +-- invariant NN nn
 |               +-- V NNP nn
 +-- . . punct

75
Input: A page version number that arrives when a client fetches a page , replaces Object Version x 8 Redirector Server 1Client 1 com -LRB- P -LRB- x , 6 -RRB- , Q -LRB- y , 9 -RRB- -RRB- com -LRB- P -LRB- x , 6 -RRB- , Q -LRB- y , 9 -RRB- -RRB- ok -LRB- P -LRB- x , 8 -RRB- , Q -LRB- y , 10 -RRB- -RRB- ok -LRB- P -LRB- x , 8 -RRB- , Q -LRB- y , 10 -RRB- -RRB- inv -LRB- Q -LRB- s , 11 -RRB- -RRB- inv -LRB- Q -LRB- s , 11 -RRB- -RRB- inv -LRB- P -LRB- r , 7 -RRB- inv -LRB- P -LRB- r , 7 -RRB- Server 2 Figure 5
Parse:
replaces VBZ ROOT
 +-- number NN nsubj
 |   +-- A DT det
 |   +-- version NN nn
 |   |   +-- page NN nn
 |   +-- arrives VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- fetches VBZ advcl
 |           +-- when WRB advmod
 |           +-- client NN nsubj
 |           |   +-- a DT det
 |           +-- page NN dobj
 |               +-- a DT det
 +-- , , punct
 +-- Version NNP dobj
 |   +-- Object NNP nn
 |   +-- x SYM dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- , , punct
 |   |   +-- 6 CD dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- Server NNP dep
 |   |   +-- 8 CD num
 |   |   +-- Redirector NN nn
 |   +-- 1Client CD dep
 |   +-- com NN dep
 |   |   +-- 1 CD num
 |   +-- -LRB- -LRB- punct
 |   +-- P NNP dep
 +-- Q NN dobj
 |   +-- y NNP dep
 |       +-- -LRB- -LRB- punct
 |       +-- , , punct
 |       +-- 9 CD dep
 |       +-- -RRB- -RRB- punct
 +-- -RRB- -RRB- punct
 +-- com NN prep
     +-- P NNP appos
     |   +-- -LRB- -LRB- punct
     |   +-- x SYM prep
     |   |   +-- , , punct
     |   |   +-- 6 CD pobj
     |   +-- -RRB- -RRB- punct
     +-- , , punct
     +-- Q NN appos
     +-- y NNP dep
     |   +-- -LRB- -LRB- punct
     |   +-- , , punct
     |   +-- 9 CD dep
     |   +-- -RRB- -RRB- punct
     +-- -RRB- -RRB- punct
     +-- ok RB dep
     +-- -LRB- -LRB- punct
     +-- P UH dep
     +-- x NFP dep
     |   +-- -LRB- -LRB- punct
     |   +-- , , punct
     |   +-- 8 CD dep
     |   +-- -RRB- -RRB- punct
     +-- Q NNP dep
     |   +-- y NNP dep
     |       +-- -LRB- -LRB- punct
     |       +-- , , punct
     |       +-- 10 CD dep
     |       +-- -RRB- -RRB- punct
     +-- ok UH dep
     |   +-- P UH dep
     |   |   +-- -LRB- -LRB- punct
     |   +-- x NFP dep
     |   |   +-- -LRB- -LRB- punct
     |   |   +-- , , punct
     |   |   +-- 8 CD dep
     |   |   +-- -RRB- -RRB- punct
     |   +-- , , punct
     |   +-- Q NNP dep
     |   |   +-- y NNP dep
     |   |       +-- -LRB- -LRB- punct
     |   |       +-- , , punct
     |   |       +-- 10 CD dep
     |   |       +-- -RRB- -RRB- punct
     |   +-- -RRB- -RRB- punct
     |   +-- inv NN dep
     |       +-- 11 CD dep
     |           +-- -LRB- -LRB- punct
     |           +-- Q NNP nn
     |           +-- s CD number
     |           +-- , , punct
     |           +-- -RRB- -RRB- punct
     +-- Server NN dep
     |   +-- inv NN nn
     |   +-- P UH dep
     |   |   +-- -LRB- -LRB- punct
     |   |   +-- 7 CD dep
     |   |   |   +-- r UH discourse
     |   |   |   +-- , , punct
     |   |   +-- -RRB- -RRB- punct
     |   +-- inv NN dep
     |   +-- -LRB- -LRB- punct
     |   +-- P NN dep
     |   +-- r UH discourse
     |   +-- , , punct
     |   +-- 7 CD num
     |   +-- -RRB- -RRB- punct
     +-- Figure NN dep
         +-- 2 CD num
         +-- 5 CD num

76
Input: Such an update preserves the invariant V P .
Parse:
preserves VBZ ROOT
 +-- update NN nsubj
 |   +-- Such PDT predet
 |   +-- an DT det
 +-- P NN dobj
 |   +-- the DT det
 |   +-- invariant NN nn
 |   +-- V NNP nn
 +-- . . punct

77
Input: Similarly , an in sequence page version number arriving at the client in a commit or invalidation message advances the version number for the entire cached page , without violating V P .
Parse:
advances VBZ ROOT
 +-- Similarly RB advmod
 +-- , , punct
 +-- number NN nsubj
 |   +-- an DT det
 |   +-- in IN amod
 |   +-- version NN nn
 |   |   +-- page NN nn
 |   |       +-- sequence NN nn
 |   +-- arriving VBG partmod
 |       +-- at IN prep
 |       |   +-- client NN pobj
 |       |       +-- the DT det
 |       +-- in IN prep
 |           +-- commit NN pobj
 |               +-- a DT det
 |               +-- or CC cc
 |               +-- message NN conj
 |                   +-- invalidation NN nn
 +-- number NN dobj
 |   +-- the DT det
 |   +-- version NN nn
 |   +-- for IN prep
 |       +-- page NN pobj
 |           +-- the DT det
 |           +-- entire JJ amod
 |           +-- cached VBN amod
 +-- without IN prep
 |   +-- violating VBG pcomp
 |       +-- P NN dobj
 |           +-- V NN nn
 +-- . . punct

78
Input: However , invalidations or updates and their corresponding page version numbers can also arrive at the client out of sequence , in which case updating the page version number could violate V P .
Parse:
arrive VB ROOT
 +-- However RB advmod
 +-- , , punct
 +-- invalidations NNS nsubj
 |   +-- or CC cc
 |   +-- updates NNS conj
 |   +-- and CC cc
 |   +-- numbers NNS conj
 |       +-- their PRP$ poss
 |       +-- corresponding VBG amod
 |       +-- version NN nn
 |           +-- page NN nn
 +-- can MD aux
 +-- also RB advmod
 +-- at IN prep
 |   +-- client NN pobj
 |       +-- the DT det
 +-- out IN prep
 |   +-- of IN pcomp
 |       +-- sequence NN pobj
 +-- updating VBG partmod
 |   +-- in IN prep
 |   |   +-- case NN pobj
 |   |       +-- which WDT det
 |   +-- violate VB ccomp
 |       +-- number NN nsubj
 |       |   +-- the DT det
 |       |   +-- version NN nn
 |       |       +-- page NN nn
 |       +-- could MD aux
 |       +-- P NN dobj
 |           +-- V NNP nn
 +-- . . punct

79
Input: For example , a commit reply for a transaction that updates object x on page P in server S1 , and object y on page Q in server S2 , may deliver a new version number for P from the transaction coordinator S1 before an invalidation generated for an earlier transaction that has modified object r on page P arrives from S1 -LRB- as shown in figure 5 -RRB- .
Parse:
reply NN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- commit NN nsubj
 |   +-- a DT det
 +-- for IN prep
 |   +-- transaction NN pobj
 |       +-- a DT det
 |       +-- updates VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- object NN dobj
 |           +-- x , punct
 |           +-- on IN prep
 |           |   +-- P NN pobj
 |           |       +-- page NN nn
 |           |       +-- in IN prep
 |           |           +-- server NN pobj
 |           |               +-- S1 CD num
 |           +-- , , punct
 |           +-- and CC cc
 |           +-- object VB conj
 |               +-- y NN dobj
 |               +-- on IN prep
 |               |   +-- Q NN pobj
 |               |       +-- page NN nn
 |               +-- in IN prep
 |                   +-- server NN pobj
 |                       +-- S2 CD num
 +-- deliver VB dep
 |   +-- may MD aux
 |   +-- number NN dobj
 |   |   +-- a DT det
 |   |   +-- new JJ amod
 |   |   +-- version NN nn
 |   |   +-- for IN prep
 |   |       +-- P NN pobj
 |   +-- from IN prep
 |   |   +-- coordinator NN pobj
 |   |       +-- the DT det
 |   |       +-- transaction NN nn
 |   |       +-- S1 CD num
 |   +-- arrives VBZ advcl
 |       +-- before IN mark
 |       +-- invalidation NN nsubj
 |       |   +-- an DT det
 |       |   +-- generated VBD partmod
 |       |       +-- for IN prep
 |       |           +-- transaction NN pobj
 |       |               +-- an DT det
 |       |               +-- earlier JJR amod
 |       |               +-- modified VBN rcmod
 |       |                   +-- that WDT nsubj
 |       |                   +-- has VBZ aux
 |       |                   +-- object NN dobj
 |       |                   +-- r RB advmod
 |       |                   +-- on IN prep
 |       |                       +-- P NN pobj
 |       |                           +-- page NN nn
 |       +-- from IN prep
 |       |   +-- S1 CD pobj
 |       +-- -LRB- -LRB- punct
 |       +-- shown VBN advcl
 |       |   +-- as IN mark
 |       |   +-- in IN prep
 |       |       +-- figure NN pobj
 |       |           +-- 5 CD num
 |       +-- -RRB- -RRB- punct
 +-- . . punct

80
Input: The cache update protocol ensures that the value of any object o in a cached page P reflects the update or invalidation with the highest observed version number .
Parse:
ensures VBZ ROOT
 +-- protocol NN nsubj
 |   +-- The DT det
 |   +-- cache NN nn
 |   +-- update NN nn
 +-- reflects VBZ ccomp
 |   +-- that IN mark
 |   +-- value NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |   |   +-- object NN pobj
 |   |   |       +-- any DT det
 |   |   |       +-- o NN amod
 |   |   +-- in IN prep
 |   |       +-- P NN pobj
 |   |           +-- a DT det
 |   |           +-- page NN nn
 |   |               +-- cached VBN amod
 |   +-- update NN dobj
 |       +-- the DT det
 |       +-- or CC cc
 |       +-- invalidation NN conj
 |       +-- with IN prep
 |           +-- number NN pobj
 |               +-- the DT det
 |               +-- highest JJS amod
 |               +-- observed JJ amod
 |               +-- version NN nn
 +-- . . punct

81
Input: That is , obsolete updates or invalidations received out of sequence do not affect the value of an object .
Parse:
affect VB ROOT
 +-- is VBZ advmod
 |   +-- That DT advmod
 +-- , , punct
 +-- updates NNS nsubj
 |   +-- obsolete JJ amod
 |   +-- or CC cc
 |   +-- invalidations NNS conj
 |   +-- received VBD partmod
 |       +-- out IN prep
 |           +-- of IN pcomp
 |               +-- sequence NN pobj
 +-- do VBP aux
 +-- not RB neg
 +-- value NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- object NN pobj
 |           +-- an DT det
 +-- . . punct

82
Input: To maintain the ObjectToVersion mapping and the invariant V P in the presence of out of sequence arrival of page version numbers , the client manages a small version number cache vcache that maintains the mapping from an object into its corresponding page version number for all reordered version number updates until a complete page version number sequence is assembled .
Parse:
manages VBZ ROOT
 +-- maintain VB advcl
 |   +-- To TO aux
 |   +-- mapping NN dobj
 |       +-- the DT det
 |       +-- ObjectToVersion NN nn
 |       +-- and CC cc
 |       +-- P NN conj
 |       |   +-- the DT det
 |       |   +-- V NNP nn
 |       |       +-- invariant JJ nn
 |       +-- in IN prep
 |           +-- presence NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- out IN pcomp
 |                       +-- of IN pcomp
 |                           +-- arrival NN pobj
 |                               +-- sequence NN nn
 |                               +-- of IN prep
 |                                   +-- numbers NNS pobj
 |                                       +-- version NN nn
 |                                           +-- page NN nn
 +-- , , punct
 +-- client NN nsubj
 |   +-- the DT det
 +-- vcache NN dobj
 |   +-- a DT det
 |   +-- small JJ amod
 |   +-- version NN nn
 |   +-- cache NN nn
 |   |   +-- number NN nn
 |   +-- maintains VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- mapping NN dobj
 |       |   +-- the DT det
 |       +-- from IN prep
 |       |   +-- object NN pobj
 |       |       +-- an DT det
 |       |       +-- into IN prep
 |       |           +-- number NN pobj
 |       |               +-- its PRP$ poss
 |       |               +-- corresponding VBG amod
 |       |               +-- version NN nn
 |       |                   +-- page NN nn
 |       +-- for IN prep
 |       |   +-- updates NNS pobj
 |       |       +-- all DT det
 |       |       +-- reordered VBN amod
 |       |       +-- number NN nn
 |       |           +-- version NN nn
 |       +-- assembled VBN advcl
 |           +-- until IN mark
 |           +-- sequence NN nsubjpass
 |           |   +-- a DT det
 |           |   +-- complete JJ amod
 |           |   +-- number NN nn
 |           |       +-- version NN nn
 |           |           +-- page NN nn
 |           +-- is VBZ auxpass
 +-- . . punct

83
Input: When the missing version numbers for the page arrive and complete a sequence , the version number for the entire page is advanced .
Parse:
advanced JJ ROOT
 +-- arrive VBP advcl
 |   +-- When WRB advmod
 |   +-- numbers NNS nsubj
 |   |   +-- the DT det
 |   |   +-- missing VBG amod
 |   |   +-- version NN nn
 |   |   +-- for IN prep
 |   |       +-- page NN pobj
 |   |           +-- the DT det
 |   +-- and CC cc
 |   +-- complete VB conj
 |       +-- sequence NN dobj
 |           +-- a DT det
 +-- , , punct
 +-- number NN nsubj
 |   +-- the DT det
 |   +-- version NN nn
 |   +-- for IN prep
 |       +-- page NN pobj
 |           +-- the DT det
 |           +-- entire JJ amod
 +-- is VBZ cop
 +-- . . punct

84
Input: The ObjectToVersion mapping , including the vcache and page version numbers , is used at transaction commit time to provide version numbers for the read object set as follows .
Parse:
used VBN ROOT
 +-- mapping NN nsubjpass
 |   +-- The DT det
 |   +-- ObjectToVersion NN nn
 |   +-- , , punct
 |   +-- including VBG prep
 |       +-- numbers NNS pobj
 |           +-- the DT det
 |           +-- vcache NN nn
 |               +-- and CC cc
 |               +-- version NN conj
 |                   +-- page NN nn
 +-- is VBZ auxpass
 +-- at IN prep
 |   +-- transaction NN pobj
 +-- commit VBP ccomp
 |   +-- time NN dobj
 |       +-- provide VB infmod
 |           +-- to TO aux
 |           +-- numbers NNS dobj
 |           |   +-- version NN nn
 |           +-- for IN prep
 |               +-- object NN pobj
 |                   +-- the DT det
 |                   +-- read VBN amod
 |                   +-- set VBN partmod
 |                       +-- follows VBZ advcl
 |                           +-- as IN mark
 +-- . . punct

85
Input: If the read object has an entry in the vcache , its version number is equal to the highest version number in the vcache for this object .
Parse:
equal JJ ROOT
 +-- has VBZ advcl
 |   +-- If IN mark
 |   +-- object NN nsubj
 |   |   +-- the DT det
 |   |   +-- read NN nn
 |   +-- entry NN dobj
 |       +-- an DT det
 |       +-- in IN prep
 |           +-- vcache NN pobj
 |               +-- the DT det
 +-- , , punct
 +-- number NN nsubj
 |   +-- its PRP$ poss
 |   +-- version NN nn
 +-- is VBZ cop
 +-- to IN prep
 |   +-- number NN pobj
 |       +-- the DT det
 |       +-- highest JJS amod
 |       +-- version NN nn
 |       +-- in IN prep
 |           +-- vcache NN pobj
 |               +-- the DT det
 |               +-- for IN prep
 |                   +-- object NN pobj
 |                       +-- this DT det
 +-- . . punct

86
Input: If the object is not present in the vcache , its version number is equal the version number of its containing cached page .
Parse:
equal JJ ROOT
 +-- present JJ advcl
 |   +-- If IN mark
 |   +-- object NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ cop
 |   +-- not RB neg
 |   +-- in IN prep
 |       +-- vcache NN pobj
 |           +-- the DT det
 +-- , , punct
 +-- number NN nsubj
 |   +-- its PRP$ poss
 |   +-- version NN nn
 +-- is VBZ cop
 +-- number NN dobj
 |   +-- the DT det
 |   +-- version NN nn
 |   +-- of IN prep
 |       +-- page NN pobj
 |           +-- its PRP$ poss
 |           +-- containing VBG amod
 |           +-- cached VBN amod
 +-- . . punct

87
Input: Figure 6 shows the ObjectToVersion mapping in the client cache , including the page version numbers for pages and the vcache .
Parse:
shows VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 6 CD num
 +-- mapping NN dobj
 |   +-- the DT det
 |   +-- ObjectToVersion NN nn
 |   +-- in IN prep
 |   |   +-- cache NN pobj
 |   |       +-- the DT det
 |   |       +-- client NN nn
 |   +-- , , punct
 |   +-- including VBG prep
 |       +-- numbers NNS pobj
 |           +-- the DT det
 |           +-- version NN nn
 |           |   +-- page NN nn
 |           +-- for IN prep
 |               +-- pages NNS pobj
 |                   +-- and CC cc
 |                   +-- vcache NN conj
 |                       +-- the DT det
 +-- . . punct

88
Input: Client can limit vcache size as needed since re fetching a page removes all reordered page version numbers from the vcache .
Parse:
limit VB ROOT
 +-- Client NN nsubj
 +-- can MD aux
 +-- size NN dobj
 |   +-- vcache NN nn
 +-- needed VBN advcl
 |   +-- as IN mark
 +-- since IN prep
 |   +-- re IN pcomp
 |       +-- fetching VBG pcomp
 |           +-- page NN dobj
 |               +-- a DT det
 |               +-- removes VBZ partmod
 |                   +-- numbers NNS dobj
 |                       +-- all DT det
 |                       +-- version NN nn
 |                       |   +-- reordered VBN amod
 |                       |   +-- page NN nn
 |                       +-- from IN prep
 |                           +-- vcache NN pobj
 |                               +-- the DT det
 +-- . . punct

89
Input: However , we expect version number reordering to be uncommon and therefore expect the vcache to be very small. .
Parse:
expect VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- uncommon JJ xcomp
 |   +-- reordering VBG nsubj
 |   |   +-- number NN nn
 |   |       +-- version NN nn
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- and CC cc
 |   +-- therefore RB advmod
 |   +-- expect VBP conj
 |       +-- small. JJ xcomp
 |           +-- vcache NN nsubj
 |           |   +-- the DT det
 |           +-- to TO aux
 |           +-- be VB cop
 |           +-- very RB advmod
 +-- . . punct
