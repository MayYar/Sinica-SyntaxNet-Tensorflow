
1
Input: In this article , we proposed and evaluated PackageBLAST , an adaptive multi policy grid service to execute master slave BLAST searches
Parse:
proposed VBD ROOT
 +-- In IN prep
 |   +-- article NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- and CC cc
 +-- evaluated VBD conj
 +-- PackageBLAST NNP dobj
     +-- , , punct
     +-- service NN appos
         +-- an DT det
         +-- adaptive JJ amod
         +-- multi JJ amod
         +-- grid NN nn
         |   +-- policy NN nn
         +-- execute VB infmod
             +-- to TO aux
             +-- searches NNS dobj
                 +-- master NN nn
                 +-- slave NN nn
                 +-- BLAST NN nn

2
Input: PackageBLAST contains a framework where the user can choose or incorporate allocation policies
Parse:
contains VBZ ROOT
 +-- PackageBLAST NNP nsubj
 +-- framework NN dobj
     +-- a DT det
     +-- choose VB rcmod
         +-- where WRB advmod
         +-- user NN nsubj
         |   +-- the DT det
         +-- can MD aux
         +-- or CC cc
         +-- incorporate VB conj
         +-- policies NNS dobj
             +-- allocation NN nn

3
Input: We also defined a strategy , PSS , that adapts the chosen policy to a heterogeneous non dedicated grid environment
Parse:
defined VBD ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- strategy NN dobj
     +-- a DT det
     +-- , , punct
     +-- PSS NNP appos
     +-- adapts VBZ rcmod
         +-- that WDT nsubj
         +-- policy NN dobj
         |   +-- the DT det
         |   +-- chosen VBN amod
         +-- to IN prep
             +-- environment NN pobj
                 +-- a DT det
                 +-- heterogeneous JJ amod
                 +-- dedicated JJ amod
                 |   +-- non FW advmod
                 +-- grid NN nn

4
Input: The results collected by running PackageBLAST with 5 allocation policies in a grid testbed were very good
Parse:
good JJ ROOT
 +-- results NNS nsubj
 |   +-- The DT det
 |   +-- collected VBN partmod
 |       +-- by IN prep
 |           +-- running VBG pcomp
 |               +-- PackageBLAST NNP dobj
 |               +-- with IN prep
 |               |   +-- policies NNS pobj
 |               |       +-- 5 CD num
 |               |       +-- allocation NN nn
 |               +-- in IN prep
 |                   +-- testbed VBN pobj
 |                       +-- a DT det
 |                       +-- grid NN nn
 +-- were VBD cop
 +-- very RB advmod

5
Input: In order to compare a 10KBP real DNA sequence against the nr genetic database , we were able to reduce execution time from 30.88 min to 2.11 min
Parse:
able JJ ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- compare VB infmod
 |           +-- to TO aux
 |           +-- sequence NN dobj
 |               +-- a DT det
 |               +-- 10KBP CD num
 |               +-- DNA NN nn
 |               |   +-- real JJ amod
 |               +-- against IN prep
 |                   +-- database NN pobj
 |                       +-- the DT det
 |                       +-- nr NNP nn
 |                       +-- genetic JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- were VBD cop
 +-- reduce VB xcomp
     +-- to TO aux
     +-- time NN dobj
     |   +-- execution NN nn
     +-- from IN prep
     |   +-- min NNP pobj
     |       +-- 30.88 CD num
     +-- to IN prep
         +-- min NN pobj
             +-- 2.11 CD num

6
Input: Also , we showed that , in our testbed , there is no allocation policy that always achieves the best performance and that makes evident the importance of providing multiple policies
Parse:
showed VBD ROOT
 +-- Also RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- is VBZ ccomp
     +-- that IN mark
     +-- , , punct
     +-- in IN prep
     |   +-- testbed VBN pobj
     |       +-- our PRP$ poss
     +-- there EX expl
     +-- policy NN nsubj
         +-- no DT det
         +-- allocation NN nn
         +-- achieves VBZ rcmod
             +-- that WDT nsubj
             +-- always RB advmod
             +-- performance NN dobj
             |   +-- the DT det
             |   +-- best JJS amod
             +-- and CC cc
             +-- makes VBZ conj
                 +-- that DT nsubj
                 +-- evident JJ acomp
                 +-- importance NN dobj
                     +-- the DT det
                     +-- of IN prep
                         +-- providing VBG pcomp
                             +-- policies NNS dobj
                                 +-- multiple JJ amod

7
Input: Moreover , we showed that the introduction of PSS led to very good performance gains for some policies
Parse:
showed VBD ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- led VBD ccomp
     +-- that IN mark
     +-- introduction NN nsubj
     |   +-- the DT det
     |   +-- of IN prep
     |       +-- PSS NNP pobj
     +-- to IN prep
         +-- gains NNS pobj
             +-- good JJ amod
             |   +-- very RB advmod
             +-- performance NN nn
             +-- for IN prep
                 +-- policies NNS pobj
                     +-- some DT det

8
Input: As future work , we intend to run PackageBLAST in a geographically dispersed grid , to evaluate the impact of high network latencies in the allocation policies and in PSS
Parse:
intend VBP ROOT
 +-- As IN prep
 |   +-- work NN pobj
 |       +-- future JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- run VB xcomp
     +-- to TO aux
     +-- PackageBLAST NNP dobj
     +-- in IN prep
     |   +-- grid NN pobj
     |       +-- a DT det
     |       +-- dispersed VBN amod
     |           +-- geographically RB advmod
     +-- , , punct
     +-- evaluate VB xcomp
         +-- to TO aux
         +-- impact NN dobj
             +-- the DT det
             +-- of IN prep
                 +-- latencies NNS pobj
                     +-- network NN nn
                     |   +-- high JJ amod
                     +-- in IN prep
                         +-- policies NNS pobj
                         |   +-- the DT det
                         |   +-- allocation NN nn
                         +-- and CC cc
                         +-- in IN conj
                             +-- PSS NNP pobj

9
Input: Also , we intend to provide support for genomic database synchronization and dynamic join leave operations for slaves .
Parse:
intend VBP ROOT
 +-- Also RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- support NN dobj
 |       +-- for IN prep
 |           +-- synchronization NN pobj
 |               +-- genomic JJ amod
 |               +-- database NN nn
 |               +-- and CC cc
 |               +-- join NN conj
 |                   +-- dynamic JJ amod
 |                   +-- leave NN partmod
 |                       +-- operations NNS dobj
 |                       +-- for IN prep
 |                           +-- slaves NNS pobj
 +-- . . punct
