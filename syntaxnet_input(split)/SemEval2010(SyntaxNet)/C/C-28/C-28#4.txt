
1
Input: 3.1 Grid Computing Grid Computing was initially developed to enable resource sharing between scientific institutions who needed to share data , software and computational power .
Parse:
developed VBN ROOT
 +-- Computing NNP nsubjpass
 |   +-- 3.1 CD num
 |   +-- Grid NNP nn
 |       +-- Computing VBG nn
 |           +-- Grid NNP nn
 +-- was VBD auxpass
 +-- initially RB advmod
 +-- enable VB xcomp
 |   +-- to TO aux
 |   +-- sharing NN dobj
 |       +-- resource NN nn
 |       +-- between IN prep
 |           +-- institutions NNS pobj
 |               +-- scientific JJ amod
 |               +-- needed VBD rcmod
 |                   +-- who WP nsubj
 |                   +-- share VB xcomp
 |                       +-- to TO aux
 |                       +-- data NNS dobj
 |                           +-- , , punct
 |                           +-- software NN conj
 |                           +-- and CC cc
 |                           +-- power NN conj
 |                               +-- computational JJ amod
 +-- . . punct

2
Input: The Globus Toolkit -LRB- 4 -RRB- emerged as an open source project and quickly became a de facto standard for grid computing infrastructure .
Parse:
emerged VBD ROOT
 +-- Toolkit NNP nsubj
 |   +-- The DT det
 |   +-- Globus NNP nn
 |   +-- 4 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- as IN prep
 |   +-- project NN pobj
 |       +-- an DT det
 |       +-- source NN nn
 |           +-- open JJ amod
 +-- and CC cc
 +-- standard NN conj
 |   +-- quickly RB advmod
 |   +-- became VBD cop
 |   +-- a DT det
 |   +-- facto NN amod
 |   |   +-- de FW amod
 |   +-- for IN prep
 |       +-- infrastructure NN pobj
 |           +-- computing NN nn
 |               +-- grid NN nn
 +-- . . punct

3
Input: Globus implements a set of protocols , APIs and services used by hundreds of grid applications all over the world .
Parse:
implements VBZ ROOT
 +-- Globus NN nsubj
 +-- set NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- protocols NNS pobj
 |           +-- , , punct
 |           +-- APIs NNPS conj
 |           +-- and CC cc
 |           +-- services NNS conj
 |           +-- used VBN partmod
 |               +-- by IN prep
 |                   +-- hundreds NNS pobj
 |                       +-- of IN prep
 |                           +-- applications NNS pobj
 |                               +-- grid NN nn
 |                               +-- over IN prep
 |                                   +-- all RB advmod
 |                                   +-- world NN pobj
 |                                       +-- the DT det
 +-- . . punct

4
Input: In 2002 , the Open Grid Services Architecture was introduced by the Global Grid Forum to expand standardization .
Parse:
introduced VBN ROOT
 +-- In IN prep
 |   +-- 2002 CD pobj
 +-- , , punct
 +-- Architecture NNP nsubjpass
 |   +-- the DT det
 |   +-- Open NNP nn
 |   +-- Services NNPS nn
 |       +-- Grid NNP nn
 +-- was VBD auxpass
 +-- by IN prep
 |   +-- Forum NNP pobj
 |       +-- the DT det
 |       +-- Grid NNP nn
 |           +-- Global NNP nn
 +-- expand VB xcomp
 |   +-- to TO aux
 |   +-- standardization NN dobj
 +-- . . punct

5
Input: OGSA provided a new architecture for grid applications based on web services in order to achieve interoperability using industry standards .
Parse:
provided VBD ROOT
 +-- OGSA PRP nsubj
 +-- architecture NN dobj
 |   +-- a DT det
 |   +-- new JJ amod
 |   +-- for IN prep
 |       +-- applications NNS pobj
 |           +-- grid NN nn
 |           +-- based VBN partmod
 |               +-- on IN prep
 |                   +-- services NNS pobj
 |                       +-- web NN nn
 +-- in IN prep
 |   +-- order NN pobj
 |       +-- achieve VB infmod
 |           +-- to TO aux
 |           +-- interoperability NN dobj
 |           +-- using VBG xcomp
 |               +-- standards NNS dobj
 |                   +-- industry NN nn
 +-- . . punct

6
Input: Many OGSA architecture implementations were developed , including one for Globus .
Parse:
developed VBN ROOT
 +-- implementations NNS nsubjpass
 |   +-- Many JJ amod
 |   +-- OGSA NNP nn
 |   +-- architecture NN nn
 +-- were VBD auxpass
 +-- , , punct
 +-- including VBG prep
 |   +-- one CD pobj
 |       +-- for IN prep
 |           +-- Globus NNP pobj
 +-- . . punct

7
Input: The work carried out in this paper is deployed on a grid based on Globus -LRB- GT3 -RRB- .
Parse:
deployed VBN ROOT
 +-- work NN nsubjpass
 |   +-- The DT det
 |   +-- carried VBD partmod
 |       +-- out RP prt
 |       +-- in IN prep
 |           +-- paper NN pobj
 |               +-- this DT det
 +-- is VBZ auxpass
 +-- on IN prep
 |   +-- grid NN pobj
 |       +-- a DT det
 |       +-- based VBN partmod
 |           +-- on IN prep
 |               +-- Globus NNP pobj
 |                   +-- -LRB- -LRB- punct
 |                   +-- GT3 CD dep
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

8
Input: Usually , grid applications are modelled as master slave , where one problem is divided in many independent work units -LRB- tasks -RRB- of smaller size that can be distributed to slave nodes for parallel processing .
Parse:
modelled VBN ROOT
 +-- Usually RB advmod
 +-- , , punct
 +-- applications NNS nsubjpass
 |   +-- grid NN nn
 +-- are VBP auxpass
 +-- as IN prep
 |   +-- slave NN pobj
 |       +-- master NN nn
 |       +-- , , punct
 |       +-- divided VBN rcmod
 |           +-- where WRB advmod
 |           +-- problem NN nsubjpass
 |           |   +-- one CD num
 |           +-- is VBZ auxpass
 |           +-- in IN prep
 |               +-- units NNS pobj
 |                   +-- many JJ amod
 |                   +-- independent JJ amod
 |                   +-- work NN nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- tasks NNS dep
 |                   +-- -RRB- -RRB- punct
 |                   +-- of IN prep
 |                   |   +-- size NN pobj
 |                   |       +-- smaller JJR amod
 |                   +-- distributed VBN rcmod
 |                       +-- that WDT nsubjpass
 |                       +-- can MD aux
 |                       +-- be VB auxpass
 |                       +-- slave VB xcomp
 |                           +-- to TO aux
 |                           +-- nodes NNS dobj
 |                               +-- for IN prep
 |                                   +-- processing NN pobj
 |                                       +-- parallel NN amod
 +-- . . punct

9
Input: A very important problem to be solved in this context is task allocation .
Parse:
allocation NN ROOT
 +-- problem NN nsubj
 |   +-- A DT det
 |   +-- important JJ amod
 |   |   +-- very RB advmod
 |   +-- solved VBN infmod
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- in IN prep
 |           +-- context NN pobj
 |               +-- this DT det
 +-- is VBZ cop
 +-- task NN nn
 +-- . . punct

10
Input: The task allocation problem consists of assigning tasks to processors in order to maximize system performance -LRB- 13 -RRB- .
Parse:
consists VBZ ROOT
 +-- problem NN nsubj
 |   +-- The DT det
 |   +-- allocation NN nn
 |       +-- task NN nn
 +-- of IN prep
 |   +-- assigning VBG pcomp
 |       +-- tasks NNS dobj
 |       +-- to IN prep
 |       |   +-- processors NNS pobj
 |       +-- in IN prep
 |           +-- order NN pobj
 |               +-- maximize VB infmod
 |                   +-- to TO aux
 |                   +-- performance NN dobj
 |                       +-- system NN nn
 |                       +-- -LRB- -LRB- punct
 |                       +-- 13 CD dep
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

11
Input: In this problem , it is assumed that no precedence relations exist among the tasks .
Parse:
assumed VBN ROOT
 +-- In IN prep
 |   +-- problem NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- it PRP nsubjpass
 +-- is VBZ auxpass
 +-- exist VBP ccomp
 |   +-- that IN mark
 |   +-- relations NNS nsubj
 |   |   +-- no DT det
 |   |   +-- precedence NN amod
 |   +-- among IN prep
 |       +-- tasks NNS pobj
 |           +-- the DT det
 +-- . . punct

12
Input: 3.2 Task Allocation Strategies Given a master slave application composed by a master m and S slaves , the allocation function allocate -LRB- m , si , N , S -RRB- determines how many tasks out of N must be assigned to a slave si -LRB- equation 1 -RRB- , where A -LRB- N , S -RRB- represents an allocation policy .
Parse:
determines VBZ ROOT
 +-- Strategies VBZ nsubj
 |   +-- 3.2 CD num
 |   +-- Allocation NNP nn
 |   |   +-- Task NNP nn
 |   +-- Given VBN prep
 |   |   +-- application NN dep
 |   |       +-- a DT det
 |   |       +-- master NN nn
 |   |       +-- slave VB nn
 |   |       +-- composed VBN partmod
 |   |           +-- by IN prep
 |   |               +-- m NN pobj
 |   |                   +-- a DT det
 |   |                   +-- master NN nn
 |   |                   +-- and CC cc
 |   |                   +-- slaves NNS conj
 |   |                       +-- S NNP nn
 |   +-- , , punct
 |   +-- function NN appos
 |       +-- the DT det
 |       +-- allocation NN nn
 |       +-- allocate VB partmod
 |           +-- S NNP dep
 |               +-- -LRB- -LRB- punct
 |               +-- m NN dep
 |               +-- , , punct
 |               +-- si NNS dep
 |               +-- N UH discourse
 |               +-- -RRB- -RRB- punct
 +-- assigned VBN ccomp
 |   +-- tasks NNS nsubjpass
 |   |   +-- many JJ amod
 |   |   |   +-- how WRB advmod
 |   |   +-- out IN prep
 |   |       +-- of IN pcomp
 |   |           +-- N NNP pobj
 |   +-- must MD aux
 |   +-- be VB auxpass
 |   +-- to IN prep
 |       +-- si NN pobj
 |           +-- a DT det
 |           +-- slave NN amod
 |           +-- -LRB- -LRB- punct
 |           +-- 1 CD dep
 |           |   +-- equation NN nn
 |           +-- -RRB- -RRB- punct
 |           +-- , , punct
 |           +-- represents VBZ rcmod
 |               +-- where WRB advmod
 |               +-- A NNP nsubj
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- N NNP dep
 |               |   |   +-- , , punct
 |               |   |   +-- S NNP appos
 |               |   +-- -RRB- -RRB- punct
 |               +-- policy NN dobj
 |                   +-- an DT det
 |                   +-- allocation NN nn
 +-- . . punct

13
Input: WeightFactor -LRB- m , si , S -RRB- was defined by -LRB- 13 -RRB- -LRB- equation 2 -RRB- and provides weights for each slave si , based on its statically known processing rate -LRB- WorkerRate -RRB- .
Parse:
defined VBN ROOT
 +-- WeightFactor NNP nsubjpass
 |   +-- -LRB- -LRB- punct
 |   +-- m NN dep
 |   |   +-- , , punct
 |   |   +-- S NNP dep
 |   |       +-- si UH discourse
 |   |       +-- , , punct
 |   +-- -RRB- -RRB- punct
 +-- was VBD auxpass
 +-- by IN prep
 |   +-- equation NN pobj
 |       +-- 13 CD dep
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- -LRB- -LRB- punct
 |       +-- 2 CD num
 |       +-- -RRB- -RRB- punct
 +-- and CC cc
 +-- provides VBZ conj
 |   +-- weights NNS dobj
 |   +-- for IN prep
 |       +-- si NNS pobj
 |           +-- slave NN nn
 |           |   +-- each DT det
 |           +-- , , punct
 |           +-- based VBN prep
 |               +-- on IN pcomp
 |                   +-- rate NN pobj
 |                       +-- its PRP$ poss
 |                       +-- known VBN amod
 |                       |   +-- statically RB advmod
 |                       +-- processing NN nn
 |                       +-- -LRB- -LRB- punct
 |                       +-- WorkerRate NNP dep
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

14
Input: allocate -LRB- m , si , N , S -RRB- = A -LRB- N , S -RRB- ? W eightF actor -LRB- m , si , S -RRB- -LRB- 1 -RRB- W eightF actor -LRB- m , si , S -RRB- = P ? W orkerRate -LRB- m , si -RRB- P i=1 W orkerRate -LRB- m , si -RRB- -LRB- 2 -RRB- The following subsections present some work allocation policies , which are instances A -LRB- N , S -RRB- of equation 1 .
Parse:
allocate VB ROOT
 +-- m NN dobj
 |   +-- -LRB- -LRB- punct
 |   +-- , , punct
 |   +-- si NNS appos
 |   +-- N UH discourse
 |   +-- S NNP dep
 |   +-- -RRB- -RRB- punct
 |   +-- A DT dep
 |       +-- = FW nn
 |       +-- N NNP appos
 |           +-- -LRB- -LRB- punct
 |           +-- , , punct
 |           +-- S NNP appos
 |           +-- -RRB- -RRB- punct
 +-- ? . punct
 +-- actor NN dobj
     +-- W NNP nn
     +-- eightF POS nn
     +-- -LRB- -LRB- punct
     +-- m NN dep
     |   +-- , , punct
     |   +-- si UH discourse
     |   +-- S NNP dep
     +-- -RRB- -RRB- punct
     +-- S NNP dep
         +-- 1 CD dep
         |   +-- -LRB- -LRB- punct
         |   +-- -RRB- -RRB- punct
         +-- W NNP dep
         |   +-- actor NN dep
         |       +-- eightF PRP$ poss
         +-- -LRB- -LRB- punct
         +-- m NN dep
         +-- , , punct
         +-- si UH discourse
         +-- -RRB- -RRB- punct
         +-- = NFP cc
         +-- P NN conj
         +-- ? . punct
         +-- W NNP parataxis
             +-- orkerRate VB dep
                 +-- si FW dobj
                     +-- -LRB- -LRB- punct
                     +-- m UH discourse
                     +-- , , punct
                     +-- -RRB- -RRB- punct
                     +-- P NN dep
                     |   +-- i=1 CD dobj
                     |       +-- W NNP prep
                     |           +-- orkerRate NN dep
                     |               +-- present VBP dep
                     |                   +-- m UH dep
                     |                   |   +-- -LRB- -LRB- punct
                     |                   |   +-- , , punct
                     |                   |   +-- si NNP dep
                     |                   |   +-- -RRB- -RRB- punct
                     |                   +-- 2 LS dep
                     |                   |   +-- -LRB- -LRB- punct
                     |                   |   +-- -RRB- -RRB- punct
                     |                   +-- subsections NNS nsubj
                     |                   |   +-- The DT det
                     |                   |   +-- following VBG amod
                     |                   +-- policies NNS dobj
                     |                       +-- some DT det
                     |                       +-- allocation NN nn
                     |                       |   +-- work NN nn
                     |                       +-- , , punct
                     |                       +-- A DT rcmod
                     |                           +-- which WDT nsubj
                     |                           +-- are VBP cop
                     |                           +-- instances NNS nn
                     |                           +-- -LRB- -LRB- punct
                     |                           +-- S NNP dep
                     |                           |   +-- N UH discourse
                     |                           |   +-- , , punct
                     |                           +-- -RRB- -RRB- punct
                     |                           +-- of IN prep
                     |                           |   +-- equation NN pobj
                     |                           +-- 1 CD num
                     +-- . . punct

15
Input: 3.3 Fixed -LRB- Static Scheduling -RRB- The Fixed -LRB- 13 -RRB- strategy distributes all work units uniformly to slaves nodes .
Parse:
distributes VBZ ROOT
 +-- Scheduling NNP dep
 |   +-- 3.3 CD num
 |   +-- Fixed VBN dep
 |   +-- -LRB- -LRB- punct
 |   +-- Static NNP nn
 |   +-- -RRB- -RRB- punct
 +-- strategy NN nsubj
 |   +-- The DT det
 |   +-- 13 CD nn
 |       +-- Fixed NNP dep
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- units NNS dobj
 |   +-- all DT det
 |   +-- work NN nn
 +-- uniformly RB advmod
 +-- to IN prep
 |   +-- nodes NNS pobj
 |       +-- slaves NNS nn
 +-- . . punct

16
Input: This strategy is appropriate for homogeneous systems with dedicated resources -LRB- equation 3 -RRB- .
Parse:
appropriate JJ ROOT
 +-- strategy NN nsubj
 |   +-- This DT det
 +-- is VBZ cop
 +-- for IN prep
 |   +-- systems NNS pobj
 |       +-- homogeneous JJ amod
 |       +-- with IN prep
 |           +-- resources NNS pobj
 |               +-- dedicated JJ amod
 |               +-- equation NN appos
 |                   +-- -LRB- -LRB- punct
 |                   +-- 3 CD num
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

17
Input: A -LRB- N , S -RRB- = N S -LRB- 3 -RRB- 3.4 Self Scheduling Self Scheduling -LRB- 15 -RRB- distributes a single work unit to every slave node -LRB- equation 4 -RRB- .
Parse:
distributes VBZ ROOT
 +-- 15 CD nsubj
 |   +-- A DT det
 |   |   +-- N NNP dep
 |   |   |   +-- -LRB- -LRB- punct
 |   |   |   +-- , , punct
 |   |   |   +-- S NNP dep
 |   |   |   +-- -RRB- -RRB- punct
 |   |   +-- = SYM dep
 |   +-- Scheduling NNP dep
 |   |   +-- 3 CD nn
 |   |   |   +-- S NNP dep
 |   |   |   |   +-- N NNP nn
 |   |   |   +-- -LRB- -LRB- punct
 |   |   |   +-- -RRB- -RRB- punct
 |   |   +-- Scheduling VBG nn
 |   |   |   +-- Self NN nn
 |   |   |       +-- 3.4 CD num
 |   |   +-- Self NNP nn
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- unit NN dobj
 |   +-- a DT det
 |   +-- single JJ amod
 |   +-- work NN nn
 +-- to IN prep
 |   +-- node NN pobj
 |       +-- every DT det
 |       +-- slave NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- equation NN dep
 |       |   +-- 4 CD num
 |       +-- -RRB- -RRB- punct
 +-- . . punct

18
Input: A -LRB- N , S -RRB- = 1 , while work units are still left to allocate -LRB- 4 -RRB- In SS , the maximum imbalance is limited by the processing time of a work unit in the slowest node .
Parse:
limited VBN ROOT
 +-- A DT prep
 |   +-- N NNP dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- , , punct
 |   |   +-- S NNP dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- = SYM dep
 |       +-- 1 CD num
 +-- , , punct
 +-- left VBN advcl
 |   +-- while IN mark
 |   +-- units NNS nsubjpass
 |   |   +-- work NN nn
 |   +-- are VBP auxpass
 |   +-- still RB advmod
 |   +-- allocate VB xcomp
 |       +-- to TO aux
 |       +-- 4 LS dobj
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- In IN prep
 |           +-- SS NNP pobj
 +-- imbalance NN nsubjpass
 |   +-- the DT det
 |   +-- maximum JJ amod
 +-- is VBZ auxpass
 +-- by IN prep
 |   +-- time NN pobj
 |       +-- the DT det
 |       +-- processing NN nn
 |       +-- of IN prep
 |       |   +-- unit NN pobj
 |       |       +-- a DT det
 |       |       +-- work NN nn
 |       +-- in IN prep
 |           +-- node NN pobj
 |               +-- the DT det
 |               +-- slowest JJS amod
 +-- . . punct

19
Input: Nevertheless , SS usually demands a lot of communication , since each work unit retrieval requires one interaction with the master .
Parse:
demands VBZ ROOT
 +-- Nevertheless RB advmod
 +-- , , punct
 +-- SS NNP nsubj
 +-- usually RB advmod
 +-- lot NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- communication NN pobj
 +-- requires VBZ advcl
 |   +-- since IN mark
 |   +-- retrieval NN nsubj
 |   |   +-- each DT det
 |   |   +-- unit NN nn
 |   |       +-- work NN nn
 |   +-- interaction NN dobj
 |       +-- one CD num
 |       +-- with IN prep
 |           +-- master NN pobj
 |               +-- the DT det
 +-- . . punct

20
Input: 3.5 Trapezoidal Self Scheduling Trapezoidal Self Scheduling -LRB- 16 -RRB- allocates work units in groups with a linearly decreasing size .
Parse:
allocates VBZ ROOT
 +-- Self NNP nsubj
 |   +-- 3.5 CD num
 |   +-- Trapezoidal NNP nn
 |   +-- Scheduling VBG dep
 |   |   +-- Scheduling NNP dobj
 |   |       +-- Trapezoidal NNP nn
 |   |       +-- Self , nn
 |   +-- -LRB- -LRB- punct
 |   +-- 16 CD dep
 |   +-- -RRB- -RRB- punct
 +-- units NNS dobj
 |   +-- work NN nn
 |   +-- in IN prep
 |       +-- groups NNS pobj
 +-- with IN prep
 |   +-- size NN pobj
 |       +-- a DT det
 |       +-- decreasing VBG amod
 |           +-- linearly RB advmod
 +-- . . punct
