
1
Input: Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science .
Parse:
one CD ROOT
 +-- Elucidation NN nsubj
 |   +-- of IN prep
 |       +-- conformations NNS pobj
 |           +-- the DT det
 |           +-- stable JJ amod
 |           +-- and CC cc
 |           +-- process NN conj
 |               +-- the DT det
 |               +-- folding JJ amod
 |               +-- of IN prep
 |                   +-- proteins NNS pobj
 +-- is VBZ cop
 +-- of IN prep
 |   +-- goals NNS pobj
 |       +-- the DT det
 |       +-- fundamental JJ amod
 |       |   +-- most RBS advmod
 |       |   +-- and CC cc
 |       |   +-- challenging JJ conj
 |       +-- in IN prep
 |           +-- science NN pobj
 |               +-- life NN nn
 +-- . . punct

2
Input: While some of the most common secondary structures -LRB- e.g. , certain types of helix , the beta strand , and the coil -RRB- are well known , precise analysis of the thousands of chemically important conformers and pico second order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond order investigation of the folding process toward the tertiary structure formations .
Parse:
analysis NN ROOT
 +-- known VBN advcl
 |   +-- While IN mark
 |   +-- some DT nsubjpass
 |   |   +-- of IN prep
 |   |       +-- structures NNS pobj
 |   |           +-- the DT det
 |   |           +-- common JJ amod
 |   |           |   +-- most RBS advmod
 |   |           +-- secondary JJ amod
 |   |           +-- types NNS appos
 |   |               +-- -LRB- -LRB- punct
 |   |               +-- e.g. JJ amod
 |   |               +-- , , punct
 |   |               +-- certain JJ amod
 |   |               +-- of IN prep
 |   |               |   +-- helix NN pobj
 |   |               +-- strand NN conj
 |   |               |   +-- the DT det
 |   |               |   +-- beta NN nn
 |   |               +-- and CC cc
 |   |               +-- coil NN conj
 |   |               |   +-- the DT det
 |   |               +-- -RRB- -RRB- punct
 |   +-- are VBP auxpass
 |   +-- well RB advmod
 +-- , , punct
 +-- precise JJ amod
 +-- of IN prep
 |   +-- thousands NNS pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- conformers NNS pobj
 |               +-- important JJ amod
 |                   +-- chemically RB advmod
 +-- and CC cc
 +-- pico NN conj
 +-- analysis NN dobj
 |   +-- second JJ amod
 |   +-- order NN nn
 |   +-- of IN prep
 |       +-- interconversions NNS pobj
 |           +-- their PRP$ poss
 |           +-- conformational JJ amod
 +-- required VBN advcl
 |   +-- via IN mark
 |   +-- states VBZ nsubjpass
 |   |   +-- the DT det
 |   |   +-- transition NN nn
 |   |   +-- on IN prep
 |   |       +-- surface NN pobj
 |   |           +-- the DT det
 |   |           +-- potential JJ amod
 |   |           +-- energy NN nn
 |   +-- are VBP auxpass
 |   +-- for IN prep
 |       +-- investigation NN pobj
 |           +-- the DT det
 |           +-- microsecond JJ amod
 |           +-- order NN nn
 |           +-- of IN prep
 |               +-- process NN pobj
 |                   +-- the DT det
 |                   +-- folding JJ amod
 |                   +-- toward IN prep
 |                       +-- formations NNS pobj
 |                           +-- the DT det
 |                           +-- structure NN nn
 |                               +-- tertiary JJ amod
 +-- . . punct

3
Input: Recently , the concept of the computational grid has begun to attract significant interest in the field of high performance network computing .
Parse:
begun VBN ROOT
 +-- Recently RB advmod
 +-- , , punct
 +-- concept NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- grid NN pobj
 |           +-- the DT det
 |           +-- computational JJ amod
 +-- has VBZ aux
 +-- attract VB xcomp
 |   +-- to TO aux
 |   +-- interest NN dobj
 |       +-- significant JJ amod
 |       +-- in IN prep
 |           +-- field NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- computing NN pobj
 |                       +-- network NN nn
 |                           +-- performance NN nn
 |                               +-- high JJ amod
 +-- . . punct

4
Input: Rapid advances in wide area networking technology and infrastructure have made it possible to construct large scale , high performance distributed computing environments , or computational grids , that provide dependable , consistent and pervasive access to enormous computational resources .
Parse:
made VBN ROOT
 +-- advances NNS nsubj
 |   +-- Rapid JJ amod
 |   +-- in IN prep
 |       +-- technology NN pobj
 |           +-- area NN nn
 |           |   +-- wide JJ amod
 |           +-- networking NN nn
 |           +-- and CC cc
 |           +-- infrastructure NN conj
 +-- have VBP aux
 +-- construct VB xcomp
 |   +-- it PRP nsubj
 |   +-- possible JJ dep
 |   +-- to TO aux
 |   +-- scale NN dobj
 |       +-- large JJ amod
 |       +-- , , punct
 |       +-- environments NNS conj
 |       |   +-- distributed VBN amod
 |       |   |   +-- performance NN dep
 |       |   |       +-- high JJ amod
 |       |   +-- computing NN nn
 |       +-- or CC cc
 |       +-- grids NNS conj
 |       |   +-- computational JJ amod
 |       +-- provide VBP rcmod
 |           +-- that WDT nsubj
 |           +-- access NN dobj
 |               +-- dependable JJ amod
 |               |   +-- , , punct
 |               |   +-- consistent JJ conj
 |               |   +-- and CC cc
 |               |   +-- pervasive JJ conj
 |               +-- to IN prep
 |                   +-- resources NNS pobj
 |                       +-- enormous JJ amod
 |                       +-- computational JJ amod
 +-- . . punct

5
Input: CONFLEX is one of the most efficient and reliable conformational space search programs -LRB- 1 -RRB- .
Parse:
one CD ROOT
 +-- CONFLEX NNP nsubj
 +-- is VBZ cop
 +-- of IN prep
 |   +-- programs NNS pobj
 |       +-- the DT det
 |       +-- efficient JJ amod
 |       |   +-- most RBS advmod
 |       |   +-- and CC cc
 |       |   +-- reliable JJ conj
 |       +-- conformational JJ amod
 |       +-- search NN nn
 |       |   +-- space NN nn
 |       +-- 1 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

6
Input: We have applied this 154 program to parallelization using global computing .
Parse:
applied VBN ROOT
 +-- We PRP nsubj
 +-- have VBP aux
 +-- program NN dobj
 |   +-- this DT det
 |   +-- 154 CD num
 +-- parallelization VB xcomp
 |   +-- to TO aux
 |   +-- using VBG xcomp
 |       +-- computing NN dobj
 |           +-- global JJ amod
 +-- . . punct

7
Input: The performance of the parallelized CONFLEX enables exploration of the lower energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster .
Parse:
enables VBZ ROOT
 +-- performance NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- CONFLEX NNP pobj
 |           +-- the DT det
 |           +-- parallelized VBN amod
 +-- exploration NN dobj
 |   +-- of IN prep
 |       +-- region NN pobj
 |           +-- the DT det
 |           +-- lower JJR amod
 |           +-- energy NN nn
 |           +-- of IN prep
 |               +-- space NN pobj
 |                   +-- the DT det
 |                   +-- conformational JJ amod
 |                   +-- of IN prep
 |                       +-- peptides NNS pobj
 |                           +-- small JJ amod
 +-- within IN prep
 |   +-- time NN pobj
 |       +-- an DT det
 |       +-- available JJ amod
 |       +-- elapsed VBN amod
 +-- using VBG xcomp
 |   +-- cluster NN dobj
 |       +-- a DT det
 |       +-- local JJ amod
 |       +-- PC NN nn
 +-- . . punct

8
Input: Since trial structure optimization in CONFLEX is calculated via molecular mechanics , conformational space search can be performed quickly compared to that using molecular orbital calculation .
Parse:
performed VBN ROOT
 +-- calculated VBN advcl
 |   +-- Since IN mark
 |   +-- optimization NN nsubjpass
 |   |   +-- structure NN nn
 |   |   |   +-- trial NN nn
 |   |   +-- in IN prep
 |   |       +-- CONFLEX NNP pobj
 |   +-- is VBZ auxpass
 |   +-- via IN prep
 |       +-- mechanics NNS pobj
 |           +-- molecular JJ amod
 +-- , , punct
 +-- search NN nsubjpass
 |   +-- conformational JJ amod
 |   +-- space NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- quickly RB advmod
 +-- compared VBN prep
 |   +-- to IN pcomp
 |       +-- that DT pobj
 |           +-- using VBG partmod
 |               +-- calculation NN dobj
 |                   +-- molecular JJ amod
 |                   +-- orbital JJ amod
 +-- . . punct

9
Input: Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization , which takes up over 90 % of the processing in the molecular conformation search , sufficient improvement in the speedup could not be achieved by this method alone .
Parse:
achieved VBN ROOT
 +-- used VBN advcl
 |   +-- Although IN mark
 |   +-- version NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- parallelized VBN amod
 |   |   +-- of IN prep
 |   |       +-- CONFLEX NNP pobj
 |   +-- was VBD auxpass
 |   +-- calculate VB xcomp
 |       +-- to TO aux
 |       +-- in IN prep
 |       |   +-- parallel JJ pobj
 |       +-- optimization NN dobj
 |           +-- the DT det
 |           +-- structure NN nn
 |           +-- , , punct
 |           +-- takes VBZ rcmod
 |               +-- which WDT nsubj
 |               +-- % NN dobj
 |               |   +-- 90 CD num
 |               |   |   +-- over IN quantmod
 |               |   |       +-- up RP dep
 |               |   +-- of IN prep
 |               |       +-- processing NN pobj
 |               |           +-- the DT det
 |               +-- in IN prep
 |                   +-- search NN pobj
 |                       +-- the DT det
 |                       +-- molecular JJ amod
 |                       +-- conformation NN nn
 +-- , , punct
 +-- improvement NN nsubjpass
 |   +-- sufficient JJ amod
 |   +-- in IN prep
 |       +-- speedup NN pobj
 |           +-- the DT det
 +-- could MD aux
 +-- not RB neg
 +-- be VB auxpass
 +-- by IN prep
 |   +-- method NN pobj
 |       +-- this DT det
 |       +-- alone RB advmod
 +-- . . punct

10
Input: Therefore , for high polymers from live organisms , such as HIV protease , the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures .
Parse:
insufficient JJ ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- for IN prep
 |   +-- polymers NNS pobj
 |       +-- high JJ amod
 |       +-- from IN prep
 |       |   +-- organisms NNS pobj
 |       |       +-- live JJ amod
 |       +-- , , punct
 |       +-- as IN prep
 |           +-- such JJ mwe
 |           +-- protease NN pobj
 |               +-- HIV NNP nn
 +-- use NN nsubj
 |   +-- the DT det
 |   +-- cluster NN dep
 |       +-- one CD num
 |       +-- PC NN nn
 +-- is VBZ cop
 +-- to IN prep
 |   +-- due IN mwe
 |   +-- requirement NN pobj
 |       +-- the DT det
 |       +-- for IN prep
 |           +-- optimization NN pobj
 |               +-- of IN prep
 |                   +-- number NN pobj
 |                       +-- a DT det
 |                       +-- huge JJ amod
 |                       +-- of IN prep
 |                           +-- structures NNS pobj
 |                               +-- trial NN nn
 +-- . . punct

11
Input: This requires the vast computer resources of a grid computing environment .
Parse:
requires VBZ ROOT
 +-- This DT nsubj
 +-- resources NNS dobj
 |   +-- the DT det
 |   +-- vast JJ amod
 |   +-- computer NN nn
 |   +-- of IN prep
 |       +-- environment NN pobj
 |           +-- a DT det
 |           +-- computing NN nn
 |               +-- grid NN nn
 +-- . . punct

12
Input: In this paper , we describe CONFLEX G , a grid enabled molecular conformational search program , using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed .
Parse:
describe VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- G NNP dobj
 |   +-- CONFLEX NNP nn
 |   +-- , , punct
 |   +-- program NN appos
 |       +-- a DT det
 |       +-- enabled VBD amod
 |       |   +-- grid NN dep
 |       +-- molecular JJ amod
 |       +-- conformational JJ amod
 |       +-- search NN nn
 +-- using VBG xcomp
 |   +-- OmniRPC NNP dobj
 +-- and CC cc
 +-- report VB conj
 |   +-- performance NN dobj
 |   |   +-- its PRP$ poss
 |   +-- in IN prep
 |       +-- grid NN pobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- clusters NNS pobj
 |                   +-- several JJ amod
 |                   +-- PC NN nn
 |                   +-- distributed VBN rcmod
 |                       +-- which WDT nsubjpass
 |                       +-- are VBP auxpass
 |                       +-- geographically RB advmod
 +-- . . punct

13
Input: The prototype CONFLEX G allocates calculation trial structures optimization , which is a very time consuming task , to worker nodes in the grid environment in order to obtain high throughput .
Parse:
allocates VBZ ROOT
 +-- G NNP nsubj
 |   +-- The DT det
 |   +-- prototype NN nn
 |   +-- CONFLEX NNP nn
 +-- optimization NN dobj
 |   +-- calculation NN nn
 |   +-- structures NNS nn
 |   |   +-- trial NN nn
 |   +-- , , punct
 |   +-- task NN rcmod
 |       +-- which WDT nsubj
 |       +-- is VBZ cop
 |       +-- a DT det
 |       +-- time NN nn
 |       |   +-- very JJ amod
 |       +-- consuming VBG amod
 |       +-- , , punct
 |       +-- to IN prep
 |       |   +-- nodes NNS pobj
 |       |       +-- worker NN nn
 |       |       +-- in IN prep
 |       |           +-- environment NN pobj
 |       |               +-- the DT det
 |       |               +-- grid NN nn
 |       +-- obtain VB advcl
 |           +-- in IN mark
 |           +-- order NN dep
 |           +-- to TO aux
 |           +-- throughput NN dobj
 |               +-- high JJ amod
 +-- . . punct

14
Input: In addition , we compare the performance of CONFLEX G in a local PC cluster to that in a grid testbed .
Parse:
compare VBP ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- performance NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- G NNP pobj
 |   |       +-- CONFLEX NNP nn
 |   +-- in IN prep
 |       +-- cluster NN pobj
 |           +-- a DT det
 |           +-- local JJ amod
 |           +-- PC NN nn
 +-- to IN prep
 |   +-- that DT pobj
 |       +-- in IN prep
 |           +-- testbed VBN pobj
 |               +-- a DT det
 |               +-- grid NN nn
 +-- . . punct

15
Input: OmniRPC -LRB- 2 , 3 , 4 -RRB- is a thread safe implementation of Ninf RPC -LRB- 5 , 6 -RRB- which is a Grid RPC facility for grid environment computing .
Parse:
thread NN ROOT
 +-- OmniRPC NNP nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- 2 CD dep
 |   |   +-- , , punct
 |   |   +-- 3 CD num
 |   |   +-- 4 CD num
 |   +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- a DT det
 +-- implementation NN partmod
 |   +-- safe JJ amod
 |   +-- of IN prep
 |       +-- RPC NNP pobj
 |           +-- Ninf NNP nn
 |           +-- -LRB- -LRB- punct
 |           +-- 5 CD num
 |           +-- , , punct
 |           +-- 6 CD num
 |           +-- -RRB- -RRB- punct
 |           +-- facility NN rcmod
 |               +-- which WDT nsubj
 |               +-- is VBZ cop
 |               +-- a DT det
 |               +-- Grid NNP nn
 |               +-- RPC NNP nn
 |               +-- for IN prep
 |                   +-- computing VBG pobj
 |                       +-- environment NN nn
 |                           +-- grid NN nn
 +-- . . punct

16
Input: Several systems adopt the concept of the RPC as the basic model for grid environment computing , including Ninf G -LRB- 7 -RRB- , NetSolve -LRB- 8 -RRB- and CORBA -LRB- 9 -RRB- .
Parse:
adopt VBP ROOT
 +-- systems NNS nsubj
 |   +-- Several JJ amod
 +-- concept NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- RPC NNP pobj
 |           +-- the DT det
 +-- as IN prep
 |   +-- model NN pobj
 |       +-- the DT det
 |       +-- basic JJ amod
 |       +-- for IN prep
 |       |   +-- computing NN pobj
 |       |       +-- environment NN nn
 |       |           +-- grid NN nn
 |       +-- , , punct
 |       +-- including VBG prep
 |           +-- G NNP pobj
 |               +-- Ninf NNP nn
 |               +-- 7 CD appos
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- -RRB- -RRB- punct
 |               +-- , , punct
 |               +-- NetSolve NNP conj
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- 8 CD dep
 |               |   +-- -RRB- -RRB- punct
 |               +-- and CC cc
 |               +-- CORBA NNP conj
 |                   +-- -LRB- -LRB- punct
 |                   +-- 9 CD dep
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

17
Input: The RPCstyle system provides an easy to use , intuitive programming interface , allowing users of the grid system to easily create grid enabled applications .
Parse:
provides VBZ ROOT
 +-- system NN nsubj
 |   +-- The DT det
 |   +-- RPCstyle NN nn
 +-- interface NN dobj
 |   +-- an DT det
 |   +-- easy JJ amod
 |   |   +-- use VB ccomp
 |   |       +-- to TO aux
 |   +-- , , punct
 |   +-- intuitive JJ amod
 |   +-- programming NN nn
 +-- , , punct
 +-- allowing VBG partmod
 |   +-- create VB xcomp
 |       +-- users NNS nsubj
 |       |   +-- of IN prep
 |       |       +-- system NN pobj
 |       |           +-- the DT det
 |       |           +-- grid NN nn
 |       +-- to TO aux
 |       +-- easily RB advmod
 |       +-- applications NNS dobj
 |           +-- enabled VBN amod
 |               +-- grid NN dep
 +-- . . punct

18
Input: In order to support parallel programming , an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC .
Parse:
issue VB ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- support VB infmod
 |           +-- to TO aux
 |           +-- programming NN dobj
 |               +-- parallel JJ amod
 +-- , , punct
 +-- client NN nsubj
 |   +-- an DT det
 |   +-- RPC JJ amod
 +-- can MD aux
 +-- requests NNS dobj
 |   +-- asynchronous JJ amod
 |   +-- call VB nn
 +-- to IN prep
 |   +-- computer NN pobj
 |       +-- a DT det
 |       +-- different JJ amod
 |       +-- remote JJ amod
 +-- exploit VB xcomp
 |   +-- to TO aux
 |   +-- parallelism NN dobj
 |       +-- networkwide JJ amod
 |       +-- via IN prep
 |           +-- OmniRPC NNP pobj
 +-- . . punct

19
Input: In this paper , we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness .
Parse:
propose VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- model NN dobj
 |   +-- the DT det
 |   +-- OmniRPC NNP nn
 |   +-- persistence NN nn
 +-- to IN prep
 |   +-- system NN pobj
 |       +-- a DT det
 |       +-- RPC NNP nn
 |           +-- Grid NNP nn
 +-- and CC cc
 +-- demonstrate VB conj
 |   +-- effectiveness NN dobj
 |       +-- its PRP$ poss
 +-- . . punct

20
Input: In order to support a typical application for a grid environment , such as a parametric search application , in which the same function is executed with different input parameters on the same data set .
Parse:
In IN ROOT
 +-- order NN pobj
 |   +-- support VB infmod
 |       +-- to TO aux
 |       +-- application NN dobj
 |           +-- a DT det
 |           +-- typical JJ amod
 |           +-- for IN prep
 |           |   +-- environment NN pobj
 |           |       +-- a DT det
 |           |       +-- grid NN nn
 |           +-- , , punct
 |           +-- as IN prep
 |           |   +-- such JJ mwe
 |           |   +-- application NN pobj
 |           |       +-- a DT det
 |           |       +-- parametric JJ amod
 |           |       +-- search NN nn
 |           +-- executed VBN rcmod
 |               +-- in IN prep
 |               |   +-- which WDT pobj
 |               +-- function NN nsubjpass
 |               |   +-- the DT det
 |               |   +-- same JJ amod
 |               +-- is VBZ auxpass
 |               +-- with IN prep
 |                   +-- parameters NNS pobj
 |                       +-- different JJ amod
 |                       +-- input NN nn
 |                       +-- on IN prep
 |                           +-- set VBN pobj
 |                               +-- the DT det
 |                               +-- same JJ amod
 |                               +-- data NNS nn
 +-- . . punct

21
Input: In the current GridRPC system -LRB- 10 -RRB- , the data set by the previous call can not be used by subsequent calls .
Parse:
used VBN ROOT
 +-- In IN prep
 |   +-- system NN pobj
 |       +-- the DT det
 |       +-- current JJ amod
 |       +-- GridRPC NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- 10 CD dep
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- data NNS nsubjpass
 |   +-- the DT det
 |   +-- set VBN partmod
 |       +-- by IN prep
 |           +-- call NN pobj
 |               +-- the DT det
 |               +-- previous JJ amod
 +-- can MD aux
 +-- not RB neg
 +-- be VB auxpass
 +-- by IN prep
 |   +-- calls NNS pobj
 |       +-- subsequent JJ amod
 +-- . . punct

22
Input: In the OmniRPC system , once a remote executable is invoked , the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call .
Parse:
attempts VBZ ROOT
 +-- In IN prep
 |   +-- system NN pobj
 |       +-- the DT det
 |       +-- OmniRPC NNP nn
 +-- , , punct
 +-- invoked VBN advcl
 |   +-- once IN mark
 |   +-- executable NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- remote JJ amod
 |   +-- is VBZ auxpass
 +-- client NN nsubj
 |   +-- the DT det
 +-- use VB xcomp
 |   +-- to TO aux
 |   +-- executable JJ dobj
 |   |   +-- the DT det
 |   |   +-- invoked VBN amod
 |   |   +-- remote JJ amod
 |   |   +-- and CC cc
 |   |   +-- state NN conj
 |   |       +-- its PRP$ poss
 |   |       +-- initialized VBN amod
 |   +-- for IN prep
 |       +-- calls VBZ pobj
 |           +-- subsequent JJ amod
 |           +-- RPC NNP nn
 |           +-- to IN prep
 |           |   +-- functions NNS pobj
 |           |       +-- the DT det
 |           |       +-- same JJ amod
 |           |       +-- remote JJ amod
 |           +-- in IN prep
 |               +-- order NN pobj
 |                   +-- eliminate VB infmod
 |                       +-- to TO aux
 |                       +-- cost NN dobj
 |                           +-- the DT det
 |                           +-- invocation NN nn
 |                           +-- of IN prep
 |                               +-- call NN pobj
 |                                   +-- each DT det
 +-- . . punct

23
Input: This paper demonstrates that CONFLEX G is able to exploit the huge computer resources of a grid environment and search large scale molecular conformers .
Parse:
demonstrates VBZ ROOT
 +-- paper NN nsubj
 |   +-- This DT det
 +-- able JJ ccomp
 |   +-- that IN mark
 |   +-- G NNP nsubj
 |   |   +-- CONFLEX NNP nn
 |   +-- is VBZ cop
 |   +-- exploit VB xcomp
 |       +-- to TO aux
 |       +-- resources NNS dobj
 |       |   +-- the DT det
 |       |   +-- huge JJ amod
 |       |   +-- computer NN nn
 |       |   +-- of IN prep
 |       |       +-- environment NN pobj
 |       |           +-- a DT det
 |       |           +-- grid NN nn
 |       +-- and CC cc
 |       +-- search VB conj
 |           +-- conformers NNS dobj
 |               +-- scale NN nn
 |               |   +-- large JJ amod
 |               +-- molecular JJ amod
 +-- . . punct

24
Input: We demonstrate CONFLEX G on our grid testbed using the actual protein as a sample molecule .
Parse:
demonstrate VBP ROOT
 +-- We PRP nsubj
 +-- testbed VBN ccomp
 |   +-- G NNP nsubj
 |   |   +-- CONFLEX FW nn
 |   |   +-- on IN prep
 |   |       +-- grid NN pobj
 |   |           +-- our PRP$ poss
 |   +-- using VBG xcomp
 |       +-- protein NN dobj
 |       |   +-- the DT det
 |       |   +-- actual JJ amod
 |       +-- as IN prep
 |           +-- molecule NN pobj
 |               +-- a DT det
 |               +-- sample JJ amod
 +-- . . punct

25
Input: The OmniRPC facility of the automatic initializable module allows the system to efficiently calculate numerous conformers .
Parse:
allows VBZ ROOT
 +-- facility NN nsubj
 |   +-- The DT det
 |   +-- OmniRPC NNP nn
 |   +-- of IN prep
 |       +-- module NN pobj
 |           +-- the DT det
 |           +-- automatic JJ amod
 |           +-- initializable JJ amod
 +-- calculate VB xcomp
 |   +-- system NN nsubj
 |   |   +-- the DT det
 |   +-- to TO aux
 |   +-- efficiently RB advmod
 |   +-- conformers NNS dobj
 |       +-- numerous JJ amod
 +-- . . punct

26
Input: Furthermore , by using OmniRPC , the user can grid parallelize the existing application , and move from the cluster to the grid environment without modifying program code and compiling the program .
Parse:
grid VB ROOT
 +-- Furthermore RB advmod
 +-- , , punct
 +-- by IN prep
 |   +-- using VBG pcomp
 |       +-- OmniRPC NNP dobj
 +-- user NN nsubj
 |   +-- the DT det
 +-- can MD aux
 +-- parallelize VB conj
 |   +-- application NN dobj
 |       +-- the DT det
 |       +-- existing VBG amod
 +-- and CC cc
 +-- move VB conj
 |   +-- from IN prep
 |   |   +-- cluster NN pobj
 |   |       +-- the DT det
 |   +-- to IN prep
 |   |   +-- environment NN pobj
 |   |       +-- the DT det
 |   |       +-- grid NN nn
 |   +-- without IN prep
 |       +-- modifying VBG pcomp
 |           +-- code NN dobj
 |           |   +-- program NN nn
 |           +-- and CC cc
 |           +-- compiling VBG conj
 |               +-- program NN dobj
 |                   +-- the DT det
 +-- . . punct

27
Input: In addition , the user can easily build a private grid environment .
Parse:
build VB ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 +-- , , punct
 +-- user NN nsubj
 |   +-- the DT det
 +-- can MD aux
 +-- easily RB advmod
 +-- environment NN dobj
 |   +-- a DT det
 |   +-- private JJ amod
 |   +-- grid NN nn
 +-- . . punct

28
Input: The rest of this paper is organized as follows .
Parse:
organized VBN ROOT
 +-- rest NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- paper NN pobj
 |           +-- this DT det
 +-- is VBZ auxpass
 +-- follows VBZ advcl
 |   +-- as IN mark
 +-- . . punct

29
Input: An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1
Parse:
Selection NNP ROOT
 +-- An DT det
 +-- overview JJ amod
 +-- of IN prep
     +-- Initial NNP pobj
         +-- Database NNP dep
         |   +-- Structure NNP nn
         |   +-- Conformations NNPS nn
         |   +-- Local JJ prep
         |       +-- Comparison NNP pobj
         |           +-- Perturbation NNP nn
         |           +-- Geometry NNP nn
         |           +-- Optimization NNP nn
         |           +-- and CC cc
         |           +-- Figure NN conj
         |               +-- Registration NNP nn
         +-- 1 CD num

30
Input: of the CONFLEX system is presented in Section2 , and the implementation and design of CONFLEX G are described in Section 3 .
Parse:
presented VBN ROOT
 +-- of IN nsubjpass
 |   +-- system NN pobj
 |       +-- the DT det
 |       +-- CONFLEX NNP nn
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- Section2 NNP pobj
 +-- , , punct
 +-- and CC cc
 +-- described VBN conj
 |   +-- implementation NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- and CC cc
 |   |   +-- design NN conj
 |   |   +-- of IN prep
 |   |       +-- G NNP pobj
 |   |           +-- CONFLEX NNP nn
 |   +-- are VBP auxpass
 |   +-- in IN prep
 |       +-- Section NN pobj
 |           +-- 3 CD num
 +-- . . punct

31
Input: We report experimental results obtained using CONFLEX G and discuss its performance in Section 4 .
Parse:
report VBP ROOT
 +-- We PRP nsubj
 +-- results NNS dobj
 |   +-- experimental JJ amod
 |   +-- obtained VBD partmod
 |       +-- using VBG xcomp
 |           +-- G NNP dobj
 |               +-- CONFLEX NNP nn
 +-- and CC cc
 +-- discuss VB conj
 |   +-- performance NN dobj
 |       +-- its PRP$ poss
 |       +-- in IN prep
 |           +-- Section NN pobj
 |               +-- 4 CD num
 +-- . . punct

32
Input: In Section 6 , we present conclusions and discuss subjects for future study. .
Parse:
present JJ ROOT
 +-- In IN prep
 |   +-- Section NN pobj
 |       +-- 6 CD num
 +-- , , punct
 +-- we PRP nsubj
 +-- conclusions NNS dobj
 +-- and CC cc
 +-- discuss VB conj
 |   +-- subjects NNS dobj
 |       +-- for IN prep
 |           +-- study. NN pobj
 |               +-- future JJ amod
 +-- . . punct
