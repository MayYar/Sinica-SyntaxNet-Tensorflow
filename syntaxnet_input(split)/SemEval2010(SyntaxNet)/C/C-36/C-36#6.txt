
1
Input: In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish subscribe middleware .
Parse:
implemented VBN ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- evaluate VB infmod
 |           +-- to TO aux
 |           +-- performance NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- encryption NN pobj
 |                       +-- event NN nn
 |                       +-- content NN nn
 +-- we PRP nsubj
 +-- have VBP aux
 +-- publish VBP ccomp
 |   +-- approaches NNS nsubj
 |   |   +-- both DT det
 |   |   +-- encryption NN nn
 |   |   +-- running VBG partmod
 |   |       +-- over IN prep
 |   |           +-- implementation NN pobj
 |   |               +-- our PRP$ poss
 |   |               +-- of IN prep
 |   |                   +-- Hermes NNPS pobj
 |   |                       +-- the DT det
 |   +-- middleware NN dobj
 |       +-- subscribe NN nn
 +-- . . punct

2
Input: The implementation supports three modes
Parse:
supports VBZ ROOT
 +-- implementation NN nsubj
 |   +-- The DT det
 +-- modes NNS dobj
     +-- three CD num

3
Input: We ran three performance tests in a discrete event simulator .
Parse:
ran VBD ROOT
 +-- We PRP nsubj
 +-- tests NNS dobj
 |   +-- three CD num
 |   +-- performance NN nn
 +-- in IN prep
 |   +-- simulator NN pobj
 |       +-- a DT det
 |       +-- discrete JJ amod
 |       +-- event NN nn
 +-- . . punct

4
Input: The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory .
Parse:
run VBN ROOT
 +-- simulator NN nsubjpass
 |   +-- The DT det
 +-- was VBD auxpass
 +-- on IN prep
 |   +-- workstation NN pobj
 |       +-- an DT det
 |       +-- P4 CD nn
 |       |   +-- Intel NNP nn
 |       +-- 3.2GHz CD nn
 |       +-- with IN prep
 |           +-- 1GB CD pobj
 |               +-- of IN prep
 |                   +-- memory NN pobj
 |                       +-- main JJ amod
 +-- . . punct

5
Input: We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system .
Parse:
decided VBD ROOT
 +-- We PRP nsubj
 +-- run VB xcomp
 |   +-- to TO aux
 |   +-- tests NNS dobj
 |   |   +-- the DT det
 |   +-- on IN prep
 |   |   +-- simulator NN pobj
 |   |       +-- an DT det
 |   |       +-- event NN nn
 |   |       +-- instead RB cc
 |   |       |   +-- of IN mwe
 |   |       +-- system NN conj
 |   |           +-- an DT det
 |   |           +-- actual JJ amod
 |   |           +-- deployed VBN amod
 |   +-- in IN prep
 |       +-- order NN pobj
 |           +-- able JJ infmod
 |               +-- to TO aux
 |               +-- be VB cop
 |               +-- measure VB xcomp
 |                   +-- to TO aux
 |                   +-- aggregate VB xcomp
 |                       +-- to TO aux
 |                       +-- time NN dobj
 |                           +-- takes VBZ rcmod
 |                               +-- it PRP nsubj
 |                               +-- handle VB xcomp
 |                                   +-- to TO aux
 |                                   +-- messages NNS dobj
 |                                   |   +-- all DT det
 |                                   +-- in IN prep
 |                                       +-- system NN pobj
 |                                           +-- the DT det
 +-- . . punct

6
Input: The following sections describe the specific test setups and the results in more detail .
Parse:
describe VBP ROOT
 +-- sections NNS nsubj
 |   +-- The DT det
 |   +-- following VBG amod
 +-- setups NNS dobj
 |   +-- the DT det
 |   +-- specific JJ amod
 |   +-- test NN nn
 |   +-- and CC cc
 |   +-- results NNS conj
 |       +-- the DT det
 |       +-- in IN prep
 |           +-- detail NN pobj
 |               +-- more JJR amod
 +-- . . punct

7
Input: 5.1 End to End Overhead The end to end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption .
Parse:
shows VBZ ROOT
 +-- End NN nsubj
 |   +-- 5.1 CD num
 |   +-- End VB infmod
 |       +-- to TO aux
 |       +-- Overhead NNP dobj
 |       +-- end NN advmod
 |       |   +-- The DT det
 |       +-- end VB xcomp
 |           +-- to TO aux
 |           +-- test NN dobj
 |               +-- overhead JJ amod
 +-- affected VBN ccomp
 |   +-- throughput NN nsubjpass
 |   |   +-- much JJ amod
 |   |   |   +-- how WRB advmod
 |   |   +-- the DT det
 |   |   +-- overall JJ amod
 |   |   +-- message NN nn
 |   |   +-- of IN prep
 |   |       +-- simulator NN pobj
 |   |           +-- the DT det
 |   +-- was VBD auxpass
 |   +-- by IN prep
 |       +-- encryption NN pobj
 |           +-- event NN nn
 |           +-- content NN nn
 +-- . . punct

8
Input: We formed a broker network with two brokers , attached a publisher to one of them and a subscriber to the other one .
Parse:
formed VBD ROOT
 +-- We PRP nsubj
 +-- network NN dobj
 |   +-- a DT det
 |   +-- broker NN nn
 +-- with IN prep
 |   +-- brokers NNS pobj
 |       +-- two CD num
 |       +-- , , punct
 |       +-- attached VBN partmod
 |           +-- publisher NN dobj
 |           |   +-- a DT det
 |           +-- to IN prep
 |               +-- one CD pobj
 |                   +-- of IN prep
 |                   |   +-- them PRP pobj
 |                   +-- and CC cc
 |                   +-- subscriber NN conj
 |                       +-- a DT det
 |                       +-- to IN prep
 |                           +-- one NN pobj
 |                               +-- the DT det
 |                               +-- other JJ amod
 +-- . . punct

9
Input: The subscriber subscribed to the advertised event type without any filters , i.e .
Parse:
subscribed VBD ROOT
 +-- subscriber NN nsubj
 |   +-- The DT det
 +-- to IN prep
 |   +-- type NN pobj
 |       +-- the DT det
 |       +-- advertised JJ amod
 |       +-- event NN nn
 +-- without IN prep
 |   +-- filters NNS pobj
 |       +-- any DT det
 |       +-- , , punct
 |       +-- i.e NN appos
 +-- . . punct

10
Input: each publication matched the subscriber '' s publication and thus was delivered to the subscriber .
Parse:
matched VBD ROOT
 +-- publication NN nsubj
 |   +-- each DT det
 +-- publication NN dobj
 |   +-- subscriber NN poss
 |       +-- the DT det
 |       +-- '' '' punct
 |       +-- s POS possessive
 +-- and CC cc
 +-- thus RB advmod
 +-- delivered VBN conj
 |   +-- was VBD auxpass
 |   +-- to IN prep
 |       +-- subscriber NN pobj
 |           +-- the DT det
 +-- . . punct

11
Input: The test measures the combined time it takes to publish and deliver 100 , 000 events .
Parse:
measures VBZ ROOT
 +-- test NN nsubj
 |   +-- The DT det
 +-- time NN dobj
 |   +-- the DT det
 |   +-- combined VBN amod
 |   +-- takes VBZ rcmod
 |   |   +-- it PRP nsubj
 |   +-- publish VB infmod
 |       +-- to TO aux
 |       +-- and CC cc
 |       +-- deliver VB conj
 |       +-- events NNS dobj
 |           +-- 000 CD num
 |               +-- 100 CD number
 |               +-- , , punct
 +-- . . punct

12
Input: If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB .
Parse:
includes VBZ ROOT
 +-- encrypted VBN advcl
 |   +-- If IN mark
 |   +-- content NN nsubjpass
 |   |   +-- the DT det
 |   +-- is VBZ auxpass
 +-- this DT nsubj
 +-- encrypting VBG dobj
 |   +-- both DT preconj
 |   +-- content NN dobj
 |   |   +-- the DT det
 |   +-- at IN prep
 |   |   +-- PHB NNP pobj
 |   |       +-- the DT det
 |   +-- and CC cc
 |   +-- decrypting VBG conj
 |       +-- it PRP dobj
 |       +-- at IN prep
 |           +-- SHB NN pobj
 |               +-- the DT det
 +-- . . punct

13
Input: In the test the number of attributes in the event type is increased from 1 to 25 -LRB- the x axis -RRB- .
Parse:
increased VBN ROOT
 +-- In IN prep
 |   +-- test NN pobj
 |       +-- the DT det
 +-- number NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- attributes NNS pobj
 |           +-- in IN prep
 |               +-- type NN pobj
 |                   +-- the DT det
 |                   +-- event NN nn
 +-- is VBZ auxpass
 +-- from IN prep
 |   +-- 1 CD pobj
 +-- to IN prep
 |   +-- 25 CD pobj
 |       +-- -LRB- -LRB- punct
 |       +-- axis NN dep
 |       |   +-- the DT det
 |       |   +-- x SYM nn
 |       +-- -RRB- -RRB- punct
 +-- . . punct

14
Input: Each attribute is set to a 30 character string .
Parse:
set VBN ROOT
 +-- attribute NN nsubjpass
 |   +-- Each DT det
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- string NN pobj
 |       +-- a DT det
 |       +-- 30 CD num
 |       +-- character NN nn
 +-- . . punct

15
Input: For each number of attributes in the event type the publisher publishes 100 , 000 events , and the elapsed time is measured to derive the message throughput .
Parse:
type VB ROOT
 +-- For IN mark
 +-- number NN nsubj
 |   +-- each DT det
 |   +-- of IN prep
 |       +-- attributes NNS pobj
 |           +-- in IN prep
 |               +-- event NN pobj
 |                   +-- the DT det
 +-- publishes VBZ ccomp
 |   +-- publisher NN nsubj
 |   |   +-- the DT det
 |   +-- events NNS dobj
 |       +-- 100 CD num
 |           +-- , , punct
 |           +-- 000 CD conj
 +-- , , punct
 +-- and CC cc
 +-- measured VBN conj
 |   +-- time NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- elapsed VBN amod
 |   +-- is VBZ auxpass
 |   +-- derive VB xcomp
 |       +-- to TO aux
 |       +-- throughput NN dobj
 |           +-- the DT det
 |           +-- message NN nn
 +-- . . punct

16
Input: The test was repeated five times for each number of attributes and we use the average of all iterations in the graph , but the results were highly consistent so the standard deviation is not shown .
Parse:
repeated VBN ROOT
 +-- test NN nsubjpass
 |   +-- The DT det
 +-- was VBD auxpass
 +-- times NNS dobj
 |   +-- five CD num
 +-- for IN prep
 |   +-- number NN pobj
 |       +-- each DT det
 |       +-- of IN prep
 |           +-- attributes NNS pobj
 +-- and CC cc
 +-- use VBP conj
 |   +-- we PRP nsubj
 |   +-- average NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- iterations NNS pobj
 |   |           +-- all DT det
 |   +-- in IN prep
 |       +-- graph NN pobj
 |           +-- the DT det
 +-- , , punct
 +-- but CC cc
 +-- consistent JJ conj
 |   +-- results NNS nsubj
 |   |   +-- the DT det
 |   +-- were VBD cop
 |   +-- highly RB advmod
 |   +-- so IN cc
 |   +-- shown VBN conj
 |       +-- deviation NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- standard JJ amod
 |       +-- is VBZ auxpass
 |       +-- not RB neg
 +-- . . punct

17
Input: The same tests were run with no content encryption , event encryption , and attribute encryption .
Parse:
run VBN ROOT
 +-- tests NNS nsubjpass
 |   +-- The DT det
 |   +-- same JJ amod
 +-- were VBD auxpass
 +-- with IN prep
 |   +-- encryption NN pobj
 |       +-- no DT det
 |       +-- content NN nn
 |       +-- , , punct
 |       +-- encryption NN conj
 |       |   +-- event NN nn
 |       +-- and CC cc
 |       +-- attribute VB conj
 |           +-- encryption NN dobj
 +-- . . punct

18
Input: As can be seen in Fig .
Parse:
seen VBN ROOT
 +-- As IN nsubjpass
 +-- can MD aux
 +-- be VB auxpass
 +-- in IN prep
 |   +-- Fig NNP pobj
 +-- . . punct

19
Input: 6 , event content encryption introduces a large overhead compared to not using encryption .
Parse:
introduces VBZ ROOT
 +-- 6 CD nsubj
 +-- , , punct
 +-- encryption NN nsubj
 |   +-- event NN nn
 |   +-- content NN nn
 +-- overhead NN dobj
 |   +-- a DT det
 |   +-- large JJ amod
 +-- compared VBN prep
 |   +-- to IN pcomp
 |       +-- using VBG pcomp
 |           +-- not RB neg
 |           +-- encryption NN dobj
 +-- . . punct

20
Input: The throughput when using attribute encryption with an event type with one attribute is 46 % of the throughput achieved when events are sent in plaintext .
Parse:
% NN ROOT
 +-- throughput NN nsubj
 |   +-- The DT det
 |   +-- attribute NN rcmod
 |       +-- when WRB advmod
 |       +-- using VBG nsubj
 |       +-- encryption NN dobj
 |       +-- with IN prep
 |           +-- type NN pobj
 |               +-- an DT det
 |               +-- event NN nn
 |               +-- with IN prep
 |                   +-- attribute NN pobj
 |                       +-- one CD num
 +-- is VBZ cop
 +-- 46 CD num
 +-- of IN prep
 |   +-- throughput NN pobj
 |       +-- the DT det
 |       +-- achieved VBN partmod
 |           +-- sent VBN advcl
 |               +-- when WRB advmod
 |               +-- events NNS nsubjpass
 |               +-- are VBP auxpass
 |               +-- in IN prep
 |                   +-- plaintext NN pobj
 +-- . . punct

21
Input: When the number of attributes increases the performance gap increases as well
Parse:
increases VBZ ROOT
 +-- When WRB advmod
 +-- number NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- attributes NNS pobj
 +-- increases NNS dobj
 |   +-- the DT det
 |   +-- gap NN nn
 |       +-- performance NN nn
 +-- well RB advmod
     +-- as RB advmod

22
Input: Event encryption fares better , because of fewer encryption operations .
Parse:
better RBR ROOT
 +-- fares NNS nsubj
 |   +-- Event NN nn
 |   +-- encryption NN nn
 +-- , , punct
 +-- of IN prep
 |   +-- because IN mwe
 |   +-- operations NNS pobj
 |       +-- fewer JJR amod
 |       +-- encryption NN nn
 +-- . . punct

23
Input: The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does .
Parse:
affect VB ROOT
 +-- increase NN nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- amount NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- data NNS pobj
 |                   +-- encrypted VBN amod
 +-- does VBZ aux
 +-- not RB neg
 +-- performance NN dobj
 |   +-- the DT det
 +-- much RB advmod
 |   +-- as RB advmod
 |   +-- does VBZ ccomp
 |       +-- as IN mark
 |       +-- number NN nsubj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- operations NNS pobj
 |                   +-- individual JJ amod
 |                   +-- encryption NN nn
 +-- . . punct

24
Input: The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism
Parse:
caused VBN ROOT
 +-- difference NN nsubjpass
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- performance NN pobj
 |           +-- with IN prep
 |               +-- encryption NN pobj
 |                   +-- event NN nn
 |                   +-- and CC cc
 |                   +-- attribute NN conj
 |                       +-- encryption NN dobj
 |                       +-- with IN prep
 |                           +-- attribute NN pobj
 |                               +-- one CD num
 |                                   +-- only RB quantmod
 +-- is VBZ auxpass
 +-- by IN prep
     +-- mechanism NN pobj
         +-- the DT det
         +-- Java NNP nn
         +-- object NN nn
         +-- serialisation NN nn

25
Input: A more efficient implementation would provide its own marshalling mechanism .
Parse:
provide VB ROOT
 +-- implementation NN nsubj
 |   +-- A DT det
 |   +-- efficient JJ amod
 |       +-- more RBR advmod
 +-- would MD aux
 +-- mechanism NN dobj
 |   +-- its PRP$ poss
 |   +-- own JJ amod
 |   +-- marshalling NN nn
 +-- . . punct

26
Input: Note that the EAX implementation we use runs the nonce -LRB- i.e .
Parse:
Note VB ROOT
 +-- runs VBZ ccomp
 |   +-- that IN mark
 |   +-- implementation NN nsubj
 |   |   +-- the DT det
 |   |   +-- EAX NN nn
 |   |   +-- use VBP rcmod
 |   |       +-- we PRP nsubj
 |   +-- i.e NN dobj
 |       +-- the DT det
 |       +-- nonce NN nn
 |       +-- -LRB- -LRB- punct
 +-- . . punct

27
Input: initialisation vector -RRB- through an OMAC construct to increase its randomness .
Parse:
vector NN ROOT
 +-- initialisation NN nn
 +-- -RRB- -RRB- punct
 +-- through IN prep
 |   +-- construct NN pobj
 |       +-- an DT det
 |       +-- OMAC JJ amod
 +-- increase VB infmod
 |   +-- to TO aux
 |   +-- randomness NN dobj
 |       +-- its PRP$ poss
 +-- . . punct

28
Input: Since the nonce is not required to be kept secret -LRB- just unique -RRB- , there is a potential time space trade off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them .
Parse:
is VBZ ROOT
 +-- required VBN advcl
 |   +-- Since IN mark
 |   +-- nonce NN nsubjpass
 |   |   +-- the DT det
 |   +-- is VBZ auxpass
 |   +-- not RB neg
 |   +-- kept VBN xcomp
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- secret JJ acomp
 |           +-- -LRB- -LRB- punct
 |           +-- unique JJ dep
 |           |   +-- just RB advmod
 |           +-- -RRB- -RRB- punct
 +-- , , punct
 +-- there EX expl
 +-- investigated VBN ccomp
 |   +-- trade NN nsubjpass
 |   |   +-- a DT det
 |   |   +-- potential JJ amod
 |   |   +-- time NN nn
 |   |   +-- space NN nn
 |   |   +-- off RP prep
 |   |       +-- we PRP pobj
 |   +-- have VBP aux
 |   +-- not RB neg
 |   +-- yet RB advmod
 |   +-- in IN prep
 |       +-- attaching VBG pcomp
 |           +-- attributes NNS dobj
 |               +-- extra JJ amod
 |               +-- nonce NN nn
 |               +-- had VBN rcmod
 |                   +-- that WDT nsubj
 |                   +-- have VBP aux
 |                   +-- already RB advmod
 |                   +-- applied VBN ccomp
 |                       +-- construct VB nsubj
 |                       |   +-- this DT det
 |                       |   +-- OMAC NN nn
 |                       +-- to IN prep
 |                           +-- them PRP pobj
 +-- . . punct

29
Input: 5.2 Domain Internal Events We explained in Sect .
Parse:
Events NNS ROOT
 +-- 5.2 CD num
 +-- Internal NNP nn
 |   +-- Domain NNP nn
 +-- explained VBD rcmod
 |   +-- We PRP nsubj
 |   +-- in IN prep
 |       +-- Sect NNP pobj
 +-- . . punct

30
Input: 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content .
Parse:
avoided VBN ROOT
 +-- 3.4 CD nsubjpass
 |   +-- event NN rcmod
 |       +-- that IN nsubj
 |       +-- decryption NN dobj
 |           +-- content NN nn
 |           +-- and CC cc
 |           +-- encryption NN conj
 +-- can MD aux
 +-- be VB auxpass
 +-- authorised VBN advcl
 |   +-- if IN mark
 |   +-- brokers NNS nsubj
 |   |   +-- both DT det
 |   +-- are VBP cop
 |   +-- access VB xcomp
 |       +-- to TO aux
 |       +-- content NN dobj
 |           +-- the DT det
 |           +-- event NN nn
 +-- . . punct

31
Input: This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead .
Parse:
designed VBN ROOT
 +-- test NN nsubjpass
 |   +-- This DT det
 +-- was VBD auxpass
 +-- show VB xcomp
 |   +-- to TO aux
 |   +-- incurs VBZ ccomp
 |       +-- that IN mark
 |       +-- use NN nsubj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- mechanism NN pobj
 |       |           +-- the DT det
 |       |           +-- event NN nn
 |       |           |   +-- encrypted VBN amod
 |       |           +-- content NN nn
 |       |           +-- between IN prep
 |       |               +-- brokers NNS pobj
 |       |                   +-- two CD num
 |       |                   +-- authorised VBN amod
 |       +-- overhead NN dobj
 |           +-- only RB advmod
 |           +-- a DT det
 |           +-- performance NN nn
 |               +-- small JJ amod
 +-- . . punct

32
Input: In this test we again form a broker network with two brokers .
Parse:
form VBP ROOT
 +-- In IN prep
 |   +-- test NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- again RB advmod
 +-- network NN dobj
 |   +-- a DT det
 |   +-- broker NN nn
 |   +-- with IN prep
 |       +-- brokers NNS pobj
 |           +-- two CD num
 +-- . . punct

33
Input: 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Broker '' s key group credentials are valid Actual join time Actual leave time One day One day Figure 5
Parse:
schedule NN ROOT
 +-- 111 CD num
 +-- Key JJ amod
 +-- refresh NN nn
 +-- joining VBG rcmod
 |   +-- Broker NNP nsubj
 |   |   +-- 1 CD num
 |   +-- and CC cc
 |   +-- leaving VBG conj
 |       +-- group NN dobj
 |       |   +-- the DT det
 |       |   +-- key JJ amod
 |       +-- credentials NNS dobj
 |           +-- Broker NNP poss
 |           |   +-- refresh NN nn
 |           |   |   +-- Actual JJ amod
 |           |   |   +-- key JJ amod
 |           |   +-- times NNS dep
 |           |   +-- Time NNP nn
 |           |   +-- day NN nn
 |           |   |   +-- One CD num
 |           |   +-- '' '' punct
 |           |   +-- s POS possessive
 |           +-- key JJ amod
 |           +-- group NN nn
 +-- valid JJ dep
     +-- are VBP cop
     +-- join NN dep
         +-- Actual JJ dep
         +-- time NN dep
         |   +-- Actual JJ amod
         |   +-- leave NN nn
         |   +-- day NN dep
         |       +-- One CD num
         |       +-- day NN dep
         |           +-- One CD num
         +-- Figure NN dep
             +-- 5 CD num

34
Input: The publisher is attached to one of the brokers and the subscriber to the other , and again the subscriber does not specify any filters in its subscription .
Parse:
attached VBN ROOT
 +-- publisher NN nsubjpass
 |   +-- The DT det
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- one CD pobj
 |       +-- of IN prep
 |       |   +-- brokers NNS pobj
 |       |       +-- the DT det
 |       +-- and CC cc
 |       +-- subscriber NN conj
 |           +-- the DT det
 |           +-- to IN prep
 |               +-- other JJ pobj
 |                   +-- the DT det
 +-- , , punct
 +-- and CC cc
 +-- specify VB conj
 |   +-- again RB advmod
 |   +-- subscriber NN nsubj
 |   |   +-- the DT det
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- filters NNS dobj
 |       +-- any DT det
 |       +-- in IN prep
 |           +-- subscription NN pobj
 |               +-- its PRP$ poss
 +-- . . punct

35
Input: The publisher publishes 100 , 000 events and the test measures the elapsed time in order to derive the system '' s message throughput .
Parse:
publishes VBZ ROOT
 +-- publisher NN nsubj
 |   +-- The DT det
 +-- events NNS dobj
 |   +-- 100 CD num
 |   +-- , , punct
 |   +-- 000 CD num
 |   +-- and CC cc
 |   +-- measures NNS conj
 |   |   +-- the DT det
 |   |   +-- test NN nn
 |   +-- time NN dep
 |       +-- the DT det
 |       +-- elapsed VBN amod
 +-- in IN prep
 |   +-- order NN pobj
 |       +-- derive VB infmod
 |           +-- to TO aux
 |           +-- throughput NN dobj
 |               +-- system NN poss
 |               |   +-- the DT det
 |               |   +-- '' '' punct
 |               |   +-- s POS possessive
 |               +-- message NN nn
 +-- . . punct

36
Input: The event content is encrypted outside the timing measurement , i.e .
Parse:
encrypted VBN ROOT
 +-- content NN nsubjpass
 |   +-- The DT det
 |   +-- event NN nn
 +-- is VBZ auxpass
 +-- outside IN prep
 |   +-- measurement NN pobj
 |       +-- the DT det
 |       +-- timing NN nn
 |       +-- , , punct
 |       +-- i.e NN appos
 +-- . . punct

37
Input: the encryption cost is not included in the measurements .
Parse:
included VBN ROOT
 +-- cost NN nsubjpass
 |   +-- the DT det
 |   +-- encryption NN nn
 +-- is VBZ auxpass
 +-- not RB neg
 +-- in IN prep
 |   +-- measurements NNS pobj
 |       +-- the DT det
 +-- . . punct

38
Input: The goal is to model an environment where a broker has received a message from another authorised broker , and it routes the event to a third authorised broker .
Parse:
is VBZ ROOT
 +-- goal NN nsubj
 |   +-- The DT det
 +-- model VB xcomp
 |   +-- to TO aux
 |   +-- environment NN dobj
 |       +-- an DT det
 |       +-- received VBN rcmod
 |           +-- where WRB advmod
 |           +-- broker NN nsubj
 |           |   +-- a DT det
 |           +-- has VBZ aux
 |           +-- message NN dobj
 |           |   +-- a DT det
 |           +-- from IN prep
 |           |   +-- broker NN pobj
 |           |       +-- another DT det
 |           |       +-- authorised VBN amod
 |           +-- , , punct
 |           +-- and CC cc
 |           +-- routes VBZ conj
 |               +-- it PRP nsubj
 |               +-- event NN dobj
 |               |   +-- the DT det
 |               +-- to IN prep
 |                   +-- broker NN pobj
 |                       +-- a DT det
 |                       +-- third JJ amod
 |                       +-- authorised VBN amod
 +-- . . punct

39
Input: In this scenario the middle broker does not need to decrypt nor encrypt the event content .
Parse:
need VB ROOT
 +-- In IN prep
 |   +-- scenario NN pobj
 |       +-- this DT det
 +-- broker NN nsubj
 |   +-- the DT det
 |   +-- middle JJ amod
 +-- does VBZ aux
 +-- not RB neg
 +-- decrypt VB xcomp
 |   +-- to TO aux
 |   +-- nor CC cc
 |   +-- encrypt VB conj
 |   +-- content NN dobj
 |       +-- the DT det
 |       +-- event NN nn
 +-- . . punct

40
Input: As shown in Fig .
Parse:
shown VBN ROOT
 +-- As IN advmod
 +-- in IN prep
 |   +-- Fig NNP pobj
 +-- . . punct

41
Input: 2 , the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25 .
Parse:
measured VBN ROOT
 +-- 2 CD dep
 |   +-- , , punct
 +-- time NN nsubjpass
 |   +-- the DT det
 |   +-- elapsed JJ amod
 +-- was VBD auxpass
 +-- increased VBN advcl
 |   +-- as IN mark
 |   +-- number NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |   |   +-- attributes NNS pobj
 |   |   +-- in IN prep
 |   |       +-- event NN pobj
 |   |           +-- the DT det
 |   |           +-- published JJ amod
 |   +-- was VBD auxpass
 |   +-- from IN prep
 |       +-- 1 CD pobj
 |       +-- to IN prep
 |           +-- 25 CD pobj
 +-- . . punct

42
Input: The attribute values in each case are 30 character strings .
Parse:
strings NNS ROOT
 +-- values NNS nsubj
 |   +-- The DT det
 |   +-- attribute NN amod
 |   +-- in IN prep
 |       +-- case NN pobj
 |           +-- each DT det
 +-- are VBP cop
 +-- 30 CD num
 +-- character NN nn
 +-- . . punct

43
Input: Each test is repeated five times , and we use the average of all iterations in the graph .
Parse:
repeated VBN ROOT
 +-- test NN nsubjpass
 |   +-- Each DT det
 +-- is VBZ auxpass
 +-- times NNS dobj
 |   +-- five CD num
 +-- , , punct
 +-- and CC cc
 +-- use VBP conj
 |   +-- we PRP nsubj
 |   +-- average NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- iterations NNS pobj
 |   |           +-- all DT det
 |   +-- in IN prep
 |       +-- graph NN pobj
 |           +-- the DT det
 +-- . . punct

44
Input: The same test was then repeated with no encryption , event encryption and attribute encryption turned on .
Parse:
repeated VBN ROOT
 +-- test NN nsubjpass
 |   +-- The DT det
 |   +-- same JJ amod
 +-- was VBD auxpass
 +-- then RB advmod
 +-- with IN prep
 |   +-- encryption NN pobj
 |       +-- no DT det
 |       +-- , , punct
 |       +-- encryption NN conj
 |       |   +-- event NN nn
 |       +-- and CC cc
 |       +-- attribute NN conj
 |       +-- turned VBD rcmod
 |           +-- encryption NN nsubj
 |           +-- on RP prt
 +-- . . punct

45
Input: The encrypted modes follow each other very closely .
Parse:
follow VBP ROOT
 +-- modes NNS nsubj
 |   +-- The DT det
 |   +-- encrypted VBN amod
 +-- other JJ dobj
 |   +-- each DT det
 +-- closely RB advmod
 |   +-- very RB advmod
 +-- . . punct

46
Input: Predictably , the plaintext mode performs a little better for all attribute counts .
Parse:
performs VBZ ROOT
 +-- Predictably RB advmod
 +-- , , punct
 +-- mode NN nsubj
 |   +-- the DT det
 |   +-- plaintext NN nn
 +-- better JJR advmod
 |   +-- little RB npadvmod
 |       +-- a DT det
 +-- for IN prep
 |   +-- counts NNS pobj
 |       +-- all DT det
 |       +-- attribute NN nn
 +-- . . punct

47
Input: The difference can be explained partially by the encrypted events being larger in size , because they include both the plaintext and the encrypted content in this test .
Parse:
explained VBN ROOT
 +-- difference NN nsubjpass
 |   +-- The DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- partially RB advmod
 +-- by IN prep
 |   +-- events NNS pobj
 |       +-- the DT det
 |       +-- encrypted VBN amod
 |       +-- larger JJR partmod
 |           +-- being VBG cop
 |           +-- in IN prep
 |               +-- size NN pobj
 +-- , , punct
 +-- include VBP advcl
 |   +-- because IN mark
 |   +-- they PRP nsubj
 |   +-- plaintext NN dobj
 |       +-- both DT preconj
 |       +-- the DT det
 |       +-- and CC cc
 |       +-- content NN conj
 |           +-- the DT det
 |           +-- encrypted VBN amod
 |           +-- in IN prep
 |               +-- test NN pobj
 |                   +-- this DT det
 +-- . . punct

48
Input: The difference in performance is 3.7 % with one attribute and 2.5 % with 25 attributes .
Parse:
% NN ROOT
 +-- difference NN nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- performance NN pobj
 +-- is VBZ cop
 +-- 3.7 CD num
 +-- with IN prep
 |   +-- attribute NN pobj
 |       +-- one CD num
 |       +-- and CC cc
 |       +-- % NN conj
 |       |   +-- 2.5 CD num
 |       +-- with IN prep
 |           +-- attributes NNS pobj
 |               +-- 25 CD num
 +-- . . punct

49
Input: We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation .
Parse:
believe VBP ROOT
 +-- We PRP nsubj
 +-- explained VBN ccomp
 |   +-- that IN mark
 |   +-- roughness NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- graphs NNS pobj
 |   |           +-- the DT det
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- by IN prep
 |       +-- collector NN pobj
 |           +-- the DT det
 |           +-- Java NNP nn
 |           +-- garbage NN nn
 |           +-- interfering VBG partmod
 |               +-- with IN prep
 |                   +-- simulation NN pobj
 |                       +-- the DT det
 +-- . . punct

50
Input: The fact that all three graphs show the same irregularities supports this theory .
Parse:
fact NN ROOT
 +-- The DT det
 +-- show VBP ccomp
 |   +-- that IN mark
 |   +-- graphs NNS nsubj
 |   |   +-- all DT det
 |   |   +-- three CD num
 |   +-- supports VBZ ccomp
 |       +-- irregularities NNS nsubj
 |       |   +-- the DT det
 |       |   +-- same JJ amod
 |       +-- theory NN dobj
 |           +-- this DT det
 +-- . . punct

51
Input: 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole content Encryption Figure 7
Parse:
112 CD ROOT
 +-- 50000 CD dep
     +-- 55000 CD prep
         +-- 60000 CD dep
             +-- 65000 CD prep
                 +-- 70000 CD dep
                     +-- 75000 CD prep
                         +-- 80000 CD dep
                             +-- 85000 CD prep
                                 +-- 90000 CD dep
                                     +-- 95000 CD dep
                                         +-- 100000 CD dep
                                             +-- 20 CD dep
                                                 +-- 0 CD dep
                                                 +-- 5 CD dep
                                                 +-- 10 CD number
                                                 +-- 15 CD number
                                                 +-- Number NNP dep
                                                     +-- 25 CD num
                                                     +-- MessagesperSecond NNP nn
                                                     +-- of IN prep
                                                     |   +-- Attributes NNP pobj
                                                     +-- Encryption NN dep
                                                     |   +-- No DT det
                                                     |   +-- Encryption NNP nn
                                                     |   +-- Attribute NNP nn
                                                     |   +-- Whole NNP nn
                                                     |   |   +-- Encryption NNP nn
                                                     |   +-- content NN nn
                                                     +-- Figure NN dep
                                                         +-- 7 CD num

52
Input: The last test we ran was to show the communication overhead caused by this emulation technique , compared to using real attribute encryption .
Parse:
was VBD ROOT
 +-- test NN nsubj
 |   +-- The DT det
 |   +-- last JJ amod
 |   +-- ran VBD rcmod
 |       +-- we PRP nsubj
 +-- show VB xcomp
 |   +-- to TO aux
 |   +-- overhead NN dobj
 |   |   +-- the DT det
 |   |   +-- communication NN nn
 |   |   +-- caused VBN partmod
 |   |       +-- by IN prep
 |   |           +-- technique NN pobj
 |   |               +-- this DT det
 |   |               +-- emulation NN nn
 |   +-- , , punct
 |   +-- compared VBN prep
 |       +-- to IN pcomp
 |           +-- using VBG pcomp
 |               +-- encryption NN dobj
 |                   +-- attribute NN amod
 |                       +-- real JJ amod
 +-- . . punct

53
Input: In the test we form a broker network of 2000 brokers .
Parse:
form VBP ROOT
 +-- In IN prep
 |   +-- test NN pobj
 |       +-- the DT det
 +-- we PRP nsubj
 +-- network NN dobj
 |   +-- a DT det
 |   +-- broker NN nn
 |   +-- of IN prep
 |       +-- brokers NNS pobj
 |           +-- 2000 CD num
 +-- . . punct

54
Input: We attach one publisher to one of the brokers , and an increasing number of subscribers to the remaining brokers .
Parse:
attach VBP ROOT
 +-- We PRP nsubj
 +-- publisher NN dobj
 |   +-- one CD num
 +-- to IN prep
 |   +-- one CD pobj
 |       +-- of IN prep
 |       |   +-- brokers NNS pobj
 |       |       +-- the DT det
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- number NN conj
 |           +-- an DT det
 |           +-- increasing VBG amod
 |           +-- of IN prep
 |               +-- subscribers NNS pobj
 |                   +-- to IN prep
 |                       +-- brokers NNS pobj
 |                           +-- the DT det
 |                           +-- remaining VBG amod
 +-- . . punct

55
Input: Each subscriber simulates a group of subscribers that all have the same access rights to the published event .
Parse:
simulates VBZ ROOT
 +-- subscriber NN nsubj
 |   +-- Each DT det
 +-- group NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |   |   +-- subscribers NNS pobj
 |   +-- have VBP rcmod
 |       +-- that WDT nsubj
 |       |   +-- all DT det
 |       +-- rights NNS dobj
 |           +-- the DT det
 |           +-- same JJ amod
 |           +-- access NN nn
 |           +-- to IN prep
 |               +-- event NN pobj
 |                   +-- the DT det
 |                   +-- published JJ amod
 +-- . . punct

56
Input: Each subscriber group has its own event type in the test .
Parse:
has VBZ ROOT
 +-- group NN nsubj
 |   +-- Each DT det
 |   +-- subscriber NN nn
 +-- type NN dobj
 |   +-- its PRP$ poss
 |   +-- own JJ amod
 |   +-- event NN nn
 |   +-- in IN prep
 |       +-- test NN pobj
 |           +-- the DT det
 +-- . . punct

57
Input: The outcome of this test is shown in Fig .
Parse:
shown VBN ROOT
 +-- outcome NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- test NN pobj
 |           +-- this DT det
 +-- is VBZ auxpass
 +-- in IN prep
 |   +-- Fig NNP pobj
 +-- . . punct

58
Input: 8 .
Parse:
8 CD ROOT
 +-- . . punct

59
Input: The number of subscriber groups is increased from 1 to 50 -LRB- the x axis -RRB- .
Parse:
increased VBN ROOT
 +-- number NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- groups NNS pobj
 |           +-- subscriber NN nn
 +-- is VBZ auxpass
 +-- from IN prep
 |   +-- 1 CD pobj
 +-- to IN prep
 |   +-- 50 CD pobj
 |       +-- -LRB- -LRB- punct
 |       +-- axis NN dep
 |       |   +-- the DT det
 |       |   +-- x SYM nn
 |       +-- -RRB- -RRB- punct
 +-- . . punct

60
Input: For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group .
Parse:
publishes VBZ ROOT
 +-- For IN prep
 |   +-- groups NNS pobj
 |       +-- each DT det
 |       +-- subscriber NN nn
 |           +-- n DT nn
 +-- publisher NN nsubj
 |   +-- the DT det
 +-- event NN dobj
 |   +-- one CD num
 +-- represent VB xcomp
 |   +-- to TO aux
 |   +-- use NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- events NNS pobj
 |               +-- encryption NN nn
 |               |   +-- attribute NN amod
 |               |   +-- and CC cc
 |               |   +-- n DT conj
 |               +-- representing VBG partmod
 |                   +-- events NNS dobj
 |                       +-- the DT det
 |                       +-- for IN prep
 |                           +-- group NN pobj
 |                               +-- each DT det
 |                               +-- subscriber NN nn
 +-- . . punct

61
Input: We count the number of hops each publication makes through the broker network -LRB- y axis -RRB- .
Parse:
count VBP ROOT
 +-- We PRP nsubj
 +-- number NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- hops NNS pobj
 |   +-- makes VBZ rcmod
 |       +-- publication NN nsubj
 |       |   +-- each DT det
 |       +-- through IN prep
 |           +-- network NN pobj
 |               +-- the DT det
 |               +-- broker NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- axis NN dep
 |               |   +-- y NNP nn
 |               +-- -RRB- -RRB- punct
 +-- . . punct

62
Input: Note that Fig .
Parse:
Note VB ROOT
 +-- Fig NNP dobj
 |   +-- that IN det
 +-- . . punct

63
Input: 8 shows workloads beyond what we would expect in common usage , in which many event types are likely to contain fewer than ten attributes .
Parse:
shows NNS ROOT
 +-- 8 CD nsubj
 +-- workloads NNS dobj
 |   +-- beyond IN prep
 |       +-- expect VB pcomp
 |           +-- what WP dobj
 |           +-- we PRP nsubj
 |           +-- would MD aux
 |           +-- in IN prep
 |               +-- usage NN pobj
 |                   +-- common JJ amod
 |                   +-- , , punct
 |                   +-- likely JJ rcmod
 |                       +-- in IN prep
 |                       |   +-- which WDT pobj
 |                       +-- types NNS nsubj
 |                       |   +-- many JJ amod
 |                       |   +-- event NN nn
 |                       +-- are VBP cop
 |                       +-- contain VB xcomp
 |                           +-- to TO aux
 |                           +-- attributes NNS dobj
 |                               +-- ten CD num
 |                                   +-- than IN quantmod
 |                                       +-- fewer JJR mwe
 +-- . . punct

64
Input: The subscriber groups used in this test represent disjoint permission sets over such event attributes .
Parse:
represent VBP ROOT
 +-- groups NNS nsubj
 |   +-- The DT det
 |   +-- subscriber NN nn
 |   +-- used VBD partmod
 |       +-- in IN prep
 |           +-- test NN pobj
 |               +-- this DT det
 +-- sets NNS dobj
 |   +-- disjoint NN nn
 |   +-- permission NN nn
 |   +-- over IN prep
 |       +-- attributes NNS pobj
 |           +-- such JJ amod
 |           +-- event NN nn
 +-- . . punct

65
Input: The number of these sets can be determined from the particular access control policy in use , but will be a value less than or equal to the factorial of the number of attributes in a given event type .
Parse:
determined VBN ROOT
 +-- number NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- sets NNS pobj
 |           +-- these DT det
 +-- can MD aux
 +-- be VB auxpass
 +-- from IN prep
 |   +-- policy NN pobj
 |       +-- the DT det
 |       +-- control NN nn
 |       |   +-- access NN nn
 |       |       +-- particular JJ amod
 |       +-- in IN prep
 |           +-- use NN pobj
 +-- , , punct
 +-- but CC cc
 +-- value NN conj
 |   +-- will MD aux
 |   +-- be VB cop
 |   +-- a DT det
 |   +-- less JJR amod
 |   |   +-- than IN prep
 |   |       +-- or CC cc
 |   |       +-- equal JJ conj
 |   +-- to IN prep
 |   |   +-- factorial NN pobj
 |   |       +-- the DT det
 |   |       +-- of IN prep
 |   |           +-- number NN pobj
 |   |               +-- the DT det
 |   |               +-- of IN prep
 |   |                   +-- attributes NNS pobj
 |   +-- in IN prep
 |       +-- type NN pobj
 |           +-- a DT det
 |           +-- given VBN amod
 |           +-- event NN nn
 +-- . . punct

66
Input: The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups .
Parse:
indicate VBP ROOT
 +-- graphs NNS nsubj
 |   +-- The DT det
 +-- performs VBZ ccomp
 |   +-- that IN mark
 |   +-- encryption NN nsubj
 |   |   +-- attribute NN amod
 |   +-- encryption NN dobj
 |   |   +-- better JJR amod
 |   |       +-- than IN prep
 |   |           +-- event NN pobj
 |   +-- for IN prep
 |       +-- even RB advmod
 |       +-- numbers NNS pobj
 |           +-- small JJ amod
 |           +-- of IN prep
 |               +-- groups NNS pobj
 |                   +-- subscriber NN nn
 +-- . . punct

67
Input: Indeed , with only two subscriber groups -LRB- e.g .
Parse:
e.g NFP ROOT
 +-- Indeed RB advmod
 +-- , , punct
 +-- with IN prep
 |   +-- groups NNS pobj
 |       +-- two CD num
 |       |   +-- only RB quantmod
 |       +-- subscriber NN nn
 +-- -LRB- -LRB- punct
 +-- . . punct

68
Input: the case with Numberplate events -RRB- the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption .
Parse:
case NN ROOT
 +-- the DT det
 +-- with IN prep
 |   +-- events NNS pobj
 |       +-- Numberplate JJ amod
 +-- -RRB- -RRB- punct
 +-- increases NNS dep
 |   +-- the DT det
 |   +-- count NN nn
 |   |   +-- hop NN nn
 |   +-- from IN prep
 |   |   +-- hops NNS pobj
 |   |       +-- 7.2 CD num
 |   |       +-- for IN prep
 |   |           +-- encryption NN pobj
 |   |               +-- attribute NN amod
 |   +-- to IN prep
 |       +-- hops NNS pobj
 |           +-- 16.6 CD num
 |           +-- for IN prep
 |               +-- encryption NN pobj
 |                   +-- event NN nn
 +-- . . punct

69
Input: With 10 subscriber groups the corresponding numbers are 24.2 and 251.0 , i.e .
Parse:
24.2 CD ROOT
 +-- With IN prep
 |   +-- groups NNS pobj
 |       +-- 10 CD num
 |       +-- subscriber NN nn
 +-- numbers NNS nsubj
 |   +-- the DT det
 |   +-- corresponding VBG amod
 +-- are VBP cop
 +-- and CC cc
 +-- 251.0 CD conj
 |   +-- , , punct
 |   +-- i.e NN appos
 +-- . . punct

70
Input: an order of magnitude difference. .
Parse:
order NN ROOT
 +-- an DT det
 +-- of IN prep
 |   +-- difference. NN pobj
 |       +-- magnitude NN nn
 +-- . . punct
