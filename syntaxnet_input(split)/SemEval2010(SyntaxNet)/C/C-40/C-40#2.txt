
1
Input: Visibility determination has been widely explored in the field of 3D graphics .
Parse:
explored VBN ROOT
 +-- determination NN nsubjpass
 |   +-- Visibility NN nn
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- widely RB advmod
 +-- in IN prep
 |   +-- field NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- graphics NNS pobj
 |               +-- 3D CD num
 +-- . . punct

2
Input: Various local rendering algorithms have been proposed to eliminate unnecessary objects before rendering or at any stage in the rendering pipeline .
Parse:
proposed VBN ROOT
 +-- algorithms NNS nsubjpass
 |   +-- Various JJ amod
 |   +-- local JJ amod
 |   +-- rendering NN amod
 +-- have VBP aux
 +-- been VBN auxpass
 +-- eliminate VB xcomp
 |   +-- to TO aux
 |   +-- objects NNS dobj
 |   |   +-- unnecessary JJ amod
 |   +-- before IN prep
 |       +-- rendering VBG pobj
 |       +-- or CC cc
 |       +-- at IN conj
 |           +-- stage NN pobj
 |               +-- any DT det
 |               +-- in IN prep
 |                   +-- pipeline NN pobj
 |                       +-- the DT det
 |                       +-- rendering VBG nn
 +-- . . punct

3
Input: View frustum culling , back face culling , and occlusion culling are some of the well known visibility culling techniques -LRB- 6 -RRB- .
Parse:
some DT ROOT
 +-- culling NN nsubj
 |   +-- View NN nn
 |   +-- frustum NN nn
 |   +-- , , punct
 |   +-- culling NN conj
 |   |   +-- occlusion NN nn
 |   +-- and CC cc
 +-- are VBP cop
 +-- of IN prep
 |   +-- techniques NNS pobj
 |       +-- the DT det
 |       +-- known VBN amod
 |       |   +-- well RB advmod
 |       +-- visibility NN nn
 |       +-- culling VBG nn
 |       +-- -LRB- -LRB- punct
 |       +-- 6 CD dep
 |       +-- -RRB- -RRB- punct
 +-- . . punct

4
Input: However , these algorithms assume that all the candidate visible objects have been stored locally .
Parse:
assume VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- algorithms NNS nsubj
 |   +-- these DT det
 +-- stored VBN ccomp
 |   +-- that IN mark
 |   +-- objects NNS nsubjpass
 |   |   +-- visible JJ amod
 |   |       +-- candidate NN npadvmod
 |   |           +-- all PDT predet
 |   |           +-- the DT det
 |   +-- have VBP aux
 |   +-- been VBN auxpass
 |   +-- locally RB advmod
 +-- . . punct

5
Input: If the target objects are stored on remote servers , the clients receive the geometry items that are necessary for rendering from the server databases .
Parse:
receive VBP ROOT
 +-- stored VBN advcl
 |   +-- If IN mark
 |   +-- objects NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- target NN nn
 |   +-- are VBP auxpass
 |   +-- on IN prep
 |       +-- servers NNS pobj
 |           +-- remote JJ amod
 +-- , , punct
 +-- clients NNS nsubj
 |   +-- the DT det
 +-- items NNS dobj
 |   +-- the DT det
 |   +-- geometry NN nn
 |   +-- necessary JJ rcmod
 |       +-- that WDT nsubj
 |       +-- are VBP cop
 |       +-- for IN prep
 |           +-- rendering VBG pcomp
 |               +-- from IN prep
 |                   +-- databases NNS pobj
 |                       +-- the DT det
 |                       +-- server NN nn
 +-- . . punct

6
Input: Teller et al .
Parse:
Teller NNP ROOT
 +-- et CC cc
 +-- al NNP conj
 +-- . . punct

7
Input: described a geometry data scheduling algorithm that maximizes the quality of the frame rate over time in remote walkthroughs of complex 3D scenes from a user '' s navigational path -LRB- 5 -RRB- .
Parse:
described VBD ROOT
 +-- algorithm NN dobj
 |   +-- a DT det
 |   +-- geometry NN amod
 |   +-- scheduling NN nn
 |   |   +-- data NNS nn
 |   +-- maximizes VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- quality NN dobj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- rate NN pobj
 |       |           +-- the DT det
 |       |           +-- frame NN nn
 |       +-- over IN prep
 |       |   +-- time NN pobj
 |       +-- in IN prep
 |       |   +-- walkthroughs NNS pobj
 |       |       +-- remote JJ amod
 |       |       +-- of IN prep
 |       |           +-- scenes NNS pobj
 |       |               +-- complex JJ amod
 |       |               +-- 3D NN nn
 |       +-- from IN prep
 |           +-- path NN pobj
 |               +-- user NN poss
 |               |   +-- a DT det
 |               |   +-- '' '' punct
 |               |   +-- s POS possessive
 |               +-- navigational JJ amod
 |               +-- 5 CD appos
 |                   +-- -LRB- -LRB- punct
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

8
Input: Funkhouser et al .
Parse:
al NNP ROOT
 +-- Funkhouser NNP nn
 +-- et CC nn
 +-- . . punct

9
Input: showed that multi resolutional representation , such as Levels Of Detail -LRB- LOD -RRB- , can be used to improve rendering frame rates and memory utilization during interactive visualization -LRB- 7 -RRB- .
Parse:
showed VBD ROOT
 +-- used VBN ccomp
 |   +-- that IN mark
 |   +-- representation NN nsubjpass
 |   |   +-- multi FW amod
 |   |   +-- resolutional JJ amod
 |   |   +-- , , punct
 |   |   +-- as IN prep
 |   |       +-- such JJ mwe
 |   |       +-- Levels NNPS pobj
 |   |           +-- Of IN prep
 |   |               +-- Detail NNP pobj
 |   |                   +-- -LRB- -LRB- punct
 |   |                   +-- LOD NNP dep
 |   |                   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- improve VB xcomp
 |       +-- to TO aux
 |       +-- rendering VBG xcomp
 |           +-- rates NNS dobj
 |           |   +-- frame NN nn
 |           |   +-- and CC cc
 |           |   +-- utilization NN conj
 |           |       +-- memory NN nn
 |           +-- during IN prep
 |               +-- visualization NN pobj
 |                   +-- interactive JJ amod
 |                   +-- -LRB- -LRB- punct
 |                   +-- 7 CD dep
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

10
Input: However , these online optimization algorithms fail to address performance issue at the server in highly crowded environments .
Parse:
fail VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- algorithms NNS nsubj
 |   +-- these DT det
 |   +-- online JJ amod
 |   +-- optimization NN nn
 +-- address VB xcomp
 |   +-- to TO aux
 |   +-- issue NN dobj
 |   |   +-- performance NN nn
 |   +-- at IN prep
 |   |   +-- server NN pobj
 |   |       +-- the DT det
 |   +-- in IN prep
 |       +-- environments NNS pobj
 |           +-- crowded JJ amod
 |               +-- highly RB advmod
 +-- . . punct

11
Input: On the other hand , our visibility computation model , a representative of this category , is based on different assumptions on the data representation of virtual entities .
Parse:
based VBN ROOT
 +-- On IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- model NN nsubjpass
 |   +-- our PRP$ poss
 |   +-- visibility NN nn
 |   +-- computation NN nn
 |   +-- , , punct
 |   +-- representative NN appos
 |       +-- a DT det
 |       +-- of IN prep
 |           +-- category NN pobj
 |               +-- this DT det
 +-- is VBZ auxpass
 +-- on IN prep
 |   +-- assumptions NNS pobj
 |       +-- different JJ amod
 |       +-- on IN prep
 |           +-- representation NN pobj
 |               +-- the DT det
 |               +-- data NN nn
 |               +-- of IN prep
 |                   +-- entities NNS pobj
 |                       +-- virtual JJ amod
 +-- . . punct

12
Input: In the graphics area , there has been little work on supporting real time visibility computations for a massive number of moving objects and users .
Parse:
work NN ROOT
 +-- In IN prep
 |   +-- area NN pobj
 |       +-- the DT det
 |       +-- graphics NNS nn
 +-- , , punct
 +-- there EX expl
 +-- has VBZ aux
 +-- been VBN cop
 +-- little JJ amod
 +-- on IN prep
 |   +-- supporting VBG pcomp
 |       +-- computations NNS dobj
 |           +-- time NN nn
 |           |   +-- real JJ amod
 |           +-- visibility NN nn
 |           +-- for IN prep
 |               +-- number NN pobj
 |                   +-- a DT det
 |                   +-- massive JJ amod
 |                   +-- of IN prep
 |                       +-- objects NNS pobj
 |                           +-- moving VBG amod
 |                           +-- and CC cc
 |                           +-- users NNS conj
 +-- . . punct

13
Input: Here we recognize that such graphics related issues have a very close similarity to spatial database problems .
Parse:
recognize VBP ROOT
 +-- Here RB advmod
 +-- we PRP nsubj
 +-- have VBP ccomp
 |   +-- that IN mark
 |   +-- issues NNS nsubj
 |   |   +-- such JJ amod
 |   |   +-- related JJ amod
 |   |       +-- graphics NNS npadvmod
 |   +-- similarity NN dobj
 |       +-- a DT det
 |       +-- close JJ amod
 |       |   +-- very RB advmod
 |       +-- to IN prep
 |           +-- problems NNS pobj
 |               +-- spatial JJ amod
 |               +-- database NN nn
 +-- . . punct

14
Input: Recently , a number of publications have addressed the scalability issue on how to support massive numbers of objects and queries in highly dynamic environments .
Parse:
addressed VBN ROOT
 +-- Recently RB advmod
 +-- , , punct
 +-- number NN nsubj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- publications NNS pobj
 +-- have VBP aux
 +-- issue NN dobj
 |   +-- the DT det
 |   +-- scalability NN nn
 |   +-- on IN prep
 |       +-- support VB pcomp
 |           +-- how WRB advmod
 |           +-- to TO aux
 |           +-- numbers NNS dobj
 |               +-- massive JJ amod
 |               +-- of IN prep
 |                   +-- objects NNS pobj
 |                       +-- and CC cc
 |                       +-- queries NNS conj
 |                       +-- in IN prep
 |                           +-- environments NNS pobj
 |                               +-- dynamic JJ amod
 |                                   +-- highly RB advmod
 +-- . . punct

15
Input: To support frequent updates , two partitioning policies have been studied in depth
Parse:
studied VBN ROOT
 +-- support VB advcl
 |   +-- To TO aux
 |   +-- updates NNS dobj
 |       +-- frequent JJ amod
 +-- , , punct
 +-- policies NNS nsubjpass
 |   +-- two CD num
 |   +-- partitioning VBG nn
 +-- have VBP aux
 +-- been VBN auxpass
 +-- in IN prep
     +-- depth NN pobj

16
Input: The R tree is a well known spatial index structure that allows overlapping between the regions in different branches which are represented by Minimum Bounding Rectangles .
Parse:
structure NN ROOT
 +-- tree NN nsubj
 |   +-- The DT det
 |   +-- R NN nn
 +-- is VBZ cop
 +-- a DT det
 +-- known VBN amod
 |   +-- well RB advmod
 +-- index NN nn
 |   +-- spatial JJ amod
 +-- allows VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- overlapping VBG xcomp
 |       +-- between IN prep
 |           +-- regions NNS pobj
 |               +-- the DT det
 |               +-- in IN prep
 |               |   +-- branches NNS pobj
 |               |       +-- different JJ amod
 |               +-- represented VBN rcmod
 |                   +-- which WDT nsubjpass
 |                   +-- are VBP auxpass
 |                   +-- by IN prep
 |                       +-- Rectangles NNPS pobj
 |                           +-- Minimum NNP nn
 |                           +-- Bounding NNP nn
 +-- . . punct

17
Input: The grid based partitioning model is a special case of fixed partitioning .
Parse:
case NN ROOT
 +-- model NN nsubj
 |   +-- The DT det
 |   +-- based VBN amod
 |   |   +-- grid NN dep
 |   +-- partitioning VBG nn
 +-- is VBZ cop
 +-- a DT det
 +-- special JJ amod
 +-- of IN prep
 |   +-- partitioning NN pobj
 |       +-- fixed VBN amod
 +-- . . punct

18
Input: Recently , it has been re discovered since it can be efficient in highly dynamic environments .
Parse:
discovered VBN ROOT
 +-- Recently RB advmod
 +-- , , punct
 +-- it PRP nsubjpass
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- re IN advmod
 +-- efficient JJ advcl
 |   +-- since IN mark
 |   +-- it PRP nsubj
 |   +-- can MD aux
 |   +-- be VB cop
 |   +-- in IN prep
 |       +-- environments NNS pobj
 |           +-- dynamic JJ amod
 |               +-- highly RB advmod
 +-- . . punct

19
Input: Many studies have reported that the R tree and its variants -LRB- R+ tree , R ? tree -RRB- suffer from unacceptable performance degradation in a highly dynamic environment , primarily due to the computational complexity of the split algorithm -LRB- 8 , 9 , 10 , 11 , 12 -RRB- .
Parse:
reported VBN ROOT
 +-- studies NNS nsubj
 |   +-- Many JJ amod
 +-- have VBP aux
 +-- suffer VBP ccomp
 |   +-- that IN mark
 |   +-- tree NN nsubj
 |   |   +-- the DT det
 |   |   +-- R NN nn
 |   |   +-- and CC cc
 |   |   +-- variants NNS conj
 |   |       +-- its PRP$ poss
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- tree NN dep
 |   |       |   +-- tree NN nn
 |   |       |   |   +-- R+ GW nn
 |   |       |   +-- , , punct
 |   |       |   +-- R NN dep
 |   |       |       +-- ? . punct
 |   |       +-- -RRB- -RRB- punct
 |   +-- from IN prep
 |   |   +-- degradation NN pobj
 |   |       +-- unacceptable JJ amod
 |   |       +-- performance NN nn
 |   |       +-- in IN prep
 |   |           +-- environment NN pobj
 |   |               +-- a DT det
 |   |               +-- dynamic JJ amod
 |   |                   +-- highly RB advmod
 |   +-- , , punct
 |   +-- to IN prep
 |       +-- primarily RB advmod
 |       +-- due IN mwe
 |       +-- complexity NN pobj
 |           +-- the DT det
 |           +-- computational JJ amod
 |           +-- of IN prep
 |               +-- algorithm NN pobj
 |                   +-- the DT det
 |                   +-- split NN amod
 |                   +-- -LRB- -LRB- punct
 |                   +-- 8 CD dep
 |                   |   +-- , , punct
 |                   |   +-- 9 CD num
 |                   |   +-- 10 CD num
 |                   |   +-- 11 CD num
 |                   |   +-- 12 CD num
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

20
Input: A bottom up update strategy proposed for R trees -LRB- 9 -RRB- optimizes update operations of the index while maintaining a top down query processing mechanism .
Parse:
update VB ROOT
 +-- strategy NN nsubj
 |   +-- A DT det
 |   +-- bottom NN amod
 |   |   +-- up RP prt
 |   +-- update NN nn
 |   +-- proposed VBN partmod
 |   |   +-- for IN prep
 |   |       +-- trees NNS pobj
 |   |           +-- R NN nn
 |   +-- 9 CD appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- optimizes VBZ aux
 +-- operations NNS dobj
 |   +-- of IN prep
 |       +-- index NN pobj
 |           +-- the DT det
 +-- maintaining VBG advcl
 |   +-- while IN mark
 |   +-- top NN dobj
 |       +-- a DT det
 |       +-- down IN prep
 |           +-- mechanism NN pobj
 |               +-- processing NN nn
 |                   +-- query NN nn
 +-- . . punct

21
Input: Instead of traversing a tree from the root node for frequent update requests -LRB- top down approach -RRB- , it directly accesses the leaf node of the object to be updated via an object hash table .
Parse:
accesses VBZ ROOT
 +-- of IN prep
 |   +-- Instead RB advmod
 |   +-- traversing VBG pcomp
 |       +-- tree NN dobj
 |       |   +-- a DT det
 |       +-- from IN prep
 |       |   +-- node NN pobj
 |       |       +-- the DT det
 |       |       +-- root NN nn
 |       +-- for IN prep
 |           +-- requests NNS pobj
 |               +-- frequent JJ amod
 |               +-- update NN nn
 +-- approach NN parataxis
 |   +-- -LRB- -LRB- punct
 |   +-- top JJ amod
 |   +-- down RP nn
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- it PRP nsubj
 +-- directly RB advmod
 +-- node NN dobj
 |   +-- the DT det
 |   +-- leaf NN nn
 |   +-- of IN prep
 |   |   +-- object NN pobj
 |   |       +-- the DT det
 |   +-- updated VBN infmod
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- via IN prep
 |           +-- table NN pobj
 |               +-- an DT det
 |               +-- object NN nn
 |               +-- hash NN nn
 +-- . . punct

22
Input: Q Index -LRB- 13 , 11 -RRB- is one of the earlier work that re discovers the usefulness of grid based space partitioning for emerging moving object environments .
Parse:
one CD ROOT
 +-- Index NNP nsubj
 |   +-- Q NNP nn
 |   +-- -LRB- -LRB- punct
 |   +-- 11 CD dep
 |   |   +-- 13 CD num
 |   |   +-- , , punct
 |   +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- of IN prep
 |   +-- work NN pobj
 |       +-- the DT det
 |       +-- earlier JJR amod
 |       +-- discovers VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- re IN advmod
 |           +-- usefulness NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |               |   +-- partitioning NN pobj
 |               |       +-- based VBN amod
 |               |       |   +-- grid NN dep
 |               |       +-- space NN nn
 |               +-- for IN prep
 |                   +-- environments NNS pobj
 |                       +-- emerging VBG amod
 |                       +-- moving VBG amod
 |                       +-- object NN nn
 +-- . . punct

23
Input: In contrast to traditional spatial indexing methods that construct an index on the moving objects , it builds an index on the continuous range queries , assuming that the queries move infrequently while the objects move freely .
Parse:
builds VBZ ROOT
 +-- In IN prep
 |   +-- contrast NN pobj
 |       +-- to IN prep
 |           +-- methods NNS pobj
 |               +-- traditional JJ amod
 |               +-- spatial JJ amod
 |               +-- indexing NN nn
 |               +-- construct VBP rcmod
 |                   +-- that WDT nsubj
 |                   +-- index NN dobj
 |                   |   +-- an DT det
 |                   +-- on IN prep
 |                       +-- objects NNS pobj
 |                           +-- the DT det
 |                           +-- moving VBG amod
 +-- , , punct
 +-- it PRP nsubj
 +-- index NN dobj
 |   +-- an DT det
 |   +-- on IN prep
 |       +-- queries NNS pobj
 |           +-- the DT det
 |           +-- range NN nn
 |               +-- continuous JJ amod
 +-- assuming VBG partmod
 |   +-- move VBP ccomp
 |       +-- that IN mark
 |       +-- queries NNS nsubj
 |       |   +-- the DT det
 |       +-- infrequently RB advmod
 |       +-- move VBP advcl
 |           +-- while IN mark
 |           +-- objects NNS nsubj
 |           |   +-- the DT det
 |           +-- freely RB advmod
 +-- . . punct

24
Input: The basic idea of the Q+Rtree -LRB- 14 -RRB- is to separate indexing structures for quasistationary objects and moving objects
Parse:
is VBZ ROOT
 +-- idea NN nsubj
 |   +-- The DT det
 |   +-- basic JJ amod
 |   +-- of IN prep
 |       +-- Q+Rtree NN pobj
 |           +-- the DT det
 |           +-- -LRB- -LRB- punct
 |           +-- 14 CD dep
 |           +-- -RRB- -RRB- punct
 +-- to TO prep
     +-- structures NNS pobj
         +-- separate JJ amod
         +-- indexing NN nn
         +-- for IN prep
             +-- objects NNS pobj
                 +-- quasistationary JJ amod
                 +-- and CC cc
                 +-- objects NNS conj
                     +-- moving VBG amod

25
Input: SINA -LRB- 10 -RRB- was proposed to provide efficient query evaluations for any combination of stationary moving objects and stationary moving queries .
Parse:
proposed VBN ROOT
 +-- 10 CD nsubjpass
 |   +-- SINA NNP det
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- was VBD auxpass
 +-- provide VB xcomp
 |   +-- to TO aux
 |   +-- evaluations NNS dobj
 |   |   +-- efficient JJ amod
 |   |   +-- query NN nn
 |   +-- for IN prep
 |       +-- combination NN pobj
 |           +-- any DT det
 |           +-- of IN prep
 |               +-- objects NNS pobj
 |                   +-- stationary JJ amod
 |                   +-- moving VBG amod
 |                   +-- and CC cc
 |                   +-- queries NNS conj
 |                       +-- stationary JJ amod
 |                       +-- moving VBG nn
 +-- . . punct

26
Input: Specifically , this approach only detects newly discovered -LRB- positive -RRB- or no longer relevant -LRB- negative -RRB- object updates efficiently .
Parse:
detects VBZ ROOT
 +-- Specifically RB advmod
 +-- , , punct
 +-- approach NN nsubj
 |   +-- this DT det
 +-- only RB advmod
 +-- updates NNS dobj
 |   +-- discovered VBN amod
 |   |   +-- newly RB advmod
 |   |   +-- positive JJ dep
 |   |   |   +-- -LRB- -LRB- punct
 |   |   |   +-- -RRB- -RRB- punct
 |   |   +-- or CC cc
 |   |   +-- negative JJ conj
 |   |       +-- relevant JJ dep
 |   |       |   +-- longer RBR advmod
 |   |       |       +-- no RB advmod
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- -RRB- -RRB- punct
 |   +-- object NN nn
 +-- efficiently RB advmod
 +-- . . punct

27
Input: Unlike other spatial indexing methods that focus on reducing the query evaluation cost , Hu et al .
Parse:
Unlike IN ROOT
 +-- methods NNS pobj
 |   +-- other JJ amod
 |   +-- spatial JJ amod
 |   +-- indexing NN nn
 |   +-- focus VBP rcmod
 |       +-- that WDT nsubj
 |       +-- on IN prep
 |           +-- reducing VBG pcomp
 |               +-- cost NN dobj
 |                   +-- the DT det
 |                   +-- query NN nn
 |                   +-- evaluation NN nn
 |                   +-- , , punct
 |                   +-- al NNP appos
 |                       +-- Hu NNP nn
 |                       +-- et NNP nn
 +-- . . punct

28
Input: -LRB- 12 -RRB- proposed a general framework that minimizes the communication cost for location updates by maintaining a rectangular area called a safe region around moving objects .
Parse:
proposed VBD ROOT
 +-- 12 CD nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- framework NN dobj
 |   +-- a DT det
 |   +-- general JJ amod
 |   +-- minimizes VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- cost NN dobj
 |       |   +-- the DT det
 |       |   +-- communication NN nn
 |       |   +-- for IN prep
 |       |       +-- updates NNS pobj
 |       |           +-- location NN nn
 |       +-- by IN prep
 |           +-- maintaining VBG pcomp
 |               +-- area NN dobj
 |                   +-- a DT det
 |                   +-- rectangular JJ amod
 |                   +-- called VBD partmod
 |                       +-- region NN dep
 |                       |   +-- a DT det
 |                       |   +-- safe JJ amod
 |                       +-- around IN prep
 |                           +-- objects NNS pobj
 |                               +-- moving VBG amod
 +-- . . punct

29
Input: As long as any object resides in this region , all the query results are guaranteed to be valid in the system .
Parse:
guaranteed VBN ROOT
 +-- long RB advmod
 |   +-- As RB advmod
 |   +-- resides VBZ ccomp
 |       +-- as IN mark
 |       +-- object NN nsubj
 |       |   +-- any DT det
 |       +-- in IN prep
 |           +-- region NN pobj
 |               +-- this DT det
 +-- , , punct
 +-- results NNS nsubjpass
 |   +-- all PDT predet
 |   +-- the DT det
 |   +-- query NN nn
 +-- are VBP auxpass
 +-- valid JJ xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- in IN prep
 |       +-- system NN pobj
 |           +-- the DT det
 +-- . . punct

30
Input: If objects move out of their region , location update requests should be delivered to the database server and the affected queries are re evaluated on the fly .
Parse:
delivered VBN ROOT
 +-- move VBP advcl
 |   +-- If IN mark
 |   +-- objects NNS nsubj
 |   +-- out IN prep
 |       +-- of IN pcomp
 |           +-- region NN pobj
 |               +-- their PRP$ poss
 +-- , , punct
 +-- requests NNS nsubjpass
 |   +-- update NN nn
 |       +-- location NN nn
 +-- should MD aux
 +-- be VB auxpass
 +-- to IN prep
 |   +-- server NN pobj
 |       +-- the DT det
 |       +-- database NN nn
 +-- and CC cc
 +-- evaluated VBN conj
 |   +-- queries NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- affected VBN amod
 |   +-- are VBP auxpass
 |   +-- re IN advmod
 |   +-- on IN prep
 |       +-- fly NN pobj
 |           +-- the DT det
 +-- . . punct

31
Input: Our indexing method is very similar to the above approaches .
Parse:
similar JJ ROOT
 +-- method NN nsubj
 |   +-- Our PRP$ poss
 |   +-- indexing NN nn
 +-- is VBZ cop
 +-- very RB advmod
 +-- to IN prep
 |   +-- approaches NNS pobj
 |       +-- the DT det
 |       +-- above JJ amod
 +-- . . punct

32
Input: The major difference is that we are more concentrating on real time visibility determination while others assume loose timing constraints. .
Parse:
is VBZ ROOT
 +-- difference NN nsubj
 |   +-- The DT det
 |   +-- major JJ amod
 +-- concentrating VBG ccomp
 |   +-- that IN mark
 |   +-- we PRP nsubj
 |   +-- are VBP aux
 |   +-- more RBR advmod
 |   +-- on IN prep
 |   |   +-- determination NN pobj
 |   |       +-- time NN nn
 |   |       |   +-- real JJ amod
 |   |       +-- visibility NN nn
 |   +-- assume VBP advcl
 |       +-- while IN mark
 |       +-- others NNS nsubj
 |       +-- constraints. NNS dobj
 |           +-- loose JJ amod
 |           +-- timing NN nn
 +-- . . punct
