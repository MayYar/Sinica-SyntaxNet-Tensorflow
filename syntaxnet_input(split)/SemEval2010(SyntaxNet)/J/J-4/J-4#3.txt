
1
Input: There are K positions to be allocated among N bidders , where N > K .
Parse:
are VBP ROOT
 +-- There EX expl
 +-- positions NNS nsubj
 |   +-- K NNP nn
 |   +-- allocated VBN infmod
 |   |   +-- to TO aux
 |   |   +-- be VB auxpass
 |   |   +-- among IN prep
 |   |       +-- bidders NNS pobj
 |   |           +-- N JJ nn
 |   +-- , , punct
 |   +-- K NNP rcmod
 |       +-- where WRB advmod
 |       +-- N DT dep
 |       +-- > -RRB- punct
 +-- . . punct

2
Input: We assume that the -LRB- expected -RRB- click through rate of bidder s in position t is of the form esxt , i.e .
Parse:
assume VBP ROOT
 +-- We PRP nsubj
 +-- click VB ccomp
 |   +-- that IN mark
 |   +-- the DT nsubj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- expected VBN partmod
 |   |   +-- -RRB- -RRB- punct
 |   +-- through IN prep
 |       +-- rate NN pobj
 |           +-- of IN prep
 |           |   +-- bidder NN pobj
 |           |       +-- s POS possessive
 |           +-- in IN prep
 |               +-- position NN pobj
 |                   +-- is VBZ rcmod
 |                       +-- t NNP nsubj
 |                       +-- of IN prep
 |                           +-- esxt NN pobj
 |                               +-- the DT det
 |                               +-- form NN nn
 |                               +-- , , punct
 |                               +-- i.e NN appos
 +-- . . punct

3
Input: separable into an advertiser effect es ? -LRB- 0 , 1 -RRB- and position effect xt ? -LRB- 0 , 1 -RRB- .
Parse:
separable JJ ROOT
 +-- into IN prep
 |   +-- es NNS pobj
 |       +-- an DT det
 |       +-- effect NN nn
 |       |   +-- advertiser NN nn
 |       +-- ? . punct
 |       +-- 0 CD appos
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- , , punct
 |       |   +-- 1 CD num
 |       |   +-- -RRB- -RRB- punct
 |       +-- and CC cc
 |       +-- effect NN conj
 |           +-- position NN nn
 |           +-- xt NNP appos
 |               +-- ? . punct
 |               +-- -LRB- -LRB- punct
 |               +-- 0 CD dep
 |               |   +-- , , punct
 |               |   +-- 1 CD num
 |               +-- -RRB- -RRB- punct
 +-- . . punct

4
Input: We assume that x1 > x2 > .
Parse:
assume VBP ROOT
 +-- We PRP nsubj
 +-- x2 CD ccomp
 |   +-- that IN mark
 |   +-- x1 LS dep
 |   +-- > -RRB- punct
 +-- . . punct

5
Input: .
Parse:
. . ROOT

6
Input: .
Parse:
. . ROOT

7
Input: > xK > 0 and let xt = 0 for t > K .
Parse:
xK GW ROOT
 +-- > -RRB- punct
 +-- 0 CD punct
 +-- and CC cc
 +-- let VB conj
 |   +-- xt NNP dobj
 +-- = SYM punct
 +-- 0 NFP punct
 +-- for IN prep
 |   +-- K NNP pobj
 |       +-- t DT nn
 |       +-- > -RRB- punct
 +-- . . punct

8
Input: We also refer to es as the relevance of bidder s .
Parse:
refer VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- to IN prep
 |   +-- es NNS pobj
 +-- as IN prep
 |   +-- relevance NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- bidder NN pobj
 |               +-- s POS possessive
 +-- . . punct

9
Input: It is useful to interpret xt as the probability that an ad in position t will be noticed , and es as the probability that it will be clicked on if noticed .
Parse:
useful JJ ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- interpret VB xcomp
 |   +-- to TO aux
 |   +-- xt NNP dobj
 |   +-- as IN prep
 |       +-- probability NN pobj
 |           +-- the DT det
 |           +-- noticed VBN ccomp
 |           |   +-- that IN mark
 |           |   +-- ad NN nsubjpass
 |           |   |   +-- an DT det
 |           |   |   +-- in IN prep
 |           |   |       +-- t NN pobj
 |           |   |           +-- position NN nn
 |           |   +-- will MD aux
 |           |   +-- be VB auxpass
 |           +-- , , punct
 |           +-- and CC cc
 |           +-- es NNS conj
 |               +-- as IN prep
 |                   +-- probability NN pobj
 |                       +-- the DT det
 |                       +-- clicked VBN rcmod
 |                           +-- that WDT pobj
 |                           +-- it PRP nsubjpass
 |                           +-- will MD aux
 |                           +-- be VB auxpass
 |                           +-- on IN prep
 |                           +-- noticed VBN advcl
 |                               +-- if IN mark
 +-- . . punct

10
Input: Bidder s has value vs for each click .
Parse:
has VBZ ROOT
 +-- Bidder NNP nsubj
 |   +-- s POS possessive
 +-- value NN dobj
 +-- for IN prep
 |   +-- vs RB advmod
 |   +-- click NN pobj
 |       +-- each DT det
 +-- . . punct

11
Input: Bidders have quasilinear utility , so that the utility to bidder s of obtaining position t at a price of p per click is esxt -LRB- vs ? p -RRB- .
Parse:
have VBP ROOT
 +-- Bidders NNS nsubj
 +-- utility NN dobj
 |   +-- quasilinear NN nn
 +-- , , punct
 +-- esxt NN advcl
 |   +-- so IN mark
 |   +-- that IN mark
 |   +-- utility NN nsubj
 |   |   +-- the DT det
 |   |   +-- bidder VB infmod
 |   |   |   +-- to TO aux
 |   |   +-- s POS possessive
 |   |   +-- of IN prep
 |   |       +-- obtaining VBG pcomp
 |   |           +-- t NNP dobj
 |   |           |   +-- position NN nn
 |   |           +-- at IN prep
 |   |               +-- price NN pobj
 |   |                   +-- a DT det
 |   |                   +-- of IN prep
 |   |                       +-- p NN pobj
 |   |                           +-- per IN prep
 |   |                               +-- click NN pobj
 |   +-- is VBZ cop
 |   +-- vs RB prep
 |       +-- -LRB- -LRB- punct
 |       +-- ? . punct
 |       +-- p NN pobj
 |       +-- -RRB- -RRB- punct
 +-- . . punct

12
Input: A weight ws is associated with agent s , and agents bid for position .
Parse:
associated VBN ROOT
 +-- ws NNS nsubjpass
 |   +-- A DT det
 |   +-- weight NN nn
 +-- is VBZ auxpass
 +-- with IN prep
 |   +-- agent NN pobj
 |       +-- s POS possessive
 +-- , , punct
 +-- and CC cc
 +-- bid NN conj
 |   +-- agents NNS nsubj
 |   +-- for IN prep
 |       +-- position NN pobj
 +-- . . punct

13
Input: If agent s bids bs , his corresponding score is wsbs .
Parse:
wsbs NNS ROOT
 +-- bs NNS advcl
 |   +-- If IN mark
 |   +-- bids NNS nsubj
 |       +-- agent NN poss
 |           +-- s POS possessive
 +-- , , punct
 +-- score NN nsubj
 |   +-- his PRP$ poss
 |   +-- corresponding VBG amod
 +-- is VBZ cop
 +-- . . punct

14
Input: Agents are ranked by score , so that the agent with highest score is ranked first , and so on .
Parse:
ranked VBN ROOT
 +-- Agents NNS nsubjpass
 +-- are VBP auxpass
 +-- by IN prep
 |   +-- score NN pobj
 +-- , , punct
 +-- ranked VBN advcl
 |   +-- so IN mark
 |   +-- that IN mark
 |   +-- agent NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- with IN prep
 |   |       +-- score NN pobj
 |   |           +-- highest JJS amod
 |   +-- is VBZ auxpass
 |   +-- first RB advmod
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- on RB advmod
 |       +-- so RB advmod
 +-- . . punct

15
Input: We assume throughout that agents are numbered such that agent s obtains position s .
Parse:
assume VBP ROOT
 +-- We PRP nsubj
 +-- numbered VBN advcl
 |   +-- throughout IN mark
 |   +-- that DT mark
 |   +-- agents NNS nsubjpass
 |   +-- are VBP auxpass
 |   +-- position NN dobj
 |       +-- agent NN poss
 |       |   +-- such JJ amod
 |       |   +-- that IN det
 |       |   +-- s POS possessive
 |       +-- obtains NNS nn
 |       +-- s POS possessive
 +-- . . punct

16
Input: An agent pays per click the lowest bid necessary to retain his position , so that the agent in slot s pays ws+1 ws bs+1 .
Parse:
pays VBZ ROOT
 +-- agent NN nsubj
 |   +-- An DT det
 +-- per IN prep
 |   +-- click VB pobj
 +-- bid VBN dobj
 |   +-- the DT det
 |   +-- lowest JJS amod
 |   +-- necessary JJ amod
 |       +-- retain VB xcomp
 |           +-- to TO aux
 |           +-- position NN dobj
 |               +-- his PRP$ poss
 +-- , , punct
 +-- pays NNS advcl
 |   +-- so IN mark
 |   +-- that IN mark
 |   +-- agent NN nsubj
 |   |   +-- the DT det
 |   |   +-- in IN prep
 |   |       +-- slot NN pobj
 |   |           +-- s POS possessive
 |   +-- ws NNS iobj
 |   |   +-- ws+1 CD num
 |   +-- bs+1 CD dobj
 +-- . . punct

17
Input: The auctioneer may introduce a reserve score of r , so that an agent '' s ad appears only if his score is at least r .
Parse:
introduce VB ROOT
 +-- auctioneer NN nsubj
 |   +-- The DT det
 +-- may MD aux
 +-- score NN dobj
 |   +-- a DT det
 |   +-- reserve NN nn
 |   +-- of IN prep
 |       +-- r NN pobj
 +-- , , punct
 +-- appears VBZ advcl
 |   +-- so IN mark
 |   +-- that IN mark
 |   +-- ad NN nsubj
 |   |   +-- agent NN poss
 |   |       +-- an DT det
 |   |       +-- '' '' punct
 |   |       +-- s POS possessive
 |   +-- r JJ advcl
 |       +-- only RB advmod
 |       +-- if IN mark
 |       +-- score NN nsubj
 |       |   +-- his PRP$ poss
 |       +-- is VBZ cop
 |       +-- least RBS advmod
 |           +-- at RB advmod
 +-- . . punct

18
Input: For agent s , this translates into a reserve price -LRB- minimum bid -RRB- of r ws. .
Parse:
translates VBZ ROOT
 +-- For IN prep
 |   +-- agent NN pobj
 |       +-- s POS possessive
 +-- , , punct
 +-- this DT nsubj
 +-- into IN prep
 |   +-- price NN pobj
 |       +-- a DT det
 |       +-- reserve NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- bid NN dep
 |       |   +-- minimum JJ amod
 |       +-- -RRB- -RRB- punct
 |       +-- of IN prep
 |           +-- ws. NNS pobj
 |               +-- r NN amod
 +-- . . punct
