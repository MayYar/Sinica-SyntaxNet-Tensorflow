
1
Input: An indirect way to influence the allocation is to introduce bidding credits.3 Suppose bidder s is only required to pay a fraction cs ? -LRB- 0 , 1 -RRB- of the price he faces , or equivalently a -LRB- 1 ? cs -RRB- fraction of his clicks are received for free .
Parse:
is VBZ ROOT
 +-- way NN nsubj
 |   +-- An DT det
 |   +-- indirect JJ amod
 |   +-- influence VB infmod
 |       +-- to TO aux
 |       +-- allocation NN dobj
 |           +-- the DT det
 +-- introduce VB xcomp
 |   +-- to TO aux
 |   +-- bidding VBG xcomp
 |   |   +-- credits.3 CD dobj
 |   +-- Suppose VB dobj
 |       +-- required VBN dep
 |           +-- bidder NN nsubjpass
 |           |   +-- s POS possessive
 |           +-- is VBZ auxpass
 |           +-- only RB advmod
 |           +-- pay VB xcomp
 |           |   +-- to TO aux
 |           |   +-- cs NNS dobj
 |           |       +-- a DT det
 |           |       +-- fraction NN amod
 |           +-- ? . punct
 |           +-- -LRB- -LRB- punct
 |           +-- 0 CD dobj
 |           |   +-- , , punct
 |           |   +-- 1 CD num
 |           +-- -RRB- -RRB- punct
 |           +-- of IN prep
 |           |   +-- price NN pobj
 |           |       +-- the DT det
 |           |       +-- faces VBZ rcmod
 |           |           +-- he PRP nsubj
 |           +-- , , punct
 |           +-- or CC cc
 |           +-- received VBN conj
 |               +-- fraction NN nsubjpass
 |               |   +-- equivalently RB advmod
 |               |   +-- cs NNS dep
 |               |   |   +-- a DT det
 |               |   |   +-- -LRB- -LRB- punct
 |               |   |   +-- 1 CD num
 |               |   |   +-- ? . punct
 |               |   |   +-- -RRB- -RRB- punct
 |               |   +-- of IN prep
 |               |       +-- clicks NNS pobj
 |               |           +-- his PRP$ poss
 |               +-- are VBP auxpass
 |               +-- for IN prep
 |                   +-- free JJ pobj
 +-- . . punct

2
Input: Then in a symmetric equilibrium , we have esxs ? vs ? ws+1 ws csbs+1 ? ? esxt ? vs ? wt+1 ws csbt+1 ? or equivalently xs ? ws cs vs ? ws+1bs+1 ? ? xt ? ws cs vs ? wt+1bt+1 ? .
Parse:
ws NNS ROOT
 +-- esxs VBN dep
 |   +-- Then RB advmod
 |   +-- in IN prep
 |   |   +-- equilibrium NN pobj
 |   |       +-- a DT det
 |   |       +-- symmetric JJ amod
 |   +-- , , punct
 |   +-- we PRP nsubj
 |   +-- have VBP aux
 |   +-- ? . punct
 |   +-- vs RB advmod
 +-- ws+1 CD num
 +-- csbs+1 CD dep
 +-- ? . punct
 +-- esxt VB dep
 +-- vs RB advmod
 +-- ws NNS dep
 |   +-- wt+1 CD num
 |   +-- xs VB dep
 |   |   +-- csbt+1 CD num
 |   |       +-- ? , punct
 |   |       +-- or CC cc
 |   |       +-- equivalently RB conj
 |   +-- ? . punct
 |   +-- ws NNS dep
 |       +-- cs FW dep
 |       +-- vs IN prep
 |           +-- ? . punct
 |           +-- ws+1bs+1 CD pobj
 +-- xt NN dep
 |   +-- ? . punct
 |   +-- ws NNS dep
 |   +-- cs FW dep
 |   +-- vs IN prep
 |       +-- ? . punct
 |       +-- wt+1bt+1 CD pobj
 +-- . . punct

3
Input: If we define ws = ws cs and bs = csbs , we recover inequality -LRB- 3 -RRB- .
Parse:
recover VBP ROOT
 +-- define VBP advcl
 |   +-- If IN mark
 |   +-- we PRP nsubj
 |   +-- cs NNS dobj
 |       +-- ws NNS nn
 |       +-- = SYM dep
 |       +-- and CC cc
 |       +-- bs NNS conj
 |           +-- = SYM cc
 |           +-- csbs NNS conj
 +-- , , punct
 +-- we PRP nsubj
 +-- inequality NN dobj
 |   +-- -LRB- -LRB- punct
 |   +-- 3 CD dep
 |   +-- -RRB- -RRB- punct
 +-- . . punct

4
Input: Hence the equilibrium revenue will be as if we had used weights w rather than w .
Parse:
be VB ROOT
 +-- Hence RB advmod
 +-- revenue NN nsubj
 |   +-- the DT det
 |   +-- equilibrium NN nn
 +-- will MD aux
 +-- used VBN advcl
 |   +-- as IN mark
 |   +-- if IN mark
 |   +-- we PRP nsubj
 |   +-- had VBD aux
 |   +-- weights NNS dobj
 |   +-- w RB advmod
 |       +-- rather RB cc
 |       |   +-- than IN mwe
 |       +-- w RB conj
 +-- . . punct

5
Input: The bids will be scaled versions of the bids that arise with weights w -LRB- and no credits -RRB- , where each bid is scaled by the corresponding factor 1 cs .
Parse:
versions NNS ROOT
 +-- bids NNS nsubj
 |   +-- The DT det
 +-- will MD aux
 +-- be VB cop
 +-- scaled VBN amod
 +-- of IN prep
 |   +-- bids NNS pobj
 |       +-- the DT det
 |       +-- arise VBP rcmod
 |       |   +-- that WDT nsubj
 |       |   +-- with IN prep
 |       |       +-- weights NNS pobj
 |       |           +-- w IN advmod
 |       +-- -LRB- -LRB- punct
 |       +-- and CC cc
 |       +-- credits NNS conj
 |       |   +-- no DT det
 |       +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- scaled VBN rcmod
 |           +-- where WRB advmod
 |           +-- bid NN nsubjpass
 |           |   +-- each DT det
 |           +-- is VBZ auxpass
 |           +-- by IN prep
 |               +-- factor NN pobj
 |                   +-- the DT det
 |                   +-- corresponding VBG amod
 |                   +-- cs NNS dep
 |                       +-- 1 CD num
 +-- . . punct

6
Input: This technique allows one to use credits instead of explicit changes in the weights to affect revenue .
Parse:
allows VBZ ROOT
 +-- technique NN nsubj
 |   +-- This DT det
 +-- use VB xcomp
 |   +-- one CD nsubj
 |   +-- to TO aux
 |   +-- credits NNS dobj
 |   |   +-- instead RB cc
 |   |   |   +-- of IN mwe
 |   |   +-- changes NNS conj
 |   |       +-- explicit JJ amod
 |   |       +-- in IN prep
 |   |           +-- weights NNS pobj
 |   |               +-- the DT det
 |   +-- affect VB xcomp
 |       +-- to TO aux
 |       +-- revenue NN dobj
 +-- . . punct

7
Input: For instance , rankby revenue will yield the same revenue as rank by bid if we set credits to cs = es. .
Parse:
yield VB ROOT
 +-- For IN prep
 |   +-- instance NN pobj
 +-- , , punct
 +-- revenue NN nsubj
 |   +-- rankby NN nn
 +-- will MD aux
 +-- revenue NN dobj
 |   +-- the DT det
 |   +-- same JJ amod
 |   +-- as IN prep
 |       +-- rank NN pobj
 +-- by IN prep
 |   +-- bid NN pobj
 +-- set VBD advcl
 |   +-- if IN mark
 |   +-- we PRP nsubj
 |   +-- credits NNS dobj
 |       +-- to IN prep
 |           +-- cs NNS pobj
 |               +-- = SYM cc
 |               +-- es. NNS conj
 +-- . . punct
