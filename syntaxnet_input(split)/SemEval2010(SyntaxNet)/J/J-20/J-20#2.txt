
1
Input: The role of kidneys is to filter waste from blood .
Parse:
is VBZ ROOT
 +-- role NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- kidneys NNS pobj
 +-- filter VB xcomp
 |   +-- to TO aux
 |   +-- waste NN dobj
 |   +-- from IN prep
 |       +-- blood NN pobj
 +-- . . punct

2
Input: Kidney failure results in accumulation of this waste , which leads to death in months .
Parse:
failure NN ROOT
 +-- Kidney NNP nsubj
 +-- results NNS dobj
 |   +-- in IN prep
 |       +-- accumulation NN pobj
 |           +-- of IN prep
 |               +-- waste NN pobj
 |                   +-- this DT det
 |                   +-- , , punct
 |                   +-- leads VBZ rcmod
 |                       +-- which WDT nsubj
 |                       +-- to IN prep
 |                       |   +-- death NN pobj
 |                       +-- in IN prep
 |                           +-- months NNS pobj
 +-- . . punct

3
Input: One treatment option is dialysis , in which the patient goes to a hospital to have his her blood filtered by an external machine .
Parse:
dialysis NN ROOT
 +-- option NN nsubj
 |   +-- One CD num
 |   +-- treatment NN nn
 +-- is VBZ cop
 +-- , , punct
 +-- goes VBZ rcmod
 |   +-- in IN prep
 |   |   +-- which WDT pobj
 |   +-- patient NN nsubj
 |   |   +-- the DT det
 |   +-- to IN prep
 |   |   +-- hospital NN pobj
 |   |       +-- a DT det
 |   +-- have VB xcomp
 |       +-- to TO aux
 |       +-- filtered VBN ccomp
 |           +-- blood NN nsubj
 |           |   +-- his PRP$ poss
 |           |   +-- her PRP$ poss
 |           +-- by IN prep
 |               +-- machine NN pobj
 |                   +-- an DT det
 |                   +-- external JJ amod
 +-- . . punct

4
Input: Several visits are required per week , and each takes several hours .
Parse:
required VBN ROOT
 +-- visits NNS nsubjpass
 |   +-- Several JJ amod
 +-- are VBP auxpass
 +-- per IN prep
 |   +-- week NN pobj
 +-- , , punct
 +-- and CC cc
 +-- takes VBZ conj
 |   +-- each DT nsubj
 |   +-- hours NNS dobj
 |       +-- several JJ amod
 +-- . . punct

5
Input: The quality of life on dialysis can be extremely low , and in fact many patients opt to withdraw from dialysis , leading to a natural death .
Parse:
low JJ ROOT
 +-- quality NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |   |   +-- life NN pobj
 |   +-- on IN prep
 |       +-- dialysis NN pobj
 +-- can MD aux
 +-- be VB cop
 +-- extremely RB advmod
 +-- , , punct
 +-- and CC cc
 +-- opt VBP conj
 |   +-- in IN prep
 |   |   +-- fact NN pobj
 |   +-- patients NNS nsubj
 |   |   +-- many JJ amod
 |   +-- withdraw VB xcomp
 |   |   +-- to TO aux
 |   |   +-- from IN prep
 |   |       +-- dialysis NN pobj
 |   +-- , , punct
 |   +-- leading VBG xcomp
 |       +-- to IN prep
 |           +-- death NN pobj
 |               +-- a DT det
 |               +-- natural JJ amod
 +-- . . punct

6
Input: Only 12 % of dialysis patients survive 10 years -LRB- 23 -RRB- .
Parse:
survive VBP ROOT
 +-- % NN nsubj
 |   +-- 12 CD num
 |   |   +-- Only RB quantmod
 |   +-- of IN prep
 |       +-- patients NNS pobj
 |           +-- dialysis NN nn
 +-- years NNS dobj
 |   +-- 10 CD num
 |   +-- -LRB- -LRB- punct
 |   +-- 23 CD dep
 |   +-- -RRB- -RRB- punct
 +-- . . punct

7
Input: Instead , the preferred treatment is a kidney transplant .
Parse:
transplant NN ROOT
 +-- Instead RB advmod
 +-- , , punct
 +-- treatment NN nsubj
 |   +-- the DT det
 |   +-- preferred JJ amod
 +-- is VBZ cop
 +-- a DT det
 +-- kidney NN nn
 +-- . . punct

8
Input: Kidney transplants are by far the most common transplant .
Parse:
transplant NN ROOT
 +-- transplants NNS nsubj
 |   +-- Kidney NNP nn
 +-- are VBP cop
 +-- by IN prep
 |   +-- far RB pcomp
 +-- the DT det
 +-- common JJ amod
 |   +-- most RBS advmod
 +-- . . punct

9
Input: Unfortunately , the demand for kidneys far outstrips supply .
Parse:
outstrips NNS ROOT
 +-- Unfortunately RB advmod
 +-- , , punct
 +-- demand NN nsubj
 |   +-- the DT det
 |   +-- for IN prep
 |       +-- kidneys NNS pobj
 +-- far RB advmod
 +-- supply NN dobj
 +-- . . punct

10
Input: In the United States in 2005 , 4 , 052 people died waiting for a life saving kidney transplant .
Parse:
died VBD ROOT
 +-- In IN prep
 |   +-- States NNP pobj
 |       +-- the DT det
 |       +-- United NNP nn
 +-- in IN prep
 |   +-- 2005 CD pobj
 |       +-- , , punct
 |       +-- 4 CD num
 +-- , , punct
 +-- people NNS nsubj
 |   +-- 052 CD num
 +-- waiting VBG xcomp
 |   +-- for IN prep
 |       +-- transplant NN pobj
 |           +-- a DT det
 |           +-- saving VBG amod
 |           |   +-- life NN dep
 |           +-- kidney NN nn
 +-- . . punct

11
Input: During this time , almost 30 , 000 people were added to the national waiting list , while only 9 , 913 people left the list after receiving a deceaseddonor kidney .
Parse:
added VBN ROOT
 +-- During IN prep
 |   +-- time NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- people NNS nsubjpass
 |   +-- 30 CD num
 |       +-- almost RB quantmod
 |       +-- , , punct
 |       +-- 000 CD number
 +-- were VBD auxpass
 +-- to IN prep
 |   +-- list NN pobj
 |       +-- the DT det
 |       +-- national JJ amod
 |       +-- waiting NN nn
 +-- left VBD advcl
 |   +-- while IN mark
 |   +-- 9 CD nsubj
 |   |   +-- only RB advmod
 |   |   +-- , , punct
 |   |   +-- people NNS appos
 |   |       +-- 913 CD num
 |   +-- list NN dobj
 |   |   +-- the DT det
 |   +-- after IN prep
 |       +-- receiving VBG pcomp
 |           +-- kidney NN dobj
 |               +-- a DT det
 |               +-- deceaseddonor NN nn
 +-- . . punct

12
Input: The waiting list currently has over 70 , 000 people , and the median waiting time ranges from 2 to 5 years , depending on blood type.1 For many patients with kidney disease , the best option is to find a living donor , that is , a healthy person willing to donate one of his her two kidneys .
Parse:
has VBZ ROOT
 +-- list NN nsubj
 |   +-- The DT det
 |   +-- waiting NN amod
 +-- currently RB advmod
 +-- 70 CD dobj
     +-- over IN quantmod
     +-- , , punct
     +-- people NNS conj
     |   +-- 000 CD num
     +-- and CC cc
     +-- ranges VBZ conj
         +-- median JJ nsubj
         |   +-- the DT det
         |   +-- waiting VBG partmod
         |       +-- time NN dobj
         +-- from IN prep
         |   +-- 2 CD pobj
         |   +-- to IN prep
         |       +-- years NNS pobj
         |           +-- 5 CD num
         +-- , , punct
         +-- depending VBG prep
             +-- on IN pcomp
                 +-- blood NN pobj
                     +-- type.1 CD dep
                         +-- For IN prep
                         |   +-- patients NNS pobj
                         |       +-- many JJ amod
                         |       +-- with IN prep
                         |           +-- disease NN pobj
                         |               +-- kidney NN nn
                         +-- , , punct
                         +-- is VBZ ccomp
                         |   +-- option NN nsubj
                         |   |   +-- the DT det
                         |   |   +-- best JJS amod
                         |   +-- find VB xcomp
                         |       +-- to TO aux
                         |       +-- donor NN dobj
                         |           +-- a DT det
                         |           +-- living NN amod
                         +-- person NN dep
                             +-- is VBZ advmod
                             |   +-- that DT advmod
                             +-- , , punct
                             +-- a DT det
                             +-- healthy JJ amod
                             +-- willing JJ amod
                             |   +-- donate VB xcomp
                             |       +-- to TO aux
                             |       +-- one CD dobj
                             |           +-- of IN prep
                             |               +-- kidneys NNS pobj
                             |                   +-- his PRP$ poss
                             |                   +-- her PRP$ poss
                             |                   +-- two CD num
                             +-- . . punct

13
Input: Although there are marketplaces for buying and selling living donor kidneys , the commercialization of human organs is almost universally regarded as unethical , and the practice is often explicitly illegal , such as in the US .
Parse:
regarded VBN ROOT
 +-- are VBP advcl
 |   +-- Although IN mark
 |   +-- there EX expl
 |   +-- marketplaces NNS nsubj
 |       +-- for IN prep
 |           +-- buying VBG pcomp
 |               +-- and CC cc
 |               +-- selling VBG conj
 |               +-- kidneys NNS dobj
 |                   +-- donor NN nn
 |                       +-- living NN amod
 +-- , , punct
 +-- commercialization NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- organs NNS pobj
 |           +-- human JJ amod
 +-- is VBZ auxpass
 +-- universally RB advmod
 |   +-- almost RB advmod
 +-- as IN prep
 |   +-- unethical JJ pobj
 +-- and CC cc
 +-- illegal JJ conj
 |   +-- practice NN nsubj
 |   |   +-- the DT det
 |   +-- is VBZ cop
 |   +-- often RB advmod
 |   +-- explicitly RB advmod
 |   +-- , , punct
 |   +-- as IN prep
 |       +-- such JJ mwe
 |       +-- in IN pcomp
 |           +-- US NNP pobj
 |               +-- the DT det
 +-- . . punct

14
Input: However , in most countries , live donation is legal , provided it occurs as a gift with no financial compensation .
Parse:
legal JJ ROOT
 +-- However RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- countries NNS pobj
 |       +-- most JJS amod
 +-- donation NN nsubj
 |   +-- live VBP amod
 +-- is VBZ cop
 +-- occurs VBZ advcl
 |   +-- provided VBN mark
 |   +-- it PRP nsubj
 |   +-- as IN prep
 |       +-- gift NN pobj
 |           +-- a DT det
 |           +-- with IN prep
 |               +-- compensation NN pobj
 |                   +-- no DT det
 |                   +-- financial JJ amod
 +-- . . punct

15
Input: In 2005 , there were 6 , 563 live donations in the US .
Parse:
were VBD ROOT
 +-- In IN prep
 |   +-- 2005 CD pobj
 +-- , , punct
 +-- there EX expl
 +-- 6 CD nsubj
 |   +-- , , punct
 |   +-- donations NNS appos
 |       +-- 563 CD num
 |       +-- live JJ amod
 |       +-- in IN prep
 |           +-- US NNP pobj
 |               +-- the DT det
 +-- . . punct

16
Input: The number of live donations would have been much higher if it were not for the fact that , frequently , a potential donor 1 Data from the United Network for Organ Sharing -LRB- 21 -RRB- .
Parse:
higher JJR ROOT
 +-- number NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- donations NNS pobj
 |           +-- live JJ amod
 +-- would MD aux
 +-- have VB aux
 +-- been VBN cop
 +-- much RB advmod
 +-- were VBD advcl
 |   +-- if IN mark
 |   +-- it PRP nsubj
 |   +-- not RB neg
 |   +-- for IN prep
 |       +-- fact NN pobj
 |           +-- the DT det
 |           +-- donor NN ccomp
 |               +-- that IN mark
 |               +-- , , punct
 |               +-- frequently RB advmod
 |               +-- a DT det
 |               +-- potential JJ amod
 |               +-- Data NNP dobj
 |                   +-- 1 CD num
 |                   +-- from IN prep
 |                       +-- Network NNP pobj
 |                           +-- the DT det
 |                           +-- United NNP nn
 |                           +-- for IN prep
 |                           |   +-- Sharing NNP pobj
 |                           |       +-- Organ NNP nn
 |                           +-- -LRB- -LRB- punct
 |                           +-- 21 CD dep
 |                           +-- -RRB- -RRB- punct
 +-- . . punct

17
Input: 295 and his intended recipient are blood type or tissue type incompatible .
Parse:
incompatible JJ ROOT
 +-- 295 CD nsubj
 |   +-- and CC cc
 |   +-- recipient NN conj
 |       +-- his PRP$ poss
 |       +-- intended VBN amod
 +-- are VBP cop
 +-- type NN npadvmod
 |   +-- blood NN nn
 |   +-- or CC cc
 |   +-- type NN conj
 |       +-- tissue NN nn
 +-- . . punct

18
Input: In the past , the incompatible donor was sent home , leaving the patient to wait for a deceased donor kidney .
Parse:
sent VBN ROOT
 +-- In IN prep
 |   +-- past NN pobj
 |       +-- the DT det
 +-- , , punct
 +-- donor NN nsubjpass
 |   +-- the DT det
 |   +-- incompatible JJ amod
 +-- was VBD auxpass
 +-- home RB advmod
 +-- leaving VBG xcomp
 |   +-- patient NN dobj
 |   |   +-- the DT det
 |   +-- wait VB xcomp
 |       +-- to TO aux
 |       +-- for IN prep
 |           +-- kidney NN pobj
 |               +-- a DT det
 |               +-- deceased JJ amod
 |               +-- donor NN nn
 +-- . . punct

19
Input: However , there are now a few regional kidney exchanges in the United States , in which patients can swap their incompatible donors with each other , in order to each obtain a compatible donor .
Parse:
are VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- there EX expl
 +-- now RB advmod
 +-- exchanges NNS nsubj
 |   +-- a DT det
 |   +-- few JJ amod
 |   +-- regional JJ amod
 |   +-- kidney NN nn
 |   +-- in IN prep
 |   |   +-- States NNP pobj
 |   |       +-- the DT det
 |   |       +-- United NNP nn
 |   +-- , , punct
 |   +-- swap VB rcmod
 |       +-- in IN prep
 |       |   +-- order NN pobj
 |       |       +-- obtain VB infmod
 |       |           +-- to TO aux
 |       |           +-- each DT nsubj
 |       |           +-- donor NN dobj
 |       |               +-- a DT det
 |       |               +-- compatible JJ amod
 |       +-- patients NNS nsubj
 |       +-- can MD aux
 |       +-- donors NNS dobj
 |       |   +-- their PRP$ poss
 |       |   +-- incompatible JJ amod
 |       +-- with IN prep
 |       |   +-- other JJ pobj
 |       |       +-- each DT det
 |       +-- , , punct
 +-- . . punct

20
Input: These markets are examples of barter exchanges .
Parse:
examples NNS ROOT
 +-- markets NNS nsubj
 |   +-- These DT det
 +-- are VBP cop
 +-- of IN prep
 |   +-- exchanges NNS pobj
 |       +-- barter NN nn
 +-- . . punct

21
Input: In a barter exchange market , agents -LRB- patients -RRB- seek to swap their items -LRB- incompatible donors -RRB- with each other .
Parse:
seek VBP ROOT
 +-- In IN prep
 |   +-- market NN pobj
 |       +-- a DT det
 |       +-- exchange NN nn
 |           +-- barter NN nn
 +-- , , punct
 +-- agents NNS nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- patients NNS dep
 |   +-- -RRB- -RRB- punct
 +-- swap VB xcomp
 |   +-- to TO aux
 |   +-- items NNS dobj
 |   |   +-- their PRP$ poss
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- donors NNS dep
 |   |   |   +-- incompatible JJ amod
 |   |   +-- -RRB- -RRB- punct
 |   +-- with IN prep
 |       +-- other JJ pobj
 |           +-- each DT det
 +-- . . punct

22
Input: These swaps consist of cycles of agents , with each agent receiving the item of the next agent in the cycle .
Parse:
consist VBP ROOT
 +-- swaps NNS nsubj
 |   +-- These DT det
 +-- of IN prep
 |   +-- cycles NNS pobj
 |       +-- of IN prep
 |           +-- agents NNS pobj
 +-- , , punct
 +-- with IN prep
 |   +-- receiving VBG pcomp
 |       +-- agent NN nsubj
 |       |   +-- each DT det
 |       +-- item NN dobj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- agent NN pobj
 |       |           +-- the DT det
 |       |           +-- next JJ amod
 |       +-- in IN prep
 |           +-- cycle NN pobj
 |               +-- the DT det
 +-- . . punct

23
Input: Barter exchanges are ubiquitous
Parse:
ubiquitous JJ ROOT
 +-- exchanges NNS nsubj
 |   +-- Barter NN nn
 +-- are VBP cop

24
Input: For many years , there has even been a large shoe exchange in the United States -LRB- 10 -RRB- .
Parse:
exchange NN ROOT
 +-- For IN prep
 |   +-- years NNS pobj
 |       +-- many JJ amod
 +-- , , punct
 +-- there EX expl
 +-- has VBZ aux
 +-- even RB advmod
 +-- been VBN cop
 +-- a DT det
 +-- large JJ amod
 +-- shoe NN nn
 +-- in IN prep
 |   +-- States NNP pobj
 |       +-- the DT det
 |       +-- United NNP nn
 |       +-- 10 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

25
Input: People with different sized feet use this to avoid having to buy two pairs of shoes .
Parse:
use VBP ROOT
 +-- People NNS nsubj
 |   +-- with IN prep
 |       +-- feet NNS pobj
 |           +-- different JJ amod
 |           +-- sized JJ amod
 +-- this DT dobj
 +-- avoid VB xcomp
 |   +-- to TO aux
 |   +-- having VBG xcomp
 |       +-- buy VB xcomp
 |           +-- to TO aux
 |           +-- pairs NNS dobj
 |               +-- two CD num
 |               +-- of IN prep
 |                   +-- shoes NNS pobj
 +-- . . punct

26
Input: Leg amputees have a separate exchange to share the cost of buying a single pair of shoes .
Parse:
have VBP ROOT
 +-- amputees NNS nsubj
 |   +-- Leg NN nn
 +-- exchange NN dobj
 |   +-- a DT det
 |   +-- separate JJ amod
 |   +-- share VB infmod
 |       +-- to TO aux
 |       +-- cost NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- buying VBG pcomp
 |                   +-- pair NN dobj
 |                       +-- a DT det
 |                       +-- single JJ amod
 |                       +-- of IN prep
 |                           +-- shoes NNS pobj
 +-- . . punct

27
Input: We can encode a barter exchange market as a directed graph G = -LRB- V , E -RRB- in the following way .
Parse:
encode VB ROOT
 +-- We PRP nsubj
 +-- can MD aux
 +-- market NN dobj
 |   +-- a DT det
 |   +-- exchange NN nn
 |       +-- barter NN nn
 +-- as IN prep
 |   +-- G NNP pobj
 |       +-- a DT det
 |       +-- directed VBN amod
 |       +-- graph NN nn
 |       +-- = SYM punct
 |       +-- V NNP appos
 |           +-- -LRB- -LRB- punct
 |           +-- , , punct
 |           +-- E NNP appos
 |           +-- -RRB- -RRB- punct
 +-- in IN prep
 |   +-- way NN pobj
 |       +-- the DT det
 |       +-- following VBG amod
 +-- . . punct

28
Input: Construct one vertex for each agent .
Parse:
Construct VB ROOT
 +-- vertex NN dobj
 |   +-- one CD num
 |   +-- for IN prep
 |       +-- agent NN pobj
 |           +-- each DT det
 +-- . . punct

29
Input: Add a weighted edge e from one agent vi to another vj , if vi wants the item of vj .
Parse:
Add VB ROOT
 +-- e $ dobj
 |   +-- a DT det
 |   +-- edge NN nn
 |       +-- weighted JJ amod
 +-- from IN prep
 |   +-- vi NN pobj
 |       +-- one CD num
 |       +-- agent NN nn
 +-- to IN prep
 |   +-- vj NNP pobj
 |       +-- another DT det
 +-- , , punct
 +-- wants VBZ advcl
 |   +-- if IN mark
 |   +-- vi PRP nsubj
 |   +-- item NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- vj NNP pobj
 +-- . . punct

30
Input: The weight we of e represents the utility to vi of obtaining vj '' s item .
Parse:
represents VBZ ROOT
 +-- weight NN nsubj
 |   +-- The DT det
 |   +-- we PRP dep
 |   +-- of IN prep
 |       +-- e NNP pobj
 +-- utility NN dobj
 |   +-- the DT det
 |   +-- to IN prep
 |   |   +-- vi NN pobj
 |   +-- of IN prep
 |       +-- item NN pobj
 |           +-- obtaining VBG poss
 |               +-- vj , punct
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- . . punct

31
Input: A cycle c in this graph represents a possible swap , with each agent in the cycle obtaining the item of the next agent .
Parse:
represents VBZ ROOT
 +-- c NN nsubj
 |   +-- A DT det
 |   +-- cycle NN nn
 |   +-- in IN prep
 |       +-- graph NN pobj
 |           +-- this DT det
 +-- swap NN dobj
 |   +-- a DT det
 |   +-- possible JJ amod
 |   +-- , , punct
 |   +-- with IN prep
 |       +-- obtaining VBG pcomp
 |           +-- agent NN nsubj
 |           |   +-- each DT det
 |           |   +-- in IN prep
 |           |       +-- cycle NN pobj
 |           |           +-- the DT det
 |           +-- item NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- agent NN pobj
 |                       +-- the DT det
 |                       +-- next JJ amod
 +-- . . punct

32
Input: The weight wc of a cycle c is the sum of its edge weights .
Parse:
sum NN ROOT
 +-- wc NN nsubj
 |   +-- The DT det
 |   +-- weight NN nn
 |   +-- of IN prep
 |       +-- c NN pobj
 |           +-- a DT det
 |           +-- cycle NN nn
 +-- is VBZ cop
 +-- the DT det
 +-- of IN prep
 |   +-- weights NNS pobj
 |       +-- its PRP$ poss
 |       +-- edge NN nn
 +-- . . punct

33
Input: An exchange is a collection of disjoint cycles .
Parse:
collection NN ROOT
 +-- exchange NN nsubj
 |   +-- An DT det
 +-- is VBZ cop
 +-- a DT det
 +-- of IN prep
 |   +-- cycles NNS pobj
 |       +-- disjoint NN nn
 +-- . . punct

34
Input: The weight of an exchange is the sum of its cycle weights .
Parse:
sum NN ROOT
 +-- weight NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- exchange NN pobj
 |           +-- an DT det
 +-- is VBZ cop
 +-- the DT det
 +-- of IN prep
 |   +-- weights NNS pobj
 |       +-- its PRP$ poss
 |       +-- cycle NN nn
 +-- . . punct

35
Input: A social welfare maximizing exchange is one with maximum weight .
Parse:
one CD ROOT
 +-- welfare NN nsubj
 |   +-- A DT det
 |   +-- social JJ amod
 |   +-- maximizing VBG partmod
 |       +-- exchange NN dobj
 +-- is VBZ cop
 +-- with IN prep
 |   +-- weight NN pobj
 |       +-- maximum JJ amod
 +-- . . punct

36
Input: Figure 1 illustrates an example market with 5 agents , -LRB- v1 , v2 , .
Parse:
illustrates VBZ ROOT
 +-- Figure NN nsubj
 |   +-- 1 CD num
 +-- market NN dobj
 |   +-- an DT det
 |   +-- example NN amod
 +-- with IN prep
 |   +-- agents NNS pobj
 |       +-- 5 CD num
 |       +-- , , punct
 |       +-- v1 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- , , punct
 |           +-- v2 CD appos
 +-- . . punct

37
Input: .
Parse:
. . ROOT

38
Input: .
Parse:
. . ROOT

39
Input: , v5 -RRB- , in which all edges have weight 1 .
Parse:
have VBP ROOT
 +-- , , punct
 +-- v5 LS nsubj
 |   +-- -RRB- -RRB- punct
 +-- in IN prep
 |   +-- which WDT pobj
 +-- edges NNS nsubj
 |   +-- all DT det
 +-- weight NN dobj
 |   +-- 1 CD num
 +-- . . punct

40
Input: The market has 4 cycles , c1 = v1 , v2 , c2 = v2 , v3 , c3 = v3 , v4 and c4 = v1 , v2 , v3 , v4 , v5 , and two -LRB- inclusion -RRB- maximal exchanges , namely M1 = -LRB- c4 -RRB- and M2 = -LRB- c1 , c3 -RRB- .
Parse:
has VBZ ROOT
 +-- market NN nsubj
 |   +-- The DT det
 +-- cycles NNS dobj
 |   +-- 4 CD num
 |   +-- , , punct
 |   +-- v1 CD conj
 |   |   +-- c1 CD num
 |   |   +-- = SYM dep
 |   +-- v2 CD conj
 |   |   +-- c2 CD num
 |   |   +-- = SYM dep
 |   +-- v3 CD conj
 |   |   +-- c3 CD num
 |   |   +-- = SYM dep
 |   +-- v4 CD conj
 |   +-- and CC cc
 |   +-- c4 CD conj
 |       +-- = SYM prep
 |       |   +-- v1 CD dep
 |       +-- , , punct
 |       +-- v2 CD conj
 |       +-- v3 CD conj
 |       +-- v4 CD conj
 |       +-- v5 CD conj
 |       +-- and CC cc
 |       +-- exchanges NNS conj
 |           +-- two CD num
 |           +-- -LRB- -LRB- punct
 |           +-- inclusion NN nn
 |           +-- -RRB- -RRB- punct
 |           +-- maximal JJ amod
 |           +-- , , punct
 |           +-- M1 NNP appos
 |           |   +-- namely RB advmod
 |           |   +-- = , punct
 |           |   +-- c4 CD conj
 |           |   |   +-- -LRB- -LRB- punct
 |           |   |   +-- -RRB- -RRB- punct
 |           |   +-- and CC cc
 |           |   +-- M2 CD conj
 |           +-- = SYM dep
 |               +-- c3 CD appos
 |                   +-- -LRB- -LRB- punct
 |                   +-- c1 CD num
 |                   +-- , , punct
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

41
Input: Exchange M1 has both maximum weight and maximum cardinality -LRB- i.e. , it includes the most edges vertices -RRB- .
Parse:
has VBZ ROOT
 +-- M1 NNP nsubj
 |   +-- Exchange NNP nn
 +-- weight NN dobj
 |   +-- both DT preconj
 |   +-- maximum JJ amod
 |   +-- and CC cc
 |   +-- cardinality NN conj
 |       +-- maximum JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- includes VBZ dep
 |       |   +-- i.e. FW advmod
 |       |   +-- , , punct
 |       |   +-- it PRP nsubj
 |       |   +-- vertices NNS dobj
 |       |       +-- the DT det
 |       |       +-- edges NNS amod
 |       |           +-- most JJS advmod
 |       +-- -RRB- -RRB- punct
 +-- . . punct

42
Input: v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1
Parse:
v1 LS ROOT
 +-- Figure NN dep
     +-- v2 CD num
     +-- v3 CD num
     +-- v4 CD num
     +-- v5 CD num
     +-- e1 CD num
     +-- e3 CD num
     +-- e5 CD num
     +-- c1 CD num
     +-- c2 CD num
     +-- c3 CD num
     +-- e8 CD num
     +-- e7 CD num
     +-- e6e4e2 CD num
     +-- c4 CD num
     +-- 1 CD num

43
Input: The clearing problem is to find a maximum weight exchange consisting of cycles with length at most some small constant L .
Parse:
is VBZ ROOT
 +-- problem NN nsubj
 |   +-- The DT det
 |   +-- clearing NN nn
 +-- find VB xcomp
 |   +-- to TO aux
 |   +-- exchange NN dobj
 |   |   +-- a DT det
 |   |   +-- maximum JJ amod
 |   |   +-- weight NN nn
 |   |   +-- consisting VBG partmod
 |   |       +-- of IN prep
 |   |           +-- cycles NNS pobj
 |   |               +-- with IN prep
 |   |                   +-- length NN pobj
 |   +-- at IN prep
 |       +-- most RBS advmod
 |       +-- L NN pobj
 |           +-- some DT det
 |           +-- small JJ amod
 |           +-- constant JJ amod
 +-- . . punct

44
Input: This cycle length constraint arises naturally for several reasons .
Parse:
arises VBZ ROOT
 +-- constraint NN nsubj
 |   +-- This DT det
 |   +-- length NN nn
 |       +-- cycle NN nn
 +-- naturally RB advmod
 +-- for IN prep
 |   +-- reasons NNS pobj
 |       +-- several JJ amod
 +-- . . punct

45
Input: For example , in a kidney exchange , all operations in a cycle have to be performed simultaneously ; otherwise a donor might back out after his incompatible partner has received a kidney .
Parse:
have VBP ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- in IN prep
 |   +-- exchange NN pobj
 |       +-- a DT det
 |       +-- kidney NN nn
 +-- operations NNS nsubj
 |   +-- all DT det
 |   +-- in IN prep
 |       +-- cycle NN pobj
 |           +-- a DT det
 +-- performed VBN xcomp
 |   +-- to TO aux
 |   +-- be VB auxpass
 |   +-- simultaneously RB advmod
 +-- ; : punct
 +-- back VB parataxis
 |   +-- otherwise RB advmod
 |   +-- donor NN nsubj
 |   |   +-- a DT det
 |   +-- might MD aux
 |   +-- out RP prt
 |   +-- received VBN advcl
 |       +-- after IN mark
 |       +-- partner NN nsubj
 |       |   +-- his PRP$ poss
 |       |   +-- incompatible JJ amod
 |       +-- has VBZ aux
 |       +-- kidney NN dobj
 |           +-- a DT det
 +-- . . punct

46
Input: -LRB- One can not write a binding contract to donate an organ. -RRB- This gives rise to a logistical constraint on cycle size
Parse:
write VB ROOT
 +-- -LRB- -LRB- punct
 +-- One PRP nsubj
 +-- can MD aux
 +-- not RB neg
 +-- contract NN dobj
 |   +-- a DT det
 |   +-- binding JJ amod
 |   +-- donate VB infmod
 |       +-- to TO aux
 |       +-- organ. NN dobj
 |           +-- an DT det
 +-- -RRB- -RRB- punct
 +-- gives VBZ parataxis
     +-- This DT nsubj
     +-- rise NN dobj
     +-- to IN prep
         +-- constraint NN pobj
             +-- a DT det
             +-- logistical JJ amod
             +-- on IN prep
                 +-- size NN pobj
                     +-- cycle NN nn

47
Input: Due to such resource constraints , the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3 .
Parse:
allow VB ROOT
 +-- to IN prep
 |   +-- Due IN mwe
 |   +-- constraints NNS pobj
 |       +-- such JJ amod
 |       +-- resource NN nn
 +-- , , punct
 +-- market NN nsubj
 |   +-- the DT det
 |   +-- upcoming JJ amod
 |   +-- national JJ amod
 |   +-- exchange NN nn
 |       +-- kidney NN nn
 +-- will MD aux
 +-- likely RB advmod
 +-- cycles NNS dobj
 |   +-- only JJ amod
 |   +-- of IN prep
 |       +-- length NN pobj
 |           +-- 2 CD num
 |           +-- and CC cc
 |           +-- 3 CD conj
 +-- . . punct

48
Input: Another motivation for short cycles is that if the cycle fails to exchange , fewer agents are affected .
Parse:
is VBZ ROOT
 +-- motivation NN nsubj
 |   +-- Another DT det
 |   +-- for IN prep
 |       +-- cycles NNS pobj
 |           +-- short JJ amod
 +-- affected VBN ccomp
 |   +-- that IN mark
 |   +-- fails VBZ advcl
 |   |   +-- if IN mark
 |   |   +-- cycle NN nsubj
 |   |   |   +-- the DT det
 |   |   +-- exchange VB xcomp
 |   |       +-- to TO aux
 |   +-- , , punct
 |   +-- agents NNS nsubjpass
 |   |   +-- fewer JJR amod
 |   +-- are VBP auxpass
 +-- . . punct

49
Input: For example , last minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing -LRB- based on which the compatibility graph was constructed -RRB- .
Parse:
reveals VBZ ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- testing NN nsubj
 |   +-- minute NN nn
 |   |   +-- last JJ amod
 |   +-- in IN prep
 |       +-- exchange NN pobj
 |           +-- a DT det
 |           +-- kidney NN nn
 +-- often RB advmod
 +-- incompatibilities NNS dobj
 |   +-- new JJ amod
 |   +-- detected VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- were VBD auxpass
 |       +-- not RB neg
 |       +-- in IN prep
 |           +-- testing NN pobj
 |               +-- the DT det
 |               +-- initial JJ amod
 |               +-- -LRB- -LRB- punct
 |               +-- based VBN prep
 |               |   +-- constructed VBN pcomp
 |               |       +-- on IN prep
 |               |       |   +-- which WDT pobj
 |               |       +-- graph NN nsubjpass
 |               |       |   +-- the DT det
 |               |       |   +-- compatibility NN nn
 |               |       +-- was VBD auxpass
 |               +-- -RRB- -RRB- punct
 +-- . . punct

50
Input: More generally , an agent may drop out of a cycle if his preferences have changed , or he she simply fails to fulfill his obligations -LRB- such as sending a book to another agent in the cycle -RRB- due to forgetfulness .
Parse:
drop VB ROOT
 +-- generally RB advmod
 |   +-- More RBR advmod
 +-- , , punct
 +-- agent NN nsubj
 |   +-- an DT det
 +-- may MD aux
 +-- out RP prep
 |   +-- of IN pcomp
 |       +-- cycle NN pobj
 |           +-- a DT det
 +-- changed VBN advcl
 |   +-- if IN mark
 |   +-- preferences NNS nsubj
 |   |   +-- his PRP$ poss
 |   +-- have VBP aux
 |   +-- , , punct
 |   +-- or CC cc
 |   +-- fails VBZ conj
 |       +-- he PRP mark
 |       +-- she PRP nsubj
 |       +-- simply RB advmod
 |       +-- fulfill VB xcomp
 |           +-- to TO aux
 |           +-- obligations NNS dobj
 |           |   +-- his PRP$ poss
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- as IN prep
 |           |   |   +-- such JJ mwe
 |           |   |   +-- sending VBG pcomp
 |           |   |       +-- book NN dobj
 |           |   |       |   +-- a DT det
 |           |   |       +-- to IN prep
 |           |   |       |   +-- agent NN pobj
 |           |   |       |       +-- another DT det
 |           |   |       +-- in IN prep
 |           |   |           +-- cycle NN pobj
 |           |   |               +-- the DT det
 |           |   +-- -RRB- -RRB- punct
 |           +-- to IN prep
 |               +-- due IN mwe
 |               +-- forgetfulness NN pobj
 +-- . . punct

51
Input: In Section 3 , we show that -LRB- the decision version of -RRB- the clearing problem is NP complete for L ? 3 .
Parse:
show VBP ROOT
 +-- In IN prep
 |   +-- Section NN pobj
 |       +-- 3 CD num
 +-- , , punct
 +-- we PRP nsubj
 +-- complete JJ ccomp
 |   +-- that IN mark
 |   +-- -LRB- -LRB- punct
 |   +-- version NN nsubj
 |   |   +-- the DT det
 |   |   +-- decision NN nn
 |   |   +-- of IN prep
 |   |       +-- -RRB- -RRB- punct
 |   |       +-- problem NN pobj
 |   |           +-- the DT det
 |   |           +-- clearing NN nn
 |   +-- is VBZ cop
 |   +-- NP NNP nn
 |   +-- for IN prep
 |       +-- L NNP pobj
 |           +-- ? . punct
 |           +-- 3 CD num
 +-- . . punct

52
Input: One approach then might be to look for a good heuristic or approximation algorithm .
Parse:
be VB ROOT
 +-- approach NN nsubj
 |   +-- One CD num
 +-- then RB advmod
 +-- might MD aux
 +-- look VB xcomp
 |   +-- to TO aux
 |   +-- for IN prep
 |       +-- heuristic NN pobj
 |           +-- a DT det
 |           +-- good JJ amod
 |           +-- or CC cc
 |           +-- algorithm NN conj
 |               +-- approximation NN nn
 +-- . . punct

53
Input: However , for two reasons , we aim for an exact algorithm based on an integer linear program formulation , which we solve using specialized tree search .
Parse:
aim VBP ROOT
 +-- However RB advmod
 +-- , , punct
 +-- for IN prep
 |   +-- algorithm NN pobj
 |       +-- an DT det
 |       +-- exact JJ amod
 |       +-- based VBN partmod
 |           +-- on IN prep
 |               +-- formulation NN pobj
 |                   +-- an DT det
 |                   +-- integer JJ amod
 |                   +-- linear JJ amod
 |                   +-- program NN nn
 |                   +-- , , punct
 |                   +-- solve VBP rcmod
 |                       +-- which WDT dobj
 |                       +-- we PRP nsubj
 |                       +-- using VBG xcomp
 |                           +-- search NN dobj
 |                               +-- specialized JJ amod
 |                               +-- tree NN nn
 +-- we PRP nsubj
 +-- . . punct

54
Input: ? First , any loss of optimality could lead to unnecessary patient deaths .
Parse:
lead VB ROOT
 +-- ? . punct
 +-- First RB advmod
 +-- , , punct
 +-- loss NN nsubj
 |   +-- any DT det
 |   +-- of IN prep
 |       +-- optimality NN pobj
 +-- could MD aux
 +-- to IN prep
 |   +-- deaths NNS pobj
 |       +-- unnecessary JJ amod
 |       +-- patient JJ amod
 +-- . . punct

55
Input: ? Second , an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective , and to add additional constraints to the problem .
Parse:
is VBZ ROOT
 +-- ? . punct
 +-- Second NNP nsubj
 |   +-- , , punct
 |   +-- feature NN appos
 |       +-- an DT det
 |       +-- attractive JJ amod
 |       +-- of IN prep
 |           +-- using VBG pcomp
 |               +-- formulation NN dobj
 |                   +-- an DT det
 |                   +-- ILP NN nn
 +-- allows VBZ ccomp
 |   +-- that IN mark
 |   +-- it PRP nsubj
 |   +-- model VB xcomp
 |       +-- one CD nsubj
 |       +-- to TO aux
 |       +-- easily RB advmod
 |       +-- number NN dobj
 |       |   +-- a DT det
 |       |   +-- of IN prep
 |       |       +-- variations NNS pobj
 |       |           +-- on IN prep
 |       |               +-- objective NN pobj
 |       |                   +-- the DT det
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- add VB conj
 |           +-- to TO aux
 |           +-- constraints NNS dobj
 |           |   +-- additional JJ amod
 |           +-- to IN prep
 |               +-- problem NN pobj
 |                   +-- the DT det
 +-- . . punct

56
Input: For example , if 3 cycles are believed to be more likely to fail than 2 cycles , then one can simply give them a weight that is appropriately lower than 3 2 the weight of a 2 cycle .
Parse:
give VB ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- believed VBN advcl
 |   +-- if IN mark
 |   +-- cycles NNS nsubjpass
 |   |   +-- 3 CD num
 |   +-- are VBP auxpass
 |   +-- likely JJ xcomp
 |       +-- to TO aux
 |       +-- be VB cop
 |       +-- more RBR advmod
 |       +-- fail VB xcomp
 |           +-- to TO aux
 |           +-- than IN prep
 |               +-- cycles NNS pobj
 |                   +-- 2 CD num
 +-- then RB advmod
 +-- one PRP nsubj
 +-- can MD aux
 +-- simply RB advmod
 +-- them PRP iobj
 +-- weight NN dobj
 |   +-- a DT det
 |   +-- lower JJR rcmod
 |       +-- that WDT nsubj
 |       +-- is VBZ cop
 |       +-- appropriately RB advmod
 |       +-- than IN prep
 |           +-- weight NN pobj
 |               +-- 2 CD num
 |               |   +-- 3 CD number
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- cycle NN pobj
 |                       +-- a DT det
 |                       +-- 2 CD num
 +-- . . punct

57
Input: Or , if for various -LRB- e.g. , ethical -RRB- reasons one requires a maximum cardinality exchange , one can at least in a second pass find the solution -LRB- out of all maximum cardinality solutions -RRB- that has the fewest 3 cycles .
Parse:
requires VBZ ROOT
 +-- Or CC cc
 +-- , , punct
 +-- for IN prep
 |   +-- if IN mark
 |   +-- reasons NNS pobj
 |       +-- various JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- e.g. JJ amod
 |       +-- , , punct
 |       +-- ethical JJ amod
 |       +-- -RRB- -RRB- punct
 +-- one CD nsubj
 +-- exchange NN dobj
 |   +-- a DT det
 |   +-- maximum JJ amod
 |   +-- cardinality NN nn
 +-- find VB ccomp
 |   +-- one PRP nsubj
 |   +-- can MD aux
 |   +-- in IN prep
 |   |   +-- least RBS advmod
 |   |   |   +-- at RB advmod
 |   |   +-- pass NN pobj
 |   |       +-- a DT det
 |   |       +-- second JJ amod
 |   +-- solution NN dobj
 |       +-- the DT det
 |       +-- -LRB- -LRB- punct
 |       +-- out IN prep
 |       |   +-- of IN pcomp
 |       |       +-- solutions NNS pobj
 |       |           +-- all DT det
 |       |           +-- maximum JJ amod
 |       |           +-- cardinality NN nn
 |       +-- -RRB- -RRB- punct
 |       +-- has VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- cycles NNS dobj
 |               +-- the DT det
 |               +-- fewest JJS amod
 |               +-- 3 CD num
 +-- . . punct

58
Input: Other variations one can solve for include finding various forms of fault tolerant -LRB- non disjoint -RRB- collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all .
Parse:
solve VB ROOT
 +-- variations NNS nsubj
 |   +-- Other JJ amod
 |   +-- one CD num
 +-- can MD aux
 +-- for IN prep
 |   +-- include VB pcomp
 |       +-- finding VBG xcomp
 |           +-- collections NNS dobj
 |           |   +-- forms NNS nn
 |           |   |   +-- various JJ amod
 |           |   |   +-- of IN prep
 |           |   |       +-- fault NN pobj
 |           |   +-- tolerant JJ amod
 |           |   |   +-- -LRB- -LRB- punct
 |           |   |   +-- disjoint NN dep
 |           |   |   |   +-- non FW dep
 |           |   |   +-- -RRB- -RRB- punct
 |           |   +-- of IN prep
 |           |       +-- cycles NNS pobj
 |           +-- in IN prep
 |           |   +-- event NN pobj
 |           |       +-- the DT det
 |           +-- turn VB ccomp
 |               +-- that IN mark
 |               +-- pairs NNS nsubj
 |               |   +-- certain JJ amod
 |               |   +-- thought VBN rcmod
 |               |       +-- that WDT nsubjpass
 |               |       +-- were VBD auxpass
 |               |       +-- compatible JJ xcomp
 |               |           +-- to TO aux
 |               |           +-- be VB cop
 |               +-- out RP prt
 |               +-- incompatible JJ xcomp
 |                   +-- to TO aux
 |                   +-- be VB cop
 |                   +-- all RB advmod
 |                       +-- after RB advmod
 +-- . . punct

59
Input: In this paper , we present the first algorithm capable of clearing these markets on a nationwide scale .
Parse:
present VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- algorithm NN dobj
 |   +-- the DT det
 |   +-- first JJ amod
 |   +-- capable JJ amod
 |       +-- of IN prep
 |           +-- clearing VBG pcomp
 |               +-- markets NNS dobj
 |               |   +-- these DT det
 |               +-- on IN prep
 |                   +-- scale NN pobj
 |                       +-- a DT det
 |                       +-- nationwide JJ amod
 +-- . . punct

60
Input: Straight forward ILP encodings are too large to even construct on current hardware not to talk about solving them .
Parse:
large JJ ROOT
 +-- encodings NNS nsubj
 |   +-- Straight VBN amod
 |   |   +-- forward RB advmod
 |   +-- ILP NNP nn
 +-- are VBP cop
 +-- too RB advmod
 +-- construct VB xcomp
 |   +-- to TO aux
 |   +-- even RB advmod
 |   +-- on IN prep
 |   |   +-- hardware NN pobj
 |   |       +-- current JJ amod
 |   +-- talk VB xcomp
 |       +-- not RB neg
 |       +-- to TO aux
 |       +-- about IN prep
 |           +-- solving VBG pcomp
 |               +-- them PRP dobj
 +-- . . punct

61
Input: The key then is incremental problem formulation .
Parse:
formulation NN ROOT
 +-- key NN nsubj
 |   +-- The DT det
 +-- then RB advmod
 +-- is VBZ cop
 +-- problem NN nn
 |   +-- incremental JJ amod
 +-- . . punct

62
Input: We adapt two paradigms for the task
Parse:
adapt VBP ROOT
 +-- We PRP nsubj
 +-- paradigms NNS dobj
     +-- two CD num
     +-- for IN prep
         +-- task NN pobj
             +-- the DT det

63
Input: For each , we develop a host of -LRB- mainly problemspecific -RRB- techniques that dramatically improve both runtime and memory usage .
Parse:
develop VBP ROOT
 +-- For IN prep
 |   +-- each DT pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- host NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- techniques NNS pobj
 |           +-- problemspecific JJ amod
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- mainly RB advmod
 |           |   +-- -RRB- -RRB- punct
 |           +-- improve VB rcmod
 |               +-- that WDT nsubj
 |               +-- dramatically RB advmod
 |               +-- runtime NN dobj
 |                   +-- both DT preconj
 |                   +-- and CC cc
 |                   +-- usage NN conj
 |                       +-- memory NN nn
 +-- . . punct

64
Input: 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange -LRB- 13 , 20 , 6 , 14 , 15 , 17 -RRB- .
Parse:
used VBN ROOT
 +-- papers NNS nsubj
 |   +-- 1.1 CD num
 |   +-- Prior JJ amod
 |   +-- Work NN amod
 |   +-- Several JJ amod
 |   +-- recent JJ amod
 +-- have VBP aux
 +-- simulations NNS dobj
 |   +-- and CC cc
 |   +-- algorithms NNS conj
 |       +-- marketclearing VBG amod
 +-- explore VB xcomp
 |   +-- to TO aux
 |   +-- impact NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- exchange NN pobj
 |               +-- a DT det
 |               +-- national JJ amod
 |               +-- kidney NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- 13 CD dep
 |               |   +-- , , punct
 |               |   +-- 20 CD num
 |               |   +-- 6 CD num
 |               |   +-- 14 CD num
 |               |   +-- 15 CD num
 |               |   +-- 17 CD num
 |               +-- -RRB- -RRB- punct
 +-- . . punct

65
Input: For example , using Edmond '' s maximum matching algorithm -LRB- 4 -RRB- , -LRB- 20 -RRB- shows that a national pairwise exchange market -LRB- using length 2 cycles only -RRB- would result in more transplants , reduced waiting time , and savings of $ 750 million in heath care costs over 5 years .
Parse:
shows VBZ ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- using VBG csubj
 |   +-- algorithm NN dobj
 |       +-- Edmond NNP poss
 |       |   +-- '' '' punct
 |       |   +-- s POS possessive
 |       +-- maximum JJ amod
 |       +-- matching VBG amod
 |       +-- 4 CD appos
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- -LRB- -LRB- punct
 |       +-- 20 CD dep
 |       +-- -RRB- -RRB- punct
 +-- result VB ccomp
 |   +-- that IN mark
 |   +-- market NN nsubj
 |   |   +-- a DT det
 |   |   +-- national JJ amod
 |   |   +-- pairwise NN nn
 |   |   +-- exchange NN nn
 |   |   +-- using VBG partmod
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- cycles NNS dobj
 |   |       |   +-- length NN amod
 |   |       |   +-- 2 CD num
 |   |       +-- only RB advmod
 |   |       +-- -RRB- -RRB- punct
 |   +-- would MD aux
 |   +-- in IN prep
 |   |   +-- transplants NNS pobj
 |   |       +-- more JJR amod
 |   |       +-- , , punct
 |   |       +-- time NN conj
 |   |       |   +-- reduced VBN amod
 |   |       |   +-- waiting VBG nn
 |   |       +-- and CC cc
 |   |       +-- savings NNS conj
 |   |           +-- of IN prep
 |   |               +-- $ $ pobj
 |   |                   +-- million CD num
 |   |                   |   +-- 750 CD number
 |   |                   +-- in IN prep
 |   |                       +-- costs NNS pobj
 |   |                           +-- heath NN nn
 |   |                           +-- care NN nn
 |   +-- over IN prep
 |       +-- years NNS pobj
 |           +-- 5 CD num
 +-- . . punct

66
Input: Those results are conservative in two ways .
Parse:
conservative JJ ROOT
 +-- results NNS nsubj
 |   +-- Those DT det
 +-- are VBP cop
 +-- in IN prep
 |   +-- ways NNS pobj
 |       +-- two CD num
 +-- . . punct

67
Input: Firstly , the simulated market contained only 4 , 000 initial patients , with 250 patients added every 3 months .
Parse:
contained VBD ROOT
 +-- Firstly RB advmod
 +-- , , punct
 +-- market NN nsubj
 |   +-- the DT det
 |   +-- simulated JJ amod
 +-- 4 CD dobj
 |   +-- only RB quantmod
 |   +-- , , punct
 |   +-- patients NNS appos
 |       +-- 000 CD num
 |       +-- initial JJ amod
 +-- added VBD advcl
 |   +-- with IN mark
 |   +-- patients NNS nsubj
 |   |   +-- 250 CD num
 |   +-- months NNS tmod
 |       +-- every DT det
 |       +-- 3 CD num
 +-- . . punct

68
Input: It has been reported to us that the market could be almost double this size .
Parse:
reported VBN ROOT
 +-- It PRP nsubjpass
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- to IN prep
 |   +-- us PRP pobj
 +-- size NN ccomp
 |   +-- that IN mark
 |   +-- market NN nsubj
 |   |   +-- the DT det
 |   +-- could MD aux
 |   +-- be VB cop
 |   +-- double PDT num
 |   |   +-- almost RB quantmod
 |   +-- this DT det
 +-- . . punct

69
Input: Secondly , the exchanges were restricted to length 2 cycles -LRB- because that is all that can be modeled as maximum matching , and solved using Edmonds '' s algorithm -RRB- .
Parse:
restricted VBN ROOT
 +-- Secondly RB advmod
 +-- , , punct
 +-- exchanges NNS nsubjpass
 |   +-- the DT det
 +-- were VBD auxpass
 +-- to IN prep
 |   +-- cycles NNS pobj
 |       +-- length VB amod
 |       +-- 2 CD num
 +-- -LRB- -LRB- punct
 +-- all PDT advcl
 |   +-- because IN mark
 |   +-- that DT nsubj
 |   +-- is VBZ cop
 |   +-- modeled VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- can MD aux
 |       +-- be VB auxpass
 |       +-- as IN prep
 |           +-- matching NN pobj
 |               +-- maximum JJ amod
 +-- and CC cc
 +-- solved VBD conj
 |   +-- using VBG xcomp
 |       +-- algorithm NNP dobj
 |           +-- Edmonds NNPS poss
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- -RRB- -RRB- punct
 +-- . . punct

70
Input: Allowing length 3 cycles leads to additional significant gains .
Parse:
leads VBZ ROOT
 +-- Allowing VBG csubj
 |   +-- cycles NNS dobj
 |       +-- length NN nn
 |       +-- 3 CD num
 +-- to IN prep
 |   +-- gains NNS pobj
 |       +-- additional JJ amod
 |       +-- significant JJ amod
 +-- . . punct

71
Input: This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer program encoding of the clearing problem -LRB- 15 -RRB- .
Parse:
demonstrated VBN ROOT
 +-- This DT nsubjpass
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- on IN prep
 |   +-- markets NNS pobj
 |       +-- exchange NN nn
 |       |   +-- kidney NN nn
 |       +-- with IN prep
 |           +-- patients NNS pobj
 |               +-- 100 CD num
 +-- by IN prep
 |   +-- using VBG pcomp
 |       +-- CPLEX NNP dobj
 |       +-- solve VB xcomp
 |           +-- to TO aux
 |           +-- encoding NN dobj
 |               +-- an DT det
 |               +-- integer NN nn
 |               +-- program NN nn
 |               +-- of IN prep
 |               |   +-- problem NN pobj
 |               |       +-- the DT det
 |               |       +-- clearing NN nn
 |               +-- 15 CD appos
 |                   +-- -LRB- -LRB- punct
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

72
Input: In this paper , we 296 present an alternative algorithm for this integer program that can clear markets with over 10 , 000 patients -LRB- and that same number of willing donors -RRB- .
Parse:
present VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 |   +-- 296 CD dep
 +-- algorithm NN dobj
 |   +-- an DT det
 |   +-- alternative NN amod
 |   +-- for IN prep
 |   |   +-- program NN pobj
 |   |       +-- this DT det
 |   |       +-- integer JJR amod
 |   +-- clear VB rcmod
 |       +-- that WDT nsubj
 |       +-- can MD aux
 |       +-- markets NNS dobj
 |       +-- with IN prep
 |           +-- patients NNS pobj
 |               +-- 10 CD num
 |               |   +-- over IN quantmod
 |               |   +-- , , punct
 |               |   +-- 000 CD number
 |               +-- -LRB- -LRB- punct
 |               +-- and CC cc
 |               +-- number NN conj
 |               |   +-- that DT det
 |               |   +-- same JJ amod
 |               |   +-- of IN prep
 |               |       +-- donors NNS pobj
 |               |           +-- willing JJ amod
 |               +-- -RRB- -RRB- punct
 +-- . . punct

73
Input: Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange -LRB- 15 -RRB- .
Parse:
leads VBZ ROOT
 +-- cycles NNS nsubj
 |   +-- Allowing JJ amod
 |   +-- of IN prep
 |   |   +-- length NN pobj
 |   +-- 3 CD dep
 |       +-- than IN quantmod
 |           +-- more JJR mwe
 +-- often RB advmod
 +-- to IN prep
 |   +-- improvement NN pobj
 |       +-- no DT det
 |       +-- in IN prep
 |           +-- size NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |               |   +-- exchange NN pobj
 |               |       +-- the DT det
 |               +-- -LRB- -LRB- punct
 |               +-- 15 CD dep
 |               +-- -RRB- -RRB- punct
 +-- . . punct

74
Input: -LRB- Furthermore , in a simplified theoretical model , any kidney exchange can be converted into one with cycles of length at most 4 -LRB- 15 -RRB- . -RRB- Whilst this does not hold for general barter exchanges , or even for all kidney exchange markets , in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm .
Parse:
converted VBN ROOT
 +-- -LRB- -LRB- punct
 +-- Furthermore RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- model NN pobj
 |       +-- a DT det
 |       +-- simplified JJ amod
 |       +-- theoretical JJ amod
 +-- exchange NN nsubjpass
 |   +-- any DT det
 |   +-- kidney NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- into IN prep
 |   +-- one CD pobj
 |       +-- with IN prep
 |           +-- cycles NNS pobj
 |               +-- of IN prep
 |                   +-- length NN pobj
 +-- at IN prep
 |   +-- 15 CD pobj
 |       +-- most RBS quantmod
 |       +-- 4 CD number
 |       +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- . . punct
 +-- Whilst WDT dep
 +-- hold VB dep
     +-- this DT nsubj
     +-- does VBZ aux
     +-- not RB neg
     +-- for IN prep
     |   +-- exchanges NNS pobj
     |   |   +-- general JJ amod
     |   |   +-- barter NN nn
     |   +-- , , punct
     |   +-- or CC cc
     |   +-- for IN conj
     |       +-- even RB advmod
     |       +-- markets NNS pobj
     |           +-- all DT det
     |           +-- exchange NN nn
     |               +-- kidney NN nn
     +-- , , punct
     +-- make VBP ccomp
         +-- in IN prep
         |   +-- Section NN pobj
         |       +-- 5.2.3 CD num
         +-- we PRP nsubj
         +-- use NN dobj
             +-- of IN prep
                 +-- observation NN pobj
                     +-- the DT det
                     +-- suffice VBP rcmod
                         +-- that WDT dobj
                         +-- cycles NNS nsubj
                         |   +-- short JJ amod
                         +-- increase VB xcomp
                             +-- to TO aux
                             +-- dramatically RB advmod
                             +-- speed NN dobj
                                 +-- the DT det
                                 +-- of IN prep
                                     +-- algorithm NN pobj
                                         +-- our PRP$ poss

75
Input: At a high level , the clearing problem for barter exchanges is similar to the clearing problem -LRB- aka winner determination problem -RRB- in combinatorial auctions .
Parse:
similar JJ ROOT
 +-- At IN prep
 |   +-- level NN pobj
 |       +-- a DT det
 |       +-- high JJ amod
 +-- , , punct
 +-- problem NN nsubj
 |   +-- the DT det
 |   +-- clearing NN nn
 |   +-- for IN prep
 |       +-- exchanges NNS pobj
 |           +-- barter NN nn
 +-- is VBZ cop
 +-- to IN prep
 |   +-- problem NN pobj
 |       +-- the DT det
 |       +-- clearing NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- aka IN prep
 |       |   +-- problem NN pobj
 |       |       +-- winner NN nn
 |       |       +-- determination NN nn
 |       +-- -RRB- -RRB- punct
 |       +-- in IN prep
 |           +-- auctions NNS pobj
 |               +-- combinatorial JJ amod
 +-- . . punct

76
Input: In both settings , the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation .
Parse:
is VBZ ROOT
 +-- In IN prep
 |   +-- settings NNS pobj
 |       +-- both DT det
 +-- , , punct
 +-- idea NN nsubj
 |   +-- the DT det
 +-- gather VB xcomp
 |   +-- to TO aux
 |   +-- information NN dobj
 |   |   +-- all PDT predet
 |   |   +-- the DT det
 |   |   +-- pertinent JJ amod
 |   |   +-- about IN prep
 |   |       +-- agents NNS pobj
 |   |           +-- the DT det
 |   +-- into IN prep
 |   |   +-- point NN pobj
 |   |       +-- a DT det
 |   |       +-- central JJ amod
 |   |       +-- clearing NN nn
 |   +-- and CC cc
 |   +-- run VB conj
 |       +-- to TO aux
 |       +-- clearing VBG dobj
 |       |   +-- a DT det
 |       |   +-- centralized JJ amod
 |       +-- algorithm RB advmod
 |       +-- determine VB xcomp
 |           +-- to TO aux
 |           +-- allocation NN dobj
 |               +-- the DT det
 +-- . . punct

77
Input: Both problems are NP hard .
Parse:
NP NNP ROOT
 +-- problems NNS nsubj
 |   +-- Both DT det
 +-- are VBP cop
 +-- hard RB advmod
 +-- . . punct

78
Input: Both are best solved using tree search techniques .
Parse:
solved VBN ROOT
 +-- Both DT nsubjpass
 +-- are VBP auxpass
 +-- best RBS advmod
 +-- using VBG xcomp
 |   +-- techniques NNS dobj
 |       +-- tree NN nn
 |       +-- search NN nn
 +-- . . punct

79
Input: Since 1999 , significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions .
Parse:
done VBN ROOT
 +-- Since IN prep
 |   +-- 1999 CD pobj
 +-- , , punct
 +-- work NN nsubjpass
 |   +-- significant JJ amod
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- in IN prep
 |   +-- science NN pobj
 |       +-- computer NN nn
 |       +-- and CC cc
 |       +-- research NN conj
 |           +-- operations NNS nn
 +-- on IN prep
 |   +-- algorithms NNS pobj
 |       +-- faster JJR amod
 |       +-- optimal JJ amod
 |       +-- search NN nn
 |       |   +-- tree NN nn
 |       +-- for IN prep
 |           +-- clearing VBG pcomp
 |               +-- auctions NNS dobj
 |                   +-- combinatorial JJ amod
 +-- . . punct

80
Input: -LRB- For a recent review , see -LRB- 18 -RRB- . -RRB- However , the kidney exchange clearing problem -LRB- with a limit of 3 or more on cycle size -RRB- is different from the combinatorial auction clearing problem in significant ways .
Parse:
different JJ ROOT
 +-- see VB parataxis
 |   +-- -LRB- -LRB- punct
 |   +-- For IN prep
 |   |   +-- review NN pobj
 |   |       +-- a DT det
 |   |       +-- recent JJ amod
 |   +-- , , punct
 |   +-- 18 CD dobj
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- . , punct
 |   +-- -RRB- -RRB- punct
 +-- However RB advmod
 +-- , , punct
 +-- problem NN nsubj
 |   +-- the DT det
 |   +-- clearing NN nn
 |   |   +-- exchange NN nn
 |   |       +-- kidney NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- with IN prep
 |   |   +-- limit NN pobj
 |   |       +-- a DT det
 |   |       +-- of IN prep
 |   |       |   +-- 3 CD pobj
 |   |       |       +-- or CC cc
 |   |       |       +-- more JJR conj
 |   |       +-- on IN prep
 |   |           +-- size NN pobj
 |   |               +-- cycle NN nn
 |   +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- from IN prep
 |   +-- problem NN pobj
 |       +-- the DT det
 |       +-- combinatorial JJ amod
 |       +-- clearing NN nn
 |           +-- auction NN nn
 +-- in IN prep
 |   +-- ways NNS pobj
 |       +-- significant JJ amod
 +-- . . punct

81
Input: The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory , so time is the bottleneck in practice .
Parse:
is VBZ ROOT
 +-- difference NN nsubj
 |   +-- The DT det
 |   +-- important JJ amod
 |       +-- most RBS advmod
 +-- tend VBP ccomp
 |   +-- that IN mark
 |   +-- formulations NNS nsubj
 |   |   +-- the DT det
 |   |   +-- natural JJ amod
 |   |   +-- of IN prep
 |   |       +-- problem NN pobj
 |   |           +-- the DT det
 |   |           +-- combinatorial JJ amod
 |   |           +-- auction NN nn
 |   +-- fit VB xcomp
 |   |   +-- to TO aux
 |   |   +-- easily RB advmod
 |   |   +-- in IN prep
 |   |       +-- memory NN pobj
 |   +-- , , punct
 |   +-- so CC cc
 |   +-- bottleneck NN conj
 |       +-- time NN nsubj
 |       +-- is VBZ cop
 |       +-- the DT det
 |       +-- in IN prep
 |           +-- practice NN pobj
 +-- . . punct

82
Input: In contrast , the natural formulations of the kidney exchange problem -LRB- with L = 3 -RRB- take at least cubic space in the number of patients to even model , and therefore memory becomes a bottleneck much before time does when using standard tree search , such as branch andcut in CPLEX , to tackle the problem .
Parse:
take VB ROOT
 +-- In IN prep
 |   +-- contrast NN pobj
 +-- , , punct
 +-- formulations NNS nsubj
 |   +-- the DT det
 |   +-- natural JJ amod
 |   +-- of IN prep
 |   |   +-- problem NN pobj
 |   |       +-- the DT det
 |   |       +-- exchange NN nn
 |   |           +-- kidney NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- with IN prep
 |   |   +-- L NNP pobj
 |   |       +-- = SYM prep
 |   |           +-- 3 CD num
 |   +-- -RRB- -RRB- punct
 +-- space NN dobj
 |   +-- cubic JJ amod
 |       +-- at RB advmod
 |           +-- least RBS pobj
 +-- in IN prep
 |   +-- number NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- patients NNS pobj
 +-- to IN prep
 |   +-- model NN pobj
 |       +-- even RB advmod
 +-- and CC cc
 +-- bottleneck NN conj
 |   +-- therefore RB advmod
 |   +-- memory NN nsubj
 |   +-- becomes VBZ cop
 |   +-- a DT det
 |   +-- much JJ advmod
 |   +-- before IN prep
 |   |   +-- time NN pobj
 |   +-- using VBG advcl
 |       +-- does VBZ aux
 |       +-- when WRB advmod
 |       +-- search NN dobj
 |       |   +-- standard JJ amod
 |       |   +-- tree NN nn
 |       |   +-- , , punct
 |       |   +-- as IN prep
 |       |       +-- such JJ mwe
 |       |       +-- andcut NN pobj
 |       |           +-- branch NN nn
 |       |           +-- in IN prep
 |       |               +-- CPLEX NNP pobj
 |       +-- , , punct
 |       +-- tackle VB xcomp
 |           +-- to TO aux
 |           +-- problem NN dobj
 |               +-- the DT det
 +-- . . punct

83
Input: -LRB- On a 1GB computer and a realistic standard instance generator , discussed later , CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1 , 000 patient instances that we generated. -RRB- Therefore , the approaches that have been developed for combinatorial auctions can not handle the kidney exchange problem .
Parse:
runs VBZ ROOT
 +-- -LRB- -LRB- punct
 +-- On IN prep
 |   +-- computer NN pobj
 |       +-- a DT det
 |       +-- 1GB CD num
 |       +-- and CC cc
 |       +-- generator NN conj
 |       |   +-- a DT det
 |       |   +-- realistic JJ amod
 |       |   +-- instance NN nn
 |       |       +-- standard JJ amod
 |       +-- , , punct
 |       +-- discussed VBN partmod
 |           +-- later RB advmod
 +-- , , punct
 +-- 10.010 CD nsubj
 |   +-- CPLEX NNP nn
 +-- out IN prep
 |   +-- of IN pcomp
 |       +-- memory NN pobj
 +-- on IN prep
 |   +-- five CD pobj
 |       +-- of IN prep
 |       |   +-- instances NNS pobj
 |       |       +-- the DT det
 |       |       +-- ten CD num
 |       |       +-- 900patient CD nn
 |       +-- and CC cc
 |       +-- ten CD conj
 |           +-- of IN prep
 |               +-- instances NNS pobj
 |                   +-- the DT det
 |                   +-- ten CD num
 |                   +-- 000 CD nn
 |                   |   +-- 1 CD num
 |                   |   +-- , , punct
 |                   +-- patient NN nn
 |                   +-- generated. VBP rcmod
 |                       +-- that WDT dobj
 |                       +-- we PRP nsubj
 +-- -RRB- -RRB- punct
 +-- handle VB ccomp
 |   +-- Therefore RB advmod
 |   +-- , , punct
 |   +-- approaches NNS nsubj
 |   |   +-- the DT det
 |   |   +-- developed VBN rcmod
 |   |       +-- that WDT nsubjpass
 |   |       +-- have VBP aux
 |   |       +-- been VBN auxpass
 |   |       +-- for IN prep
 |   |           +-- auctions NNS pobj
 |   |               +-- combinatorial JJ amod
 |   +-- can MD aux
 |   +-- not RB neg
 |   +-- problem NN dobj
 |       +-- the DT det
 |       +-- exchange NN nn
 |           +-- kidney NN nn
 +-- . . punct

84
Input: 1.2 Paper Outline The rest of the paper is organized as follows .
Parse:
organized VBN ROOT
 +-- Outline NNP nsubjpass
 |   +-- 1.2 CD num
 |   +-- Paper NNP nn
 +-- rest NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- paper NN pobj
 |           +-- the DT det
 +-- is VBZ auxpass
 +-- follows VBZ advcl
 |   +-- as IN mark
 +-- . . punct

85
Input: Section 2 discusses the process by which we generate realistic kidney exchange market data , in order to benchmark the clearing algorithms .
Parse:
discusses VBZ ROOT
 +-- Section NN nsubj
 |   +-- 2 CD num
 +-- process NN dobj
 |   +-- the DT det
 |   +-- generate VBP rcmod
 |       +-- by IN prep
 |       |   +-- which WDT pobj
 |       +-- we PRP nsubj
 |       +-- data NNS dobj
 |       |   +-- realistic JJ amod
 |       |   +-- market NN nn
 |       |       +-- exchange NN nn
 |       |           +-- kidney NN nn
 |       +-- , , punct
 |       +-- in IN prep
 |           +-- order NN pobj
 |               +-- benchmark VB infmod
 |                   +-- to TO aux
 |                   +-- algorithms NNS dobj
 |                       +-- the DT det
 |                       +-- clearing NN nn
 +-- . . punct

86
Input: Section 3 contains a proof that the market clearing decision problem is NP complete .
Parse:
contains VBZ ROOT
 +-- Section NN nsubj
 |   +-- 3 CD num
 +-- proof NN dobj
 |   +-- a DT det
 |   +-- complete JJ ccomp
 |       +-- that IN mark
 |       +-- problem NN nsubj
 |       |   +-- the DT det
 |       |   +-- clearing NN nn
 |       |   |   +-- market NN nn
 |       |   +-- decision NN nn
 |       +-- is VBZ cop
 |       +-- NP NNP npadvmod
 +-- . . punct

87
Input: Sections 4 and 5 each contain an ILP formulation of the clearing problem .
Parse:
contain VBP ROOT
 +-- Sections NNS nsubj
 |   +-- 4 CD dep
 |       +-- and CC cc
 |       +-- 5 CD conj
 |       +-- each DT dep
 +-- formulation NN dobj
 |   +-- an DT det
 |   +-- ILP JJ amod
 |   +-- of IN prep
 |       +-- problem NN pobj
 |           +-- the DT det
 |           +-- clearing NN nn
 +-- . . punct

88
Input: We also detail in those sections our techniques used to solve those programs on large instances .
Parse:
detail VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- in IN prep
 |   +-- sections NNS pobj
 |       +-- those DT det
 +-- techniques NNS dobj
 |   +-- our PRP$ poss
 |   +-- used VBN partmod
 |       +-- solve VB xcomp
 |           +-- to TO aux
 |           +-- programs NNS dobj
 |               +-- those DT det
 |               +-- on IN prep
 |                   +-- instances NNS pobj
 |                       +-- large JJ amod
 +-- . . punct

89
Input: Section 6 presents experiments on the various techniques .
Parse:
presents NNS ROOT
 +-- Section NN nsubj
 |   +-- 6 CD num
 +-- experiments NNS dobj
 |   +-- on IN prep
 |       +-- techniques NNS pobj
 |           +-- the DT det
 |           +-- various JJ amod
 +-- . . punct

90
Input: Section 7 discusses recent fielding of our algorithm .
Parse:
discusses VBZ ROOT
 +-- Section NN nsubj
 |   +-- 7 CD num
 +-- fielding NN dobj
 |   +-- recent JJ amod
 |   +-- of IN prep
 |       +-- algorithm NN pobj
 |           +-- our PRP$ poss
 +-- . . punct

91
Input: Finally , we present our conclusions in Section 8 , and suggest future research directions. .
Parse:
present VBP ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- conclusions NNS dobj
 |   +-- our PRP$ poss
 +-- in IN prep
 |   +-- Section NN pobj
 |       +-- 8 CD num
 +-- and CC cc
 +-- suggest VB conj
 |   +-- directions. NNS dobj
 |       +-- future JJ amod
 |       +-- research NN nn
 +-- . . punct
