
1
Input: THE SOCIAL WELFARE
Parse:
WELFARE NN ROOT
 +-- THE DT det
 +-- SOCIAL NNP nn

2
Input: Unfortunately , it turns out that computing such a strategy profile exactly is not possible
Parse:
turns VBZ ROOT
 +-- Unfortunately RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- out RP prt
 +-- possible JJ ccomp
     +-- that IN mark
     +-- computing VBG csubj
     |   +-- profile NN dobj
     |   |   +-- such PDT predet
     |   |   +-- a DT det
     |   |   +-- strategy NN nn
     |   +-- exactly RB advmod
     +-- is VBZ cop
     +-- not RB neg

3
Input: 3.1 Warm up
Parse:
Warm VB ROOT
 +-- 3.1 CD nsubj
 +-- up RP prt

4
Input: In the next subsection , we will extend this example to algebraic numbers of arbitrary degree n ; to do so , we have to consider paths of length O -LRB- n -RRB- .
Parse:
extend VB ROOT
 +-- In IN prep
 |   +-- subsection NN pobj
 |       +-- the DT det
 |       +-- next JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- will MD aux
 +-- example NN dobj
 |   +-- this DT det
 +-- to IN prep
 |   +-- numbers NNS pobj
 |       +-- algebraic JJ amod
 |       +-- of IN prep
 |           +-- degree NN pobj
 |               +-- arbitrary JJ amod
 |               +-- n CC advmod
 +-- ; : punct
 +-- have VBP parataxis
 |   +-- do VB advcl
 |   |   +-- to TO aux
 |   |   +-- so RB advmod
 |   +-- , , punct
 |   +-- we PRP nsubj
 |   +-- consider VB xcomp
 |       +-- to TO aux
 |       +-- paths NNS dobj
 |           +-- of IN prep
 |               +-- O NNP pobj
 |                   +-- length NN nn
 |                   +-- -LRB- -LRB- punct
 |                   +-- n UH dep
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

5
Input: THEOREM 1 .
Parse:
THEOREM UH ROOT
 +-- 1 CD num
 +-- . . punct

6
Input: There exists an integer payoff graphical game G on a 3 vertex path UV W such that , in any Nash equilibrium of G that maximizes social welfare , the strategy , u , of the player U and the total payoff , p , satisfy u , p ? R \ Q .
Parse:
exists VBZ ROOT
 +-- There EX expl
 +-- G NNP nsubj
 |   +-- an DT det
 |   +-- integer JJ amod
 |   +-- payoff NN nn
 |   +-- game NN nn
 |   |   +-- graphical JJ amod
 |   +-- on IN prep
 |   |   +-- UV NN pobj
 |   |       +-- a DT det
 |   |       +-- path NN nn
 |   |           +-- 3 CD num
 |   |           +-- vertex NN nn
 |   +-- W NN punct
 |   +-- Q NN dep
 |       +-- such JJ dep
 |       +-- that DT mark
 |       +-- , , punct
 |       +-- in IN prep
 |       |   +-- equilibrium NN pobj
 |       |       +-- any DT det
 |       |       +-- Nash NNP nn
 |       |       +-- of IN prep
 |       |       |   +-- G NNP pobj
 |       |       +-- maximizes VBZ rcmod
 |       |           +-- that WDT nsubj
 |       |           +-- welfare NN dobj
 |       |               +-- social JJ amod
 |       |               +-- , , punct
 |       |               +-- strategy NN conj
 |       |               |   +-- the DT det
 |       |               +-- u NNP conj
 |       |               +-- of IN conj
 |       |               |   +-- player NN pobj
 |       |               |       +-- the DT det
 |       |               |       +-- U NNP appos
 |       |               +-- and CC cc
 |       |               +-- payoff NN conj
 |       |               |   +-- the DT det
 |       |               |   +-- total JJ amod
 |       |               +-- p NNP conj
 |       |               +-- satisfy VB dep
 |       |               |   +-- u NNP dobj
 |       |               +-- p FW advmod
 |       +-- ? . punct
 |       +-- R NNP nn
 |       +-- \ FW nn
 +-- . . punct

7
Input: PROOF .
Parse:
PROOF NNP ROOT
 +-- . . punct

8
Input: The payoffs to the players in G are specified as follows .
Parse:
specified VBN ROOT
 +-- payoffs NNS nsubjpass
 |   +-- The DT det
 |   +-- to IN prep
 |       +-- players NNS pobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- G NNP pobj
 +-- are VBP auxpass
 +-- follows VBZ advcl
 |   +-- as IN mark
 +-- . . punct

9
Input: The payoff to U is identically 0 , i.e. , P0 = P1 = 0 .
Parse:
identically RB ROOT
 +-- payoff NN nsubj
 |   +-- The DT det
 |   +-- to IN prep
 |       +-- U NNP pobj
 +-- is VBZ cop
 +-- 0 CD dep
 +-- , , punct
 +-- i.e. FW advmod
 +-- P1 CD conj
 |   +-- P0 CD num
 |   +-- = SYM dep
 +-- = SYM dep
 +-- 0 CD punct
 +-- . . punct

10
Input: Using Claim 1 , we select the payoffs to V so that P0 -LRB- V -RRB- = ? uw + 3w and P1 -LRB- V -RRB- = P0 -LRB- V -RRB- + w -LRB- u + 2 -RRB- ? -LRB- u + 1 -RRB- , where u and w are the -LRB- mixed -RRB- strategies of U and W , respectively .
Parse:
select VBP ROOT
 +-- Using VBG partmod
 |   +-- Claim NNP dobj
 |       +-- 1 CD num
 +-- , , punct
 +-- we PRP nsubj
 +-- payoffs NNS dobj
 |   +-- the DT det
 +-- to IN prep
 |   +-- V VB pobj
 +-- so RB advmod
     +-- that IN prep
         +-- V NNP pobj
             +-- P0 LS dep
             |   +-- -LRB- -LRB- punct
             |   +-- V NN dep
             |   +-- -RRB- -RRB- punct
             +-- = SYM dep
             |   +-- ? . punct
             +-- uw NFP dep
             +-- + SYM dep
             +-- 3w CD dep
             |   +-- and CC cc
             |   +-- P1 CD conj
             +-- -LRB- -LRB- punct
             +-- -RRB- -RRB- punct
             +-- P0 CD dep
             |   +-- = SYM nn
             +-- V NNP dep
             |   +-- -LRB- -LRB- punct
             |   +-- -RRB- -RRB- punct
             +-- w IN dep
             |   +-- + SYM dep
             |   +-- u NNP pobj
             |       +-- -LRB- -LRB- punct
             |       +-- + SYM dep
             |       |   +-- 2 CD num
             |       +-- -RRB- -RRB- punct
             +-- ? . punct
             +-- u NNP dep
             |   +-- -LRB- -LRB- punct
             |   +-- + SYM dep
             |   |   +-- 1 CD num
             |   +-- -RRB- -RRB- punct
             +-- , , punct
             +-- strategies NNS rcmod
             |   +-- where WRB advmod
             |   +-- u PRP nsubj
             |   |   +-- and CC cc
             |   |   +-- w NN conj
             |   +-- are VBP cop
             |   +-- the DT det
             |   +-- -LRB- -LRB- punct
             |   +-- mixed JJ amod
             |   +-- -RRB- -RRB- punct
             |   +-- of IN prep
             |   |   +-- U NNP pobj
             |   |       +-- and CC cc
             |   |       +-- W NNP conj
             |   +-- , , punct
             |   +-- respectively RB advmod
             +-- . . punct

11
Input: It follows that V is indifferent between playing 0 and 1 if and only if w = f -LRB- u -RRB- = u+1 u+2 .
Parse:
follows VBZ ROOT
 +-- It PRP nsubj
 +-- indifferent JJ ccomp
 |   +-- that IN mark
 |   +-- V NN nsubj
 |   +-- is VBZ cop
 |   +-- between IN prep
 |       +-- playing VBG pobj
 |           +-- 0 CD dobj
 |           |   +-- and CC cc
 |           |   +-- 1 CD conj
 |           +-- if IN advmod
 |           +-- and CC cc
 |           +-- w IN conj
 |               +-- only RB advmod
 |               +-- if IN mark
 |               +-- f FW pobj
 |               |   +-- = SYM dep
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- u NNP dep
 |               |   +-- -RRB- -RRB- punct
 |               +-- = SYM prep
 |                   +-- u+2 CD dep
 |                       +-- u+1 CD num
 +-- . . punct

12
Input: Observe that for any u ? -LRB- 0 , 1 -RRB- we have f -LRB- u -RRB- ? -LRB- 0 , 1 -RRB- .
Parse:
Observe VB ROOT
 +-- that DT dobj
 +-- for IN prep
 |   +-- u NN pobj
 |       +-- any DT det
 +-- ? . punct
 +-- 0 CD dep
 |   +-- -LRB- -LRB- punct
 |   +-- , , punct
 |   +-- 1 CD num
 |   +-- -RRB- -RRB- punct
 +-- have VBP dep
 |   +-- we PRP nsubj
 |   +-- f NNP dobj
 |       +-- u NNP appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- -LRB- -LRB- punct
 +-- 0 NFP punct
 +-- , , punct
 +-- 1 CD dobj
 +-- -RRB- -RRB- punct
 +-- . . punct

13
Input: The payoff to W is 0 if it selects the same action as V and 1 otherwise .
Parse:
0 CD ROOT
 +-- payoff NN nsubj
 |   +-- The DT det
 |   +-- to IN prep
 |       +-- W NNP pobj
 +-- is VBZ cop
 +-- selects VBZ advcl
 |   +-- if IN mark
 |   +-- it PRP nsubj
 |   +-- action NN dobj
 |   |   +-- the DT det
 |   |   +-- same JJ amod
 |   |   +-- as IN prep
 |   |       +-- V NN pobj
 |   |           +-- and CC cc
 |   |           +-- 1 CD conj
 |   +-- otherwise RB advmod
 +-- . . punct

14
Input: CLAIM 2 .
Parse:
CLAIM NN ROOT
 +-- 2 CD num
 +-- . . punct

15
Input: All Nash equilibria of the game G are of the form -LRB- u , 1 2 , f -LRB- u -RRB- -RRB- .
Parse:
are VBP ROOT
 +-- equilibria NN nsubj
 |   +-- All DT det
 |   +-- Nash NNP nn
 |   +-- of IN prep
 |       +-- G NNP pobj
 |           +-- the DT det
 |           +-- game NN nn
 +-- of IN prep
 |   +-- form NN pobj
 |       +-- the DT det
 |       +-- -LRB- -LRB- punct
 |       +-- u UH discourse
 |       +-- , , punct
 |       +-- 2 CD amod
 |       |   +-- 1 CD number
 |       +-- u NNP appos
 |           +-- f FW nn
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

16
Input: That is , in any Nash equilibrium , V plays v = 1 2 and W plays w = f -LRB- u -RRB- .
Parse:
plays VBZ ROOT
 +-- That DT nsubj
 +-- is VBZ cop
 +-- , , punct
 +-- in IN prep
 |   +-- equilibrium NN pobj
 |       +-- any DT det
 |       +-- Nash NNP nn
 +-- V NNP nsubj
 +-- v NN prep
 |   +-- = : pobj
 |       +-- 2 CD num
 |           +-- 1 CD number
 +-- and CC cc
 +-- plays VBZ conj
 |   +-- W NN nsubj
 |   +-- w IN prep
 |       +-- = SYM pobj
 |           +-- f FW prep
 |               +-- u NNP pobj
 |                   +-- -LRB- -LRB- punct
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

17
Input: Moreover , for any value of u , the vector of strategies -LRB- u , 1 2 , f -LRB- u -RRB- -RRB- constitutes a Nash equilibrium .
Parse:
vector NN ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- for IN prep
 |   +-- value NN pobj
 |       +-- any DT det
 |       +-- of IN prep
 |           +-- u NNP pobj
 +-- the DT det
 +-- of IN prep
 |   +-- strategies NNS pobj
 +-- -LRB- -LRB- punct
 +-- u UH dep
 |   +-- , , punct
 |   +-- 2 CD dep
 |   |   +-- 1 CD num
 |   +-- constitutes VBZ dep
 |       +-- f FW advmod
 |       +-- u LS dep
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- equilibrium NN dobj
 |           +-- a DT det
 |           +-- Nash NNP nn
 +-- . . punct

18
Input: PROOF .
Parse:
PROOF NNP ROOT
 +-- . . punct

19
Input: It is easy to check that for any u ? -LRB- 0 , 1 -RRB- , the vector -LRB- u , 1 2 , f -LRB- u -RRB- -RRB- is a Nash equilibrium .
Parse:
easy JJ ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- check VB xcomp
 |   +-- to TO aux
 |   +-- that DT dobj
 |   +-- for IN prep
 |       +-- u NN pobj
 |           +-- any DT det
 +-- ? . punct
 +-- 0 CD parataxis
 |   +-- -LRB- -LRB- punct
 |   +-- , , punct
 |   +-- 1 CD dobj
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- equilibrium NN ccomp
 |   +-- vector NN nsubj
 |   |   +-- the DT det
 |   |   +-- u NNP appos
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- , , punct
 |   |       +-- 2 CD dep
 |   |       |   +-- 1 CD num
 |   |       +-- f FW advmod
 |   |       +-- u LS dep
 |   |       |   +-- -LRB- -LRB- punct
 |   |       |   +-- -RRB- -RRB- punct
 |   |       +-- -RRB- -RRB- punct
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- Nash NNP nn
 +-- . . punct

20
Input: Indeed , U is content to play 164 any mixed strategy u no matter what V and W do .
Parse:
content JJ ROOT
 +-- Indeed RB advmod
 +-- , , punct
 +-- U NNP nsubj
 +-- is VBZ cop
 +-- play VB xcomp
 |   +-- to TO aux
 |   +-- strategy NN dobj
 |       +-- 164 CD num
 |       +-- any DT det
 |       +-- mixed JJ amod
 |       +-- u $ dep
 |       +-- matter RB advmod
 |           +-- no RB advmod
 |           +-- do VBP dep
 |               +-- what WP dobj
 |               +-- V NN nsubj
 |                   +-- and CC cc
 |                   +-- W NN conj
 +-- . . punct

21
Input: Furthermore , V is indifferent between 0 and 1 as long as w = f -LRB- u -RRB- , so it can play 1 2 .
Parse:
indifferent JJ ROOT
 +-- Furthermore RB advmod
 +-- , , punct
 +-- V NN nsubj
 +-- is VBZ cop
 +-- between IN prep
 |   +-- 0 CD pobj
 |       +-- and CC cc
 |       +-- 1 CD conj
 +-- long RB advmod
 |   +-- as RB advmod
 |   +-- as IN prep
 |       +-- w IN pcomp
 |           +-- f NN pobj
 |               +-- = SYM nn
 |               +-- -LRB- -LRB- punct
 |               +-- u NNP dep
 |               +-- -RRB- -RRB- punct
 +-- play VB advcl
 |   +-- so IN mark
 |   +-- it PRP nsubj
 |   +-- can MD aux
 |   +-- 2 CD dobj
 |       +-- 1 CD number
 +-- . . punct

22
Input: Finally , if V plays 0 and 1 with equal probability , W is indifferent between 0 and 1 , so it can play f -LRB- u -RRB- .
Parse:
indifferent JJ ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- plays VBZ advcl
 |   +-- if IN mark
 |   +-- V NNP nsubj
 |   +-- 0 CD dobj
 |   |   +-- and CC cc
 |   |   +-- 1 CD conj
 |   +-- with IN prep
 |       +-- probability NN pobj
 |           +-- equal JJ amod
 +-- W NNP nsubj
 +-- is VBZ cop
 +-- between IN prep
 |   +-- 0 CD pobj
 |       +-- and CC cc
 |       +-- 1 CD conj
 +-- play VB advcl
 |   +-- so IN mark
 |   +-- it PRP nsubj
 |   +-- can MD aux
 |   +-- f GW advmod
 |   +-- -LRB- -LRB- punct
 |   +-- u NNP dobj
 |   +-- -RRB- -RRB- punct
 +-- . . punct

23
Input: Conversely , suppose that v > 1 2 .
Parse:
suppose VB ROOT
 +-- Conversely RB advmod
 +-- , , punct
 +-- 2 CD ccomp
 |   +-- that DT mark
 |   +-- v NN dep
 |   +-- > -RRB- punct
 |   +-- 1 CD number
 +-- . . punct

24
Input: Then W strictly prefers to play 0 , i.e. , w = 0 .
Parse:
prefers VBZ ROOT
 +-- Then RB advmod
 +-- W NNP nsubj
 +-- strictly RB advmod
 +-- play VB xcomp
 |   +-- to TO aux
 |   +-- 0 CD dobj
 |   +-- , , punct
 |   +-- i.e. FW advmod
 |   +-- w IN prep
 |       +-- = SYM pobj
 |           +-- 0 CD num
 +-- . . punct

25
Input: Then for V we have P1 -LRB- V -RRB- = P0 -LRB- V -RRB- ? -LRB- u + 1 -RRB- , i.e. , P1 -LRB- V -RRB- < P0 -LRB- V -RRB- , which implies v = 0 , a contradiction .
Parse:
have VBP ROOT
 +-- Then RB advmod
 +-- for IN prep
 |   +-- V NNP pobj
 +-- we PRP nsubj
 +-- P1 CD dobj
 |   +-- V NN appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- P0 CD dep
 |   |   +-- = SYM dep
 |   |   +-- V NNP appos
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- -RRB- -RRB- punct
 |   +-- ? . punct
 |   +-- u NNP appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- + SYM dep
 |   |   |   +-- 1 CD num
 |   |   +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- i.e. FW advmod
 |   +-- P1 CD conj
 |   +-- -LRB- -LRB- punct
 |   +-- V NNP dep
 |   +-- -RRB- -RRB- punct
 |   +-- < -LRB- prep
 |   |   +-- P0 CD dep
 |   +-- V NNP appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- implies VBZ rcmod
 |       +-- which WDT nsubj
 |       +-- 0 CD dobj
 |           +-- v VBP dep
 |           +-- = SYM dep
 |           +-- , , punct
 |           +-- contradiction NN appos
 |               +-- a DT det
 +-- . . punct

26
Input: Similarly , if v < 1 2 , player W prefers to play 1 , so we have w = 1 .
Parse:
prefers VBZ ROOT
 +-- Similarly RB advmod
 +-- , , punct
 +-- v NN advcl
 |   +-- if IN mark
 |   +-- < -LRB- punct
 |   +-- 2 CD dep
 |       +-- 1 CD num
 +-- player NN dep
 +-- W NNP nsubj
 +-- play VB xcomp
 |   +-- to TO aux
 |   +-- 1 CD dobj
 +-- have VBP advcl
 |   +-- so IN mark
 |   +-- we PRP nsubj
 |   +-- w IN prep
 |       +-- = SYM pobj
 |           +-- 1 CD num
 +-- . . punct

27
Input: Hence , P1 -LRB- V -RRB- = P0 -LRB- V -RRB- + -LRB- u + 2 -RRB- ? -LRB- u + 1 -RRB- , i.e. , P1 -LRB- V -RRB- > P0 -LRB- V -RRB- , which implies v = 1 , a contradiction .
Parse:
Hence RB ROOT
 +-- , , prep
 |   +-- P1 CD pobj
 |       +-- V NN dep
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- -RRB- -RRB- punct
 |       +-- P0 CD dep
 |       |   +-- = SYM dep
 |       |   +-- V NNP appos
 |       |       +-- -LRB- -LRB- punct
 |       |       +-- -RRB- -RRB- punct
 |       +-- + SYM dep
 |       +-- u NNP dep
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- + SYM dep
 |       |   |   +-- 1 CD num
 |       |   +-- -RRB- -RRB- punct
 |       +-- ? . punct
 |       +-- , , punct
 |       +-- V NNP appos
 |       |   +-- i.e. FW dep
 |       |   +-- , , punct
 |       |   +-- P1 CD dep
 |       |   +-- -LRB- -LRB- punct
 |       |   +-- V NN nn
 |       |   +-- -RRB- -RRB- punct
 |       |   +-- > -RRB- dep
 |       |       +-- P0 CD dep
 |       +-- implies VBZ rcmod
 |       |   +-- which WDT nsubj
 |       |   +-- v VBP prep
 |       |       +-- = SYM dep
 |       |           +-- 1 CD num
 |       +-- contradiction NN appos
 |           +-- a DT det
 +-- . . punct

28
Input: Finally , if v = 1 2 , but w = f -LRB- u -RRB- , player V is not indifferent between 0 and 1 , so he would deviate from playing 1 2 .
Parse:
deviate VB ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- v NN advcl
 |   +-- if IN mark
 |   +-- = FW dep
 |   |   +-- 1 CD num
 |   |   +-- 2 CD num
 |   +-- , , punct
 |   +-- but CC cc
 |   +-- indifferent JJ conj
 |       +-- w IN prep
 |       |   +-- f NN pobj
 |       |       +-- = SYM nn
 |       |       +-- u NNP appos
 |       |           +-- -LRB- -LRB- punct
 |       |           +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- V NN nsubj
 |       |   +-- player NN nn
 |       +-- is VBZ cop
 |       +-- not RB neg
 |       +-- between IN prep
 |           +-- 0 CD pobj
 |               +-- and CC cc
 |               +-- 1 CD conj
 +-- so CC advmod
 +-- he PRP nsubj
 +-- would MD aux
 +-- from IN prep
 |   +-- playing VBG pcomp
 |       +-- 2 CD dobj
 |           +-- 1 CD number
 +-- . . punct

29
Input: This completes the proof of Claim 2 .
Parse:
completes VBZ ROOT
 +-- This DT nsubj
 +-- proof NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- Claim NNP pobj
 |           +-- 2 CD num
 +-- . . punct

30
Input: By Claim 2 , the total payoff in any Nash equilibrium of this game is a function of u .
Parse:
function NN ROOT
 +-- By IN prep
 |   +-- Claim NNP pobj
 |       +-- 2 CD num
 +-- , , punct
 +-- payoff NN nsubj
 |   +-- the DT det
 |   +-- total JJ amod
 |   +-- in IN prep
 |       +-- equilibrium NN pobj
 |           +-- any DT det
 |           +-- Nash NNP nn
 |           +-- of IN prep
 |               +-- game NN pobj
 |                   +-- this DT det
 +-- is VBZ cop
 +-- a DT det
 +-- of IN prep
 |   +-- u NNP pobj
 +-- . . punct

31
Input: More specifically , the payoff to U is 0 , the payoff to V is ? uf -LRB- u -RRB- + 3f -LRB- u -RRB- , and the payoff to W is 1 2 .
Parse:
is VBZ ROOT
 +-- 0 CD dep
 |   +-- specifically RB advmod
 |   |   +-- More RBR advmod
 |   +-- , , punct
 |   +-- payoff NN nsubj
 |   |   +-- the DT det
 |   |   +-- to IN prep
 |   |       +-- U NNP pobj
 |   +-- is VBZ cop
 +-- payoff NN nsubj
 |   +-- the DT det
 |   +-- to IN prep
 |       +-- V NNP pobj
 +-- ? . punct
 +-- uf NNP dep
 |   +-- u NNP appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- + SYM prep
 |       +-- 3f CD pobj
 +-- , , punct
 +-- and CC cc
 +-- 2 CD conj
 |   +-- payoff NN nsubj
 |   |   +-- the DT det
 |   |   +-- to IN prep
 |   |       +-- W NNP pobj
 |   +-- is VBZ cop
 |   +-- 1 CD num
 +-- . . punct

32
Input: Therefore , the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g -LRB- u -RRB- = ? u -LRB- u + 1 -RRB- u + 2 + 3 u + 1 u + 2 = ? -LRB- u ? 3 -RRB- -LRB- u + 1 -RRB- u + 2 .
Parse:
corresponds NNS ROOT
 +-- Therefore RB advmod
 +-- , , punct
 +-- equilibrium NN nsubj
 |   +-- the DT det
 |   +-- Nash NNP nn
 |   +-- with IN prep
 |       +-- payoff NN pobj
 |           +-- the DT det
 |           +-- maximum JJ amod
 |           +-- total JJ amod
 +-- to IN prep
 |   +-- value NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- u NNP pobj
 |       +-- maximizes VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- g , dobj
 |               +-- u NNP appos
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- -RRB- -RRB- punct
 |               +-- = SYM dep
 |               |   +-- ? . punct
 |               |   +-- u UH dep
 |               |   |   +-- -LRB- -LRB- punct
 |               |   |   +-- ? . punct
 |               |   |   +-- 3 CD dep
 |               |   |   +-- -RRB- -RRB- punct
 |               |   +-- u NNP dep
 |               |   +-- + SYM dep
 |               |   |   +-- u UH discourse
 |               |   |   +-- 1 CD dep
 |               |   +-- = SYM dep
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- -RRB- -RRB- punct
 |               +-- u NNP dep
 |                   +-- + SYM dep
 |                   +-- 2 CD dep
 +-- . . punct

33
Input: To find extrema of g -LRB- u -RRB- , we compute h -LRB- u -RRB- = ? d du g -LRB- u -RRB- .
Parse:
compute VBP ROOT
 +-- find VB advcl
 |   +-- To TO aux
 |   +-- extrema NN dobj
 |       +-- of IN prep
 |           +-- g UH pobj
 |               +-- -LRB- -LRB- punct
 |               +-- u NNP dep
 |               +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- h NNP dobj
 |   +-- u NNP appos
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 +-- = SYM prep
 |   +-- ? . punct
 |   +-- g UH dep
 |       +-- du NNP nn
 |       |   +-- d NN nn
 |       +-- u NNP appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

34
Input: We have h -LRB- u -RRB- = -LRB- 2u ? 2 -RRB- -LRB- u + 2 -RRB- ? -LRB- u ? 3 -RRB- -LRB- u + 1 -RRB- -LRB- u + 2 -RRB- 2 = u2 + 4u ? 1 -LRB- u + 2 -RRB- 2 .
Parse:
have VBP ROOT
 +-- We PRP nsubj
 +-- h FW dep
 |   +-- u LS appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- = SYM dep
 |   +-- -LRB- -LRB- punct
 |   +-- 2u CD dep
 |   |   +-- ? . punct
 |   |   +-- 2 CD num
 |   +-- -RRB- -RRB- punct
 |   +-- u UH dep
 |   |   +-- + SYM dep
 |   |   +-- 1 CD dep
 |   +-- ? . punct
 |   +-- u NNP dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- + SYM dep
 |   |   |   +-- 2 CD num
 |   |   +-- -RRB- -RRB- punct
 |   +-- 2 CD dep
 |   +-- u2 CD dep
 |       +-- + SYM prep
 |           +-- 4u CD pobj
 +-- ? . punct
 +-- 1 CD dobj
 |   +-- u NNP dep
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- + SYM dep
 |   |   |   +-- 2 CD num
 |   |   +-- -RRB- -RRB- punct
 |   +-- 2 CD dep
 +-- . . punct
