
1
Input: In non anonymous technologies -LRB- even with identical costs -RRB- , we need to talk about the contracted set of agents and not only about the number of contracted agents
Parse:
need VBP ROOT
 +-- In IN prep
 |   +-- technologies NNS pobj
 |       +-- anonymous JJ nn
 |       |   +-- non NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- with IN prep
 |       |   +-- even RB advmod
 |       |   +-- costs NNS pobj
 |       |       +-- identical JJ amod
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- talk VB xcomp
     +-- to TO aux
     +-- about IN prep
         +-- set VBN pobj
         |   +-- the DT det
         |   +-- contracted VBN amod
         |   +-- of IN prep
         |       +-- agents NNS pobj
         +-- and CC cc
         +-- about IN conj
             +-- only RB dep
             |   +-- not RB neg
             +-- number NN pobj
                 +-- the DT det
                 +-- of IN prep
                     +-- agents NNS pobj
                         +-- contracted VBN amod

2
Input: In this section , we identify the sets of agents that can be obtained as the optimal contract for some v
Parse:
identify VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- sets NNS dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- agents NNS pobj
 |   +-- obtained VBN rcmod
 |       +-- that WDT nsubjpass
 |       +-- can MD aux
 |       +-- be VB auxpass
 |       +-- as IN prep
 |           +-- contract NN pobj
 |               +-- the DT det
 |               +-- optimal JJ amod
 |               +-- for IN prep
 |                   +-- some DT pobj
 +-- v . punct

3
Input: These sets construct the orbit of a technology
Parse:
construct VBP ROOT
 +-- sets NNS nsubj
 |   +-- These DT det
 +-- orbit NN dobj
     +-- the DT det
     +-- of IN prep
         +-- technology NN pobj
             +-- a DT det

4
Input: Definition 3
Parse:
Definition NN ROOT
 +-- 3 CD num

5
Input: For a technology t , a set of agents S is in the orbit of t if for some value v , the optimal contract is exactly with the set S of agents -LRB- where ties between different S '' s are broken according to a lexicographic order9 Our analysis throughout the paper sheds some light on the algorithmic aspects of computing the best contract
Parse:
is VBZ ROOT
 +-- For IN prep
 |   +-- t NN pobj
 |       +-- a DT det
 |       +-- technology NN nn
 +-- , , punct
 +-- set NN nsubj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- S NNP pobj
 |           +-- agents NNS nn
 +-- in IN prep
 |   +-- orbit NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- t NN pobj
 +-- is VBZ ccomp
     +-- v NN advcl
     |   +-- if IN mark
     |   +-- for IN prep
     |       +-- value NN pobj
     |           +-- some DT det
     +-- , , punct
     +-- contract NN nsubj
     |   +-- the DT det
     |   +-- optimal JJ amod
     +-- with IN prep
         +-- exactly RB advmod
         +-- sheds VBZ pcomp
             +-- S NNP nsubj
             |   +-- the DT det
             |   +-- set VBN amod
             |   +-- of IN prep
             |   |   +-- agents NNS pobj
             |   +-- -LRB- -LRB- punct
             |   +-- broken VBN rcmod
             |       +-- where WRB advmod
             |       +-- ties NNS nsubjpass
             |       |   +-- between IN prep
             |       |       +-- S NNP pobj
             |       |           +-- different JJ amod
             |       |           +-- '' '' punct
             |       |           +-- s POS possessive
             |       +-- are VBP auxpass
             |       +-- according VBG prep
             |           +-- to IN pcomp
             |               +-- analysis NN pobj
             |                   +-- a DT det
             |                   +-- lexicographic JJ amod
             |                   +-- order9 CD num
             |                   +-- Our PRP$ poss
             |                   +-- throughout IN prep
             |                       +-- paper NN pobj
             |                           +-- the DT det
             +-- light NN dobj
             |   +-- some DT det
             +-- on IN prep
                 +-- aspects NNS pobj
                     +-- the DT det
                     +-- algorithmic JJ amod
                     +-- of IN prep
                         +-- computing VBG pcomp
                             +-- contract NN dobj
                                 +-- the DT det
                                 +-- best JJS amod

6
Input: In this section we state these implications -LRB- for the proofs see -LRB- 2 -RRB- -RRB-
Parse:
state VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- we PRP nsubj
 +-- implications NNS dobj
 |   +-- these DT det
 +-- see VB parataxis
     +-- -LRB- -LRB- punct
     +-- for IN prep
     |   +-- proofs NNS pobj
     |       +-- the DT det
     +-- 2 CD dobj
     |   +-- -LRB- -LRB- punct
     |   +-- -RRB- -RRB- punct
     +-- -RRB- -RRB- punct

7
Input: We first consider the general model where the technology function is given by an arbitrary monotone function t -LRB- with rational values -RRB- , and we then consider the case of structured technologies given by a network representation of the underlying Boolean function
Parse:
consider VBP ROOT
 +-- We PRP nsubj
 +-- first RB advmod
 +-- model NN dobj
 |   +-- the DT det
 |   +-- general JJ amod
 |   +-- given VBN rcmod
 |       +-- where WRB advmod
 |       +-- function NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- technology NN nn
 |       +-- is VBZ auxpass
 |       +-- by IN prep
 |           +-- t NN pobj
 |               +-- an DT det
 |               +-- arbitrary JJ amod
 |               +-- function NN nn
 |               |   +-- monotone NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- with IN prep
 |               |   +-- values NNS pobj
 |               |       +-- rational JJ amod
 |               +-- -RRB- -RRB- punct
 +-- , , punct
 +-- and CC cc
 +-- consider VBP conj
     +-- we PRP nsubj
     +-- then RB advmod
     +-- case NN dobj
         +-- the DT det
         +-- of IN prep
             +-- technologies NNS pobj
                 +-- structured JJ amod
                 +-- given VBN partmod
                     +-- by IN prep
                         +-- representation NN pobj
                             +-- a DT det
                             +-- network NN nn
                             +-- of IN prep
                                 +-- function NN pobj
                                     +-- the DT det
                                     +-- underlying VBG amod
                                     +-- Boolean NNP nn

8
Input: 5.1 Binary Outcome Binary Action Technologies Here we assume that we are given a technology and value v as the input , and our output should be the optimal contract , i.e
Parse:
Technologies NNPS ROOT
 +-- 5.1 CD num
 +-- Binary NNP nn
 +-- Outcome NNP nn
 +-- Action NNP nn
 +-- Here RB advmod
 +-- assume VBP rcmod
     +-- we PRP nsubj
     +-- given VBN ccomp
     |   +-- that IN mark
     |   +-- we PRP nsubjpass
     |   +-- are VBP auxpass
     |   +-- technology NN dobj
     |   |   +-- a DT det
     |   |   +-- and CC cc
     |   |   +-- v NN conj
     |   |       +-- value NN nn
     |   +-- as IN prep
     |       +-- input NN pobj
     |           +-- the DT det
     +-- , , punct
     +-- and CC cc
     +-- contract NN conj
         +-- output NN nsubj
         |   +-- our PRP$ poss
         +-- should MD aux
         +-- be VB cop
         +-- the DT det
         +-- optimal JJ amod
         +-- , , punct
         +-- i.e ADD appos

9
Input: the set S ? of agents to be contracted and the contract pi for each i ? S ?
Parse:
set NN ROOT
 +-- the DT det
 +-- S NNP appos
 +-- ? , punct
 +-- of IN prep
 |   +-- agents NNS pobj
 |       +-- contracted VBN infmod
 |           +-- to TO aux
 |           +-- be VB auxpass
 +-- and CC cc
 +-- pi NN conj
 |   +-- the DT det
 |   +-- contract NN nn
 |   +-- for IN prep
 |       +-- i PRP pobj
 |           +-- each DT det
 +-- S NNP conj
 +-- ? . punct

10
Input: In the general case , the success function t is of size exponential in n , the number of agents , and we will need to deal with that
Parse:
is VBZ ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- general JJ amod
 +-- , , punct
 +-- t NN nsubj
 |   +-- the DT det
 |   +-- function NN nn
 |       +-- success NN nn
 +-- of IN prep
 |   +-- exponential NN pobj
 |       +-- size NN nn
 |       +-- in IN prep
 |       |   +-- n NNP pobj
 |       +-- , , punct
 |       +-- number NN appos
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- agents NNS pobj
 +-- and CC cc
 +-- need VB conj
     +-- we PRP nsubj
     +-- will MD aux
     +-- deal VB xcomp
         +-- to TO aux
         +-- with IN prep
             +-- that DT pobj

11
Input: In the special case of anonymous technologies , the description of t is only the n+1 numbers t0 ,
Parse:
numbers NNS ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- the DT det
 |       +-- special JJ amod
 |       +-- of IN prep
 |           +-- technologies NNS pobj
 |               +-- anonymous JJ amod
 +-- , , punct
 +-- description NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- t NN pobj
 +-- is VBZ cop
 +-- only RB advmod
 +-- the DT det
 +-- n+1 CD num
 +-- t0 CD dobj

12
Input: , tn , and in this case our analysis in section 3 completely suffices for computing the optimal contract
Parse:
tn UH ROOT
 +-- , , punct
 +-- and CC cc
 +-- suffices VBZ conj
     +-- in IN prep
     |   +-- case NN pobj
     |       +-- this DT det
     +-- analysis NN nsubj
     |   +-- our PRP$ poss
     |   +-- in IN prep
     |       +-- section NN pobj
     |           +-- 3 CD num
     +-- completely RB advmod
     +-- for IN prep
         +-- computing VBG pcomp
             +-- contract NN dobj
                 +-- the DT det
                 +-- optimal JJ amod

13
Input: Proposition 1
Parse:
Proposition NN ROOT
 +-- 1 CD num

14
Input: Given as input the full description of a technology -LRB- the values t0 ,
Parse:
Given VBN ROOT
 +-- as IN prep
     +-- input NN pcomp
         +-- description NN dobj
             +-- the DT det
             +-- full JJ amod
             +-- of IN prep
                 +-- technology NN pobj
                     +-- a DT det
                     +-- values NNS dep
                         +-- -LRB- -LRB- punct
                         +-- the DT det
                         +-- t0 CD dep
                         +-- , , punct

15
Input: , tn and the identical cost c for an anonymous technology , or the value t -LRB- S -RRB- for all the 2n possible subsets S ? N of the players , and a vector of costs c for non anonymous technologies -RRB- , the following can all be computed in polynomial time
Parse:
computed VBN ROOT
 +-- , , punct
 +-- tn UH nsubj
 |   +-- and CC cc
 |   +-- c NN conj
 |   |   +-- the DT det
 |   |   +-- identical JJ amod
 |   |   +-- cost NN nn
 |   |   +-- for IN prep
 |   |       +-- technology NN pobj
 |   |           +-- an DT det
 |   |           +-- anonymous JJ amod
 |   +-- , , punct
 |   +-- or CC cc
 |   +-- t NN conj
 |   |   +-- the DT det
 |   |   +-- value NN nn
 |   |   +-- S NNP appos
 |   |       +-- -LRB- -LRB- punct
 |   |       +-- -RRB- -RRB- punct
 |   +-- for IN prep
 |   |   +-- S NNP pobj
 |   |       +-- all PDT predet
 |   |       +-- the DT det
 |   |       +-- 2n CD num
 |   |       +-- possible JJ amod
 |   |       +-- subsets NNS nn
 |   +-- ? . punct
 |   +-- N NN conj
 |   |   +-- of IN prep
 |   |       +-- players NNS pobj
 |   |           +-- the DT det
 |   +-- vector NN conj
 |       +-- a DT det
 |       +-- of IN prep
 |       |   +-- c NN pobj
 |       |       +-- costs NNS nn
 |       +-- for IN prep
 |       |   +-- technologies NNS pobj
 |       |       +-- non NNP nn
 |       |       +-- anonymous JJ amod
 |       +-- -RRB- -RRB- punct
 +-- following VBG dep
 |   +-- the DT det
 +-- can MD aux
 +-- all DT nsubj
 +-- be VB cop
 +-- in IN prep
     +-- time NN pobj
         +-- polynomial JJ amod

16
Input: ? An optimal contract for any given value v , for both the agency and the non strategic cases
Parse:
v NN ROOT
 +-- ? NFP punct
 +-- contract NN nsubj
 |   +-- An DT det
 |   +-- optimal JJ amod
 |   +-- for IN prep
 |       +-- any DT pobj
 |           +-- given VBN prep
 |               +-- value NN dep
 +-- , , punct
 +-- for IN prep
     +-- agency NN pobj
         +-- both CC preconj
         +-- the DT det
         +-- and CC cc
         +-- cases NNS conj
             +-- the DT det
             +-- non FW nn
             +-- strategic JJ amod

17
Input: ? The price of unaccountability POU -LRB- t , c -RRB-
Parse:
price NN ROOT
 +-- ? , punct
 +-- The DT det
 +-- of IN prep
     +-- POU NNP pobj
         +-- unaccountability NN nn
         +-- c NN appos
             +-- -LRB- -LRB- punct
             +-- t NN nn
             +-- , , punct
             +-- -RRB- -RRB- punct

18
Input: Proof
Parse:
Proof NNP ROOT

19
Input: We prove the claims for the non anonymous case , the proof for the anonymous case is similar
Parse:
prove VBP ROOT
 +-- We PRP nsubj
 +-- similar JJ xcomp
     +-- claims NNS nsubj
     |   +-- the DT det
     |   +-- for IN prep
     |       +-- case NN pobj
     |           +-- the DT det
     |           +-- non FW nn
     |           +-- anonymous JJ amod
     +-- , , punct
     +-- proof NN nsubj
     |   +-- the DT det
     |   +-- for IN prep
     |       +-- case NN pobj
     |           +-- the DT det
     |           +-- anonymous JJ amod
     +-- is VBZ cop

20
Input: We first show how to construct the orbit of the technology -LRB- the same procedure apply in both cases -RRB-
Parse:
show VBP ROOT
 +-- We PRP nsubj
 +-- first RB advmod
 +-- construct VB ccomp
 |   +-- how WRB advmod
 |   +-- to TO aux
 |   +-- orbit NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- technology NN pobj
 |               +-- the DT det
 +-- apply VB parataxis
     +-- -LRB- -LRB- punct
     +-- procedure NN nsubj
     |   +-- the DT det
     |   +-- same JJ amod
     +-- in IN prep
     |   +-- cases NNS pobj
     |       +-- both DT det
     +-- -RRB- -RRB- punct

21
Input: To construct the orbit we find all transition points and the sets that are in the orbit
Parse:
find VBP ROOT
 +-- construct VB dep
 |   +-- To TO aux
 |   +-- orbit NN dobj
 |       +-- the DT det
 +-- we PRP nsubj
 +-- points NNS dobj
     +-- all DT det
     +-- transition NN nn
     +-- and CC cc
     +-- sets NNS conj
         +-- the DT det
         +-- are VBP rcmod
             +-- that WDT nsubj
             +-- in IN prep
                 +-- orbit NN pobj
                     +-- the DT det

22
Input: The empty contract is always optimal for v = 0
Parse:
optimal JJ ROOT
 +-- contract NN nsubj
 |   +-- The DT det
 |   +-- empty JJ amod
 +-- is VBZ cop
 +-- always RB advmod
 +-- for IN prep
 |   +-- = SYM pobj
 |       +-- v NN nn
 +-- 0 NFP punct

23
Input: Assume that we have calculated the optimal contracts and the transition points up to some transition point v for which S is an optimal contract with the highest success probability
Parse:
Assume VB ROOT
 +-- calculated VBN ccomp
 |   +-- that IN mark
 |   +-- we PRP nsubj
 |   +-- have VBP aux
 |   +-- contracts NNS dobj
 |       +-- the DT det
 |       +-- optimal JJ amod
 +-- and CC cc
 +-- points VBZ conj
     +-- transition NN nsubj
     |   +-- the DT det
     +-- up RP prt
     +-- to IN prep
         +-- v NN pobj
             +-- some DT det
             +-- point NN nn
             |   +-- transition NN nn
             +-- contract NN rcmod
                 +-- for IN prep
                 |   +-- which WDT pobj
                 +-- S NNP nsubj
                 +-- is VBZ cop
                 +-- an DT det
                 +-- optimal JJ amod
                 +-- with IN prep
                     +-- probability NN pobj
                         +-- the DT det
                         +-- highest JJS amod
                         +-- success NN nn

24
Input: We show how to calculate the next transition point and the next optimal contract
Parse:
show VBP ROOT
 +-- We PRP nsubj
 +-- calculate VB ccomp
     +-- how WRB advmod
     +-- to TO aux
     +-- point NN dobj
         +-- the DT det
         +-- next JJ amod
         +-- transition NN nn
         +-- and CC cc
         +-- contract NN conj
             +-- the DT det
             +-- next JJ amod
             +-- optimal JJ amod

25
Input: By Lemma 3 the next contract on the orbit -LRB- for higher values -RRB- has a higher success probability -LRB- there are no two sets with the same success probability on the orbit -RRB-
Parse:
has VBZ ROOT
 +-- By IN prep
 |   +-- Lemma NNP pobj
 |       +-- 3 CD num
 +-- contract NN nsubj
 |   +-- the DT det
 |   +-- next JJ amod
 |   +-- on IN prep
 |   |   +-- orbit NN pobj
 |   |       +-- the DT det
 |   +-- -LRB- -LRB- punct
 |   +-- for IN prep
 |   |   +-- values NNS pobj
 |   |       +-- higher JJR amod
 |   +-- -RRB- -RRB- punct
 +-- probability NN dobj
 |   +-- a DT det
 |   +-- success NN nn
 |       +-- higher JJR amod
 +-- are VBP parataxis
     +-- -LRB- -LRB- punct
     +-- there EX expl
     +-- sets NNS nsubj
     |   +-- no DT det
     |   +-- two CD num
     |   +-- with IN prep
     |       +-- probability NN pobj
     |           +-- the DT det
     |           +-- same JJ amod
     |           +-- success NN nn
     |           +-- on IN prep
     |               +-- orbit NN pobj
     |                   +-- the DT det
     +-- -RRB- -RRB- punct

26
Input: We calculate the next optimal contract by the following procedure
Parse:
calculate VBP ROOT
 +-- We PRP nsubj
 +-- contract NN dobj
 |   +-- the DT det
 |   +-- next JJ amod
 |   +-- optimal JJ amod
 +-- by IN prep
     +-- procedure NN pobj
         +-- the DT det
         +-- following VBG amod

27
Input: We go over all sets T such that t -LRB- T -RRB- > t -LRB- S -RRB- , and calculate the value for which the principal is indifferent between contracting with T and contracting with S
Parse:
go VBP ROOT
 +-- We PRP nsubj
 +-- over RB prep
 |   +-- sets NNS pobj
 |       +-- all DT det
 +-- T NNP dobj
     +-- such JJ amod
         +-- that IN prep
             +-- t NN pobj
                 +-- S NNP dep
                     +-- -LRB- -LRB- punct
                     +-- T NNP nn
                     +-- -RRB- -RRB- punct
                     +-- > -RRB- punct
                     +-- t NN dep
                     +-- , , punct
                     +-- and CC cc
                     +-- calculate VB conj
                         +-- value NN dobj
                             +-- the DT det
                             +-- indifferent JJ rcmod
                                 +-- for IN prep
                                 |   +-- which WDT pobj
                                 +-- principal NN nsubj
                                 |   +-- the DT det
                                 +-- is VBZ cop
                                 +-- between IN prep
                                     +-- contracting NN pobj
                                         +-- with IN prep
                                         |   +-- T NNP pobj
                                         +-- and CC cc
                                         +-- contracting VBG conj
                                             +-- with IN prep
                                                 +-- S NNP pobj

28
Input: The minimal indifference value is the next transition point and the contract that has the minimal indifference value is the next optimal contract
Parse:
point NN ROOT
 +-- value NN nsubj
 |   +-- The DT det
 |   +-- minimal JJ amod
 |   +-- indifference NN nn
 +-- is VBZ cop
 +-- the DT det
 +-- next JJ amod
 +-- transition NN nn
 +-- and CC cc
 +-- contract NN conj
     +-- contract NN nsubj
     |   +-- the DT det
     |   +-- has VBZ rcmod
     |       +-- that WDT nsubj
     |       +-- value NN dobj
     |           +-- the DT det
     |           +-- minimal JJ amod
     |           +-- indifference NN nn
     +-- is VBZ cop
     +-- the DT det
     +-- next JJ amod
     +-- optimal JJ amod

29
Input: Linearity of the utility in the value and monotonicity of the success probability of the optimal contracts ensure that the above works
Parse:
ensure VBP ROOT
 +-- Linearity NN nsubj
 |   +-- of IN prep
 |       +-- utility NN pobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- value NN pobj
 |                   +-- the DT det
 |                   +-- and CC cc
 |                   +-- monotonicity NN conj
 |                   +-- of IN prep
 |                       +-- probability NN pobj
 |                           +-- the DT det
 |                           +-- success NN nn
 |                           +-- of IN prep
 |                               +-- contracts NNS pobj
 |                                   +-- the DT det
 |                                   +-- optimal JJ amod
 +-- works VBZ ccomp
     +-- that IN mark
     +-- above JJ nsubj
         +-- the DT det

30
Input: Clearly the above calculation is polynomial in the input size
Parse:
polynomial JJ ROOT
 +-- Clearly RB advmod
 +-- calculation NN nsubj
 |   +-- the DT det
 |   +-- above JJ amod
 +-- is VBZ cop
 +-- in IN prep
     +-- size NN pobj
         +-- the DT det
         +-- input NN nn

31
Input: Once we have the orbit , it is clear that an optimal contract for any given value v can be calculated
Parse:
clear JJ ROOT
 +-- have VBP advcl
 |   +-- Once IN mark
 |   +-- we PRP nsubj
 |   +-- orbit NN dobj
 |       +-- the DT det
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- calculated VBN ccomp
     +-- that IN mark
     +-- contract NN nsubjpass
     |   +-- an DT det
     |   +-- optimal JJ amod
     |   +-- for IN prep
     |       +-- any DT pobj
     |           +-- given VBN prep
     |               +-- v NN dep
     |                   +-- value NN nn
     +-- can MD aux
     +-- be VB auxpass

32
Input: We find the largest transition point that is not larger than the value v , and the optimal contract at v is the set with the higher success probability at this transition point
Parse:
find VBP ROOT
 +-- We PRP nsubj
 +-- point NN dobj
 |   +-- the DT det
 |   +-- largest JJS amod
 |   +-- transition NN nn
 |   +-- larger JJR rcmod
 |       +-- that WDT nsubj
 |       +-- is VBZ cop
 |       +-- not RB neg
 |       +-- v NN ccomp
 |           +-- than IN mark
 |           +-- value NN nsubj
 |               +-- the DT det
 +-- , , punct
 +-- and CC cc
 +-- set NN conj
     +-- contract NN nsubj
     |   +-- the DT det
     |   +-- optimal JJ amod
     |   +-- at IN prep
     |       +-- v NN pobj
     +-- is VBZ cop
     +-- the DT det
     +-- with IN prep
         +-- probability NN pobj
             +-- the DT det
             +-- success NN nn
             |   +-- higher JJR amod
             +-- at IN prep
                 +-- point NN pobj
                     +-- this DT det
                     +-- transition NN nn

33
Input: Finally , as we can calculate the orbit of the technology in both the agency and the non strategic cases in polynomial time , we can find the price of unaccountability in polynomial time
Parse:
find VB ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- calculate VB advcl
 |   +-- as IN mark
 |   +-- we PRP nsubj
 |   +-- can MD aux
 |   +-- orbit NN dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |   |   +-- technology NN pobj
 |   |   |       +-- the DT det
 |   |   +-- in IN prep
 |   |       +-- agency NN pobj
 |   |           +-- both CC preconj
 |   |           +-- the DT det
 |   |           +-- and CC cc
 |   |           +-- cases NNS conj
 |   |               +-- the DT det
 |   |               +-- non FW nn
 |   |               +-- strategic JJ amod
 |   +-- in IN prep
 |       +-- time NN pobj
 |           +-- polynomial JJ amod
 +-- we PRP nsubj
 +-- can MD aux
 +-- price NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- unaccountability NN pobj
 +-- in IN prep
     +-- time NN pobj
         +-- polynomial JJ amod

34
Input: By Lemma 1 the price of unaccountability POU -LRB- t -RRB- is obtained at some transition point , so we only need to go over all transition points , and find the one with the maximal social welfare ratio
Parse:
obtained VBN ROOT
 +-- By IN prep
 |   +-- Lemma NNP pobj
 |       +-- 1 CD num
 +-- price NN nsubjpass
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- POU NNP pobj
 |   |       +-- unaccountability NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- t NN dep
 |   +-- -RRB- -RRB- punct
 +-- is VBZ auxpass
 +-- at IN prep
 |   +-- point NN pobj
 |       +-- some DT det
 |       +-- transition NN nn
 +-- , , punct
 +-- so IN cc
 +-- need VBP conj
     +-- we PRP nsubj
     +-- only RB advmod
     +-- go VB xcomp
         +-- to TO aux
         +-- over RB prep
         |   +-- points NNS pobj
         |       +-- all DT det
         |       +-- transition NN nn
         +-- , , punct
         +-- and CC cc
         +-- find VB conj
             +-- one NN dobj
                 +-- the DT det
                 +-- with IN prep
                     +-- ratio NN pobj
                         +-- the DT det
                         +-- maximal JJ amod
                         +-- welfare NN nn
                             +-- social JJ amod

35
Input: A more interesting question is whether if given the function t as a black box , we can compute the optimal contract in time that is polynomial in n
Parse:
is VBZ ROOT
 +-- question NN nsubj
 |   +-- A DT det
 |   +-- interesting JJ amod
 |       +-- more RBR advmod
 +-- compute VB ccomp
 |   +-- whether IN mark
 |   +-- given VBN advcl
 |   |   +-- if IN mark
 |   |   +-- function NN dobj
 |   |   |   +-- the DT det
 |   |   +-- t NNP prt
 |   |   +-- as IN prep
 |   |       +-- box NN pobj
 |   |           +-- a DT det
 |   |           +-- black JJ amod
 |   +-- , , punct
 |   +-- we PRP nsubj
 |   +-- can MD aux
 |   +-- contract NN dobj
 |   |   +-- the DT det
 |   |   +-- optimal JJ amod
 |   +-- in IN prep
 |       +-- time NN pobj
 |           +-- polynomial JJ rcmod
 |               +-- that WDT nsubj
 |               +-- is VBZ cop
 |               +-- in IN advmod
 +-- n . punct

36
Input: We can show that , in general this is not the case
Parse:
show VB ROOT
 +-- We PRP nsubj
 +-- can MD aux
 +-- case NN ccomp
     +-- that IN mark
     +-- , , punct
     +-- in IN prep
     |   +-- general JJ pobj
     +-- this DT nsubj
     +-- is VBZ cop
     +-- not RB neg
     +-- the DT det

37
Input: Given as input a black box for a success function t -LRB- when the costs are identical -RRB- , and a value v , the number of queries that is needed , in the worst case , to find the optimal contract is exponential in n
Parse:
exponential JJ ROOT
 +-- Given VBN prep
 |   +-- as IN pcomp
 |       +-- input NN pobj
 |           +-- box NN dobj
 |           |   +-- a DT det
 |           |   +-- black JJ amod
 |           +-- for IN prep
 |           |   +-- t NN pobj
 |           |       +-- a DT det
 |           |       +-- function NN nn
 |           |       |   +-- success NN nn
 |           |       +-- -LRB- -LRB- punct
 |           |       +-- identical JJ rcmod
 |           |       |   +-- when WRB advmod
 |           |       |   +-- costs NNS nsubj
 |           |       |   |   +-- the DT det
 |           |       |   +-- are VBP cop
 |           |       +-- -RRB- -RRB- punct
 |           +-- , , punct
 |           +-- and CC cc
 |           +-- v NN conj
 |               +-- a DT det
 |               +-- value NN nn
 +-- , , punct
 +-- number NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- queries NNS pobj
 |           +-- needed VBN rcmod
 |               +-- that WDT nsubjpass
 |               +-- is VBZ auxpass
 |               +-- , , punct
 |               +-- in IN prep
 |               |   +-- case NN pobj
 |               |       +-- the DT det
 |               |       +-- worst JJS amod
 |               +-- find VB xcomp
 |                   +-- to TO aux
 |                   +-- contract NN dobj
 |                       +-- the DT det
 |                       +-- optimal JJ amod
 +-- is VBZ cop
 +-- in IN prep
 +-- n . punct

38
Input: Proof
Parse:
Proof NNP ROOT

39
Input: Consider the following family of technologies
Parse:
Consider VB ROOT
 +-- family NN dobj
     +-- the DT det
     +-- following VBG amod
     +-- of IN prep
         +-- technologies NNS pobj

40
Input: For some small > 0 and k = n 2 we define the success probability for a given set T as follows
Parse:
define VBP ROOT
 +-- For IN prep
 |   +-- > NNS pobj
 |       +-- some DT det
 |       +-- small JJ amod
 |       +-- 0 CD num
 |       +-- and CC cc
 |       +-- k NN conj
 |       +-- = NFP punct
 |       +-- n RB advmod
 |           +-- 2 CD pobj
 +-- we PRP nsubj
 +-- probability NN dobj
 |   +-- the DT det
 |   +-- success NN nn
 |   +-- for IN prep
 |       +-- T NN pobj
 |           +-- a DT det
 |           +-- given VBN amod
 |           +-- set NN nn
 +-- follows VBZ advcl
     +-- as IN mark
