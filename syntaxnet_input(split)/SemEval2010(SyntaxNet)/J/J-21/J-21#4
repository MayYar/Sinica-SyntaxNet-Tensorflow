
1
Input: The dynamic parimutuel market was introduced by Pennock -LRB- 10 -RRB- as an information market structure that encourages informed traders to trade early , has guaranteed liquidity , and requires a bounded subsidy .
Parse:
introduced VBN ROOT
 +-- market NN nsubjpass
 |   +-- The DT det
 |   +-- dynamic JJ amod
 |   +-- parimutuel NN nn
 +-- was VBD auxpass
 +-- by IN prep
 |   +-- Pennock NNP pobj
 |       +-- -LRB- -LRB- punct
 |       +-- 10 CD dep
 |       +-- -RRB- -RRB- punct
 +-- as IN prep
 |   +-- structure NN pobj
 |       +-- an DT det
 |       +-- market NN nn
 |       |   +-- information NN nn
 |       +-- encourages VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- traders NNS dobj
 |           |   +-- informed JJ amod
 |           +-- trade VB xcomp
 |               +-- to TO aux
 |               +-- early RB advmod
 +-- , , punct
 +-- guaranteed VBN conj
 |   +-- has VBZ aux
 |   +-- liquidity NN dobj
 +-- and CC cc
 +-- requires VBZ conj
 |   +-- subsidy NN dobj
 |       +-- a DT det
 |       +-- bounded VBN amod
 +-- . . punct

2
Input: This market structure was used in the Yahoo ! Buzz market -LRB- 8 -RRB- .
Parse:
used VBN ROOT
 +-- structure NN nsubjpass
 |   +-- This DT det
 |   +-- market NN nn
 +-- was VBD auxpass
 +-- in IN prep
 |   +-- market NN pobj
 |       +-- the DT det
 |       +-- Yahoo NNP nn
 |       |   +-- ! . punct
 |       +-- Buzz NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- 8 CD dep
 |       +-- -RRB- -RRB- punct
 +-- . . punct

3
Input: In this section , we show that the dynamic parimutuel market is also remarkably similar to the projection game .
Parse:
show VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- similar JJ ccomp
 |   +-- that IN mark
 |   +-- market NN nsubj
 |   |   +-- the DT det
 |   |   +-- dynamic JJ amod
 |   |   +-- parimutuel NN nn
 |   +-- is VBZ cop
 |   +-- also RB advmod
 |   +-- remarkably RB advmod
 |   +-- to IN prep
 |       +-- game NN pobj
 |           +-- the DT det
 |           +-- projection NN nn
 +-- . . punct

4
Input: Coupled with section 4 , this also demonstrates a strong connection between the DPM and MSR .
Parse:
demonstrates VBZ ROOT
 +-- Coupled VBN partmod
 |   +-- with IN prep
 |       +-- section NN pobj
 |           +-- 4 CD num
 +-- , , punct
 +-- this DT nsubj
 +-- also RB advmod
 +-- connection NN dobj
 |   +-- a DT det
 |   +-- strong JJ amod
 |   +-- between IN prep
 |       +-- DPM NNP pobj
 |           +-- the DT det
 |           +-- and CC cc
 |           +-- MSR NNP conj
 +-- . . punct

5
Input: In a two event DPM , users can place bets on either event A or B at any time , by buying a share in the appropriate event .
Parse:
place VB ROOT
 +-- In IN prep
 |   +-- event NN pobj
 |       +-- a DT det
 |       +-- two CD num
 |       +-- DPM NNP appos
 +-- , , punct
 +-- users NNS nsubj
 +-- can MD aux
 +-- bets NNS dobj
 |   +-- on IN prep
 |       +-- A NN pobj
 |           +-- either DT preconj
 |           +-- event NN nn
 |           +-- or CC cc
 |           +-- B NN conj
 +-- at IN prep
 |   +-- time NN pobj
 |       +-- any DT det
 +-- by IN prep
 |   +-- buying VBG pcomp
 |       +-- share NN dobj
 |       |   +-- a DT det
 |       +-- in IN prep
 |           +-- event NN pobj
 |               +-- the DT det
 |               +-- appropriate JJ amod
 +-- . . punct

6
Input: The price of a share is variable , determined by the total amount of money in the market and the number of shares currently outstanding .
Parse:
variable JJ ROOT
 +-- price NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- share NN pobj
 |           +-- a DT det
 +-- is VBZ cop
 +-- , , punct
 +-- determined VBN dep
 |   +-- by IN prep
 |       +-- amount NN pobj
 |           +-- the DT det
 |           +-- total JJ amod
 |           +-- of IN prep
 |           |   +-- money NN pobj
 |           +-- in IN prep
 |           |   +-- market NN pobj
 |           |       +-- the DT det
 |           +-- and CC cc
 |           +-- number NN conj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- shares NNS pobj
 |                       +-- outstanding JJ amod
 |                           +-- currently RB advmod
 +-- . . punct

7
Input: Further , existing shares can be sold at the current price .
Parse:
sold VBN ROOT
 +-- Further RB advmod
 +-- , , punct
 +-- shares NNS nsubjpass
 |   +-- existing VBG amod
 +-- can MD aux
 +-- be VB auxpass
 +-- at IN prep
 |   +-- price NN pobj
 |       +-- the DT det
 |       +-- current JJ amod
 +-- . . punct

8
Input: After it is determined which event really happens , the shares are liquidated for cash .
Parse:
liquidated VBN ROOT
 +-- determined VBN advcl
 |   +-- After IN mark
 |   +-- it PRP nsubjpass
 |   +-- is VBZ auxpass
 |   +-- happens VBZ ccomp
 |       +-- which WDT dobj
 |       +-- event NN nsubj
 |       +-- really RB advmod
 +-- , , punct
 +-- shares NNS nsubjpass
 |   +-- the DT det
 +-- are VBP auxpass
 +-- for IN prep
 |   +-- cash NN pobj
 +-- . . punct

9
Input: In the total money redistributed variant of DPM , which is the variant used in the Yahoo ! market , the total money is divided equally among the shares of the winning event ; shares of the losing event are worthless .
Parse:
divided VBN ROOT
 +-- In IN prep
 |   +-- variant NN pobj
 |       +-- the DT det
 |       +-- total JJ amod
 |       +-- money NN nn
 |       +-- redistributed VBN amod
 |       +-- of IN prep
 |       |   +-- DPM NNP pobj
 |       +-- , , punct
 |       +-- variant NN rcmod
 |       |   +-- which WDT nsubj
 |       |   +-- is VBZ cop
 |       |   +-- the DT det
 |       |   +-- used VBN partmod
 |       |       +-- in IN prep
 |       |           +-- Yahoo NNP pobj
 |       |               +-- the DT det
 |       +-- ! . punct
 |       +-- market NN appos
 +-- , , punct
 +-- money NN nsubjpass
 |   +-- the DT det
 |   +-- total JJ amod
 +-- is VBZ auxpass
 +-- equally RB advmod
 +-- among IN prep
 |   +-- shares NNS pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- event NN pobj
 |               +-- the DT det
 |               +-- winning JJ amod
 +-- ; : punct
 +-- worthless JJ parataxis
 |   +-- shares NNS nsubj
 |   |   +-- of IN prep
 |   |       +-- event NN pobj
 |   |           +-- the DT det
 |   |           +-- losing VBG amod
 |   +-- are VBP cop
 +-- . . punct

10
Input: Note that the payoffs are undefined if the event has zero outstanding shares ; the DPM rules should preclude this possibility .
Parse:
Note VB ROOT
 +-- undefined JJ ccomp
 |   +-- that IN mark
 |   +-- payoffs NNS nsubj
 |   |   +-- the DT det
 |   +-- are VBP cop
 |   +-- has VBZ advcl
 |   |   +-- if IN mark
 |   |   +-- event NN nsubj
 |   |   |   +-- the DT det
 |   |   +-- shares NNS dobj
 |   |       +-- zero CD num
 |   |       +-- outstanding JJ amod
 |   +-- ; : punct
 |   +-- preclude VB parataxis
 |       +-- rules NNS nsubj
 |       |   +-- the DT det
 |       |   +-- DPM NNP nn
 |       +-- should MD aux
 |       +-- possibility NN dobj
 |           +-- this DT det
 +-- . . punct

11
Input: We use the following notation
Parse:
use VBP ROOT
 +-- We PRP nsubj
 +-- notation NN dobj
     +-- the DT det
     +-- following VBG amod

12
Input: Let M denote the total money currently in the market .
Parse:
Let VB ROOT
 +-- denote VB ccomp
 |   +-- M PRP nsubj
 |   +-- money NN dobj
 |   |   +-- the DT det
 |   |   +-- total JJ amod
 |   +-- currently RB advmod
 |   +-- in IN prep
 |       +-- market NN pobj
 |           +-- the DT det
 +-- . . punct

13
Input: Let cA and cB denote the prices of shares in A and B respectively .
Parse:
Let VB ROOT
 +-- denote VB ccomp
 |   +-- cA DT nsubj
 |   |   +-- and CC cc
 |   |   +-- cB , conj
 |   +-- prices NNS dobj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- shares NNS pobj
 |   +-- in IN prep
 |   |   +-- A NNP pobj
 |   |       +-- and CC cc
 |   |       +-- B NN conj
 |   +-- respectively RB advmod
 +-- . . punct

14
Input: The price of a share in the Yahoo ! DPM is determined by the share ratio principle
Parse:
determined VBN ROOT
 +-- price NN nsubjpass
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- share NN pobj
 |           +-- a DT det
 |           +-- in IN prep
 |               +-- Yahoo NNP pobj
 |                   +-- the DT det
 |                   +-- ! . punct
 |                   +-- DPM NNP appos
 +-- is VBZ auxpass
 +-- by IN prep
     +-- principle NN pobj
         +-- the DT det
         +-- ratio NN nn
             +-- share NN nn

15
Input: This gives us cA = pA hM x i cB = pB hM y i 319 Since pA + pB = 1 , we have
Parse:
gives VBZ ROOT
 +-- This DT nsubj
 +-- us PRP iobj
 +-- have VBP dobj
     +-- cA , punct
     +-- pA NNP ccomp
     |   +-- = SYM dep
     |   |   +-- 1 CD num
     |   +-- hM , punct
     |   +-- x SYM punct
     |   +-- i PRP dep
     |   |   +-- y NN nn
     |   |   +-- 319 CD dep
     |   |   +-- Since IN prep
     |   |       +-- pA NNP pobj
     |   +-- cB , punct
     |   +-- pB NFP dep
     |   |   +-- = SYM dep
     |   |   +-- hM , punct
     |   +-- + SYM dep
     |       +-- pB NFP pobj
     +-- , , punct
     +-- we PRP nsubj

16
Input: What is the net cost , M ? M , of her move ? Theorem 4 .
Parse:
What WP ROOT
 +-- is VBZ cop
 +-- cost NN nsubj
 |   +-- the DT det
 |   +-- net JJ amod
 |   +-- , , punct
 |   +-- M NNP appos
 |       +-- ? . punct
 |       +-- M NNP dep
 |       +-- , , punct
 |       +-- of IN prep
 |       |   +-- move NN pobj
 |       |       +-- her PRP$ poss
 |       +-- ? , punct
 |       +-- Theorem PRP appos
 |           +-- 4 CD num
 +-- . . punct

17
Input: The cost of the move from -LRB- x , y -RRB- to -LRB- x , y -RRB- is M ? M = M0 -LRB- p x 2 + y 2 ? p x2 + y2 -RRB- for some constant M0 .
Parse:
M NNP ROOT
 +-- cost NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- move NN pobj
 |           +-- the DT det
 |           +-- from IN prep
 |           |   +-- x UH pobj
 |           |       +-- -LRB- -LRB- punct
 |           |       +-- , , punct
 |           |       +-- y NN dep
 |           |       +-- -RRB- -RRB- punct
 |           +-- to IN prep
 |               +-- x NFP pobj
 |                   +-- -LRB- -LRB- punct
 |                   +-- , , punct
 |                   +-- y NNP appos
 |                   +-- -RRB- -RRB- punct
 +-- is VBZ cop
 +-- ? . punct
 +-- M NNP conj
 +-- = SYM prep
 |   +-- M0 CD dep
 +-- p NNP dep
 |   +-- -LRB- -LRB- punct
 |   +-- x SYM dep
 |   +-- 2 CD dep
 |   +-- y NNP dep
 |       +-- + SYM nn
 |       +-- 2 CD num
 +-- p FW dep
 |   +-- x2 CD num
 |   +-- + SYM dep
 |   +-- y2 CD num
 +-- -RRB- -RRB- punct
 +-- for IN prep
 |   +-- M0 CD pobj
 |       +-- some DT det
 |       +-- constant JJ amod
 +-- . . punct

18
Input: In other words , it is a constant multiple of the corresponding cost in the projection game .
Parse:
multiple NN ROOT
 +-- In IN prep
 |   +-- words NNS pobj
 |       +-- other JJ amod
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- a DT det
 +-- constant JJ amod
 +-- of IN prep
 |   +-- cost NN pobj
 |       +-- the DT det
 |       +-- corresponding VBG amod
 +-- in IN prep
 |   +-- game NN pobj
 |       +-- the DT det
 |       +-- projection NN nn
 +-- . . punct

19
Input: Proof .
Parse:
Proof NNP ROOT
 +-- . . punct

20
Input: Consider the function G -LRB- x , y -RRB- = M0 -LRB- p x2 + y2 -RRB- .
Parse:
Consider VB ROOT
 +-- G NNP dobj
 |   +-- the DT det
 |   +-- function NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- x UH dep
 |   |   +-- , , punct
 |   |   +-- y FW dep
 |   +-- -RRB- -RRB- punct
 |   +-- = SYM prep
 |   |   +-- M0 CD dep
 |   +-- p NNP dep
 |       +-- x2 CD num
 |       +-- + SYM dep
 |       +-- y2 CD num
 +-- . . punct

21
Input: The function G is differentiable for all x , y = 0 , and it '' s partial derivatives are
Parse:
differentiable JJ ROOT
 +-- G NNP nsubj
 |   +-- The DT det
 |   +-- function NN nn
 +-- is VBZ cop
 +-- for IN prep
 |   +-- x SYM pobj
 |       +-- all DT det
 +-- , , punct
 +-- = SYM conj
 |   +-- y NNP nn
 |   +-- 0 CD num
 +-- and CC cc
 +-- are VBP conj
     +-- derivatives NNS nsubj
         +-- it PRP poss
         |   +-- '' '' punct
         |   +-- s POS possessive
         +-- partial JJ amod

22
Input: It follows that , if at any point of time the DPM is in a state -LRB- M , x , y -RRB- such that M = G -LRB- x , y -RRB- , then , at all subsequent points of time , the state -LRB- M , x , y -RRB- of the DPM will satisfy M = G -LRB- x , y -RRB- .
Parse:
follows VBZ ROOT
 +-- It PRP nsubj
 +-- is VBZ ccomp
 |   +-- that IN mark
 |   +-- , , punct
 |   +-- at IN advcl
 |   |   +-- if IN mark
 |   |   +-- point NN pobj
 |   |       +-- any DT det
 |   |       +-- of IN prep
 |   |           +-- time NN pobj
 |   +-- DPM NNP nsubj
 |   |   +-- the DT det
 |   +-- in IN prep
 |       +-- state NN pobj
 |           +-- a DT det
 |           +-- M NN dep
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- , , punct
 |           |   +-- x UH discourse
 |           |   +-- y FW advmod
 |           |   +-- -RRB- -RRB- punct
 |           +-- satisfy VB dep
 |               +-- such JJ dep
 |               +-- that IN mark
 |               +-- G NNP nsubj
 |               |   +-- M NNP nn
 |               |   +-- = SYM nn
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- x UH dep
 |               |   |   +-- , , punct
 |               |   |   +-- y NNP dep
 |               |   +-- -RRB- -RRB- punct
 |               |   +-- , , punct
 |               |   +-- then RB advmod
 |               |   +-- points NNS dep
 |               |       +-- all RB advmod
 |               |       |   +-- at RB advmod
 |               |       +-- subsequent JJ amod
 |               |       +-- of IN prep
 |               |       |   +-- time NN pobj
 |               |       +-- , , punct
 |               |       +-- state NN appos
 |               |           +-- the DT det
 |               |           +-- M NN appos
 |               |           |   +-- -LRB- -LRB- punct
 |               |           |   +-- , , punct
 |               |           |   +-- x UH discourse
 |               |           |   +-- y JJ dep
 |               |           |   +-- -RRB- -RRB- punct
 |               |           +-- of IN prep
 |               |               +-- DPM NNP pobj
 |               |                   +-- the DT det
 |               +-- will MD aux
 |               +-- G NNP dobj
 |                   +-- M NNP nn
 |                   +-- = SYM nn
 |                   +-- x UH dep
 |                       +-- -LRB- -LRB- punct
 |                       +-- , , punct
 |                       +-- y NNP dep
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

23
Input: Finally , note that we can pick the constant M0 such that the equation is satisfied for the initial state of the DPM , and hence , it will always be satisfied .
Parse:
note VB ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- pick VB ccomp
 |   +-- that IN mark
 |   +-- we PRP nsubj
 |   +-- can MD aux
 |   +-- M0 CD dobj
 |   |   +-- the DT det
 |   |   +-- constant JJ amod
 |   |   +-- satisfied JJ dep
 |   |       +-- such JJ dep
 |   |       +-- that IN mark
 |   |       +-- equation NN nsubj
 |   |       |   +-- the DT det
 |   |       +-- is VBZ cop
 |   |       +-- for IN prep
 |   |           +-- state NN pobj
 |   |               +-- the DT det
 |   |               +-- initial JJ amod
 |   |               +-- of IN prep
 |   |                   +-- DPM NNP pobj
 |   |                       +-- the DT det
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- satisfied JJ conj
 |       +-- hence RB advmod
 |       +-- , , punct
 |       +-- it PRP nsubj
 |       +-- will MD aux
 |       +-- always RB advmod
 |       +-- be VB cop
 +-- . . punct

24
Input: One important consequence of Theorem 4 is that the dynamic parimutuel market is arbitrage free -LRB- using Lemma 1 -RRB- .
Parse:
is VBZ ROOT
 +-- consequence NN nsubj
 |   +-- One CD num
 |   +-- important JJ amod
 |   +-- of IN prep
 |       +-- Theorem NNP pobj
 |           +-- 4 CD num
 +-- free JJ ccomp
 |   +-- that IN mark
 |   +-- market NN nsubj
 |   |   +-- the DT det
 |   |   +-- dynamic JJ amod
 |   |   +-- parimutuel NN nn
 |   +-- is VBZ cop
 |   +-- arbitrage NN npadvmod
 |   +-- -LRB- -LRB- punct
 |   +-- using VBG xcomp
 |   |   +-- Lemma NNP dobj
 |   |       +-- 1 CD num
 |   +-- -RRB- -RRB- punct
 +-- . . punct

25
Input: It is interesting to note that the original Yahoo ! Buzz market used a different pricing rule , which did permit arbitrage ; the price rule was changed to the share ratio rule after traders started exploiting the arbitrage opportunities -LRB- 8 -RRB- .
Parse:
interesting JJ ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- note VB xcomp
 |   +-- to TO aux
 |   +-- used VBD ccomp
 |       +-- that IN mark
 |       +-- market NN nsubj
 |       |   +-- the DT det
 |       |   +-- original JJ amod
 |       |   +-- Buzz NNP nn
 |       |       +-- Yahoo NNP nn
 |       |       +-- ! . punct
 |       +-- rule NN dobj
 |           +-- a DT det
 |           +-- different JJ amod
 |           +-- pricing NN nn
 |           +-- , , punct
 |           +-- permit VB rcmod
 |               +-- which WDT nsubj
 |               +-- did VBD aux
 |               +-- arbitrage NN dobj
 +-- ; : punct
 +-- changed VBN parataxis
 |   +-- rule NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- price NN nn
 |   +-- was VBD auxpass
 |   +-- to IN prep
 |   |   +-- rule NN pobj
 |   |       +-- the DT det
 |   |       +-- share NN nn
 |   |       +-- ratio NN nn
 |   +-- started VBD advcl
 |       +-- after IN mark
 |       +-- traders NNS nsubj
 |       +-- exploiting VBG xcomp
 |           +-- opportunities NNS dobj
 |               +-- the DT det
 |               +-- arbitrage NN nn
 |               +-- -LRB- -LRB- punct
 |               +-- 8 CD dep
 |               +-- -RRB- -RRB- punct
 +-- . . punct

26
Input: Another somewhat surprising consequence is that the numbers of outstanding shares x , y completely determines the total capitalization M of the DPM .
Parse:
is VBZ ROOT
 +-- consequence NN nsubj
 |   +-- Another DT det
 |   +-- surprising JJ amod
 |       +-- somewhat RB advmod
 +-- x SYM ccomp
 |   +-- that IN mark
 |   +-- numbers NNS nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- shares NNS pobj
 |   |           +-- outstanding JJ amod
 |   +-- , , punct
 |   +-- y CC cc
 |   +-- completely RB advmod
 |   +-- determines VBZ conj
 |       +-- M NNP dobj
 |           +-- the DT det
 |           +-- total JJ amod
 |           +-- capitalization NN nn
 |           +-- of IN prep
 |               +-- DPM NNP pobj
 |                   +-- the DT det
 +-- . . punct

27
Input: Constraints in the DPM Although it might seem , based on the costs , that any move in the projection game has an equivalent move in the DPM , the DPM places some constraints on trades .
Parse:
Constraints NNS ROOT
 +-- in IN prep
 |   +-- DPM NNP pobj
 |       +-- the DT det
 +-- seem VB dep
 |   +-- Although IN mark
 |   +-- it PRP nsubj
 |   +-- might MD aux
 +-- , , punct
 +-- based VBN partmod
 |   +-- on IN prep
 |       +-- costs NNS pobj
 |           +-- the DT det
 +-- has VBZ ccomp
 |   +-- that IN mark
 |   +-- move NN nsubj
 |   |   +-- any DT det
 |   |   +-- in IN prep
 |   |       +-- game NN pobj
 |   |           +-- the DT det
 |   |           +-- projection NN nn
 |   +-- move NN dobj
 |       +-- an DT det
 |       +-- equivalent JJ amod
 |       +-- in IN prep
 |           +-- DPM NNP pobj
 |               +-- the DT det
 +-- places VBZ ccomp
 |   +-- DPM NNP nsubj
 |   |   +-- the DT det
 |   +-- constraints NNS dobj
 |   |   +-- some DT det
 |   +-- on IN prep
 |       +-- trades NNS pobj
 +-- . . punct

28
Input: Firstly , no trader is allowed to have a net negative holding in either share .
Parse:
allowed VBN ROOT
 +-- Firstly RB advmod
 +-- , , punct
 +-- trader NN nsubjpass
 |   +-- no DT det
 +-- is VBZ auxpass
 +-- have VB xcomp
 |   +-- to TO aux
 |   +-- holding NN dobj
 |   |   +-- a DT det
 |   |   +-- net JJ amod
 |   |   +-- negative JJ amod
 |   +-- in IN prep
 |       +-- share NN pobj
 |           +-- either DT det
 +-- . . punct

29
Input: This is important , because it ensures that the total holdings in each share are always positive .
Parse:
important JJ ROOT
 +-- This DT nsubj
 +-- is VBZ cop
 +-- , , punct
 +-- ensures VBZ advcl
 |   +-- because IN mark
 |   +-- it PRP nsubj
 |   +-- positive JJ ccomp
 |       +-- that IN mark
 |       +-- holdings NNS nsubj
 |       |   +-- the DT det
 |       |   +-- total JJ amod
 |       |   +-- in IN prep
 |       |       +-- share NN pobj
 |       |           +-- each DT det
 |       +-- are VBP cop
 |       +-- always RB advmod
 +-- . . punct

30
Input: However , this is a boundary constraint , and does not impact the strategic choices for a player with a sufficiently large positive holding in each share .
Parse:
constraint NN ROOT
 +-- However RB advmod
 +-- , , punct
 +-- this DT nsubj
 +-- is VBZ cop
 +-- a DT det
 +-- boundary JJ amod
 +-- and CC cc
 +-- impact VB conj
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- choices NNS dobj
 |   |   +-- the DT det
 |   |   +-- strategic JJ amod
 |   |   +-- for IN prep
 |   |       +-- player NN pobj
 |   |           +-- a DT det
 |   +-- with IN prep
 |       +-- holding NN pobj
 |           +-- a DT det
 |           +-- large JJ amod
 |           |   +-- sufficiently RB advmod
 |           +-- positive JJ amod
 |           +-- in IN prep
 |               +-- share NN pobj
 |                   +-- each DT det
 +-- . . punct

31
Input: Thus , we can ignore this constraint from a first order strategic analysis of the DPM .
Parse:
ignore VB ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- constraint NN dobj
 |   +-- this DT det
 +-- from IN prep
 |   +-- analysis NN pobj
 |       +-- a DT det
 |       +-- first JJ amod
 |       +-- order NN nn
 |       +-- strategic JJ amod
 |       +-- of IN prep
 |           +-- DPM NNP pobj
 |               +-- the DT det
 +-- . . punct

32
Input: Secondly , for practical reasons a DPM will probably have a minimum unit of trade , but we assume here that arbitrarily small quantities can be traded .
Parse:
have VB ROOT
 +-- Secondly RB advmod
 +-- , , punct
 +-- for IN prep
 |   +-- reasons NNS pobj
 |       +-- practical JJ amod
 +-- DPM NNP nsubj
 |   +-- a DT det
 +-- will MD aux
 +-- probably RB advmod
 +-- unit NN dobj
 |   +-- a DT det
 |   +-- minimum JJ amod
 |   +-- of IN prep
 |       +-- trade NN pobj
 +-- but CC cc
 +-- assume VBP conj
 |   +-- we PRP nsubj
 |   +-- here RB advmod
 |   +-- traded VBN ccomp
 |       +-- that WDT mark
 |       +-- quantities NNS nsubjpass
 |       |   +-- arbitrarily RB advmod
 |       |   +-- small JJ amod
 |       +-- can MD aux
 |       +-- be VB auxpass
 +-- . . punct

33
Input: Payoffs in the DPM At some point , trading in the DPM ceases and shares are liquidated .
Parse:
liquidated VBN ROOT
 +-- Payoffs NNS nsubjpass
 |   +-- in IN prep
 |   |   +-- DPM NNP pobj
 |   |       +-- the DT det
 |   +-- At IN prep
 |   |   +-- point NN pobj
 |   |       +-- some DT det
 |   +-- , , punct
 |   +-- trading NN conj
 |   |   +-- in IN prep
 |   |       +-- ceases NNS pobj
 |   |           +-- the DT det
 |   |           +-- DPM NNP nn
 |   +-- and CC cc
 |   +-- shares NNS conj
 +-- are VBP auxpass
 +-- . . punct

34
Input: We assume here that the true probability becomes known at liquidation time , and describe the payoffs in terms of the probability ; however , if the probability is not revealed , only the event that actually occurs , these payoffs can be implemented in expectation .
Parse:
assume VBP ROOT
 +-- We PRP nsubj
 +-- here RB advmod
 +-- known VBN ccomp
 |   +-- that IN mark
 |   +-- probability NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- true JJ amod
 |   +-- becomes VBZ auxpass
 |   +-- at IN prep
 |   |   +-- time NN pobj
 |   |       +-- liquidation NN nn
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- describe VB conj
 |       +-- payoffs NNS dobj
 |       |   +-- the DT det
 |       +-- in IN prep
 |           +-- terms NNS pobj
 |               +-- of IN prep
 |                   +-- probability NN pobj
 |                       +-- the DT det
 +-- ; : punct
 +-- implemented VBN parataxis
 |   +-- however RB advmod
 |   +-- , , punct
 |   +-- revealed VBN advcl
 |   |   +-- if IN mark
 |   |   +-- probability NN nsubjpass
 |   |   |   +-- the DT det
 |   |   +-- is VBZ auxpass
 |   |   +-- not RB neg
 |   +-- event NN nsubjpass
 |   |   +-- only RB advmod
 |   |   +-- the DT det
 |   |   +-- occurs VBZ rcmod
 |   |       +-- that WDT nsubj
 |   |       +-- actually RB advmod
 |   +-- payoffs NNS nsubjpass
 |   |   +-- these DT det
 |   +-- can MD aux
 |   +-- be VB auxpass
 |   +-- in IN prep
 |       +-- expectation NN pobj
 +-- . . punct

35
Input: Suppose the DPM terminates in a state -LRB- M , x , y -RRB- , and the true probability of event A is p .
Parse:
Suppose VB ROOT
 +-- terminates NNS dobj
 |   +-- the DT det
 |   +-- DPM NNP nn
 |   +-- in IN prep
 |   |   +-- state NN pobj
 |   |       +-- a DT det
 |   +-- -LRB- -LRB- punct
 |   +-- M NN dep
 |   |   +-- , , punct
 |   |   +-- x UH discourse
 |   |   +-- y NNP appos
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- and CC cc
 +-- p NN conj
 |   +-- probability NN nsubj
 |   |   +-- the DT det
 |   |   +-- true JJ amod
 |   |   +-- of IN prep
 |   |       +-- A NNP pobj
 |   |           +-- event NN nn
 |   +-- is VBZ cop
 +-- . . punct

36
Input: When the dynamic parimutuel market is liquidated , the shares are paid off in the following way
Parse:
paid VBN ROOT
 +-- liquidated VBN advcl
 |   +-- When WRB advmod
 |   +-- market NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- dynamic JJ amod
 |   |   +-- parimutuel NN nn
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- shares NNS nsubjpass
 |   +-- the DT det
 +-- are VBP auxpass
 +-- off RP prt
 +-- in IN prep
     +-- way NN pobj
         +-- the DT det
         +-- following VBG amod

37
Input: The payoffs in the DPM , although given by a fairly simple form , are conceptually complex , because the payoff of a move depends on the subsequent moves before the market liquidates .
Parse:
complex JJ ROOT
 +-- payoffs NNS nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- DPM NNP pobj
 |           +-- the DT det
 +-- , , punct
 +-- given VBN dep
 |   +-- although IN mark
 |   +-- by IN prep
 |       +-- form NN pobj
 |           +-- a DT det
 |           +-- simple JJ amod
 |               +-- fairly RB advmod
 +-- are VBP cop
 +-- conceptually RB advmod
 +-- depends VBZ advcl
 |   +-- because IN mark
 |   +-- payoff NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- move NN pobj
 |   |           +-- a DT det
 |   +-- on IN prep
 |       +-- moves NNS pobj
 |           +-- the DT det
 |           +-- subsequent JJ amod
 |           +-- before IN prep
 |               +-- liquidates VBZ pobj
 |                   +-- the DT det
 |                   +-- market NN nn
 +-- . . punct

38
Input: Thus , a fully rational choice of move in the DPM for player i should take into account the actions of subsequent players , including player i himself .
Parse:
take VB ROOT
 +-- Thus RB advmod
 +-- , , punct
 +-- choice NN nsubj
 |   +-- a DT det
 |   +-- rational JJ amod
 |   |   +-- fully RB advmod
 |   +-- of IN prep
 |       +-- move NN pobj
 |           +-- in IN prep
 |           |   +-- DPM NNP pobj
 |           |       +-- the DT det
 |           +-- for IN prep
 |               +-- player NN pobj
 +-- i PRP nsubj
 +-- should MD aux
 +-- into IN prep
 |   +-- account NN pobj
 +-- actions NNS dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- players NNS pobj
 |           +-- subsequent JJ amod
 |           +-- , , punct
 |           +-- including VBG prep
 |               +-- player NN pobj
 |                   +-- i PRP prep
 |                       +-- himself PRP dep
 +-- . . punct

39
Input: Here , we restrict the analysis to myopic , infinitesimal strategies
Parse:
restrict VBP ROOT
 +-- Here RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- analysis NN dobj
     +-- the DT det
     +-- to IN prep
         +-- strategies NNS pobj
             +-- myopic VB amod
             +-- , , punct
             +-- infinitesimal JJ amod

40
Input: Suppose player i is about to make a move in a dynamic parimutuel market in a state -LRB- M , x , y -RRB- , and the true probability of event A is p .
Parse:
p NN ROOT
 +-- player NN nsubj
 |   +-- Suppose VB nn
 |   +-- about JJ rcmod
 |   |   +-- i PRP nsubj
 |   |   +-- is VBZ cop
 |   |   +-- make VB xcomp
 |   |       +-- to TO aux
 |   |       +-- move NN dobj
 |   |       |   +-- a DT det
 |   |       +-- in IN prep
 |   |           +-- market NN pobj
 |   |               +-- a DT det
 |   |               +-- dynamic JJ amod
 |   |               +-- parimutuel NN nn
 |   |               +-- in IN prep
 |   |                   +-- state NN pobj
 |   |                       +-- a DT det
 |   |                       +-- M NN appos
 |   |                           +-- -LRB- -LRB- punct
 |   |                           +-- , , punct
 |   |                           +-- x UH discourse
 |   |                           +-- y NNP appos
 |   |                           +-- -RRB- -RRB- punct
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- probability NN conj
 |       +-- the DT det
 |       +-- true JJ amod
 |       +-- of IN prep
 |           +-- A NNP pobj
 |               +-- event NN nn
 +-- is VBZ cop
 +-- . . punct

41
Input: Then , assuming the market is liquidated after i '' s move , ? If x y < q p 1 ? p , player i profits by buying shares in A , or selling shares in B .
Parse:
liquidated VBN ROOT
 +-- Then RB advmod
 +-- , , punct
 +-- assuming VBG csubj
 |   +-- market NN dobj
 |       +-- the DT det
 +-- is VBZ auxpass
 +-- after IN prep
 |   +-- move VB pobj
 |       +-- i PRP poss
 |           +-- '' '' punct
 |           +-- s POS possessive
 +-- ? . punct
 +-- profits VBZ ccomp
 |   +-- player NN advcl
 |   |   +-- If IN mark
 |   |   +-- y NNP dep
 |   |   |   +-- x FW nn
 |   |   |   +-- < -LRB- punct
 |   |   |   +-- p NN dep
 |   |   |   |   +-- q FW nn
 |   |   |   |   +-- 1 CD num
 |   |   |   +-- ? . punct
 |   |   +-- p UH discourse
 |   |   +-- , , punct
 |   +-- i PRP nsubj
 |   +-- by IN prep
 |       +-- buying VBG pcomp
 |           +-- shares NNS dobj
 |           +-- in IN prep
 |           |   +-- A NNP pobj
 |           +-- , , punct
 |           +-- or CC cc
 |           +-- selling VBG conj
 |               +-- shares NNS dobj
 |               +-- in IN prep
 |                   +-- B NNP pobj
 +-- . . punct

42
Input: ? If x y > q p 1 ? p , player i profits by selling shares in A , or buying shares in B .
Parse:
player NN ROOT
 +-- ? , punct
 +-- > NNS advcl
 |   +-- If IN mark
 |   +-- y NNP nsubj
 |   |   +-- x FW nn
 |   +-- p NN dobj
 |       +-- q UH nn
 |       +-- 1 CD num
 +-- ? . punct
 +-- p UH discourse
 +-- , , punct
 +-- profits VBZ rcmod
 |   +-- i PRP nsubj
 |   +-- by IN prep
 |       +-- selling VBG pcomp
 |           +-- shares NNS dobj
 |           +-- in IN prep
 |           |   +-- A NNP pobj
 |           +-- , , punct
 |           +-- or CC cc
 |           +-- buying VBG conj
 |               +-- shares NNS dobj
 |               +-- in IN prep
 |                   +-- B NNP pobj
 +-- . . punct

43
Input: Proof .
Parse:
Proof NNP ROOT
 +-- . . punct
