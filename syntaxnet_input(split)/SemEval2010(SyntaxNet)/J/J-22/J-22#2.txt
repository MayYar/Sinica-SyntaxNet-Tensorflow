
1
Input: Buying or selling a financial security in effect is a wager on the security '' s value .
Parse:
wager NN ROOT
 +-- Buying NN nsubj
 |   +-- or CC cc
 |   +-- selling VBG conj
 |   +-- security NN dobj
 |   |   +-- a DT det
 |   |   +-- financial JJ amod
 |   +-- in IN prep
 |       +-- effect NN pobj
 +-- is VBZ cop
 +-- a DT det
 +-- on IN prep
 |   +-- value NN pobj
 |       +-- security NN poss
 |           +-- the DT det
 |           +-- '' '' punct
 |           +-- s POS possessive
 +-- . . punct

2
Input: For example , buying a stock is a bet that the stock '' s value is greater than its current price .
Parse:
bet NN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- buying VBG csubj
 |   +-- stock NN dobj
 |       +-- a DT det
 +-- is VBZ cop
 +-- a DT det
 +-- greater JJR ccomp
 |   +-- that IN mark
 |   +-- value NN nsubj
 |   |   +-- stock NN poss
 |   |       +-- the DT det
 |   |       +-- '' '' punct
 |   |       +-- s POS possessive
 |   +-- is VBZ cop
 |   +-- than IN prep
 |       +-- price NN pobj
 |           +-- its PRP$ poss
 |           +-- current JJ amod
 +-- . . punct

3
Input: Each trader evaluates his expected profit to decide the quantity to buy or sell according to his own information and subjective probability assessment .
Parse:
evaluates VBZ ROOT
 +-- trader NN nsubj
 |   +-- Each DT det
 +-- profit NN dobj
 |   +-- his PRP$ poss
 |   +-- expected JJ amod
 +-- decide VB xcomp
 |   +-- to TO aux
 |   +-- quantity NN dobj
 |   |   +-- the DT det
 |   |   +-- buy VB infmod
 |   |       +-- to TO aux
 |   |       +-- or CC cc
 |   |       +-- sell VB conj
 |   +-- according VBG prep
 |       +-- to IN pcomp
 |           +-- information NN pobj
 |               +-- his PRP$ poss
 |               +-- own JJ amod
 |               +-- and CC cc
 |               +-- assessment NN conj
 |                   +-- subjective JJ amod
 |                   +-- probability NN nn
 +-- . . punct

4
Input: The collective interaction of all bets leads to an equilibrium that reflects an aggregation of all the traders '' information and beliefs .
Parse:
leads VBZ ROOT
 +-- interaction NN nsubj
 |   +-- The DT det
 |   +-- collective JJ amod
 |   +-- of IN prep
 |       +-- bets NNS pobj
 |           +-- all DT det
 +-- to IN prep
 |   +-- equilibrium NN pobj
 |       +-- an DT det
 |       +-- reflects VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- aggregation NN dobj
 |               +-- an DT det
 |               +-- of IN prep
 |                   +-- traders NNS pobj
 |                       +-- all PDT dep
 |                       +-- the DT det
 |                       +-- '' '' punct
 |                       +-- information NN conj
 |                       +-- and CC cc
 |                       +-- beliefs NNS conj
 +-- . . punct

5
Input: In practice , this aggregate market assessment of the security '' s value is often more accurate than other forecasts relying on experts , polls , or statistical inference -LRB- 16 , 17 , 5 , 2 , 15 -RRB- .
Parse:
accurate JJ ROOT
 +-- In IN prep
 |   +-- practice NN pobj
 +-- , , punct
 +-- assessment NN nsubj
 |   +-- this DT det
 |   +-- aggregate JJ amod
 |   +-- market NN nn
 |   +-- of IN prep
 |       +-- value NN pobj
 |           +-- security NN poss
 |               +-- the DT det
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- is VBZ cop
 +-- often RB advmod
 +-- more RBR advmod
 +-- than IN prep
 |   +-- forecasts NNS pobj
 |       +-- other JJ amod
 |       +-- relying VBG partmod
 |           +-- on IN prep
 |               +-- experts NNS pobj
 |                   +-- , , punct
 |                   +-- polls NNS conj
 |                   +-- or CC cc
 |                   +-- inference NN conj
 |                       +-- statistical JJ amod
 |                       +-- -LRB- -LRB- punct
 |                       +-- 16 CD dep
 |                       |   +-- , , punct
 |                       |   +-- 17 CD num
 |                       |   +-- 5 CD num
 |                       |   +-- 2 CD num
 |                       |   +-- 15 CD num
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

6
Input: Consider buying a security at price fifty two cents , that pays $ 1 if and only if a Democrat wins the 2008 US Presidential election .
Parse:
Consider VB ROOT
 +-- buying VBG xcomp
 |   +-- security NN dobj
 |   |   +-- a DT det
 |   +-- at IN prep
 |       +-- price NN pobj
 +-- cents NNS dobj
 |   +-- fifty CD num
 |   +-- two CD num
 |   +-- , , punct
 |   +-- pays VBZ rcmod
 |       +-- that WDT nsubj
 |       +-- $ $ dobj
 |       |   +-- 1 CD num
 |       +-- if IN advmod
 |       +-- and CC cc
 |       +-- wins VBZ conj
 |           +-- only RB advmod
 |           +-- if IN mark
 |           +-- Democrat NNP nsubj
 |           |   +-- a DT det
 |           +-- election NN dobj
 |               +-- the DT det
 |               +-- 2008 CD num
 |               +-- US NNP nn
 |               +-- Presidential JJ amod
 +-- . . punct

7
Input: The transaction is a commitment to accept a fifty two cent loss if a Democrat does not win in return for a forty eight cent profit if a Democrat does win .
Parse:
commitment NN ROOT
 +-- transaction NN nsubj
 |   +-- The DT det
 +-- is VBZ cop
 +-- a DT det
 +-- accept VB infmod
 |   +-- to TO aux
 |   +-- loss NN dobj
 |   |   +-- a DT det
 |   |   +-- two CD num
 |   |   |   +-- fifty CD number
 |   |   +-- cent NN nn
 |   +-- win VB advcl
 |       +-- if IN mark
 |       +-- Democrat NNP nsubj
 |       |   +-- a DT det
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- in IN prep
 |       |   +-- return NN pobj
 |       |       +-- for IN prep
 |       |           +-- profit NN pobj
 |       |               +-- a DT det
 |       |               +-- eight CD num
 |       |               |   +-- forty CD number
 |       |               +-- cent NN nn
 |       +-- win VB advcl
 |           +-- if IN mark
 |           +-- Democrat NNP nsubj
 |           |   +-- a DT det
 |           +-- does VBZ aux
 +-- . . punct

8
Input: In this case of an event contingent security , the price the market '' s value of the security corresponds directly to the estimated probability of the event .
Parse:
corresponds NNS ROOT
 +-- In IN prep
 |   +-- case NN pobj
 |       +-- this DT det
 |       +-- of IN prep
 |           +-- security NN pobj
 |               +-- an DT det
 |               +-- event NN nn
 |               +-- contingent NN amod
 +-- , , punct
 +-- value NN nsubj
 |   +-- price NN poss
 |   |   +-- the DT det
 |   |   +-- market NN dep
 |   |   |   +-- the DT det
 |   |   +-- '' '' punct
 |   |   +-- s POS possessive
 |   +-- of IN prep
 |       +-- security NN pobj
 |           +-- the DT det
 +-- directly RB advmod
 +-- to IN prep
 |   +-- probability NN pobj
 |       +-- the DT det
 |       +-- estimated VBN amod
 |       +-- of IN prep
 |           +-- event NN pobj
 |               +-- the DT det
 +-- . . punct

9
Input: Almost all existing financial and betting exchanges pair up bilateral trading partners .
Parse:
pair VBP ROOT
 +-- exchanges NNS nsubj
 |   +-- all DT num
 |   |   +-- Almost RB quantmod
 |   +-- existing VBG amod
 |   +-- financial JJ amod
 |       +-- and CC cc
 |       +-- betting VBG conj
 +-- up RP prt
 +-- partners NNS dobj
 |   +-- bilateral JJ amod
 |   +-- trading NN nn
 +-- . . punct

10
Input: For example , one trader willing to accept an x dollar loss if a Democrat does not win in return for a y dollar profit if a Democrat wins is matched up with a second trader willing to accept the opposite .
Parse:
willing JJ ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- trader NN nsubj
 |   +-- one CD num
 +-- accept VB xcomp
 |   +-- to TO aux
 |   +-- loss NN dobj
 |   |   +-- an DT det
 |   |   +-- dollar NN nn
 |   |       +-- x `` punct
 |   +-- win VB advcl
 |       +-- if IN mark
 |       +-- Democrat NNP nsubj
 |       |   +-- a DT det
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- in IN prep
 |       |   +-- return NN pobj
 |       |       +-- for IN prep
 |       |           +-- profit NN pobj
 |       |               +-- a DT det
 |       |               +-- dollar NN nn
 |       |                   +-- y JJ nn
 |       +-- matched VBN advcl
 |           +-- if IN mark
 |           +-- wins VBZ nsubjpass
 |           |   +-- a DT det
 |           |   +-- Democrat NNP nn
 |           +-- is VBZ auxpass
 |           +-- up RP prt
 |           +-- with IN prep
 |               +-- trader NN pobj
 |                   +-- a DT det
 |                   +-- second JJ amod
 |                   +-- willing JJ amod
 |                       +-- accept VB xcomp
 |                           +-- to TO aux
 |                           +-- opposite NN dobj
 |                               +-- the DT det
 +-- . . punct

11
Input: However in many scenarios , even if no bilateral agreements exist among traders , multilateral agreements may be possible .
Parse:
possible JJ ROOT
 +-- However RB advmod
 +-- in IN prep
 |   +-- scenarios NNS pobj
 |       +-- many JJ amod
 +-- , , punct
 +-- exist VBP advcl
 |   +-- even RB advmod
 |   +-- if IN mark
 |   +-- agreements NNS nsubj
 |   |   +-- no DT det
 |   |   +-- bilateral JJ amod
 |   +-- among IN prep
 |       +-- traders NNS pobj
 +-- agreements NNS nsubj
 |   +-- multilateral JJ amod
 +-- may MD aux
 +-- be VB cop
 +-- . . punct

12
Input: For example , if one trader bets that the Democratic candidate will receive more votes than the Republican candidate , a second trader bets that the Republican candidate will receive more votes than the Libertarian candidate , and a third trader bets that the Libertarian candidate will receive more votes than the Democratic candidate , then , depending on the odds they each offer , there may be a three way agreeable match even though no two way matches exist .
Parse:
bets NNS ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- bets VBZ advcl
 |   +-- if IN mark
 |   +-- trader NN nsubj
 |   |   +-- one CD num
 |   +-- receive VB ccomp
 |       +-- that IN mark
 |       +-- candidate NN nsubj
 |       |   +-- the DT det
 |       |   +-- Democratic JJ amod
 |       +-- will MD aux
 |       +-- votes NNS dobj
 |           +-- more JJR amod
 |           +-- than IN prep
 |               +-- candidate NN pobj
 |                   +-- the DT det
 |                   +-- Republican JJ amod
 +-- a DT det
 +-- second JJ amod
 +-- trader NN nn
 +-- receive VB ccomp
 |   +-- that WDT mark
 |   +-- candidate NN nsubj
 |   |   +-- the DT det
 |   |   +-- Republican JJ amod
 |   +-- will MD aux
 |   +-- votes NNS dobj
 |   |   +-- more JJR amod
 |   |   +-- than IN prep
 |   |       +-- candidate NN pobj
 |   |           +-- the DT det
 |   |           +-- Libertarian JJ amod
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- bets NNS conj
 |       +-- a DT det
 |       +-- third JJ amod
 |       +-- trader NN nn
 |       +-- receive VB rcmod
 |           +-- that WDT dobj
 |           +-- candidate NN nsubj
 |           |   +-- the DT det
 |           |   +-- Libertarian JJ amod
 |           +-- will MD aux
 |           +-- votes NNS dobj
 |           |   +-- more JJR amod
 |           |   +-- than IN prep
 |           |       +-- candidate NN pobj
 |           |           +-- the DT det
 |           |           +-- Democratic JJ amod
 |           +-- , , punct
 |           +-- then RB advmod
 |           +-- depending VBG prep
 |           |   +-- on IN pcomp
 |           |       +-- odds NNS pobj
 |           |           +-- the DT det
 |           |           +-- offer VBP rcmod
 |           |               +-- they PRP nsubj
 |           |               +-- each DT det
 |           +-- match NN dep
 |               +-- there EX expl
 |               +-- may MD aux
 |               +-- be VB cop
 |               +-- a DT det
 |               +-- way NN nn
 |               |   +-- three CD num
 |               +-- agreeable JJ amod
 |               +-- exist VBP advcl
 |                   +-- even RB advmod
 |                   +-- though IN mark
 |                   +-- way NN tmod
 |                   |   +-- no DT det
 |                   |   +-- two CD num
 |                   +-- matches NNS nsubj
 +-- . . punct

13
Input: We propose an exchange where traders have considerable flexibility to naturally and succinctly express their wagers , 326 and examine the computational complexity of the auctioneer '' s resulting matching problem of identifying bilateral and multilateral agreements .
Parse:
propose VBP ROOT
 +-- We PRP nsubj
 +-- exchange NN dobj
 |   +-- an DT det
 |   +-- have VBP rcmod
 |       +-- where WRB advmod
 |       +-- traders NNS nsubj
 |       +-- flexibility NN dobj
 |       |   +-- considerable JJ amod
 |       |   +-- to IN prep
 |       |       +-- naturally RB pcomp
 |       +-- and CC cc
 |       +-- express VB conj
 |       |   +-- succinctly RB advmod
 |       |   +-- wagers NNS dobj
 |       |       +-- their PRP$ poss
 |       +-- , , punct
 |       +-- 326 CD conj
 |       +-- examine VB conj
 |       |   +-- complexity NN dobj
 |       |       +-- the DT det
 |       |       +-- computational JJ amod
 |       |       +-- of IN prep
 |       |           +-- auctioneer NN pobj
 |       |               +-- the DT det
 |       +-- '' '' punct
 |       +-- resulting VBG conj
 |           +-- s POS aux
 |           +-- problem NN dobj
 |               +-- matching VBG nn
 |               +-- of IN prep
 |                   +-- identifying VBG pcomp
 |                       +-- agreements NNS dobj
 |                           +-- bilateral JJ amod
 |                               +-- and CC cc
 |                               +-- multilateral JJ conj
 +-- . . punct

14
Input: In particular , we focus on a setting where traders bet on the outcome of a competition among n candidates .
Parse:
focus VBP ROOT
 +-- In IN prep
 |   +-- particular JJ pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- on IN prep
 |   +-- setting NN pobj
 |       +-- a DT det
 |       +-- bet VBP rcmod
 |           +-- where WRB advmod
 |           +-- traders NNS nsubj
 |           +-- on IN prep
 |               +-- outcome NN pobj
 |                   +-- the DT det
 |                   +-- of IN prep
 |                       +-- competition NN pobj
 |                           +-- a DT det
 |                           +-- among IN prep
 |                               +-- candidates NNS pobj
 |                                   +-- n DT det
 +-- . . punct

15
Input: For example , suppose that there are n candidates in an election -LRB- or n horses in a race , etc. -RRB- and thus n ! possible orderings of candidates after the final vote tally .
Parse:
suppose VB ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- are VBP ccomp
 |   +-- that IN mark
 |   +-- there EX expl
 |   +-- candidates NNS nsubj
 |   |   +-- n DT det
 |   |   +-- in IN prep
 |   |   |   +-- election NN pobj
 |   |   |       +-- an DT det
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- or CC cc
 |   |   +-- horses NNS conj
 |   |   |   +-- n NNP amod
 |   |   |   +-- in IN prep
 |   |   |       +-- race NN pobj
 |   |   |           +-- a DT det
 |   |   |           +-- , , punct
 |   |   |           +-- etc. FW dep
 |   |   +-- -RRB- -RRB- punct
 |   +-- and CC cc
 |   +-- thus RB advmod
 |   +-- n RB advmod
 |   +-- ! . punct
 |   +-- orderings NNS nsubj
 |   |   +-- possible JJ amod
 |   |   +-- of IN prep
 |   |       +-- candidates NNS pobj
 |   +-- after IN prep
 |       +-- tally NN pobj
 |           +-- the DT det
 |           +-- final JJ amod
 |           +-- vote NN nn
 +-- . . punct

16
Input: Traders may like to bet on arbitrary properties of the final ordering , for example candidate D will win , candidate D will finish in either first place or last place , candidate D will defeat candidate R , candidates D and R will both defeat candidate L , etc .
Parse:
finish VB ROOT
 +-- like VB ccomp
 |   +-- Traders NNS nsubj
 |   +-- may MD aux
 |   +-- bet VB xcomp
 |       +-- to TO aux
 |       +-- on IN prep
 |           +-- properties NNS pobj
 |               +-- arbitrary JJ amod
 |               +-- of IN prep
 |               |   +-- ordering NN pobj
 |               |       +-- the DT det
 |               |       +-- final JJ amod
 |               +-- , , punct
 |               +-- win VB rcmod
 |                   +-- for IN prep
 |                   |   +-- example NN pobj
 |                   +-- D NNP nsubj
 |                   |   +-- candidate NN nn
 |                   +-- will MD aux
 +-- , , punct
 +-- D NNP nsubj
 |   +-- candidate NN nn
 +-- will MD aux
 +-- in IN prep
 |   +-- place NN pobj
 |       +-- either CC preconj
 |       +-- first JJ amod
 |       +-- or CC cc
 |       +-- place NN conj
 |           +-- last JJ amod
 +-- defeat VB ccomp
 |   +-- D NNP nsubj
 |   |   +-- candidate NN nn
 |   +-- will MD aux
 |   +-- R NNP dobj
 |   |   +-- candidate NN nn
 |   |   +-- , , punct
 |   |   +-- D NNP conj
 |   |   |   +-- candidates NNS nn
 |   |   +-- and CC cc
 |   |   +-- R NNP conj
 |   +-- will MD prep
 |       +-- L NNP pobj
 |           +-- both DT det
 |           +-- candidate NN nn
 |           |   +-- defeat NN nn
 |           +-- , , punct
 |           +-- etc FW advmod
 +-- . . punct

17
Input: The goal of the exchange is to search among all the offers to find two or more that together form an agreeable match .
Parse:
is VBZ ROOT
 +-- goal NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- exchange NN pobj
 |           +-- the DT det
 +-- search VB xcomp
 |   +-- to TO aux
 |   +-- among IN prep
 |   |   +-- offers NNS pobj
 |   |       +-- all PDT predet
 |   |       +-- the DT det
 |   +-- find VB xcomp
 |       +-- to TO aux
 |       +-- form VBP ccomp
 |           +-- two CD nsubj
 |           |   +-- or CC cc
 |           |   +-- more JJR conj
 |           |   +-- together RB advmod
 |           |       +-- that IN advmod
 |           +-- match NN dobj
 |               +-- an DT det
 |               +-- agreeable JJ amod
 +-- . . punct

18
Input: As we shall see , the matching problem can be set up as a linear or integer program , depending on whether orders are divisible or indivisible , respectively .
Parse:
set VBN ROOT
 +-- see VB advcl
 |   +-- As IN mark
 |   +-- we PRP nsubj
 |   +-- shall MD aux
 +-- , , punct
 +-- problem NN nsubjpass
 |   +-- the DT det
 |   +-- matching NN nn
 +-- can MD aux
 +-- be VB auxpass
 +-- up RP prt
 +-- as IN prep
 |   +-- program NN pobj
 |       +-- a DT det
 |       +-- linear JJ amod
 |           +-- or CC cc
 |           +-- integer NN conj
 +-- depending VBG prep
 |   +-- on IN pcomp
 |       +-- divisible JJ pcomp
 |           +-- whether IN mark
 |           +-- orders NNS nsubj
 |           +-- are VBP cop
 |           +-- or CC cc
 |           +-- indivisible JJ conj
 |           +-- , , punct
 |           +-- respectively RB advmod
 +-- . . punct

19
Input: Attempting to reduce the problem to a bilateral matching problem by explicitly creating n ! securities , one for each possible final ordering , is both cumbersome for the traders and computationally infeasible even for modest sized n .
Parse:
cumbersome JJ ROOT
 +-- Attempting VBG partmod
 |   +-- reduce VB xcomp
 |       +-- to TO aux
 |       +-- problem NN dobj
 |       |   +-- the DT det
 |       +-- to IN prep
 |       |   +-- problem NN pobj
 |       |       +-- a DT det
 |       |       +-- bilateral JJ amod
 |       |       +-- matching NN nn
 |       +-- by IN prep
 |           +-- creating VBG pcomp
 |               +-- explicitly RB advmod
 |               +-- securities NNS dobj
 |                   +-- n RB nn
 |                   +-- ! , punct
 |                   +-- , , punct
 |                   +-- one CD appos
 |                       +-- for IN prep
 |                           +-- ordering NN pobj
 |                               +-- each DT det
 |                               +-- possible JJ amod
 |                               +-- final JJ amod
 +-- , , punct
 +-- is VBZ cop
 +-- both DT advmod
 +-- for IN prep
 |   +-- even RB advmod
 |   +-- sized JJ pobj
 |       +-- modest JJ amod
 |       +-- n RB advmod
 +-- . . punct

20
Input: Moreover , traders '' attention would be spread among n ! independent choices , making the likelihood of two traders converging at the same time and place seem remote .
Parse:
spread VBN ROOT
 +-- Moreover RB advmod
 +-- , , punct
 +-- attention NN nsubjpass
 |   +-- traders NNS nn
 |   +-- '' '' punct
 +-- would MD aux
 +-- be VB auxpass
 +-- among IN prep
 |   +-- choices NNS pobj
 |       +-- independent JJ amod
 |           +-- n RB advmod
 |           +-- ! . punct
 +-- making VBG xcomp
 |   +-- likelihood NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- converging VBG pcomp
 |               +-- traders NNS nsubj
 |               |   +-- two CD num
 |               +-- at IN prep
 |               |   +-- time NN pobj
 |               |       +-- the DT det
 |               |       +-- same JJ amod
 |               +-- and CC cc
 |               +-- seem VBP conj
 |                   +-- place NN nsubj
 |                   +-- remote JJ acomp
 +-- . . punct

21
Input: There is a tradeoff between the expressiveness of the bidding language and the computational complexity of the matching problem .
Parse:
is VBZ ROOT
 +-- There EX expl
 +-- tradeoff NN nsubj
 |   +-- a DT det
 |   +-- between IN prep
 |       +-- expressiveness NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- language NN pobj
 |           |       +-- the DT det
 |           |       +-- bidding NN nn
 |           +-- and CC cc
 |           +-- complexity NN conj
 |               +-- the DT det
 |               +-- computational JJ amod
 |               +-- of IN prep
 |                   +-- problem NN pobj
 |                       +-- the DT det
 |                       +-- matching NN nn
 +-- . . punct

22
Input: We want to offer traders the most expressive bidding language possible while maintaining computational feasibility .
Parse:
want VBP ROOT
 +-- We PRP nsubj
 +-- offer VB xcomp
 |   +-- to TO aux
 |   +-- traders NNS iobj
 |   +-- language NN dobj
 |   |   +-- the DT det
 |   |   +-- expressive JJ amod
 |   |   |   +-- most RBS advmod
 |   |   +-- bidding NN nn
 |   |   +-- possible JJ amod
 |   +-- maintaining VBG advcl
 |       +-- while IN mark
 |       +-- feasibility NN dobj
 |           +-- computational JJ amod
 +-- . . punct

23
Input: We explore two bidding languages that seem natural from a trader perspective .
Parse:
explore VBP ROOT
 +-- We PRP nsubj
 +-- languages NNS dobj
 |   +-- two CD num
 |   +-- bidding NN nn
 |   +-- seem VBP rcmod
 |       +-- that WDT nsubj
 |       +-- natural JJ acomp
 |       +-- from IN prep
 |           +-- perspective NN pobj
 |               +-- a DT det
 |               +-- trader NN nn
 +-- . . punct

24
Input: Subset betting , described in Section 3.2 , allows traders to bet on which positions in the ranking a candidate will fall , for example candidate D will finish in position 1 , 3 5 , or 10 .
Parse:
allows VBZ ROOT
 +-- betting VBG nsubj
 |   +-- Subset NN nn
 |   +-- , , punct
 |   +-- described VBN partmod
 |       +-- in IN prep
 |           +-- Section NN pobj
 |               +-- 3.2 CD num
 +-- bet VB xcomp
 |   +-- traders NNS nsubj
 |   +-- to TO aux
 |   +-- on IN prep
 |       +-- fall VB pcomp
 |           +-- positions NNS nsubj
 |           |   +-- which WDT det
 |           |   +-- in IN prep
 |           |       +-- candidate NN pobj
 |           |           +-- the DT det
 |           |           +-- ranking VBG amod
 |           |           +-- a DT det
 |           +-- will MD aux
 +-- , , punct
 +-- finish VB ccomp
 |   +-- for IN prep
 |   |   +-- example NN pobj
 |   +-- D NNP nsubj
 |   |   +-- candidate NN nn
 |   +-- will MD aux
 |   +-- in IN prep
 |       +-- position NN pobj
 |           +-- 1 CD num
 |           +-- , , punct
 |           +-- 5 CD num
 |           |   +-- 3 CD number
 |           +-- or CC cc
 |           +-- 10 CD conj
 +-- . . punct

25
Input: Symetrically , traders can also bet on which candidates will fall in a particular position .
Parse:
bet VB ROOT
 +-- Symetrically RB advmod
 +-- , , punct
 +-- traders NNS nsubj
 +-- can MD aux
 +-- also RB advmod
 +-- on IN prep
 |   +-- fall VB pcomp
 |       +-- candidates NNS nsubj
 |       |   +-- which WDT det
 |       +-- will MD aux
 |       +-- in IN prep
 |           +-- position NN pobj
 |               +-- a DT det
 |               +-- particular JJ amod
 +-- . . punct

26
Input: In Section 4 , we derive a polynomial time algorithm for matching -LRB- divisible -RRB- subset bets .
Parse:
derive VBP ROOT
 +-- In IN prep
 |   +-- Section NN pobj
 |       +-- 4 CD num
 +-- , , punct
 +-- we PRP nsubj
 +-- algorithm NN dobj
 |   +-- a DT det
 |   +-- time NN nn
 |   |   +-- polynomial JJ amod
 |   +-- for IN prep
 |       +-- matching NN pcomp
 |           +-- bets NNS dobj
 |               +-- -LRB- -LRB- punct
 |               +-- divisible JJ amod
 |               +-- -RRB- -RRB- punct
 |               +-- subset NN amod
 +-- . . punct

27
Input: The key to the result is showing that the exponentially big linear program has a corresponding separation problem that reduces to maximum weighted bipartite matching and consequently we can solve it in time polynomial in the number of orders .
Parse:
showing VBG ROOT
 +-- key NN nsubj
 |   +-- The DT det
 |   +-- to IN prep
 |       +-- result NN pobj
 |           +-- the DT det
 +-- is VBZ aux
 +-- has VBZ ccomp
 |   +-- that IN mark
 |   +-- program NN nsubj
 |   |   +-- the DT det
 |   |   +-- big JJ amod
 |   |   |   +-- exponentially RB advmod
 |   |   +-- linear JJ amod
 |   +-- problem NN dobj
 |       +-- a DT det
 |       +-- corresponding JJ amod
 |       +-- separation NN nn
 |       +-- reduces VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- to IN prep
 |           |   +-- matching NN pobj
 |           |       +-- maximum JJ amod
 |           |       +-- weighted VBN amod
 |           |       +-- bipartite JJ amod
 |           +-- and CC cc
 |           +-- solve VB conj
 |               +-- consequently RB advmod
 |               +-- we PRP nsubj
 |               +-- can MD aux
 |               +-- it PRP dobj
 |               +-- in IN prep
 |                   +-- number NN pobj
 |                       +-- the DT det
 |                       +-- of IN prep
 |                           +-- orders NNS pobj
 +-- . . punct

28
Input: Pair betting , described in Section 3.3 , allows traders to bet on the final ranking of any two candidates , for example candidate D will defeat candidate R .
Parse:
allows VBZ ROOT
 +-- betting NN nsubj
 |   +-- Pair NN nn
 |   +-- , , punct
 |   +-- described VBN partmod
 |       +-- in IN prep
 |           +-- Section NN pobj
 |               +-- 3.3 CD num
 +-- bet VB xcomp
 |   +-- traders NNS nsubj
 |   +-- to TO aux
 |   +-- on IN prep
 |   |   +-- ranking NN pobj
 |   |       +-- the DT det
 |   |       +-- final JJ amod
 |   |       +-- of IN prep
 |   |           +-- candidates NNS pobj
 |   |               +-- any DT det
 |   |               +-- two CD num
 |   +-- , , punct
 |   +-- defeat VB parataxis
 |       +-- for IN prep
 |       |   +-- example NN pobj
 |       +-- D NNP nsubj
 |       |   +-- candidate NN nn
 |       +-- will MD aux
 |       +-- R NNP dobj
 |           +-- candidate NN nn
 +-- . . punct

29
Input: In Section 5 , we show that optimal matching of -LRB- divisible or indivisible -RRB- pair bets is NP hard , via a reduction from the unweighted minimum feedback arc set problem .
Parse:
show VBP ROOT
 +-- In IN prep
 |   +-- Section NN pobj
 |       +-- 5 CD num
 +-- , , punct
 +-- we PRP nsubj
 +-- hard JJ ccomp
 |   +-- that IN mark
 |   +-- matching NN nsubj
 |   |   +-- optimal JJ amod
 |   |   +-- of IN prep
 |   |       +-- bets NNS pobj
 |   |           +-- -LRB- -LRB- punct
 |   |           +-- divisible JJ amod
 |   |           |   +-- or CC cc
 |   |           |   +-- indivisible JJ conj
 |   |           +-- -RRB- -RRB- punct
 |   |           +-- pair NN nn
 |   +-- is VBZ cop
 |   +-- NP NNP npadvmod
 |   +-- , , punct
 |   +-- set VBN advcl
 |       +-- via IN mark
 |       +-- reduction NN nsubj
 |       |   +-- a DT det
 |       |   +-- from IN prep
 |       |       +-- arc NN pobj
 |       |           +-- the DT det
 |       |           +-- unweighted JJ amod
 |       |           +-- minimum JJ amod
 |       |           +-- feedback NN nn
 |       +-- problem NN dobj
 +-- . . punct

30
Input: We also provide a polynomiallyverifiable sufficient condition for the existence of a pairbetting match and show that a greedy algorithm offers poor approximation for indivisible pair bets. .
Parse:
provide VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- condition NN dobj
 |   +-- a DT det
 |   +-- polynomiallyverifiable JJ amod
 |   +-- sufficient JJ amod
 |   +-- for IN prep
 |       +-- existence NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- match NN pobj
 |                   +-- a DT det
 |                   +-- pairbetting NN nn
 +-- and CC cc
 +-- show VB conj
 |   +-- offers VBZ ccomp
 |       +-- that IN mark
 |       +-- algorithm NN nsubj
 |       |   +-- a DT det
 |       |   +-- greedy JJ amod
 |       +-- approximation NN dobj
 |           +-- poor JJ amod
 |           +-- for IN prep
 |               +-- bets. NNS pobj
 |                   +-- indivisible JJ amod
 |                   +-- pair NN nn
 +-- . . punct
