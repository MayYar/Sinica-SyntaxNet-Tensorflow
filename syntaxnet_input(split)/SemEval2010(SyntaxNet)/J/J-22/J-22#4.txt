
1
Input: In this section , we define the matching and optimal matching problems that an auctioneer needs to solve in a general permutation betting market .
Parse:
define VBP ROOT
 +-- In IN prep
 |   +-- section NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- problems NNS dobj
 |   +-- the DT det
 |   +-- matching NN nn
 |   |   +-- and CC cc
 |   |   +-- matching NN conj
 |   |       +-- optimal JJ amod
 |   +-- needs VBZ rcmod
 |       +-- that WDT dobj
 |       +-- auctioneer NN nsubj
 |       |   +-- an DT det
 |       +-- solve VB xcomp
 |           +-- to TO aux
 |           +-- in IN prep
 |               +-- market NN pobj
 |                   +-- a DT det
 |                   +-- general JJ amod
 |                   +-- permutation NN nn
 |                   +-- betting VBG nn
 +-- . . punct

2
Input: We then illustrate the problem definitions in the context of the subset betting and pairbetting markets .
Parse:
illustrate VBP ROOT
 +-- We PRP nsubj
 +-- then RB advmod
 +-- definitions NNS dobj
 |   +-- the DT det
 |   +-- problem NN nn
 |   +-- in IN prep
 |       +-- context NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- markets NNS pobj
 |                   +-- the DT det
 |                   +-- subset NN amod
 |                   +-- betting NN nn
 |                       +-- and CC cc
 |                       +-- pairbetting VBG conj
 +-- . . punct

3
Input: 3.1 Securities , Orders and Matching Problems Consider an event with n competing candidates where the outcome -LRB- state -RRB- is a ranking of the n candidates .
Parse:
Consider VB ROOT
 +-- Securities NNS nsubj
 |   +-- 3.1 CD num
 |   +-- , , punct
 |   +-- Orders NNS conj
 |   +-- and CC cc
 |   +-- Problems NNPS conj
 |       +-- Matching NNP nn
 +-- event NN dobj
 |   +-- an DT det
 |   +-- with IN prep
 |       +-- candidates NNS pobj
 |           +-- n NNP nn
 |           +-- competing VBG amod
 |           +-- ranking NN rcmod
 |               +-- where WRB advmod
 |               +-- outcome NN nsubj
 |               |   +-- the DT det
 |               |   +-- -LRB- -LRB- punct
 |               |   +-- state NN dep
 |               |   +-- -RRB- -RRB- punct
 |               +-- is VBZ cop
 |               +-- a DT det
 |               +-- of IN prep
 |                   +-- candidates NNS pobj
 |                       +-- the DT det
 |                       +-- n JJ amod
 +-- . . punct

4
Input: The bidding language of a market offering securities in the future outcomes determines the type and number of securities available and directly affects what information can be aggregated about the outcome .
Parse:
determines VBZ ROOT
 +-- language NN nsubj
 |   +-- The DT det
 |   +-- bidding NN nn
 |   +-- of IN prep
 |       +-- market NN pobj
 |           +-- a DT det
 |           +-- offering VBG partmod
 |               +-- securities NNS dobj
 |               +-- in IN prep
 |                   +-- outcomes NNS pobj
 |                       +-- the DT det
 |                       +-- future JJ amod
 +-- type NN dobj
 |   +-- the DT det
 |   +-- and CC cc
 |   +-- number NN conj
 |   +-- of IN prep
 |       +-- securities NNS pobj
 |           +-- available JJ amod
 +-- and CC cc
 +-- directly RB advmod
 +-- affects VBZ conj
 |   +-- aggregated VBN ccomp
 |       +-- information NN nsubjpass
 |       |   +-- what WDT det
 |       +-- can MD aux
 |       +-- be VB auxpass
 |       +-- about IN prep
 |           +-- outcome NN pobj
 |               +-- the DT det
 +-- . . punct

5
Input: A fully expressive bidding language can capture any possible information that traders may have about the final ranking ; a less expressive language limits the type of information that can be aggregated though it may enable a more efficient solution to the matching problem .
Parse:
capture VB ROOT
 +-- language NN nsubj
 |   +-- A DT det
 |   +-- expressive JJ amod
 |   |   +-- fully RB advmod
 |   +-- bidding NN nn
 +-- can MD aux
 +-- information NN dobj
 |   +-- any DT det
 |   +-- possible JJ amod
 |   +-- have VB rcmod
 |       +-- that IN dobj
 |       +-- traders NNS nsubj
 |       +-- may MD aux
 |       +-- about IN prep
 |           +-- ranking NN pobj
 |               +-- the DT det
 |               +-- final JJ amod
 +-- ; : punct
 +-- limits VBZ parataxis
 |   +-- language NN nsubj
 |   |   +-- a DT det
 |   |   +-- expressive JJ amod
 |   |       +-- less RBR advmod
 |   +-- type NN dobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- information NN pobj
 |       +-- aggregated VBN rcmod
 |           +-- that WDT nsubj
 |           +-- can MD aux
 |           +-- be VB cop
 |           +-- enable VB advcl
 |               +-- though IN mark
 |               +-- it PRP nsubj
 |               +-- may MD aux
 |               +-- solution NN dobj
 |                   +-- a DT det
 |                   +-- efficient JJ amod
 |                   |   +-- more RBR advmod
 |                   +-- to IN prep
 |                       +-- problem NN pobj
 |                           +-- the DT det
 |                           +-- matching NN nn
 +-- . . punct

6
Input: For any bidding language and number of securities in a permutation betting market , we can succinctly represent the problem of the auctioneer to risklessly match offers as follows .
Parse:
represent VB ROOT
 +-- For IN prep
 |   +-- language NN pobj
 |       +-- any DT det
 |       +-- bidding NN nn
 |       +-- and CC cc
 |       +-- number NN conj
 |       +-- of IN prep
 |       |   +-- securities NNS pobj
 |       +-- in IN prep
 |           +-- market NN pobj
 |               +-- a DT det
 |               +-- permutation NN amod
 |               +-- betting VBG nn
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- succinctly RB advmod
 +-- problem NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- auctioneer NN pobj
 |   |       +-- the DT det
 |   +-- match VB infmod
 |       +-- to TO aux
 |       +-- risklessly RB advmod
 |       +-- offers NNS dobj
 |       +-- follows VBZ advcl
 |           +-- as IN mark
 +-- . . punct

7
Input: Consider an index set of bets or orders O which traders submit to the auctioneer .
Parse:
Consider VB ROOT
 +-- set NN dobj
 |   +-- an DT det
 |   +-- index NN nn
 |   +-- of IN prep
 |       +-- bets NNS pobj
 |           +-- or CC cc
 |           +-- orders NNS conj
 |           +-- O , punct
 |           +-- submit VBP rcmod
 |               +-- which WDT dobj
 |               +-- traders NNS nsubj
 |               +-- to IN prep
 |                   +-- auctioneer NN pobj
 |                       +-- the DT det
 +-- . . punct
