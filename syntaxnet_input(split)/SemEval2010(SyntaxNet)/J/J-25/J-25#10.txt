
1
Input: FUTURE DIRECTIONS We have analyzed the computational complexity of matching for securities based on logical formulas
Parse:
DIRECTIONS NNS ROOT
 +-- FUTURE LS num
 +-- analyzed VBN rcmod
     +-- We PRP nsubj
     +-- have VBP aux
     +-- complexity NN dobj
         +-- the DT det
         +-- computational JJ amod
         +-- of IN prep
         |   +-- matching VBG pcomp
         |       +-- for IN prep
         |           +-- securities NNS pobj
         +-- based VBN partmod
             +-- on IN prep
                 +-- formulas NNS pobj
                     +-- logical JJ amod

2
Input: Many possible avenues for future work exist , including ? How to choose quantities and bid ask prices for a collection of securities to maximizes one '' s expected utility , both for linear and nonlinear utility functions
Parse:
exist VBP ROOT
 +-- avenues NNS nsubj
 |   +-- Many JJ amod
 |   +-- possible JJ amod
 |   +-- for IN prep
 |       +-- work NN pobj
 |           +-- future JJ amod
 +-- , , punct
 +-- including VBG prep
     +-- ? . punct
     +-- choose VB conj
     |   +-- How WRB advmod
     |   +-- to TO aux
     |   +-- quantities NNS dobj
     |   +-- and CC cc
     |   +-- ask VBP conj
     |   |   +-- bid NN nsubj
     |   |   +-- prices NNS dobj
     |   |   +-- for IN prep
     |   |   |   +-- collection NN pobj
     |   |   |       +-- a DT det
     |   |   |       +-- of IN prep
     |   |   |           +-- securities NNS pobj
     |   |   +-- to TO prep
     |   |       +-- maximizes VBZ pobj
     |   |           +-- one CD num
     |   +-- '' '' punct
     |   +-- s POS punct
     |   +-- utility NN dobj
     |       +-- expected VBN amod
     +-- , , punct
     +-- for IN conj
         +-- both CC preconj
         +-- functions NNS pobj
             +-- linear JJ amod
             |   +-- and CC cc
             |   +-- nonlinear JJ conj
             +-- utility NN nn

3
Input: 153 ? How to choose securities ; that is , deciding on what collection of boolean formulas to offer to trade , subject to constraints or penalties on the number or complexity of bids
Parse:
153 CD ROOT
 +-- ? , punct
 +-- choose VB infmod
 |   +-- How WRB advmod
 |   +-- to TO aux
 |   +-- securities NNS dobj
 +-- ; : punct
 +-- is VBZ dep
     +-- that DT nsubj
     +-- , , punct
     +-- deciding VBG xcomp
         +-- on IN prep
         |   +-- collection NN pobj
         |       +-- what WDT det
         |       +-- of IN prep
         |           +-- formulas NNS pobj
         |               +-- boolean JJ amod
         +-- offer VB xcomp
             +-- to TO aux
             +-- trade VB xcomp
                 +-- to TO aux
                 +-- , , punct
                 +-- subject JJ acomp
                     +-- to IN prep
                         +-- constraints NNS pobj
                             +-- or CC cc
                             +-- penalties NNS conj
                             +-- on IN prep
                                 +-- number NN pobj
                                     +-- the DT det
                                     +-- or CC cc
                                     +-- complexity NN conj
                                     +-- of IN prep
                                         +-- bids NNS pobj

4
Input: ? How do make the above choices in a game theoretically sound way , taking into account the choices of other traders , their reasoning about other traders , etc
Parse:
make VB ROOT
 +-- ? , punct
 +-- How WRB advmod
 +-- do VBP aux
 +-- sound JJ xcomp
 |   +-- choices NNS nsubj
 |   |   +-- the DT det
 |   |   +-- above JJ amod
 |   |   +-- in IN prep
 |   |       +-- game NN pobj
 |   |           +-- a DT det
 |   +-- theoretically RB advmod
 |   +-- way NN dobj
 +-- , , punct
 +-- taking VBG xcomp
     +-- into IN prep
     |   +-- account NN pobj
     +-- choices NNS dobj
         +-- the DT det
         +-- of IN prep
         |   +-- traders NNS pobj
         |       +-- other JJ amod
         +-- , , punct
         +-- reasoning NN appos
         |   +-- their PRP$ poss
         |   +-- about IN prep
         |       +-- traders NNS pobj
         |           +-- other JJ amod
         +-- etc FW advmod

5
Input: heuristics that achieve matches in many cases or approximate a matching ? incentive properties of the resulting mechanisms
Parse:
heuristics NNS ROOT
 +-- achieve VBP rcmod
 |   +-- that WDT nsubj
 |   +-- matches NNS dobj
 |   |   +-- in IN prep
 |   |       +-- cases NNS pobj
 |   |           +-- many JJ amod
 |   +-- or CC cc
 |   +-- approximate VB conj
 |       +-- matching NN dobj
 |           +-- a DT det
 +-- ? . punct
 +-- properties NNS dep
     +-- incentive NN nn
     +-- of IN prep
         +-- mechanisms NNS pobj
             +-- the DT det
             +-- resulting VBG amod

6
Input: equilibrium if no computationally bounded player can find a strategy that increases utility
Parse:
equilibrium NN ROOT
 +-- find VB advcl
     +-- if IN mark
     +-- player NN nsubj
     |   +-- no DT det
     |   +-- bounded VBN amod
     |       +-- computationally RB advmod
     +-- can MD aux
     +-- strategy NN dobj
         +-- a DT det
         +-- increases VBZ rcmod
             +-- that WDT nsubj
             +-- utility NN dobj

7
Input: With few exceptions -LRB- 3 , 22 -RRB- , little is known about computational equilibriums
Parse:
known VBN ROOT
 +-- With IN prep
 |   +-- exceptions NNS pobj
 |       +-- few JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- 3 CD dep
 |       |   +-- , , punct
 |       |   +-- 22 CD num
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- little JJ nsubjpass
 +-- is VBZ auxpass
 +-- about IN prep
     +-- equilibriums NNS pobj
         +-- computational JJ amod

8
Input: A natural question is to determine whether a market can achieve a computational equilibrium that is not a true equilibrium , and under what circumstances this may occur
Parse:
is VBZ ROOT
 +-- question NN nsubj
 |   +-- A DT det
 |   +-- natural JJ amod
 +-- determine VB xcomp
     +-- to TO aux
     +-- achieve VB ccomp
         +-- whether IN mark
         +-- market NN nsubj
         |   +-- a DT det
         +-- can MD aux
         +-- equilibrium NN dobj
         |   +-- a DT det
         |   +-- computational JJ amod
         |   +-- equilibrium NN rcmod
         |       +-- that WDT nsubj
         |       +-- is VBZ cop
         |       +-- not RB neg
         |       +-- a DT det
         |       +-- true JJ amod
         +-- , , punct
         +-- and CC cc
         +-- occur VB conj
             +-- under IN prep
             |   +-- circumstances NNS pobj
             |       +-- what WDT det
             +-- this DT nsubj
             +-- may MD aux

9
Input: Acknowledgments We thank Rahul Sami for his help with Section 5.4.4
Parse:
Acknowledgments NNS ROOT
 +-- thank VBP rcmod
     +-- We PRP nsubj
     +-- Sami NNP dobj
     |   +-- Rahul NNP nn
     +-- for IN prep
         +-- help NN pobj
             +-- his PRP$ poss
             +-- with IN prep
                 +-- Section NN pobj
                     +-- 5.4.4 CD num

10
Input: We thank Rahul , Joan Feigenbaum and Robin Hanson for useful discussions .
Parse:
thank VBP ROOT
 +-- We PRP nsubj
 +-- Rahul NNP dobj
 |   +-- , , punct
 |   +-- Feigenbaum NNP conj
 |   |   +-- Joan NNP nn
 |   +-- and CC cc
 |   +-- Hanson NNP conj
 |       +-- Robin NNP nn
 +-- for IN prep
 |   +-- discussions NNS pobj
 |       +-- useful JJ amod
 +-- . . punct
