
1
Input: 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2 .
Parse:
auctions NNS ROOT
 +-- 4.1 CD num
 +-- Path NN nn
 +-- start VBP rcmod
 |   +-- We PRP nsubj
 |   +-- by IN prep
 |       +-- showing VBG pcomp
 |           +-- differ VB ccomp
 |               +-- that IN mark
 |               +-- for IN prep
 |               |   +-- auctions NNS pobj
 |               |       +-- path NN nn
 |               +-- bounds NNS nsubj
 |               |   +-- any DT det
 |               |   +-- two CD num
 |               |   +-- consecutive JJ amod
 |               |   +-- payment NN nn
 |               +-- can MD aux
 |               +-- by IN prep
 |                   +-- factor NN pobj
 |                       +-- least RBS advmod
 |                       |   +-- at RB advmod
 |                       +-- a DT det
 |                       +-- of IN prep
 |                           +-- 2 CD pobj
 +-- . . punct

2
Input: PROPOSITION 2 .
Parse:
PROPOSITION NN ROOT
 +-- 2 CD num
 +-- . . punct

3
Input: There is an instance of the shortest path problem for which we have NTUmax -LRB- c -RRB- NTUmin -LRB- c -RRB- ? 2 .
Parse:
is VBZ ROOT
 +-- There EX expl
 +-- instance NN nsubj
 |   +-- an DT det
 |   +-- of IN prep
 |   |   +-- problem NN pobj
 |   |       +-- the DT det
 |   |       +-- path NN nn
 |   |       |   +-- shortest JJS amod
 |   |       +-- have VBP rcmod
 |   |           +-- for IN prep
 |   |           |   +-- which WDT pobj
 |   |           +-- we PRP nsubj
 |   |           +-- NTUmax NNP dobj
 |   +-- -LRB- -LRB- punct
 |   +-- c NN dep
 |   |   +-- c LS dep
 |   |   |   +-- -RRB- -RRB- punct
 |   |   +-- NTUmin NNP nn
 |   |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 |   +-- ? . punct
 |   +-- 2 CD num
 +-- . . punct

4
Input: PROOF .
Parse:
PROOF NNP ROOT
 +-- . . punct

5
Input: This construction is due to David Kempe -LRB- 17 -RRB- .
Parse:
due JJ ROOT
 +-- construction NN nsubj
 |   +-- This DT det
 +-- is VBZ cop
 +-- to IN prep
 |   +-- Kempe NNP pobj
 |       +-- David NNP nn
 |       +-- 17 CD appos
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 +-- . . punct

6
Input: Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0 , cAC = cBD = 1 .
Parse:
Consider VB ROOT
 +-- graph NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- Figure NN pobj
 |           +-- 1 CD num
 +-- with IN prep
 |   +-- costs NNS pcomp
 |       +-- edge NN nsubj
 |       |   +-- the DT det
 |       +-- cAB NNP dobj
 |           +-- cBC UH dep
 |               +-- = SYM dep
 |               |   +-- 1 CD num
 |               +-- = SYM punct
 |               +-- cCD NNP dep
 |               +-- , , punct
 |               +-- cBD NNP dep
 |                   +-- cAC NNP nn
 |                   +-- = SYM dep
 +-- . . punct

7
Input: Under these costs , ABCD is the cheapest path .
Parse:
path NN ROOT
 +-- Under IN prep
 |   +-- costs NNS pobj
 |       +-- these DT det
 +-- , , punct
 +-- ABCD NNP nsubj
 +-- is VBZ cop
 +-- the DT det
 +-- cheapest JJS amod
 +-- . . punct

8
Input: The inequalities in -LRB- 2 -RRB- are bAB + bBC ? cAC = 1 , bBC + bCD ? cBD = 1 .
Parse:
bBC NNP ROOT
 +-- inequalities NNS nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- -LRB- -LRB- punct
 |       +-- 2 CD pobj
 |       +-- -RRB- -RRB- punct
 +-- are VBP cop
 +-- bAB NFP punct
 +-- + SYM dep
 +-- ? . punct
 +-- cAC NNP dep
 |   +-- = SYM dep
 |   |   +-- 1 CD num
 |   +-- , , punct
 |   +-- bBC NNP dep
 |   |   +-- + SYM dep
 |   |   +-- bCD FW dep
 |   +-- ? . punct
 |   +-- cBD NNP dep
 +-- . . punct

9
Input: By condition -LRB- 3 -RRB- , both of these inequalities must be tight -LRB- the former one is the only inequality involving bAB , and the latter one is the only inequality involving bCD -RRB- .
Parse:
tight JJ ROOT
 +-- By IN prep
 |   +-- condition NN pobj
 |       +-- -LRB- -LRB- punct
 |       +-- 3 CD dep
 |       +-- -RRB- -RRB- punct
 +-- , , punct
 +-- both DT nsubj
 |   +-- of IN prep
 |       +-- inequalities NNS pobj
 |           +-- these DT det
 +-- must MD aux
 +-- be VB cop
 +-- -LRB- -LRB- punct
 +-- inequality NN parataxis
 |   +-- one CD nsubj
 |   |   +-- the DT det
 |   |   +-- former JJ amod
 |   +-- is VBZ cop
 |   +-- the DT det
 |   +-- only JJ amod
 |   +-- involving VBG partmod
 |   |   +-- bAB NNP dobj
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- inequality NN conj
 |       +-- one NN nsubj
 |       |   +-- the DT det
 |       |   +-- latter JJ amod
 |       +-- is VBZ cop
 |       +-- the DT det
 |       +-- only JJ amod
 |       +-- involving VBG partmod
 |           +-- bCD NNP dobj
 +-- -RRB- -RRB- punct
 +-- . . punct

10
Input: The inequalities in -LRB- 1 -RRB- are bAB ? 0 , bBC ? 0 , bCD ? 0 .
Parse:
bAB VBN ROOT
 +-- inequalities NNS nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- -LRB- -LRB- punct
 |       +-- 1 CD pobj
 |       +-- -RRB- -RRB- punct
 +-- are VBP cop
 +-- ? . punct
 +-- 0 NFP punct
 +-- , , punct
 +-- bBC NNP appos
 +-- bCD UH discourse
 +-- . . punct

11
Input: Now , if the goal is to maximise bAB + bBC + bCD , the best choice is bAB = bCD = 1 , bBC = 0 , so NTUmax -LRB- c -RRB- = 2 .
Parse:
is VBZ ROOT
 +-- Now RB advmod
 +-- , , punct
 +-- is VBZ advcl
 |   +-- if IN mark
 |   +-- goal NN nsubj
 |   |   +-- the DT det
 |   +-- maximise VB xcomp
 |       +-- to TO aux
 |       +-- bBC NNP dobj
 |           +-- bAB NNP nn
 |           +-- + SYM nn
 |           +-- + SYM cc
 |           +-- bCD UH conj
 +-- choice NN nsubj
 |   +-- the DT det
 |   +-- best JJS amod
 +-- bAB NFP prep
 |   +-- bCD FW dep
 |       +-- = SYM dep
 |       |   +-- bBC NNP nn
 |       +-- = FW dep
 |       |   +-- 1 CD num
 |       +-- , , punct
 |       +-- 0 CD punct
 |       +-- so RB cc
 |       +-- 2 CD conj
 |           +-- NTUmax NNP dep
 |           |   +-- c NNP appos
 |           |       +-- -LRB- -LRB- punct
 |           |       +-- -RRB- -RRB- punct
 |           +-- = SYM dep
 +-- . . punct

12
Input: On the other hand , if the goal is to minimise bAB + bBC + bCD , one should set bAB = bCD = 0 , bBC = 1 , so NTUmin -LRB- c -RRB- = 1 .
Parse:
set VB ROOT
 +-- On IN prep
 |   +-- hand NN pobj
 |       +-- the DT det
 |       +-- other JJ amod
 +-- , , punct
 +-- is VBZ advcl
 |   +-- if IN mark
 |   +-- goal NN nsubj
 |   |   +-- the DT det
 |   +-- minimise VB xcomp
 |       +-- to TO aux
 |       +-- bCD NNP dobj
 |           +-- bAB NNP nn
 |           +-- + SYM dep
 |           +-- bBC NNP nn
 +-- one CD nsubj
 +-- should MD aux
 +-- bAB $ dobj
 |   +-- = SYM prep
 |   |   +-- bCD NN pobj
 |   +-- = FW dep
 |   |   +-- 0 CD num
 |   +-- , , punct
 |   +-- = SYM appos
 |   |   +-- bBC NNP nn
 |   |   +-- 1 CD num
 |   +-- so RB cc
 |   +-- c NNP conj
 |       +-- NTUmin NNP nn
 |       +-- -LRB- -LRB- punct
 |       +-- -RRB- -RRB- punct
 |       +-- = SYM dep
 |           +-- 1 CD num
 +-- . . punct

13
Input: PROPOSITION 3 .
Parse:
PROPOSITION NN ROOT
 +-- 3 CD num
 +-- . . punct

14
Input: There is an instance of the shortest path problem for which we have TUmax -LRB- c -RRB- NTUmax -LRB- c -RRB- ? 2 .
Parse:
is VBZ ROOT
 +-- There EX expl
 +-- instance NN nsubj
 |   +-- an DT det
 |   +-- of IN prep
 |   |   +-- problem NN pobj
 |   |       +-- the DT det
 |   |       +-- path NN nn
 |   |       |   +-- shortest JJS amod
 |   |       +-- have VBP rcmod
 |   |           +-- for IN prep
 |   |           |   +-- which WDT pobj
 |   |           +-- we PRP nsubj
 |   |           +-- TUmax NNP dobj
 |   +-- c NNP appos
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- c LS nn
 |   |   +-- -RRB- -RRB- punct
 |   |   +-- NTUmax NNP nn
 |   +-- ? . punct
 |   +-- 2 CD num
 +-- . . punct

15
Input: PROOF .
Parse:
PROOF NNP ROOT
 +-- . . punct

16
Input: Again , consider the graph of Figure 1 .
Parse:
consider VB ROOT
 +-- Again RB advmod
 +-- , , punct
 +-- graph NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- Figure NNP pobj
 |           +-- 1 CD num
 +-- . . punct

17
Input: Let the edge costs be cAB = cCD = 0 , cBC = 1 , cAC = cBD = 1 .
Parse:
Let VB ROOT
 +-- = FW ccomp
 |   +-- costs NNS nsubj
 |   |   +-- edge NN nsubj
 |   |       +-- the DT det
 |   +-- be VB cop
 |   +-- cAB VBN amod
 |   +-- = SYM dep
 |   +-- cCD NNP nn
 |   +-- 0 CD num
 |   +-- , , punct
 |   +-- = SYM conj
 |   |   +-- cBC NNP nn
 |   |   +-- 1 CD num
 |   +-- cBD NNP appos
 |       +-- cAC NNP nn
 |       +-- = SYM nn
 |       +-- = SYM dep
 |           +-- 1 CD num
 +-- . . punct

18
Input: ABCD is the lexicographically least cheapest path , so we can assume that S = -LRB- AB , BC , CD -RRB- .
Parse:
path NN ROOT
 +-- ABCD NNP nsubj
 +-- is VBZ cop
 +-- the DT det
 +-- cheapest JJS amod
 |   +-- lexicographically RB advmod
 |   +-- least RBS advmod
 +-- , , punct
 +-- assume VB advcl
 |   +-- so IN mark
 |   +-- we PRP nsubj
 |   +-- can MD aux
 |   +-- that DT dobj
 |       +-- BC NNP dep
 |           +-- S NNP nn
 |           +-- = SYM dep
 |           +-- -LRB- -LRB- punct
 |           +-- AB NNP nn
 |           +-- , , punct
 |           +-- CD NN appos
 +-- -RRB- -RRB- punct
 +-- . . punct

19
Input: The inequalities in -LRB- 2 -RRB- are the same as in the previous example , and by the same argument both of them are , in fact , equalities .
Parse:
same JJ ROOT
 +-- inequalities NNS nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- -LRB- -LRB- punct
 |       +-- 2 CD pobj
 |       +-- -RRB- -RRB- punct
 +-- are VBP cop
 +-- the DT det
 +-- as IN prep
 |   +-- in IN pcomp
 |       +-- example NN pobj
 |           +-- the DT det
 |           +-- previous JJ amod
 +-- , , punct
 +-- and CC cc
 +-- equalities NNS conj
 |   +-- by IN prep
 |   |   +-- argument NN pobj
 |   |       +-- the DT det
 |   |       +-- same JJ amod
 |   +-- both DT nsubj
 |   |   +-- of IN prep
 |   |       +-- them PRP pobj
 |   +-- are VBP cop
 |   +-- , , punct
 |   +-- in IN prep
 |       +-- fact NN pobj
 +-- . . punct

20
Input: The inequalities in -LRB- 1 -RRB- are bAB ? 0 , bBC ? 1 , bCD ? 0 .
Parse:
bAB VBN ROOT
 +-- inequalities NNS nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- -LRB- -LRB- punct
 |       +-- 1 CD pobj
 |       +-- -RRB- -RRB- punct
 +-- are VBP cop
 +-- ? . punct
 +-- 0 NFP punct
 +-- , , punct
 +-- bBC NNP appos
 |   +-- ? . punct
 |   +-- 1 CD num
 |   +-- , , punct
 |   +-- bCD UH appos
 +-- . . punct

21
Input: Our goal is to maximise bAB + bBC + bCD .
Parse:
is VBZ ROOT
 +-- goal NN nsubj
 |   +-- Our PRP$ poss
 +-- maximise VB xcomp
 |   +-- to TO aux
 |   +-- bAB NNP dobj
 |       +-- + SYM cc
 |       +-- bBC NNP conj
 |       +-- bCD UH conj
 +-- . . punct

22
Input: If we have to respect the inequalities in -LRB- 1 -RRB- , we have to set bAB = bCD = 0 , bBC = 1 , so NTUmax -LRB- c -RRB- = 1 .
Parse:
have VBP ROOT
 +-- have VBP advcl
 |   +-- If IN mark
 |   +-- we PRP nsubj
 |   +-- respect VB xcomp
 |       +-- to TO aux
 |       +-- inequalities NNS dobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- 1 CD pobj
 |                   +-- -LRB- -LRB- punct
 |                   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- set VB xcomp
 |   +-- to TO aux
 |   +-- bAB $ dobj
 |       +-- = SYM prep
 |       |   +-- bCD NN pobj
 |       +-- = FW dep
 |       |   +-- 0 CD num
 |       +-- , , punct
 |       +-- = SYM conj
 |       |   +-- bBC NNP nn
 |       |   +-- 1 CD num
 |       +-- so RB cc
 |       +-- c NNP conj
 |           +-- NTUmax NNP nn
 |           +-- -LRB- -LRB- punct
 |           +-- -RRB- -RRB- punct
 |           +-- = SYM dep
 |               +-- 1 CD num
 +-- . . punct

23
Input: Otherwise , we can set bAB = bCD = 1 , bBC = 0 , so TUmax -LRB- c -RRB- ? 2 .
Parse:
set VB ROOT
 +-- Otherwise RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- bAB $ dobj
 |   +-- = SYM prep
 |   |   +-- bCD NN pobj
 |   +-- = : punct
 |   +-- 1 CD num
 |   +-- , , punct
 |   +-- = SYM conj
 |   |   +-- bBC NNP nn
 |   +-- 0 CD dep
 +-- c NNP dobj
 |   +-- so RB advmod
 |   +-- TUmax NNP nn
 |   +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- ? , punct
 +-- 2 CD dobj
 +-- . . punct

24
Input: PROPOSITION 4 .
Parse:
PROPOSITION NN ROOT
 +-- 4 CD num
 +-- . . punct

25
Input: There is an instance of the shortest path problem for which we have NTUmin -LRB- c -RRB- TUmin -LRB- c -RRB- ? 2 .
Parse:
is VBZ ROOT
 +-- There EX expl
 +-- instance NN nsubj
 |   +-- an DT det
 |   +-- of IN prep
 |   |   +-- problem NN pobj
 |   |       +-- the DT det
 |   |       +-- path NN nn
 |   |       |   +-- shortest JJS amod
 |   |       +-- have VBP rcmod
 |   |           +-- for IN prep
 |   |           |   +-- which WDT pobj
 |   |           +-- we PRP nsubj
 |   |           +-- NTUmin NNP dobj
 |   +-- c LS appos
 |   |   +-- c LS dep
 |   |   |   +-- -LRB- -LRB- punct
 |   |   |   +-- -RRB- -RRB- punct
 |   |   +-- TUmin NNP nn
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- ? , punct
 |   +-- 2 CD amod
 +-- . . punct

26
Input: PROOF .
Parse:
PROOF NNP ROOT
 +-- . . punct

27
Input: This construction is also based on the graph of Figure 1 .
Parse:
based VBN ROOT
 +-- construction NN nsubjpass
 |   +-- This DT det
 +-- is VBZ auxpass
 +-- also RB advmod
 +-- on IN prep
 |   +-- graph NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- Figure NNP pobj
 |               +-- 1 CD num
 +-- . . punct

28
Input: The edge costs are cAB = cCD = 1 , cBC = 0 , cAC = cBD = assume that S = -LRB- AB , BC , CD -RRB- .
Parse:
cCD FW ROOT
 +-- costs NNS nsubj
 |   +-- The DT det
 |   +-- edge NN nn
 +-- are VBP cop
 +-- cAB `` punct
 +-- = SYM dep
 |   +-- 1 CD num
 +-- , , punct
 +-- 0 CD conj
 |   +-- cBC NNP nn
 |   +-- = SYM dep
 +-- cBD NN conj
 |   +-- cAC NNP nn
 |   +-- = SYM nn
 +-- = , punct
 +-- assume VB dep
 |   +-- that IN prep
 |       +-- BC NNP pobj
 |           +-- S NNP nn
 |           +-- = SYM dep
 |           +-- -LRB- -LRB- punct
 |           +-- AB NNP nn
 |           +-- , , punct
 |           +-- CD NN appos
 +-- -RRB- -RRB- punct
 +-- . . punct

29
Input: Again , the inequalities in -LRB- 2 -RRB- are the same , and both are , in fact , equalities .
Parse:
same JJ ROOT
 +-- Again RB advmod
 +-- , , punct
 +-- inequalities NNS nsubj
 |   +-- the DT det
 |   +-- in IN prep
 |       +-- -LRB- -LRB- punct
 |       +-- 2 CD pobj
 |       +-- -RRB- -RRB- punct
 +-- are VBP cop
 +-- the DT det
 +-- and CC cc
 +-- equalities NNS conj
 |   +-- both DT nsubj
 |   +-- are VBP cop
 |   +-- , , punct
 |   +-- in IN prep
 |       +-- fact NN pobj
 +-- . . punct

30
Input: The inequalities in -LRB- 1 -RRB- are bAB ? 1 , bBC ? 0 , bCD ? 1 .
Parse:
bAB VBN ROOT
 +-- inequalities NNS nsubj
 |   +-- The DT det
 |   +-- in IN prep
 |       +-- -LRB- -LRB- punct
 |       +-- 1 CD pobj
 |       +-- -RRB- -RRB- punct
 +-- are VBP cop
 +-- ? , punct
 +-- 1 CD dep
 |   +-- , , punct
 |   +-- bBC NNP appos
 +-- ? . punct
 +-- 0 NFP punct
 +-- , , punct
 +-- bCD UH discourse
 +-- 1 CD num
 +-- . . punct

31
Input: Our goal is to minimise bAB + bBC +bCD .
Parse:
is VBZ ROOT
 +-- goal NN nsubj
 |   +-- Our PRP$ poss
 +-- minimise VB xcomp
 |   +-- to TO aux
 |   +-- +bCD UH dobj
 |       +-- bAB NNP nn
 |           +-- + SYM cc
 |           +-- bBC NNP conj
 +-- . . punct

32
Input: If we have to respect the inequalities in -LRB- 1 -RRB- , we have to set bAB = bCD = 1 , bBC = 0 , so NTUmin -LRB- c -RRB- = 2 .
Parse:
have VBP ROOT
 +-- have VBP advcl
 |   +-- If IN mark
 |   +-- we PRP nsubj
 |   +-- respect VB xcomp
 |       +-- to TO aux
 |       +-- inequalities NNS dobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- 1 CD pobj
 |                   +-- -LRB- -LRB- punct
 |                   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- set VB xcomp
 |   +-- to TO aux
 |   +-- bAB $ dobj
 |       +-- = SYM prep
 |       |   +-- bCD NN pobj
 |       +-- = : punct
 |       +-- 1 CD num
 |       +-- , , punct
 |       +-- bBC NNP appos
 |           +-- = SYM dep
 |           +-- 0 CD dep
 |               +-- , , punct
 |               +-- so RB cc
 |               +-- 2 CD conj
 |                   +-- NTUmin NNP dep
 |                   |   +-- c LS appos
 |                   |       +-- -LRB- -LRB- punct
 |                   |       +-- -RRB- -RRB- punct
 |                   +-- = SYM dep
 +-- . . punct

33
Input: Otherwise , we can set bAB = bCD = 0 , bBC = 1 , so TUmin -LRB- c -RRB- ? 1 .
Parse:
set VB ROOT
 +-- Otherwise RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- bAB $ dobj
 |   +-- = SYM prep
 |   |   +-- bCD NN pobj
 |   +-- = FW dep
 |   +-- 0 CD punct
 |   +-- , , punct
 |   +-- = SYM conj
 |   |   +-- bBC NNP nn
 |   |   +-- 1 CD num
 |   +-- so RB cc
 |   +-- c NNP conj
 |   |   +-- TUmin NNP nn
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- -RRB- -RRB- punct
 |   +-- ? . punct
 |   +-- 1 CD num
 +-- . . punct

34
Input: In Section 4.4 -LRB- Theorem 3 -RRB- , we show that the separation results in Propositions 2 , 3 , and 4 are optimal .
Parse:
show VBP ROOT
 +-- In IN prep
 |   +-- Section NN pobj
 |       +-- 4.4 CD num
 |       +-- Theorem NNP appos
 |           +-- -LRB- -LRB- punct
 |           +-- 3 CD num
 |           +-- -RRB- -RRB- punct
 +-- , , punct
 +-- we PRP nsubj
 +-- optimal JJ ccomp
 |   +-- that IN mark
 |   +-- results NNS nsubj
 |   |   +-- the DT det
 |   |   +-- separation NN nn
 |   |   +-- in IN prep
 |   |       +-- Propositions NNPS pobj
 |   |           +-- 2 CD num
 |   |           +-- , , punct
 |   |           +-- 3 CD num
 |   |           +-- and CC cc
 |   |           +-- 4 CD conj
 |   +-- are VBP cop
 +-- . . punct

35
Input: 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors .
Parse:
results NNS ROOT
 +-- Connections NNS nsubj
 |   +-- 4.2 CD num
 |   +-- between IN prep
 |       +-- separation NN pobj
 +-- obtained VBN ccomp
 |   +-- results NNS nsubjpass
 |   |   +-- The DT det
 |   |   +-- separation NN nn
 |   |   +-- for IN prep
 |   |       +-- auctions NNS pobj
 |   |           +-- path NN nn
 |   +-- are VBP auxpass
 |   +-- on IN prep
 |   |   +-- graph NN pobj
 |   |       +-- the DT det
 |   |       +-- same JJ amod
 |   +-- using VBG xcomp
 |       +-- vectors NNS dobj
 |           +-- similar JJ amod
 |           |   +-- very RB advmod
 |           +-- cost NN nn
 +-- . . punct

36
Input: It turns out that this is not coincidental .
Parse:
turns VBZ ROOT
 +-- It PRP nsubj
 +-- out RP prt
 +-- coincidental JJ ccomp
 |   +-- that IN mark
 |   +-- this DT nsubj
 |   +-- is VBZ cop
 |   +-- not RB neg
 +-- . . punct

37
Input: Namely , we can prove the following theorem .
Parse:
prove VB ROOT
 +-- Namely RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- can MD aux
 +-- theorem NN dobj
 |   +-- the DT det
 |   +-- following VBG amod
 +-- . . punct

38
Input: THEOREM 1 .
Parse:
THEOREM UH ROOT
 +-- 1 CD num
 +-- . . punct

39
Input: For any set system -LRB- E , F -RRB- , and any feasible set S , max c TUmax -LRB- c , S -RRB- NTUmax -LRB- c , S -RRB- = max c NTUmax -LRB- c , S -RRB- NTUmin -LRB- c , S -RRB- , max c NTUmax -LRB- c , S -RRB- NTUmin -LRB- c , S -RRB- = max c NTUmin -LRB- c , S -RRB- TUmin -LRB- c , S -RRB- , where the maximum is over all cost vectors c for which S is a cheapest feasible set .
Parse:
For IN ROOT
 +-- system NN pobj
 |   +-- any DT det
 |   +-- set NN nn
 |   +-- -LRB- -LRB- punct
 |   +-- E UH dep
 |   |   +-- , , punct
 |   |   +-- F NNP appos
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- and CC cc
 +-- set NN conj
     +-- any DT det
     +-- feasible JJ amod
     +-- S NNP dobj
         +-- , , punct
         +-- max FW appos
             +-- c SYM prep
                 +-- TUmax NNP pobj
                     +-- S NNP dep
                         +-- -LRB- -LRB- punct
                         +-- c UH discourse
                         +-- , , punct
                         +-- -RRB- -RRB- punct
                         +-- NTUmax NNP dep
                             +-- S NNP dep
                             |   +-- -LRB- -LRB- punct
                             |   +-- c UH discourse
                             |   +-- , , punct
                             |   +-- -RRB- -RRB- punct
                             +-- = `` prep
                                 +-- max NN pobj
                                     +-- c , prep
                                         +-- NTUmax NNP pobj
                                             +-- S NNP dep
                                                 +-- -LRB- -LRB- punct
                                                 +-- c UH discourse
                                                 +-- , , punct
                                                 +-- -RRB- -RRB- punct
                                                 +-- NTUmin NNP dep
                                                 |   +-- S NNP dep
                                                 |       +-- -LRB- -LRB- punct
                                                 |       +-- c UH discourse
                                                 |       +-- , , punct
                                                 |       +-- -RRB- -RRB- punct
                                                 +-- max NN dep
                                                     +-- c SYM prep
                                                         +-- NTUmax NNP pobj
                                                             +-- S NNP dep
                                                                 +-- -LRB- -LRB- punct
                                                                 +-- c UH discourse
                                                                 +-- , , punct
                                                                 +-- -RRB- -RRB- punct
                                                                 +-- NTUmin NNP dep
                                                                     +-- S NNP dep
                                                                     |   +-- -LRB- -LRB- punct
                                                                     |   +-- c UH discourse
                                                                     |   +-- , , punct
                                                                     |   +-- -RRB- -RRB- punct
                                                                     +-- = `` prep
                                                                         +-- max NN pobj
                                                                             +-- c , prep
                                                                                 +-- NTUmin NNP pobj
                                                                                     +-- S NNP dep
                                                                                         +-- -LRB- -LRB- punct
                                                                                         +-- c UH discourse
                                                                                         +-- , , punct
                                                                                         +-- -RRB- -RRB- punct
                                                                                         +-- TUmin NNP dep
                                                                                         |   +-- c UH appos
                                                                                         |   |   +-- -LRB- -LRB- punct
                                                                                         |   |   +-- , , punct
                                                                                         |   |   +-- S NNP appos
                                                                                         |   |   +-- -RRB- -RRB- punct
                                                                                         |   +-- , , punct
                                                                                         |   +-- is VBZ rcmod
                                                                                         |       +-- where WRB advmod
                                                                                         |       +-- maximum NN nsubj
                                                                                         |       |   +-- the DT det
                                                                                         |       +-- over IN prep
                                                                                         |           +-- c NNP pobj
                                                                                         |               +-- all DT det
                                                                                         |               +-- vectors NNS nn
                                                                                         |               |   +-- cost NN nn
                                                                                         |               +-- set NN rcmod
                                                                                         |                   +-- for IN prep
                                                                                         |                   |   +-- which WDT pobj
                                                                                         |                   +-- S NNP nsubj
                                                                                         |                   +-- is VBZ cop
                                                                                         |                   +-- a DT det
                                                                                         |                   +-- cheapest JJS amod
                                                                                         |                   +-- feasible JJ amod
                                                                                         +-- . . punct

40
Input: The proof of the theorem follows directly from the four lemmas proved below ; more precisely , the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2 , and the second equality is obtained by combining Lemmas 3 and 4 .
Parse:
follows VBZ ROOT
 +-- proof NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |       +-- theorem NN pobj
 |           +-- the DT det
 +-- directly RB advmod
 +-- from IN prep
 |   +-- lemmas NNS pobj
 |       +-- the DT det
 |       +-- four CD num
 |       +-- proved VBN partmod
 |           +-- below RB advmod
 +-- ; : punct
 +-- obtained VBN parataxis
 |   +-- precisely RB advmod
 |   |   +-- more RBR advmod
 |   +-- , , punct
 |   +-- equality NN nsubjpass
 |   |   +-- the DT det
 |   |   +-- first JJ amod
 |   |   +-- in IN prep
 |   |       +-- Theorem NNP pobj
 |   |           +-- 1 CD num
 |   +-- is VBZ auxpass
 |   +-- by IN prep
 |   |   +-- combining VBG pcomp
 |   |       +-- Lemmas NNP dobj
 |   |           +-- 1 CD num
 |   |           +-- and CC cc
 |   |           +-- 2 CD conj
 |   +-- and CC cc
 |   +-- obtained VBN conj
 |       +-- equality NN nsubjpass
 |       |   +-- the DT det
 |       |   +-- second JJ amod
 |       +-- is VBZ auxpass
 |       +-- by IN prep
 |           +-- combining VBG pcomp
 |               +-- Lemmas NNP dobj
 |                   +-- 3 CD num
 |                   +-- and CC cc
 |                   +-- 4 CD conj
 +-- . . punct

41
Input: We prove Lemma 1 here ; the proofs of Lemmas 2 4 are similar and can be found in the full version of this paper -LRB- 8 -RRB- .
Parse:
prove VBP ROOT
 +-- We PRP nsubj
 +-- Lemma NNP dobj
 |   +-- 1 CD num
 +-- here RB advmod
 +-- ; : punct
 +-- similar JJ parataxis
 |   +-- proofs NNS nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- Lemmas NNP pobj
 |   |           +-- 2 CD num
 |   |           +-- 4 CD num
 |   +-- are VBP cop
 |   +-- and CC cc
 |   +-- found VBN conj
 |       +-- can MD aux
 |       +-- be VB auxpass
 |       +-- in IN prep
 |           +-- version NN pobj
 |               +-- the DT det
 |               +-- full JJ amod
 |               +-- of IN prep
 |               |   +-- paper NN pobj
 |               |       +-- this DT det
 |               +-- 8 CD appos
 |                   +-- -LRB- -LRB- punct
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

42
Input: LEMMA 1 .
Parse:
LEMMA NNP ROOT
 +-- 1 CD num
 +-- . . punct
