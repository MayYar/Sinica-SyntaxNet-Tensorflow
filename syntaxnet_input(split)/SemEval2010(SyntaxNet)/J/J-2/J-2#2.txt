
1
Input: Many important problems in computer science and electronic commerce can be modeled as resource allocation problems .
Parse:
modeled VBN ROOT
 +-- problems NNS nsubjpass
 |   +-- Many JJ amod
 |   +-- important JJ amod
 |   +-- in IN prep
 |       +-- science NN pobj
 |           +-- computer NN nn
 |           +-- and CC cc
 |           +-- commerce NN conj
 |               +-- electronic JJ amod
 +-- can MD aux
 +-- be VB auxpass
 +-- as IN prep
 |   +-- problems NNS pobj
 |       +-- allocation NN nn
 |           +-- resource NN nn
 +-- . . punct

2
Input: In such problems , we want to allocate the resources -LRB- or items -RRB- to the agents that value them the most .
Parse:
want VBP ROOT
 +-- In IN prep
 |   +-- problems NNS pobj
 |       +-- such JJ amod
 +-- , , punct
 +-- we PRP nsubj
 +-- allocate VB xcomp
 |   +-- to TO aux
 |   +-- resources NNS dobj
 |   |   +-- the DT det
 |   |   +-- -LRB- -LRB- punct
 |   |   +-- or CC cc
 |   |   +-- items NNS conj
 |   |   +-- -RRB- -RRB- punct
 |   +-- to IN prep
 |       +-- agents NNS pobj
 |           +-- the DT det
 |           +-- value VBP rcmod
 |               +-- that WDT nsubj
 |               +-- them PRP iobj
 |               +-- most RBS dobj
 |                   +-- the DT det
 +-- . . punct

3
Input: Unfortunately , agents '' valuations are private knowledge , and self interested agents will lie about their valuations if this is to their benefit .
Parse:
knowledge NN ROOT
 +-- Unfortunately RB advmod
 +-- , , punct
 +-- valuations NNS nsubj
 |   +-- agents NNS nn
 |   +-- '' '' punct
 +-- are VBP cop
 +-- private JJ amod
 +-- and CC cc
 +-- lie VB conj
 |   +-- agents NNS nsubj
 |   |   +-- interested JJ amod
 |   |       +-- self NN npadvmod
 |   +-- will MD aux
 |   +-- about IN prep
 |   |   +-- valuations NNS pobj
 |   |       +-- their PRP$ poss
 |   +-- is VBZ advcl
 |       +-- if IN mark
 |       +-- this DT nsubj
 |       +-- to IN prep
 |           +-- benefit NN pobj
 |               +-- their PRP$ poss
 +-- . . punct

4
Input: One solution is to auction off the items , possibly in a combinatorial auction where agents can bid on bundles of items .
Parse:
is VBZ ROOT
 +-- solution NN nsubj
 |   +-- One CD num
 +-- auction VB xcomp
 |   +-- to TO aux
 |   +-- off RP prt
 |   +-- items NNS dobj
 |   |   +-- the DT det
 |   +-- , , punct
 |   +-- in IN prep
 |       +-- possibly RB advmod
 |       +-- auction NN pobj
 |           +-- a DT det
 |           +-- combinatorial JJ amod
 |           +-- bid VB rcmod
 |               +-- where WRB advmod
 |               +-- agents NNS nsubj
 |               +-- can MD aux
 |               +-- on IN prep
 |                   +-- bundles NNS pobj
 |                       +-- of IN prep
 |                           +-- items NNS pobj
 +-- . . punct

5
Input: There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations that is , the payments make the auction strategy proof .
Parse:
exist VBP ROOT
 +-- There EX expl
 +-- ways NNS dobj
 |   +-- of IN prep
 |       +-- determining VBG pcomp
 |           +-- payments NNS dobj
 |               +-- the DT det
 |               +-- make VBP rcmod
 |                   +-- that WDT dobj
 |                   +-- agents NNS nsubj
 |                   |   +-- the DT det
 |                   +-- in IN prep
 |                       +-- auction NN pobj
 |                           +-- such PDT predet
 |                           +-- an DT det
 |                           +-- incentivizes VBZ rcmod
 |                               +-- that WDT nsubj
 |                               +-- agents NNS dobj
 |                               |   +-- the DT det
 |                               +-- report VB xcomp
 |                                   +-- to TO aux
 |                                   +-- valuations NNS dobj
 |                                       +-- their PRP$ poss
 |                                       +-- true JJ amod
 |                                       +-- is VBZ rcmod
 |                                           +-- that WDT nsubj
 +-- , , punct
 +-- make VBP ccomp
 |   +-- payments NNS nsubj
 |   |   +-- the DT det
 |   +-- proof NN xcomp
 |       +-- strategy NN nsubj
 |           +-- the DT det
 |           +-- auction NN nn
 +-- . . punct

6
Input: One very general way of doing so is to use the VCG mechanism -LRB- 23 , 4 , 12 -RRB- .
Parse:
is VBZ ROOT
 +-- way NN nsubj
 |   +-- One CD num
 |   +-- general JJ amod
 |   |   +-- very RB advmod
 |   +-- of IN prep
 |       +-- doing VBG pcomp
 |           +-- so RB advmod
 +-- use VB xcomp
 |   +-- to TO aux
 |   +-- mechanism NN dobj
 |       +-- the DT det
 |       +-- VCG JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- 23 CD dep
 |       |   +-- , , punct
 |       |   +-- 4 CD num
 |       |   +-- 12 CD num
 |       +-- -RRB- -RRB- punct
 +-- . . punct

7
Input: -LRB- The VCG mechanism is also known as the Clarke mechanism or , in the specific context of auctions , the Generalized Vickrey Auction. -RRB- Besides strategy proofness , the VCG mechanism has several other nice properties in the context of resource allocation problems .
Parse:
known VBN ROOT
 +-- -LRB- -LRB- punct
 +-- mechanism NN nsubjpass
 |   +-- The DT det
 |   +-- VCG NNP nn
 +-- is VBZ auxpass
 +-- also RB advmod
 +-- as IN prep
 |   +-- mechanism NN pobj
 |       +-- the DT det
 |       +-- Clarke NNP nn
 +-- or CC cc
 +-- has VBZ conj
 |   +-- , , punct
 |   +-- in IN prep
 |   |   +-- context NN pobj
 |   |       +-- the DT det
 |   |       +-- specific JJ amod
 |   |       +-- of IN prep
 |   |           +-- auctions NNS pobj
 |   +-- Auction. NNP nsubj
 |   |   +-- the DT det
 |   |   +-- Generalized NNP nn
 |   |   +-- Vickrey NNP nn
 |   |   +-- -RRB- -RRB- punct
 |   +-- Besides IN prep
 |   |   +-- proofness NN pobj
 |   |       +-- strategy NN nn
 |   +-- mechanism NN nsubj
 |   |   +-- the DT det
 |   |   +-- VCG NNP nn
 |   +-- properties NNS dobj
 |       +-- several JJ amod
 |       +-- other JJ amod
 |       +-- nice JJ amod
 |       +-- in IN prep
 |           +-- context NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- problems NNS pobj
 |                       +-- allocation NN nn
 |                           +-- resource NN nn
 +-- . . punct

8
Input: It is efficient
Parse:
efficient JJ ROOT
 +-- It PRP nsubj
 +-- is VBZ cop

9
Input: It is also -LRB- expost -RRB- individually rational
Parse:
expost VBN ROOT
 +-- It PRP nsubj
 +-- is VBZ cop
 +-- also RB advmod
 +-- -LRB- -LRB- punct
 +-- -RRB- -RRB- punct
 +-- rational JJ dep
     +-- individually RB advmod

10
Input: Finally , it has a no deficit property
Parse:
has VBZ ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- property NN dobj
     +-- a DT det
     +-- deficit NN nn
         +-- no DT det

11
Input: In many settings , another property that would be desirable is -LRB- strong -RRB- budget balance , meaning that the payments sum to exactly 0 .
Parse:
balance NN ROOT
 +-- In IN prep
 |   +-- settings NNS pobj
 |       +-- many JJ amod
 +-- , , punct
 +-- property NN nsubj
 |   +-- another DT det
 |   +-- desirable JJ rcmod
 |       +-- that WDT nsubj
 |       +-- would MD aux
 |       +-- be VB cop
 +-- is VBZ cop
 +-- -LRB- -LRB- punct
 +-- strong JJ amod
 +-- -RRB- -RRB- punct
 +-- budget NN nn
 +-- meaning VBG partmod
 |   +-- sum NN ccomp
 |       +-- that IN mark
 |       +-- payments NNS nsubj
 |       |   +-- the DT det
 |       +-- to TO prep
 |           +-- 0 CD pobj
 |               +-- exactly RB quantmod
 +-- . . punct

12
Input: Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner .
Parse:
Suppose VB ROOT
 +-- trying VBG ccomp
 |   +-- agents NNS nsubj
 |   |   +-- the DT det
 |   +-- are VBP aux
 |   +-- distribute VB xcomp
 |       +-- to TO aux
 |       +-- resources NNS dobj
 |           +-- some DT det
 |           +-- among IN prep
 |           |   +-- themselves PRP pobj
 |           +-- have VB rcmod
 |               +-- that WDT nsubj
 |               +-- do VBP aux
 |               +-- not RB neg
 |               +-- owner NN dobj
 |                   +-- a DT det
 |                   +-- previous JJ amod
 +-- . . punct

13
Input: For example , the agents may be trying to allocate the right to use a shared good on a given day .
Parse:
trying VBG ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- agents NNS nsubj
 |   +-- the DT det
 +-- may MD aux
 +-- be VB aux
 +-- allocate VB xcomp
 |   +-- to TO aux
 |   +-- right NN dobj
 |       +-- the DT det
 |       +-- use VB infmod
 |           +-- to TO aux
 |           +-- good JJ dobj
 |           |   +-- a DT det
 |           |   +-- shared VBN amod
 |           +-- on IN prep
 |               +-- day NN pobj
 |                   +-- a DT det
 |                   +-- given VBN amod
 +-- . . punct

14
Input: Or , the agents may be trying to allocate a resource that they have collectively constructed , discovered , or otherwise obtained .
Parse:
trying VBG ROOT
 +-- Or CC cc
 +-- , , punct
 +-- agents NNS nsubj
 |   +-- the DT det
 +-- may MD aux
 +-- be VB aux
 +-- allocate VB xcomp
 |   +-- to TO aux
 |   +-- resource NN dobj
 |       +-- a DT det
 |       +-- constructed VBN rcmod
 |           +-- that IN dobj
 |           +-- they PRP nsubj
 |           +-- have VBP aux
 |           +-- collectively RB advmod
 |           +-- , , punct
 |           +-- discovered VBN conj
 |           +-- or CC cc
 |           +-- otherwise RB advmod
 |           +-- obtained VBN conj
 +-- . . punct

15
Input: If the agents use an auction to allocate these resources , and the sum of the agents '' payments in the auction is positive , then this surplus payment must leave the system 30 of the agents -LRB- for example , the agents must give the money to an outside party , or burn it -RRB- .
Parse:
leave VB ROOT
 +-- use VBP advcl
 |   +-- If IN mark
 |   +-- agents NNS nsubj
 |   |   +-- the DT det
 |   +-- auction NN dobj
 |   |   +-- an DT det
 |   +-- allocate VB xcomp
 |   |   +-- to TO aux
 |   |   +-- resources NNS dobj
 |   |       +-- these DT det
 |   +-- , , punct
 |   +-- and CC cc
 |   +-- positive JJ conj
 |       +-- sum NN nsubj
 |       |   +-- the DT det
 |       |   +-- of IN prep
 |       |       +-- payments NNS pobj
 |       |           +-- the DT det
 |       |           +-- agents NNS nn
 |       |           +-- '' '' punct
 |       |           +-- in IN prep
 |       |               +-- auction NN pobj
 |       |                   +-- the DT det
 |       +-- is VBZ cop
 +-- , , punct
 +-- then RB advmod
 +-- payment NN nsubj
 |   +-- this DT det
 |   +-- surplus JJ amod
 +-- must MD aux
 +-- system NN dobj
 |   +-- the DT det
 |   +-- 30 CD num
 |   +-- of IN prep
 |       +-- agents NNS pobj
 |           +-- the DT det
 +-- give VB dep
 |   +-- -LRB- -LRB- punct
 |   +-- for IN prep
 |   |   +-- example NN pobj
 |   +-- , , punct
 |   +-- agents NNS nsubj
 |   |   +-- the DT det
 |   +-- must MD aux
 |   +-- money NN dobj
 |   |   +-- the DT det
 |   +-- to IN prep
 |   |   +-- party NN pobj
 |   |       +-- an DT det
 |   |       +-- outside JJ amod
 |   +-- or CC cc
 |   +-- burn VB conj
 |   |   +-- it PRP dobj
 |   +-- -RRB- -RRB- punct
 +-- . . punct

16
Input: Na ? ? ve redistribution of the surplus payment -LRB- e.g .
Parse:
Na NNP ROOT
 +-- ? . punct
 +-- redistribution NN dep
 |   +-- ve VB nn
 |   +-- of IN prep
 |   |   +-- payment NN pobj
 |   |       +-- the DT det
 |   |       +-- surplus JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- e.g FW dep
 +-- . . punct

17
Input: each of the n agents receives 1 n of the surplus -RRB- will generally result in a mechanism that is not strategy proof -LRB- e.g .
Parse:
result VB ROOT
 +-- receives VBZ csubj
 |   +-- each DT nsubj
 |   |   +-- of IN prep
 |   |       +-- agents NNS pobj
 |   |           +-- the DT det
 |   |           +-- n JJ amod
 |   +-- n DT dobj
 |   |   +-- 1 CD num
 |   |   +-- of IN prep
 |   |       +-- surplus NN pobj
 |   |           +-- the DT det
 |   +-- -RRB- -RRB- punct
 +-- will MD aux
 +-- generally RB advmod
 +-- in IN prep
 |   +-- mechanism NN pobj
 |       +-- a DT det
 |       +-- proof NN rcmod
 |           +-- that WDT nsubj
 |           +-- is VBZ cop
 |           +-- not RB neg
 |           +-- strategy NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- e.g UH discourse
 +-- . . punct

18
Input: in a Vickrey auction , the second highest bidder would want to increase her bid to obtain a larger redistribution payment -RRB- .
Parse:
want VB ROOT
 +-- in IN prep
 |   +-- auction NN pobj
 |       +-- a DT det
 |       +-- Vickrey NNP nn
 +-- , , punct
 +-- bidder NN nsubj
 |   +-- the DT det
 |   +-- highest JJS amod
 |       +-- second RB advmod
 +-- would MD aux
 +-- increase VB xcomp
 |   +-- to TO aux
 |   +-- bid NN dobj
 |       +-- her PRP$ poss
 |       +-- obtain VB infmod
 |           +-- to TO aux
 |           +-- payment NN dobj
 |               +-- a DT det
 |               +-- larger JJR amod
 |               +-- redistribution NN nn
 +-- -RRB- -RRB- punct
 +-- . . punct

19
Input: Unfortunately , the VCG mechanism is not budget balanced
Parse:
budget NN ROOT
 +-- Unfortunately RB advmod
 +-- , , punct
 +-- mechanism NN nsubj
 |   +-- the DT det
 |   +-- VCG NNP nn
 +-- is VBZ cop
 +-- not RB neg
 +-- balanced VBN amod

20
Input: Unfortunately , in general settings , it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties -LRB- 16 , 11 , 21 -RRB- .
Parse:
impossible JJ ROOT
 +-- Unfortunately RB advmod
 +-- , , punct
 +-- in IN prep
 |   +-- fact NN pobj
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- design VB xcomp
 |   +-- to TO aux
 |   +-- mechanisms NNS dobj
 |       +-- satisfy VBP rcmod
 |           +-- that WDT nsubj
 |           +-- balance NN dobj
 |           |   +-- budget NN nn
 |           +-- in IN prep
 |               +-- addition NN pobj
 |                   +-- to IN prep
 |                       +-- properties NNS pobj
 |                           +-- the DT det
 |                           +-- other JJ amod
 |                           +-- desirable JJ amod
 |                           +-- -LRB- -LRB- punct
 |                           +-- 16 CD dep
 |                           |   +-- , , punct
 |                           |   +-- 11 CD num
 |                           |   +-- 21 CD num
 |                           +-- -RRB- -RRB- punct
 +-- . . punct

21
Input: In light of this impossibility result , several authors have obtained budget balance by sacrificing some of the other desirable properties -LRB- 2 , 6 , 22 , 5 -RRB- .
Parse:
obtained VBN ROOT
 +-- In IN prep
 |   +-- light NN pobj
 |       +-- of IN prep
 |           +-- result NN pobj
 |               +-- this DT det
 |               +-- impossibility NN nn
 +-- , , punct
 +-- authors NNS nsubj
 |   +-- several JJ amod
 +-- have VBP aux
 +-- balance NN dobj
 |   +-- budget NN nn
 +-- by IN prep
 |   +-- sacrificing VBG pcomp
 |       +-- some DT dobj
 |           +-- of IN prep
 |               +-- properties NNS pobj
 |                   +-- the DT det
 |                   +-- other JJ amod
 |                   +-- desirable JJ amod
 |                   +-- -LRB- -LRB- punct
 |                   +-- 2 CD dep
 |                   |   +-- , , punct
 |                   |   +-- 6 CD num
 |                   |   +-- 22 CD num
 |                   |   +-- 5 CD num
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

22
Input: Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism , and maintains all the other desirable properties .
Parse:
is VBZ ROOT
 +-- approach NN nsubj
 |   +-- Another DT det
 |   +-- preferable JJ rcmod
 |       +-- that WDT nsubj
 |       +-- is VBZ cop
 |       +-- perhaps RB advmod
 +-- use VB xcomp
 |   +-- to TO aux
 |   +-- mechanism NN dobj
 |       +-- a DT det
 |       +-- balanced VBN rcmod
 |           +-- that WDT nsubj
 |           +-- is VBZ cop
 |           +-- budget NN npadvmod
 |           |   +-- more RBR amod
 |           +-- than IN prep
 |           |   +-- mechanism NN pobj
 |           |       +-- the DT det
 |           |       +-- VCG NNP nn
 |           +-- , , punct
 |           +-- and CC cc
 |           +-- maintains VBZ conj
 |               +-- properties NNS dobj
 |                   +-- all PDT predet
 |                   +-- the DT det
 |                   +-- other JJ amod
 |                   +-- desirable JJ amod
 +-- . . punct

23
Input: One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents '' incentives -LRB- so that strategy proofness is maintained -RRB- , and that will maintain the other properties .
Parse:
is VBZ ROOT
 +-- way NN nsubj
 |   +-- One CD num
 |   +-- of IN prep
 |       +-- trying VBG pcomp
 |           +-- design VB xcomp
 |               +-- to TO aux
 |               +-- mechanism NN dobj
 |                   +-- such PDT predet
 |                   +-- a DT det
 +-- redistribute VB xcomp
 |   +-- to TO aux
 |   +-- some DT dobj
 |   |   +-- of IN prep
 |   |       +-- payment NN pobj
 |   |           +-- the DT det
 |   |           +-- VCG NNP nn
 |   +-- back RB advmod
 |   |   +-- to IN prep
 |   |       +-- agents NNS pobj
 |   |           +-- the DT det
 |   +-- in IN prep
 |       +-- way NN pobj
 |           +-- a DT det
 |           +-- affect VB rcmod
 |               +-- that WDT nsubj
 |               +-- will MD aux
 |               +-- not RB neg
 |               +-- incentives NNS dobj
 |               |   +-- the DT det
 |               |   +-- agents NNS nn
 |               |   +-- '' '' punct
 |               +-- -LRB- -LRB- punct
 |               +-- maintained VBN advcl
 |               |   +-- so IN mark
 |               |   +-- that IN mark
 |               |   +-- proofness NN nsubjpass
 |               |   |   +-- strategy NN nn
 |               |   +-- is VBZ auxpass
 |               +-- -RRB- -RRB- punct
 |               +-- , , punct
 |               +-- and CC cc
 |               +-- maintain VB conj
 |                   +-- that DT nsubj
 |                   +-- will MD aux
 |                   +-- properties NNS dobj
 |                       +-- the DT det
 |                       +-- other JJ amod
 +-- . . punct

24
Input: In 2006 , Cavallo -LRB- 3 -RRB- pursued exactly this idea , and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism .
Parse:
pursued VBN ROOT
 +-- In IN prep
 |   +-- 2006 CD pobj
 +-- , , punct
 +-- Cavallo NNP nsubj
 |   +-- -LRB- -LRB- punct
 |   +-- 3 CD dep
 |   +-- -RRB- -RRB- punct
 +-- idea NN dobj
 |   +-- exactly RB advmod
 |   +-- this DT det
 +-- and CC cc
 +-- designed VBD conj
 |   +-- mechanism NN dobj
 |       +-- a DT det
 |       +-- redistributes VBZ rcmod
 |           +-- that WDT nsubj
 |           +-- amount NN dobj
 |           |   +-- a DT det
 |           |   +-- large JJ amod
 |           |   +-- of IN prep
 |           |       +-- payment NN pobj
 |           |           +-- the DT det
 |           |           +-- total JJ amod
 |           |           +-- VCG JJ amod
 |           +-- maintaining VBG advcl
 |               +-- while IN mark
 |               +-- all DT dobj
 |                   +-- of IN prep
 |                       +-- properties NNS pobj
 |                           +-- the DT det
 |                           +-- other JJ amod
 |                           +-- desirable JJ amod
 |                           +-- of IN prep
 |                               +-- mechanism NN pobj
 |                                   +-- the DT det
 |                                   +-- VCG NNP nn
 +-- . . punct

25
Input: For example , in a single item auction -LRB- where the VCG mechanism coincides with the second price sealed bid auction -RRB- , the amount redistributed to bidder i by Cavallo '' s mechanism is 1 n times the second highest bid among bids other than i '' s bid .
Parse:
redistributed VBN ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- in IN prep
 |   +-- auction NN pobj
 |       +-- a DT det
 |       +-- single JJ amod
 |       +-- item NN nn
 |       +-- -LRB- -LRB- punct
 |       +-- coincides VBZ rcmod
 |       |   +-- where WRB advmod
 |       |   +-- mechanism NN nsubj
 |       |   |   +-- the DT det
 |       |   |   +-- VCG NNP nn
 |       |   +-- with IN prep
 |       |       +-- auction NN pobj
 |       |           +-- the DT det
 |       |           +-- second JJ amod
 |       |           +-- sealed VBN amod
 |       |           |   +-- price NN dep
 |       |           +-- bid NN nn
 |       +-- -RRB- -RRB- punct
 +-- amount NN nsubj
 |   +-- the DT det
 +-- bid NN ccomp
 |   +-- bidder VB csubj
 |   |   +-- to TO aux
 |   |   +-- i PRP dobj
 |   |   +-- by IN prep
 |   |       +-- mechanism NN pobj
 |   |           +-- Cavallo NNP poss
 |   |               +-- '' '' punct
 |   |               +-- s POS possessive
 |   +-- is VBZ cop
 |   +-- times NNS num
 |   |   +-- 1 CD number
 |   |   +-- n RB quantmod
 |   +-- the DT det
 |   +-- second JJ amod
 |   +-- highest JJS amod
 |   +-- among IN prep
 |       +-- bid NN pobj
 |           +-- bids NNS poss
 |               +-- other JJ amod
 |               |   +-- than IN prep
 |               |       +-- i PRP pobj
 |               +-- '' '' punct
 |               +-- s POS possessive
 +-- . . punct

26
Input: The total redistributed is at most the second highest bid overall , and the redistribution to agent i does not affect i '' s incentives because it does not depend on i '' s own bid .
Parse:
is VBZ ROOT
 +-- redistributed VBN nsubj
 |   +-- The DT det
 |   +-- total NN amod
 +-- at IN prep
 |   +-- bid NN pobj
 |       +-- most RBS advmod
 |       +-- the DT det
 |       +-- highest JJS amod
 |           +-- second RB advmod
 +-- overall RB advmod
 +-- , , punct
 +-- and CC cc
 +-- affect VB conj
 |   +-- redistribution NN nsubj
 |   |   +-- the DT det
 |   |   +-- to IN prep
 |   |       +-- agent NN pobj
 |   +-- i PRP nsubj
 |   +-- does VBZ aux
 |   +-- not RB neg
 |   +-- incentives NNS dobj
 |   |   +-- i PRP poss
 |   |       +-- '' '' punct
 |   |       +-- s POS possessive
 |   +-- depend VB advcl
 |       +-- because IN mark
 |       +-- it PRP nsubj
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- on IN prep
 |           +-- bid NN pobj
 |               +-- i PRP poss
 |               |   +-- '' '' punct
 |               |   +-- s POS possessive
 |               +-- own JJ amod
 +-- . . punct

27
Input: In this paper , we restrict our attention to a limited setting , and in this setting we extend Cavallo '' s result .
Parse:
restrict VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- attention NN dobj
 |   +-- our PRP$ poss
 +-- to IN prep
 |   +-- setting NN pobj
 |       +-- a DT det
 |       +-- limited JJ amod
 +-- and CC cc
 +-- extend VBP conj
 |   +-- in IN prep
 |   |   +-- setting NN pobj
 |   |       +-- this DT det
 |   +-- we PRP nsubj
 |   +-- result NN dobj
 |       +-- Cavallo NNP poss
 |           +-- '' '' punct
 |           +-- s POS possessive
 +-- . . punct

28
Input: We study allocation settings where there are multiple indistinguishable units of a single good , and all agents have unit demand , i.e .
Parse:
study VBP ROOT
 +-- We PRP nsubj
 +-- settings NNS dobj
 |   +-- allocation NN nn
 |   +-- are VBP rcmod
 |       +-- where WRB advmod
 |       +-- there EX expl
 |       +-- units NNS nsubj
 |           +-- multiple JJ amod
 |           +-- indistinguishable JJ amod
 |           +-- of IN prep
 |               +-- good NN pobj
 |                   +-- a DT det
 |                   +-- single JJ amod
 +-- , , punct
 +-- and CC cc
 +-- have VBP conj
 |   +-- agents NNS nsubj
 |   |   +-- all DT det
 |   +-- demand NN dobj
 |       +-- unit NN nn
 |       +-- , , punct
 |       +-- i.e NN appos
 +-- . . punct

29
Input: they want only a single unit .
Parse:
want VBP ROOT
 +-- they PRP nsubj
 +-- unit NN dobj
 |   +-- only RB advmod
 |   +-- a DT det
 |   +-- single JJ amod
 +-- . . punct

30
Input: For this specific setting , Cavallo '' s mechanism coincides with a mechanism proposed by Bailey in 1997 -LRB- 2 -RRB- .
Parse:
coincides VBZ ROOT
 +-- For IN prep
 |   +-- setting NN pobj
 |       +-- this DT det
 |       +-- specific JJ amod
 +-- , , punct
 +-- mechanism NN nsubj
 |   +-- Cavallo NNP poss
 |       +-- '' '' punct
 |       +-- s POS possessive
 +-- with IN prep
 |   +-- mechanism NN pobj
 |       +-- a DT det
 |       +-- proposed VBN partmod
 |           +-- by IN prep
 |           |   +-- Bailey NNP pobj
 |           +-- in IN prep
 |               +-- 1997 CD pobj
 |                   +-- -LRB- -LRB- punct
 |                   +-- 2 CD dep
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

31
Input: Here we propose the family of linear VCG redistribution mechanisms .
Parse:
propose VBP ROOT
 +-- Here RB advmod
 +-- we PRP nsubj
 +-- family NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- mechanisms NNS pobj
 |           +-- linear JJ amod
 |           +-- VCG NNP nn
 |           +-- redistribution NN nn
 +-- . . punct

32
Input: All mechanisms in this family are efficient , strategy proof , individually rational , and never incur a deficit .
Parse:
efficient JJ ROOT
 +-- mechanisms NNS nsubj
 |   +-- All DT det
 |   +-- in IN prep
 |       +-- family NN pobj
 |           +-- this DT det
 +-- are VBP cop
 +-- , , punct
 +-- proof NN conj
 |   +-- strategy NN nn
 +-- rational JJ conj
 |   +-- individually RB advmod
 +-- and CC cc
 +-- never RB neg
 +-- incur VB conj
 |   +-- deficit NN dobj
 |       +-- a DT det
 +-- . . punct

33
Input: The family includes the Bailey Cavallo mechanism as a special case -LRB- with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand , while Bailey '' s and Cavallo '' s mechanisms can be applied outside these settings as well -RRB- .
Parse:
includes VBZ ROOT
 +-- family NN nsubj
 |   +-- The DT det
 +-- mechanism NN dobj
 |   +-- the DT det
 |   +-- Cavallo NNP nn
 |       +-- Bailey NNP nn
 +-- as IN prep
 |   +-- case NN pobj
 |       +-- a DT det
 |       +-- special JJ amod
 +-- -LRB- -LRB- punct
 +-- with IN prep
 |   +-- caveat NN pobj
 |       +-- the DT det
 |       +-- study VBP ccomp
 |           +-- that WDT mark
 |           +-- we PRP nsubj
 |           +-- only RB advmod
 |           +-- settings NNS dobj
 |           |   +-- allocation NN nn
 |           |   +-- with IN prep
 |           |       +-- units NNS pobj
 |           |           +-- multiple JJ amod
 |           |           +-- indistinguishable JJ amod
 |           |           +-- of IN prep
 |           |               +-- demand NN pobj
 |           |                   +-- a DT det
 |           |                   +-- single JJ amod
 |           |                   +-- good JJ amod
 |           |                       +-- and CC cc
 |           |                       +-- unit NN conj
 |           +-- , , punct
 |           +-- applied VBN advcl
 |               +-- while IN mark
 |               +-- mechanisms NNS nsubjpass
 |               |   +-- Bailey NNP poss
 |               |       +-- '' '' punct
 |               |       +-- s POS possessive
 |               |       +-- and CC cc
 |               |       +-- Cavallo NNP conj
 |               |           +-- '' '' punct
 |               +-- can MD aux
 |               +-- be VB auxpass
 |               +-- outside IN prep
 |               |   +-- settings NNS pobj
 |               |       +-- these DT det
 |               +-- well RB advmod
 |                   +-- as RB advmod
 +-- -RRB- -RRB- punct
 +-- . . punct

34
Input: We then provide an optimization model for finding the optimal mechanism inside the family , based on worst case analysis .
Parse:
provide VBP ROOT
 +-- We PRP nsubj
 +-- then RB advmod
 +-- model NN dobj
 |   +-- an DT det
 |   +-- optimization NN nn
 |   +-- for IN prep
 |       +-- finding VBG pcomp
 |           +-- mechanism NN dobj
 |               +-- the DT det
 |               +-- optimal JJ amod
 |               +-- inside IN prep
 |               |   +-- family NN pobj
 |               |       +-- the DT det
 |               +-- , , punct
 |               +-- based VBN prep
 |                   +-- on IN pcomp
 |                       +-- analysis NN pobj
 |                           +-- worst JJS amod
 |                           +-- case NN nn
 +-- . . punct

35
Input: Both numerical and analytical solutions of this model are provided , and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism -LRB- in the worst case -RRB- .
Parse:
provided VBN ROOT
 +-- solutions NNS nsubjpass
 |   +-- numerical JJ amod
 |   |   +-- Both DT preconj
 |   |   +-- and CC cc
 |   |   +-- analytical JJ conj
 |   +-- of IN prep
 |       +-- model NN pobj
 |           +-- this DT det
 +-- are VBP auxpass
 +-- , , punct
 +-- and CC cc
 +-- shows VBZ conj
 |   +-- mechanism NN nsubj
 |   |   +-- the DT det
 |   |   +-- resulting VBG amod
 |   +-- improvement NN dobj
 |       +-- significant JJ amod
 |       +-- over IN prep
 |           +-- mechanism NN pobj
 |               +-- the DT det
 |               +-- BaileyCavallo NNP nn
 |               +-- in IN prep
 |                   +-- -LRB- -LRB- punct
 |                   +-- case NN pobj
 |                   |   +-- the DT det
 |                   |   +-- worst JJS amod
 |                   +-- -RRB- -RRB- punct
 +-- . . punct

36
Input: For example , for the problem of allocating a single unit , when the number of agents is 10 , our mechanism always redistributes more than 98 % of the total VCG payment back to the agents -LRB- whereas the Bailey Cavallo mechanism redistributes only 80 % in the worst case -RRB- .
Parse:
redistributes VBZ ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- for IN prep
 |   +-- problem NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- allocating VBG pcomp
 |               +-- unit NN dobj
 |                   +-- a DT det
 |                   +-- single JJ amod
 +-- 10 CD advcl
 |   +-- when WRB advmod
 |   +-- number NN nsubj
 |   |   +-- the DT det
 |   |   +-- of IN prep
 |   |       +-- agents NNS pobj
 |   +-- is VBZ cop
 +-- mechanism NN nsubj
 |   +-- our PRP$ poss
 +-- always RB advmod
 +-- % NN dobj
 |   +-- 98 CD num
 |   |   +-- than IN quantmod
 |   |       +-- more JJR mwe
 |   +-- of IN prep
 |       +-- payment NN pobj
 |           +-- the DT det
 |           +-- total JJ amod
 |           +-- VCG NNP nn
 +-- back RB advmod
 |   +-- to IN prep
 |       +-- agents NNS pobj
 |           +-- the DT det
 +-- -LRB- -LRB- punct
 +-- redistributes VBZ advcl
 |   +-- whereas IN mark
 |   +-- mechanism NN nsubj
 |   |   +-- the DT det
 |   |   +-- Cavallo NNP nn
 |   |       +-- Bailey NNP nn
 |   +-- % NN dobj
 |   |   +-- 80 CD num
 |   |       +-- only RB quantmod
 |   +-- in IN prep
 |       +-- case NN pobj
 |           +-- the DT det
 |           +-- worst JJS amod
 +-- -RRB- -RRB- punct
 +-- . . punct

37
Input: Finally , we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms -LRB- even nonlinear ones -RRB- that satisfy the desirable properties .
Parse:
prove VBP ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- optimal JJ ccomp
 |   +-- that IN mark
 |   +-- mechanism NN nsubj
 |   |   +-- our PRP$ poss
 |   +-- is VBZ cop
 |   +-- in IN prep
 |   |   +-- fact NN pobj
 |   +-- among IN prep
 |       +-- mechanisms NNS pobj
 |           +-- all DT det
 |           +-- anonymous JJ amod
 |           +-- deterministic JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- ones NNS dep
 |           |   +-- even RB advmod
 |           |   +-- nonlinear JJ amod
 |           +-- -RRB- -RRB- punct
 |           +-- satisfy VBP rcmod
 |               +-- that WDT nsubj
 |               +-- properties NNS dobj
 |                   +-- the DT det
 |                   +-- desirable JJ amod
 +-- . . punct

38
Input: Around the same time , the same mechanism has been independently derived by Moulin -LRB- 19 -RRB- .1 Moulin actually pursues a different objective -LRB- also based on worst case analysis -RRB-
Parse:
derived VBN ROOT
 +-- Around IN prep
 |   +-- time NN pobj
 |       +-- the DT det
 |       +-- same JJ amod
 +-- , , punct
 +-- mechanism NN nsubjpass
 |   +-- the DT det
 |   +-- same JJ amod
 +-- has VBZ aux
 +-- been VBN auxpass
 +-- independently RB advmod
 +-- by IN prep
     +-- Moulin NNP pobj
         +-- .1 CD dep
             +-- -LRB- -LRB- punct
             +-- 19 CD num
             +-- -RRB- -RRB- punct
             +-- pursues VBZ dep
                 +-- Moulin NNP nsubj
                 +-- actually RB advmod
                 +-- objective NN dobj
                     +-- a DT det
                     +-- different JJ amod
                     +-- -LRB- -LRB- punct
                     +-- based VBN partmod
                     |   +-- also RB advmod
                     |   +-- on IN prep
                     |       +-- analysis NN pobj
                     |           +-- worst JJS amod
                     |           +-- case NN nn
                     +-- -RRB- -RRB- punct

39
Input: It turns out that the resulting mechanisms are the same .
Parse:
turns VBZ ROOT
 +-- It PRP nsubj
 +-- out RP prt
 +-- same JJ ccomp
 |   +-- that IN mark
 |   +-- mechanisms NNS nsubj
 |   |   +-- the DT det
 |   |   +-- resulting VBG amod
 |   +-- are VBP cop
 |   +-- the DT det
 +-- . . punct

40
Input: Towards the end of this paper , we consider dropping the individual rationality requirement , and show that this does not change the optimal mechanism for our objective .
Parse:
consider VBP ROOT
 +-- Towards IN prep
 |   +-- end NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- paper NN pobj
 |               +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- dropping VBG xcomp
 |   +-- requirement NN dobj
 |       +-- the DT det
 |       +-- individual JJ amod
 |       +-- rationality NN nn
 +-- and CC cc
 +-- show VB conj
 |   +-- change VB ccomp
 |       +-- that IN mark
 |       +-- this DT nsubj
 |       +-- does VBZ aux
 |       +-- not RB neg
 |       +-- mechanism NN dobj
 |           +-- the DT det
 |           +-- optimal JJ amod
 |           +-- for IN prep
 |               +-- objective NN pobj
 |                   +-- our PRP$ poss
 +-- . . punct

41
Input: For Moulin '' s objective , dropping individual rationality does change the optimal mechanism -LRB- but only if there are multiple units -RRB- . .
Parse:
change VB ROOT
 +-- For IN prep
 |   +-- objective JJ pobj
 |       +-- Moulin NNP poss
 |           +-- '' '' punct
 |           +-- s POS possessive
 +-- , , punct
 +-- dropping VBG csubj
 |   +-- rationality NN dobj
 |       +-- individual JJ amod
 +-- does VBZ aux
 +-- mechanism NN dobj
 |   +-- the DT det
 |   +-- optimal JJ amod
 +-- -LRB- -LRB- punct
 +-- but CC cc
 +-- are VBP conj
 |   +-- only RB advmod
 |   +-- if IN mark
 |   +-- there EX expl
 |   +-- units NNS nsubj
 |   |   +-- multiple JJ amod
 |   +-- -RRB- -RRB- punct
 +-- . . punct
