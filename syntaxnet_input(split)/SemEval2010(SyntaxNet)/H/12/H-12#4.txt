
1
Input: A search engine must perform a variety of activities , and is comprised of many sub systems , as depicted by the boxes in Figure 1 .
Parse:
perform VB ROOT
 +-- engine NN nsubj
 |   +-- A DT det
 |   +-- search NN nn
 +-- must MD aux
 +-- variety NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- activities NNS pobj
 +-- , , punct
 +-- and CC cc
 +-- comprised VBN conj
 |   +-- is VBZ auxpass
 |   +-- of IN prep
 |   |   +-- systems NNS pobj
 |   |       +-- many JJ amod
 |   |       +-- sub NN nn
 |   +-- , , punct
 |   +-- depicted VBN advcl
 |       +-- as IN mark
 |       +-- by IN prep
 |       |   +-- boxes NNS pobj
 |       |       +-- the DT det
 |       +-- in IN prep
 |           +-- Figure NNP pobj
 |               +-- 1 CD num
 +-- . . punct

2
Input: Note that there may be several other sub systems such as the Advertising Engine or the Parsing Engine that could easily be added to the diagram , but we have concentrated on the sub systems that are relevant to snippet generation .
Parse:
Note VB ROOT
 +-- systems NNS ccomp
 |   +-- that IN mark
 |   +-- there EX expl
 |   +-- may MD aux
 |   +-- be VB cop
 |   +-- several JJ amod
 |   +-- other JJ amod
 |   +-- sub NN nn
 |   +-- as IN prep
 |   |   +-- such JJ mwe
 |   |   +-- Engine NNP pobj
 |   |       +-- the DT det
 |   |       +-- Advertising NNP nn
 |   |       +-- or CC cc
 |   |       +-- Engine NN conj
 |   |           +-- the DT det
 |   |           +-- Parsing VBG nn
 |   +-- added VBN rcmod
 |   |   +-- that WDT nsubjpass
 |   |   +-- could MD aux
 |   |   +-- easily RB advmod
 |   |   +-- be VB auxpass
 |   |   +-- to IN prep
 |   |       +-- diagram NN pobj
 |   |           +-- the DT det
 |   +-- , , punct
 |   +-- but CC cc
 |   +-- concentrated VBN conj
 |       +-- we PRP nsubj
 |       +-- have VBP aux
 |       +-- on IN prep
 |           +-- systems NNS pobj
 |               +-- the DT det
 |               +-- sub NN nn
 |               +-- relevant JJ rcmod
 |                   +-- that WDT nsubj
 |                   +-- are VBP cop
 |                   +-- to TO prep
 |                       +-- generation NN pobj
 |                           +-- snippet VB nn
 +-- . . punct

3
Input: Depending on the number of documents that the search engine indexes , the data and processes for each Ranking Engine Crawling Engine Indexing Engine Engine Lexicon Meta Data Engine Engine Snippet Term & Doc # s Snippetperdoc WEB Query Engine Query Results Page Term # s Doc # s Invertedlists Docs perdoc Title , URL , etc Doc # s Document meta data Terms Querystring Term # s Figure 1
Parse:
Depending VBG ROOT
 +-- on IN pcomp
 |   +-- number NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- documents NNS pobj
 |       +-- indexes NNS rcmod
 |           +-- that WDT dobj
 |           +-- engine NN nsubj
 |               +-- the DT det
 |               +-- search NN nn
 +-- , , punct
     +-- data NNS dep
         +-- the DT det
         +-- and CC cc
         +-- processes NNS conj
         +-- for IN prep
         |   +-- Snippetperdoc NN pobj
         |       +-- Term NNP poss
         |           +-- each DT det
         |           +-- Lexicon NNP nn
         |           |   +-- Engine NNP nn
         |           |       +-- Indexing VBG nn
         |           |       |   +-- Engine NN nn
         |           |       |       +-- Engine NNP nn
         |           |       |       |   +-- Ranking VBG nn
         |           |       |       +-- Crawling VBG nn
         |           |       +-- Engine NNP nn
         |           +-- Meta NN nn
         |           +-- Engine NNP nn
         |           |   +-- Engine NN nn
         |           |       +-- Data NN nn
         |           +-- Snippet NNP nn
         |           +-- & CC cc
         |           +-- # NN conj
         |           |   +-- Doc NNP nn
         |           +-- s POS possessive
         +-- WEB WDT dep
             +-- Results NNS pobj
                 +-- Query NNP nn
                 +-- Engine NNP nn
                 +-- # NN dep
                     +-- Term NNP nn
                     |   +-- Page NNP nn
                     +-- s POS possessive
                     +-- # NN dep
                         +-- Doc NNP nn
                         +-- s POS possessive
                         +-- Title NNP dep
                             +-- Invertedlists NNPS nn
                             +-- Docs NNPS nn
                             +-- perdoc NN nn
                             +-- , , punct
                             +-- URL NNS dep
                             +-- etc FW advmod
                             +-- Figure NN dep
                                 +-- # NN poss
                                 |   +-- meta NN nn
                                 |   |   +-- Document JJ amod
                                 |   +-- Terms NNS nn
                                 |   |   +-- data NN nn
                                 |   +-- Term NNP nn
                                 |   |   +-- Querystring NNP nn
                                 |   +-- s POS possessive
                                 +-- 1 CD num

4
Input: Depending on the number of documents indexed , each sub system could reside on a single machine , be distributed across thousands of machines , or a combination of both .
Parse:
reside VB ROOT
 +-- Depending VBG prep
 |   +-- on IN pcomp
 |       +-- number NN pobj
 |           +-- the DT det
 |           +-- of IN prep
 |           |   +-- documents NNS pobj
 |           +-- indexed VBN partmod
 +-- , , punct
 +-- system NN nsubj
 |   +-- each DT det
 |   +-- sub NN nn
 +-- could MD aux
 +-- on IN prep
 |   +-- machine NN pobj
 |       +-- a DT det
 |       +-- single JJ amod
 +-- distributed VBN dep
 |   +-- be VB auxpass
 |   +-- across IN prep
 |       +-- thousands NNS pobj
 |           +-- of IN prep
 |           |   +-- machines NNS pobj
 |           +-- , , punct
 |           +-- or CC cc
 |           +-- combination NN conj
 |               +-- a DT det
 |               +-- of IN prep
 |                   +-- both DT pobj
 +-- . . punct

5
Input: sub system could be distributed over many machines , or all occupy a single server and filesystem , competing with each other for resources .
Parse:
distributed VBN ROOT
 +-- system NN nsubjpass
 |   +-- sub NN nn
 +-- could MD aux
 +-- be VB auxpass
 +-- over IN prep
 |   +-- machines NNS pobj
 |       +-- many JJ amod
 +-- , , punct
 +-- or CC cc
 +-- occupy VBP conj
 |   +-- all DT nsubj
 |   +-- server NN dobj
 |   |   +-- a DT det
 |   |   +-- single JJ amod
 |   |   +-- and CC cc
 |   |   +-- filesystem NN conj
 |   +-- , , punct
 |   +-- competing VBG partmod
 |       +-- with IN prep
 |       |   +-- other JJ pobj
 |       |       +-- each DT det
 |       +-- for IN prep
 |           +-- resources NNS pobj
 +-- . . punct

6
Input: Similarly , it may be more efficient to combine some sub systems in an implementation of the diagram .
Parse:
efficient JJ ROOT
 +-- Similarly RB advmod
 +-- , , punct
 +-- it PRP nsubj
 +-- may MD aux
 +-- be VB cop
 +-- more RBR advmod
 +-- combine VB xcomp
 |   +-- to TO aux
 |   +-- systems NNS dobj
 |   |   +-- some DT det
 |   |   +-- sub NN nn
 |   +-- in IN prep
 |       +-- implementation NN pobj
 |           +-- an DT det
 |           +-- of IN prep
 |               +-- diagram NN pobj
 |                   +-- the DT det
 +-- . . punct

7
Input: For example , the meta data such as document title and URL requires minimal computation apart from highlighting query words , but we note that disk seeking is likely to be minimized if title , URL and fixed summary information is stored contiguously with the text from which query biased summaries are extracted .
Parse:
requires VBZ ROOT
 +-- For IN prep
 |   +-- example NN pobj
 +-- , , punct
 +-- data NNS nsubj
 |   +-- the DT det
 |   +-- meta NN amod
 |   +-- as IN prep
 |       +-- such JJ mwe
 |       +-- title NN pobj
 |           +-- document NN nn
 |           +-- and CC cc
 |           +-- URL NNP conj
 +-- computation NN dobj
 |   +-- minimal JJ amod
 |   +-- apart RB advmod
 +-- from IN prep
 |   +-- highlighting VBG pcomp
 |       +-- words NNS dobj
 |           +-- query NN nn
 +-- but CC cc
 +-- note VBP conj
 |   +-- we PRP nsubj
 |   +-- likely JJ ccomp
 |       +-- that IN mark
 |       +-- seeking VBG nsubj
 |       |   +-- disk NN nn
 |       +-- is VBZ cop
 |       +-- minimized VBN xcomp
 |       |   +-- to TO aux
 |       |   +-- be VB auxpass
 |       +-- stored VBN advcl
 |           +-- if IN mark
 |           +-- information NN nsubjpass
 |           |   +-- title NN nn
 |           |       +-- , , punct
 |           |       +-- URL NNP conj
 |           |       +-- and CC cc
 |           |       +-- summary NN conj
 |           |           +-- fixed JJ amod
 |           +-- is VBZ auxpass
 |           +-- contiguously RB advmod
 |           +-- with IN prep
 |               +-- text NN pobj
 |                   +-- the DT det
 |                   +-- extracted VBN rcmod
 |                       +-- from IN prep
 |                       |   +-- which WDT pobj
 |                       +-- summaries NNS nsubjpass
 |                       |   +-- query NN nn
 |                       |   +-- biased JJ amod
 |                       +-- are VBP auxpass
 +-- . . punct

8
Input: Here we ignore the fixed text and consider only the generation of query biased summaries
Parse:
ignore VBP ROOT
 +-- Here RB advmod
 +-- we PRP nsubj
 +-- text NN dobj
 |   +-- the DT det
 |   +-- fixed VBN amod
 +-- and CC cc
 +-- consider VB conj
     +-- biased VBN ccomp
         +-- generation NN nsubj
         |   +-- only RB advmod
         |   +-- the DT det
         |   +-- of IN prep
         |       +-- query NN pobj
         +-- summaries NNS dobj

9
Input: In addition to data and programs operating on that data , each sub system also has its own memory management scheme .
Parse:
has VBZ ROOT
 +-- In IN prep
 |   +-- addition NN pobj
 |       +-- to IN prep
 |           +-- data NNS pobj
 |               +-- and CC cc
 |               +-- programs NNS conj
 |               +-- operating VBG partmod
 |                   +-- on IN prep
 |                       +-- data NNS pobj
 |                           +-- that DT det
 +-- , , punct
 +-- system NN nsubj
 |   +-- each DT det
 |   +-- sub NN nn
 +-- also RB advmod
 +-- scheme NN dobj
 |   +-- its PRP$ poss
 |   +-- own JJ amod
 |   +-- management NN nn
 |       +-- memory NN nn
 +-- . . punct

10
Input: The memory management system may simply be the memory hierarchy provided by the operating system used on machines in the sub system , or it may be explicitly coded to optimise the processes in the sub system .
Parse:
hierarchy NN ROOT
 +-- system NN nsubj
 |   +-- The DT det
 |   +-- management NN nn
 |       +-- memory NN nn
 +-- may MD aux
 +-- simply RB advmod
 +-- be VB cop
 +-- the DT det
 +-- memory NN nn
 +-- provided VBN partmod
 |   +-- by IN prep
 |       +-- system NN pobj
 |           +-- the DT det
 |           +-- operating NN nn
 |           +-- used VBN partmod
 |               +-- on IN prep
 |                   +-- machines NNS pobj
 |                       +-- in IN prep
 |                           +-- system NN pobj
 |                               +-- the DT det
 |                               +-- sub NN nn
 +-- , , punct
 +-- or CC cc
 +-- coded VBN conj
 |   +-- it PRP nsubjpass
 |   +-- may MD aux
 |   +-- be VB auxpass
 |   +-- explicitly RB advmod
 |   +-- optimise VB xcomp
 |       +-- to TO aux
 |       +-- processes NNS dobj
 |           +-- the DT det
 |           +-- in IN prep
 |               +-- system NN pobj
 |                   +-- the DT det
 |                   +-- sub NN nn
 +-- . . punct

11
Input: There are many papers on caching in search engines -LRB- see -LRB- 3 -RRB- and references therein for a current summary -RRB- , but it seems reasonable that there is a query cache in the Query Engine that stores precomputed final result pages for very popular queries .
Parse:
are VBP ROOT
 +-- There EX expl
 +-- papers NNS nsubj
 |   +-- many JJ amod
 |   +-- on IN prep
 |   |   +-- caching VBG pcomp
 |   |       +-- in IN prep
 |   |           +-- engines NNS pobj
 |   |               +-- search NN nn
 |   +-- see VB dep
 |       +-- -LRB- -LRB- punct
 |       +-- 3 CD dobj
 |       +-- -RRB- -RRB- punct
 |       +-- and CC cc
 |       +-- references NNS conj
 |           +-- therein RB advmod
 |           +-- for IN prep
 |               +-- summary NN pobj
 |                   +-- a DT det
 |                   +-- current JJ amod
 +-- , , punct
 +-- but CC cc
 +-- seems VBZ conj
 |   +-- it PRP nsubj
 |   +-- reasonable JJ acomp
 |   +-- is VBZ ccomp
 |       +-- that IN mark
 |       +-- there EX expl
 |       +-- cache NN nsubj
 |       |   +-- a DT det
 |       |   +-- query NN nn
 |       +-- in IN prep
 |       |   +-- Engine NNP pobj
 |       |       +-- the DT det
 |       |       +-- Query NNP nn
 |       +-- precomputed VBD ccomp
 |           +-- that WDT mark
 |           +-- stores NNS nsubj
 |           +-- pages NNS dobj
 |           |   +-- result NN nn
 |           |       +-- final JJ amod
 |           +-- for IN prep
 |               +-- queries NNS pobj
 |                   +-- popular JJ amod
 |                       +-- very RB advmod
 +-- . . punct

12
Input: When one of the popular queries is issued , the result page is fetched straight from the query cache .
Parse:
fetched VBN ROOT
 +-- issued VBN advcl
 |   +-- When WRB advmod
 |   +-- one CD nsubjpass
 |   |   +-- of IN prep
 |   |       +-- queries NNS pobj
 |   |           +-- the DT det
 |   |           +-- popular JJ amod
 |   +-- is VBZ auxpass
 +-- , , punct
 +-- page NN nsubjpass
 |   +-- the DT det
 |   +-- result NN nn
 +-- is VBZ auxpass
 +-- straight JJ advmod
 |   +-- from IN prep
 |       +-- cache NN pobj
 |           +-- the DT det
 |           +-- query NN nn
 +-- . . punct

13
Input: If the issued query is not in the query cache , then the Query Engine uses the four sub systems in turn to assemble a results page .
Parse:
uses VBZ ROOT
 +-- is VBZ advcl
 |   +-- If IN mark
 |   +-- query NN nsubj
 |   |   +-- the DT det
 |   |   +-- issued VBN amod
 |   +-- not RB neg
 |   +-- in IN prep
 |       +-- cache NN pobj
 |           +-- the DT det
 |           +-- query NN nn
 +-- , , punct
 +-- then RB advmod
 +-- Engine NNP nsubj
 |   +-- the DT det
 |   +-- Query NNP nn
 +-- systems NNS dobj
 |   +-- the DT det
 |   +-- four CD num
 |   +-- sub NN nn
 +-- in IN prep
 |   +-- turn NN pobj
 +-- assemble VB xcomp
 |   +-- to TO aux
 |   +-- page NN dobj
 |       +-- a DT det
 |       +-- results NNS nn
 +-- . . punct

14
Input: term , using them to get a ranked list of documents .
Parse:
term NN ROOT
 +-- , , punct
 +-- using VBG partmod
 |   +-- them PRP dobj
 |   +-- get VB xcomp
 |       +-- to TO aux
 |       +-- list NN dobj
 |           +-- a DT det
 |           +-- ranked JJ amod
 |           +-- of IN prep
 |               +-- documents NNS pobj
 +-- . . punct

15
Input: query term numbers to generate snippets .
Parse:
term NN ROOT
 +-- query NN nsubj
 +-- numbers NNS dobj
 +-- generate VB xcomp
 |   +-- to TO aux
 |   +-- snippets NNS dobj
 +-- . . punct

16
Input: each document to construct the results page .
Parse:
document NN ROOT
 +-- each DT det
 +-- construct VB infmod
 |   +-- to TO aux
 |   +-- page NN dobj
 |       +-- the DT det
 |       +-- results NNS nn
 +-- . . punct

17
Input: IN A document broken into one sentence per line , and a sequence of query terms .
Parse:
IN IN ROOT
 +-- document NN pobj
 |   +-- A DT det
 |   +-- broken VBN partmod
 |       +-- into IN prep
 |           +-- sentence NN pobj
 |               +-- one CD num
 |               +-- per IN prep
 |               |   +-- line NN pobj
 |               +-- , , punct
 |               +-- and CC cc
 |               +-- sequence NN conj
 |                   +-- a DT det
 |                   +-- of IN prep
 |                       +-- terms NNS pobj
 |                           +-- query NN nn
 +-- . . punct

18
Input: 1 For each line of the text , L = -LRB- w1 , w2 , .
Parse:
1 CD ROOT
 +-- For IN prep
 |   +-- line NN pobj
 |       +-- each DT det
 |       +-- of IN prep
 |           +-- text NN pobj
 |               +-- the DT det
 |               +-- , , punct
 |               +-- L NNP appos
 +-- = SYM prep
 |   +-- w2 CD dep
 |       +-- -LRB- -LRB- punct
 |       +-- w1 CD num
 |       +-- , , punct
 +-- , , punct
 +-- . . punct

19
Input: .
Parse:
. . ROOT

20
Input: .
Parse:
. . ROOT

21
Input: , wm -RRB- 2 Let h be 1 if L is a heading , 0 otherwise .
Parse:
Let VB ROOT
 +-- , , punct
 +-- wm NFP punct
 +-- -RRB- -RRB- punct
 +-- 2 CD nsubj
 +-- 1 CD xcomp
 |   +-- h TO aux
 |   +-- be VB cop
 +-- heading NN advcl
 |   +-- if IN mark
 |   +-- L NN nsubj
 |   +-- is VBZ cop
 |   +-- a DT det
 |   +-- , , punct
 |   +-- 0 NFP punct
 |   +-- otherwise RB advmod
 +-- . . punct

22
Input: 3 Let be 2 if L is the first line of a document , 1 if it is the second line , 0 otherwise .
Parse:
line NN ROOT
 +-- 3 LS dep
 +-- Let VB dep
 |   +-- 2 CD ccomp
 |       +-- be VB cop
 +-- line NN advcl
 |   +-- if IN mark
 |   +-- L NNP nsubj
 |   +-- is VBZ cop
 |   +-- the DT det
 |   +-- first JJ amod
 |   +-- of IN prep
 |       +-- document NN pobj
 |           +-- a DT det
 +-- , , punct
 +-- 1 CD dep
 +-- if IN mark
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- the DT det
 +-- second JJ amod
 +-- 0 NFP punct
 +-- otherwise RB dep
 +-- . . punct

23
Input: 4 Let c be the number of wi that are query terms , counting repetitions .
Parse:
Let VB ROOT
 +-- 4 LS nsubj
 +-- number NN ccomp
 |   +-- c PRP nsubj
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- wi NN pobj
 |   +-- terms NNS rcmod
 |   |   +-- that WDT nsubj
 |   |   +-- are VBP cop
 |   |   +-- query NN nn
 |   +-- , , punct
 |   +-- counting VBG partmod
 |       +-- repetitions NNS dobj
 +-- . . punct

24
Input: 5 Let d be the number of distinct query terms that match some wi .
Parse:
Let VB ROOT
 +-- 5 LS nsubj
 +-- number NN ccomp
 |   +-- d PRP nsubj
 |   +-- be VB cop
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- terms NNS pobj
 |           +-- distinct JJ amod
 |           +-- query NN nn
 |           +-- match VBP rcmod
 |               +-- that WDT nsubj
 |               +-- wi NN dobj
 |                   +-- some DT det
 +-- . . punct

25
Input: 6 Identify the longest contiguous run of query terms in L , say wj .
Parse:
say VBP ROOT
 +-- Identify VB ccomp
 |   +-- 6 CD nsubj
 |   +-- run NN dobj
 |       +-- the DT det
 |       +-- contiguous JJ amod
 |       |   +-- longest RBS advmod
 |       +-- of IN prep
 |       |   +-- terms NNS pobj
 |       |       +-- query NN nn
 |       +-- in IN prep
 |           +-- L NNP pobj
 +-- , , punct
 +-- wj UH nsubj
 +-- . . punct

26
Input: .
Parse:
. . ROOT

27
Input: .
Parse:
. . ROOT

28
Input: wj+k .
Parse:
wj+k UH ROOT
 +-- . . punct

29
Input: 7 Use a weighted combination of c , d , k , h and to derive a score s .
Parse:
Use VB ROOT
 +-- 7 CD nsubj
 +-- combination NN dobj
 |   +-- a DT det
 |   +-- weighted VBN amod
 |   +-- of IN prep
 |       +-- c NN pobj
 |           +-- , , punct
 |           +-- d NN conj
 |           +-- k CD conj
 |           +-- h NN conj
 |           +-- and CC cc
 +-- derive VB xcomp
 |   +-- to TO aux
 |   +-- score NN dobj
 |       +-- a DT det
 |       +-- s POS possessive
 +-- . . punct

30
Input: 8 Insert L into a max heap using s as the key .
Parse:
L NNP ROOT
 +-- 8 CD num
 +-- Insert NNP nn
 +-- into IN prep
 |   +-- heap NN pobj
 |       +-- a DT det
 |       +-- max NN nn
 |       +-- using VBG partmod
 |           +-- s PRP dobj
 |           +-- as IN prep
 |               +-- key NN pobj
 |                   +-- the DT det
 +-- . . punct

31
Input: OUT Remove the number of sentences required from the heap to form the summary .
Parse:
Remove VB ROOT
 +-- OUT NNP nsubj
 +-- number NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- sentences NNS pobj
 |           +-- required VBN partmod
 |               +-- from IN prep
 |                   +-- heap NN pobj
 |                       +-- the DT det
 +-- form VB xcomp
 |   +-- to TO aux
 |   +-- summary NN dobj
 |       +-- the DT det
 +-- . . punct

32
Input: Figure 2
Parse:
Figure NN ROOT
 +-- 2 CD num
