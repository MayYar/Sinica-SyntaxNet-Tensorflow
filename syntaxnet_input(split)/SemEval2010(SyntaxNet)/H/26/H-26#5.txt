
1
Input: For each dataset in Table 5 , we performed 50 trials .
Parse:
performed VBD ROOT
 +-- For IN prep
 |   +-- dataset NN pobj
 |       +-- each DT det
 |       +-- in IN prep
 |           +-- Table NNP pobj
 |               +-- 5 CD num
 +-- , , punct
 +-- we PRP nsubj
 +-- trials NNS dobj
 |   +-- 50 CD num
 +-- . . punct

2
Input: For each trial , we train on 10 randomly selected queries , and select another 5 queries at random for a validation set .
Parse:
train VBP ROOT
 +-- For IN prep
 |   +-- trial NN pobj
 |       +-- each DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- on IN prep
 |   +-- queries NNS pobj
 |       +-- 10 CD num
 |       +-- selected VBN amod
 |           +-- randomly RB advmod
 +-- and CC cc
 +-- select VB conj
 |   +-- queries NNS dobj
 |       +-- another DT det
 |       +-- 5 CD num
 |       +-- at IN prep
 |       |   +-- random JJ pobj
 |       +-- for IN prep
 |           +-- validation NN pobj
 |               +-- a DT det
 |               +-- set VBN partmod
 +-- . . punct

3
Input: Models were trained using a wide range of C values .
Parse:
trained VBN ROOT
 +-- Models NNS nsubjpass
 +-- were VBD auxpass
 +-- using VBG xcomp
 |   +-- range NN dobj
 |       +-- a DT det
 |       +-- wide JJ amod
 |       +-- of IN prep
 |           +-- values NNS pobj
 |               +-- C NNP nn
 +-- . . punct

4
Input: The model which performed best on the validation set was selected and tested on the remaining 35 queries .
Parse:
selected VBN ROOT
 +-- model NN nsubjpass
 |   +-- The DT det
 |   +-- performed VBD rcmod
 |       +-- which WDT nsubj
 |       +-- best RBS advmod
 |       +-- on IN prep
 |           +-- set NN pobj
 |               +-- the DT det
 |               +-- validation NN nn
 +-- was VBD auxpass
 +-- and CC cc
 +-- tested VBN conj
 |   +-- on IN prep
 |       +-- queries NNS pobj
 |           +-- the DT det
 |           +-- remaining VBG amod
 |           +-- 35 CD num
 +-- . . punct

5
Input: All queries were selected to be in the training , validation and test sets the same number of times .
Parse:
selected VBN ROOT
 +-- queries NNS nsubjpass
 |   +-- All DT det
 +-- were VBD auxpass
 +-- number NN xcomp
 |   +-- to TO aux
 |   +-- be VB cop
 |   +-- in IN prep
 |   |   +-- sets VBZ pobj
 |   |       +-- the DT det
 |   |       +-- training NN nn
 |   |           +-- , , punct
 |   |           +-- validation NN conj
 |   |           +-- and CC cc
 |   |           +-- test NN conj
 |   +-- the DT det
 |   +-- same JJ amod
 |   +-- of IN prep
 |       +-- times NNS pobj
 +-- . . punct

6
Input: Using this setup , we performed the same experiments while using our method -LRB- SVM ? map -RRB- , an SVM optimizing for ROCArea -LRB- SVM ? roc -RRB- -LRB- 13 -RRB- , and a conventional classification SVM -LRB- SVMacc -RRB- -LRB- 20 -RRB- .
Parse:
performed VBD ROOT
 +-- Using VBG partmod
 |   +-- setup NN dobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- experiments NNS dobj
 |   +-- the DT det
 |   +-- same JJ amod
 +-- using VBG advcl
 |   +-- while IN mark
 |   +-- method NN dobj
 |       +-- our PRP$ poss
 |       +-- -LRB- -LRB- punct
 |       +-- SVM UH dep
 |       |   +-- ? . punct
 |       |   +-- map NN dep
 |       +-- -RRB- -RRB- punct
 |       +-- , , punct
 |       +-- optimizing VBG conj
 |       |   +-- an DT det
 |       |   +-- SVM NN nn
 |       |   +-- for IN prep
 |       |       +-- ROCArea NNP pobj
 |       |           +-- -LRB- -LRB- punct
 |       |           +-- SVM UH dep
 |       |           |   +-- ? . punct
 |       |           |   +-- roc NN dep
 |       |           +-- -RRB- -RRB- punct
 |       |           +-- 13 CD dep
 |       +-- and CC cc
 |       +-- SVM NNP conj
 |           +-- a DT det
 |           +-- conventional JJ amod
 |           +-- classification NN nn
 |           +-- -LRB- -LRB- punct
 |           +-- SVMacc NNP dep
 |           +-- -RRB- -RRB- punct
 |           +-- 20 CD dep
 +-- . . punct

7
Input: All SVM methods used a linear kernel .
Parse:
used VBD ROOT
 +-- methods NNS nsubj
 |   +-- All DT det
 |   +-- SVM NFP nn
 +-- kernel NN dobj
 |   +-- a DT det
 |   +-- linear JJ amod
 +-- . . punct

8
Input: We reported the average performance of all models over the 50 trials .
Parse:
reported VBD ROOT
 +-- We PRP nsubj
 +-- performance NN dobj
 |   +-- the DT det
 |   +-- average JJ amod
 |   +-- of IN prep
 |   |   +-- models NNS pobj
 |   |       +-- all DT det
 |   +-- over IN prep
 |       +-- trials NNS pobj
 |           +-- the DT det
 |           +-- 50 CD num
 +-- . . punct

9
Input: 5.1 Comparison with Base Functions In analyzing our results , the first question to answer is , can SVM ? map learn a model which outperforms the best base TREC 9 TREC 10 Model MAP W L MAP W L SVM ? map 0.290 0.287Best Func .
Parse:
Comparison NNP ROOT
 +-- 5.1 CD num
 +-- with IN prep
 |   +-- Functions NNS pobj
 |       +-- Base NNP nn
 +-- In IN prep
 |   +-- analyzing VBG pcomp
 |       +-- results NNS dobj
 |           +-- our PRP$ poss
 +-- , , punct
 +-- is VBZ dep
 |   +-- question NN nsubj
 |       +-- the DT det
 |       +-- first JJ amod
 |       +-- answer VB infmod
 |           +-- to TO aux
 +-- SVM VB dep
 |   +-- can MD aux
 +-- ? , punct
 +-- learn VB dep
 |   +-- map NN nsubj
 |   +-- model NN dobj
 |       +-- a DT det
 |       +-- outperforms VBZ rcmod
 |           +-- which WDT nsubj
 |           +-- base NN dobj
 |               +-- the DT det
 |               +-- best JJS amod
 |               +-- SVM NN dep
 |                   +-- TREC NNP nn
 |                   +-- L NNP nn
 |                       +-- 9 CD num
 |                       +-- TREC NNP nn
 |                       |   +-- 10 CD num
 |                       +-- L NNP nn
 |                       |   +-- Model NNP nn
 |                       |   +-- MAP NNP nn
 |                       |   +-- W NNP nn
 |                       +-- MAP NNP nn
 |                       +-- W NNP nn
 +-- ? . punct
 +-- map NN dep
 |   +-- Func NNP dobj
 |       +-- 0.287Best CD num
 |           +-- 0.290 CD number
 +-- . . punct

10
Input: 0.280 28 22 0.283 29 21 2nd Best 0.269 30 20 0.251 36 14 ** 3rd Best 0.266 30 20 0.233 36 14 ** Table 7
Parse:
0.280 CD ROOT
 +-- 0.283 CD dep
     +-- 22 CD num
     |   +-- 28 CD number
     +-- 2nd JJ dep
         +-- 21 CD num
         |   +-- 29 CD number
         +-- Best JJS prep
             +-- 0.269 CD dep
                 +-- 20 CD dep
                     +-- 30 CD number
                     +-- 0.251 CD dep
                         +-- 36 CD prep
                             +-- ** $ dep
                                 +-- 14 CD num
                                 +-- 3rd JJ prep
                                     +-- Best JJS dep
                                         +-- 0.266 CD dep
                                             +-- 20 CD dep
                                                 +-- 30 CD number
                                                 +-- 0.233 CD prep
                                                     +-- 14 CD dep
                                                         +-- 36 CD num
                                                         +-- ** NFP prep
                                                             +-- Table NNP dep
                                                                 +-- 7 CD num

11
Input: 0.280 27 23 0.283 31 19 2nd Best 0.269 30 20 0.251 36 14 ** 3rd Best 0.266 30 20 0.233 35 15 ** Table 8
Parse:
0.280 CD ROOT
 +-- 0.283 CD dep
     +-- 23 CD num
     |   +-- 27 CD number
     +-- Best JJS dep
     |   +-- 19 CD num
     |   |   +-- 31 CD number
     |   +-- 2nd JJ amod
     +-- 8 CD num
         +-- 0.233 CD number
         |   +-- 0.269 CD dep
         |   +-- 30 CD number
         |   +-- 20 CD number
         |   +-- 0.251 CD number
         |   +-- 36 CD number
         |   +-- ** $ dep
         |   |   +-- 14 CD num
         |   +-- 3rd JJ dep
         |   +-- Best JJS dep
         |   +-- 0.266 CD number
         +-- 35 CD number
         +-- 15 CD number
         +-- ** NFP dep
         +-- Table JJ amod

12
Input: -LRB- w o best -RRB- functions ? Table 6 presents the comparison of SVM ? map with the best Indri base functions .
Parse:
presents NNS ROOT
 +-- -LRB- -LRB- punct
 +-- w IN prep
 |   +-- functions NNS pobj
 |       +-- best JJS amod
 |       |   +-- o NNP advmod
 |       +-- -RRB- -RRB- punct
 +-- ? . punct
 +-- Table NNP nsubj
 |   +-- 6 CD num
 +-- comparison NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- SVM NNP pobj
 |           +-- ? , punct
 |           +-- map NN appos
 |               +-- with IN prep
 |                   +-- functions NNS pobj
 |                       +-- the DT det
 |                       +-- best JJS amod
 |                       +-- Indri NNP nn
 |                       +-- base NN nn
 +-- . . punct

13
Input: Each column group contains the macro averaged MAP performance of SVM ? map or a base function .
Parse:
contains VBZ ROOT
 +-- group NN nsubj
 |   +-- Each DT det
 |   +-- column NN nn
 +-- averaged VBD ccomp
 |   +-- macro NN nsubj
 |   |   +-- the DT det
 |   +-- performance NN dobj
 |       +-- MAP NNP nn
 |       +-- of IN prep
 |           +-- SVM NN pobj
 |               +-- ? , punct
 |               +-- map NN conj
 |               +-- or CC cc
 |               +-- function NN conj
 |                   +-- a DT det
 |                   +-- base NN amod
 +-- . . punct

14
Input: The W L columns show the number of queries where SVM ? map achieved a higher MAP score .
Parse:
show VBP ROOT
 +-- columns NNS nsubj
 |   +-- The DT det
 |   +-- L NNP nn
 |       +-- W NNP nn
 +-- number NN dobj
 |   +-- the DT det
 |   +-- of IN prep
 |       +-- queries NNS pobj
 |           +-- achieved VBD rcmod
 |               +-- where WRB advmod
 |               +-- SVM NNP nsubj
 |               |   +-- ? , punct
 |               |   +-- map NN appos
 |               +-- score NN dobj
 |                   +-- a DT det
 |                   +-- higher JJR amod
 |                   +-- MAP NNP nn
 +-- . . punct

15
Input: Significance tests were performed using the two tailed Wilcoxon signed rank test .
Parse:
performed VBN ROOT
 +-- tests NNS nsubjpass
 |   +-- Significance NN nn
 +-- were VBD auxpass
 +-- using VBG xcomp
 |   +-- test NN dobj
 |       +-- the DT det
 |       +-- two CD num
 |       +-- tailed VBN amod
 |       +-- Wilcoxon NNP nn
 |       +-- signed VBD amod
 |       +-- rank NN nn
 +-- . . punct

16
Input: Two stars indicate a significance level of 0.95 .
Parse:
indicate VBP ROOT
 +-- stars NNS nsubj
 |   +-- Two CD num
 +-- level NN dobj
 |   +-- a DT det
 |   +-- significance NN nn
 |   +-- of IN prep
 |       +-- 0.95 CD pobj
 +-- . . punct

17
Input: All tables displaying our experimental results are structured identically .
Parse:
structured VBN ROOT
 +-- tables NNS nsubjpass
 |   +-- All DT det
 |   +-- displaying VBG partmod
 |       +-- results NNS dobj
 |           +-- our PRP$ poss
 |           +-- experimental JJ amod
 +-- are VBP auxpass
 +-- identically RB advmod
 +-- . . punct

18
Input: Here , we find that SVM ? map significantly outperforms the best base functions .
Parse:
find VBP ROOT
 +-- Here RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- map VB ccomp
 |   +-- that DT mark
 |   +-- SVM NNP nsubj
 |   +-- ? , punct
 |   +-- significantly RB advmod
 |   +-- outperforms VBZ dep
 |       +-- functions NNS dobj
 |           +-- the DT det
 |           +-- best JJS amod
 |           +-- base NN nn
 +-- . . punct

19
Input: Table 7 shows the comparison when trained on TREC submissions .
Parse:
shows VBZ ROOT
 +-- 7 CD nsubj
 |   +-- Table JJ amod
 +-- comparison NN dobj
 |   +-- the DT det
 +-- trained VBN advcl
 |   +-- when WRB advmod
 |   +-- on IN prep
 |       +-- submissions NNS pobj
 |           +-- TREC NNP nn
 +-- . . punct

20
Input: While achieving a higher MAP score than the best base functions , the performance difference between SVM ? map the base functions is not significant .
Parse:
significant JJ ROOT
 +-- achieving VBG advcl
 |   +-- While IN mark
 |   +-- score NN dobj
 |       +-- a DT det
 |       +-- higher JJR amod
 |       +-- MAP NNP nn
 |       +-- than IN prep
 |           +-- functions NNS pobj
 |               +-- the DT det
 |               +-- best JJS amod
 |               +-- base NN nn
 +-- , , punct
 +-- difference NN nsubj
 |   +-- the DT det
 |   +-- performance NN nn
 |   +-- between IN prep
 |   |   +-- SVM NNP pobj
 |   +-- ? , punct
 |   +-- map VB dep
 |       +-- functions NNS dobj
 |           +-- the DT det
 |           +-- base NN nn
 +-- is VBZ cop
 +-- not RB neg
 +-- . . punct

21
Input: Given that many of these submissions use scoring functions which are carefully crafted to achieve high MAP , it is possible that the best performing submissions use techniques which subsume the techniques of the other submissions .
Parse:
possible JJ ROOT
 +-- Given VBN prep
 |   +-- use VBP pcomp
 |       +-- that IN mark
 |       +-- many JJ nsubj
 |       |   +-- of IN prep
 |       |       +-- submissions NNS pobj
 |       |           +-- these DT det
 |       +-- functions NNS dobj
 |           +-- scoring NN nn
 |           +-- crafted VBN rcmod
 |               +-- which WDT nsubjpass
 |               +-- are VBP auxpass
 |               +-- carefully RB advmod
 |               +-- achieve VB xcomp
 |                   +-- to TO aux
 |                   +-- MAP NNP dobj
 |                       +-- high JJ amod
 +-- , , punct
 +-- it PRP nsubj
 +-- is VBZ cop
 +-- use VBP ccomp
 |   +-- that IN mark
 |   +-- submissions NNS nsubj
 |   |   +-- the DT det
 |   |   +-- performing VBG amod
 |   |       +-- best JJS advmod
 |   +-- techniques NNS dobj
 |       +-- subsume VBP rcmod
 |           +-- which WDT nsubj
 |           +-- techniques NNS dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- submissions NNS pobj
 |                       +-- the DT det
 |                       +-- other JJ amod
 +-- . . punct

22
Input: As a result , SVM ? map would not be able to learn a hypothesis which can significantly out perform the best submission .
Parse:
able JJ ROOT
 +-- As IN prep
 |   +-- result NN pobj
 |       +-- a DT det
 +-- , , punct
 +-- map NN nsubj
 |   +-- SVM SYM nn
 |   +-- ? , punct
 +-- would MD aux
 +-- not RB neg
 +-- be VB cop
 +-- learn VB xcomp
 |   +-- to TO aux
 |   +-- hypothesis NN dobj
 |       +-- a DT det
 |       +-- perform VB rcmod
 |           +-- which WDT nsubj
 |           +-- can MD aux
 |           +-- out RB advmod
 |           |   +-- significantly RB advmod
 |           +-- submission NN dobj
 |               +-- the DT det
 |               +-- best JJS amod
 +-- . . punct

23
Input: Hence , we ran the same experiments using a modified dataset where the features computed using the best submission were removed .
Parse:
ran VBD ROOT
 +-- Hence RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- experiments NNS dobj
 |   +-- the DT det
 |   +-- same JJ amod
 +-- using VBG xcomp
 |   +-- dataset NN dobj
 |       +-- a DT det
 |       +-- modified VBN amod
 |       +-- removed VBN rcmod
 |           +-- where WRB advmod
 |           +-- features NNS nsubjpass
 |           |   +-- the DT det
 |           |   +-- computed VBD dep
 |           |   +-- using VBG partmod
 |           |       +-- submission NN dobj
 |           |           +-- the DT det
 |           |           +-- best JJS amod
 |           +-- were VBD auxpass
 +-- . . punct

24
Input: Table 8 shows the results -LRB- note that we are still comparing against the best submission though we are not using it for training -RRB- .
Parse:
shows VBZ ROOT
 +-- 8 CD nsubj
 |   +-- Table JJ amod
 +-- results NNS dobj
 |   +-- the DT det
 +-- note VB dep
 |   +-- -LRB- -LRB- punct
 |   +-- comparing VBG ccomp
 |   |   +-- that IN mark
 |   |   +-- we PRP nsubj
 |   |   +-- are VBP aux
 |   |   +-- still RB advmod
 |   |   +-- against IN prep
 |   |   |   +-- submission NN pobj
 |   |   |       +-- the DT det
 |   |   |       +-- best JJS amod
 |   |   +-- using VBG advcl
 |   |       +-- though IN mark
 |   |       +-- we PRP nsubj
 |   |       +-- are VBP aux
 |   |       +-- not RB neg
 |   |       +-- it PRP dobj
 |   |       +-- for IN prep
 |   |           +-- training NN pobj
 |   +-- -RRB- -RRB- punct
 +-- . . punct

25
Input: Notice that while the performance of SVM ? map degraded slightly , the performance was still comparable with that of the best submission .
Parse:
Notice NN ROOT
 +-- comparable JJ ccomp
 |   +-- that IN mark
 |   +-- degraded VBD advcl
 |   |   +-- while IN mark
 |   |   +-- performance NN nsubj
 |   |   |   +-- the DT det
 |   |   |   +-- of IN prep
 |   |   |       +-- map NN pobj
 |   |   |           +-- SVM NNP nn
 |   |   |           +-- ? , punct
 |   |   +-- slightly RB advmod
 |   +-- , , punct
 |   +-- performance NN nsubj
 |   |   +-- the DT det
 |   +-- was VBD cop
 |   +-- still RB advmod
 |   +-- with IN prep
 |       +-- that DT pobj
 |           +-- of IN prep
 |               +-- submission NN pobj
 |                   +-- the DT det
 |                   +-- best JJS amod
 +-- . . punct

26
Input: 5.2 Comparison w Previous SVM Methods The next question to answer is , does SVM ? map produce higher MAP scores than previous SVM methods ? Tables 9 and 10 present the results of SVM ? map , SVM ? roc , and SVMacc when trained on the Indri retrieval functions and TREC submissions , respectively .
Parse:
map VB ROOT
 +-- Comparison NNP dep
 |   +-- 5.2 CD num
 |   +-- w IN prep
 |   |   +-- Methods NNPS pobj
 |   |       +-- Previous JJ amod
 |   |       +-- SVM , nn
 |   +-- is VBZ dep
 |       +-- question NN nsubj
 |       |   +-- The DT det
 |       |   +-- next JJ amod
 |       |   +-- answer VB infmod
 |       |       +-- to TO aux
 |       +-- , , punct
 +-- does VBZ aux
 +-- SVM NNP nsubj
 +-- ? , punct
 +-- produce VB ccomp
 |   +-- scores NNS dobj
 |       +-- higher JJR amod
 |       +-- MAP NNP nn
 |       +-- than IN prep
 |       |   +-- methods NNS pobj
 |       |       +-- previous JJ amod
 |       |       +-- SVM SYM nn
 |       +-- ? . punct
 |       +-- present VBP rcmod
 |           +-- Tables NNS nsubj
 |           |   +-- 9 CD num
 |           |   +-- and CC cc
 |           |   +-- 10 CD conj
 |           +-- results NNS dobj
 |           |   +-- the DT det
 |           |   +-- of IN prep
 |           |       +-- map NN pobj
 |           |           +-- SVM NNP nn
 |           |           |   +-- ? , punct
 |           |           +-- , , punct
 |           |           +-- SVM UH conj
 |           |           +-- ? . punct
 |           |           +-- roc NN conj
 |           |           +-- and CC cc
 |           |           +-- SVMacc NNP conj
 |           +-- trained VBN advcl
 |           |   +-- when WRB advmod
 |           |   +-- on IN prep
 |           |       +-- functions NNS pobj
 |           |           +-- the DT det
 |           |           +-- Indri NNP nn
 |           |           +-- retrieval NN nn
 |           |           +-- and CC cc
 |           |           +-- submissions NNS conj
 |           |               +-- TREC NNP nn
 |           +-- , , punct
 |           +-- respectively RB advmod
 +-- . . punct

27
Input: Table 11 contains the corresponding results when trained on the TREC submissions without the best submission .
Parse:
contains VBZ ROOT
 +-- Table JJ nsubj
 |   +-- 11 CD num
 +-- results NNS dobj
 |   +-- the DT det
 |   +-- corresponding VBG amod
 |   +-- trained VBN rcmod
 |       +-- when WRB advmod
 |       +-- on IN prep
 |       |   +-- submissions NNS pobj
 |       |       +-- the DT det
 |       |       +-- TREC NNP nn
 |       +-- without IN prep
 |           +-- submission NN pobj
 |               +-- the DT det
 |               +-- best JJS amod
 +-- . . punct

28
Input: To start with , our results indicate that SVMacc was not competitive with SVM ? map and SVM ? roc , and at times underperformed dramatically .
Parse:
indicate VBP ROOT
 +-- start VB advcl
 |   +-- To TO aux
 |   +-- with IN advmod
 +-- , , punct
 +-- results NNS nsubj
 |   +-- our PRP$ poss
 +-- competitive JJ ccomp
 |   +-- that IN mark
 |   +-- SVMacc NN nsubj
 |   +-- was VBD cop
 |   +-- not RB neg
 |   +-- with IN prep
 |       +-- SVM NNP pobj
 |       |   +-- ? , punct
 |       |   +-- map NN conj
 |       |   +-- and CC cc
 |       |   +-- roc NN conj
 |       |       +-- SVM NNP nn
 |       |       +-- ? . punct
 |       +-- , , punct
 |       +-- and CC cc
 |       +-- at IN conj
 |           +-- times NNS pobj
 |               +-- underperformed VBN partmod
 |                   +-- dramatically RB advmod
 +-- . . punct

29
Input: As such , we tried several approaches to improve the performance of SVMacc .
Parse:
tried VBD ROOT
 +-- As IN prep
 |   +-- such JJ pobj
 +-- , , punct
 +-- we PRP nsubj
 +-- approaches NNS dobj
 |   +-- several JJ amod
 |   +-- improve VB infmod
 |       +-- to TO aux
 |       +-- performance NN dobj
 |           +-- the DT det
 |           +-- of IN prep
 |               +-- SVMacc NN pobj
 +-- . . punct

30
Input: 5.2.1 Alternate SVMacc Methods One issue which may cause SVMacc to underperform is the severe imbalance between relevant and non relevant docTREC 9 TREC 10 Model MAP W L MAP W L SVM ? map 0.242 0.236SVM ? roc 0.237 29 21 0.234 24 26 SVMacc 0.147 47 3 ** 0.155 47 3 ** SVMacc2 0.219 39 11 ** 0.207 43 7 ** SVMacc3 0.113 49 1 ** 0.153 45 5 ** SVMacc4 0.155 48 2 ** 0.155 48 2 ** Table 9
Parse:
imbalance NN ROOT
 +-- issue NN nsubj
 |   +-- 5.2.1 LS num
 |   +-- Alternate VB amod
 |   +-- Methods NNPS nn
 |   |   +-- SVMacc NNP nn
 |   |   +-- One CD num
 |   +-- cause VB rcmod
 |       +-- which WDT nsubj
 |       +-- may MD aux
 |       +-- underperform VB xcomp
 |           +-- SVMacc NNP nsubj
 |           +-- to TO aux
 +-- is VBZ cop
 +-- the DT det
 +-- severe JJ amod
 +-- between IN prep
 |   +-- SVM NN pobj
 |       +-- relevant JJ amod
 |       |   +-- and CC cc
 |       |   +-- relevant JJ conj
 |       |       +-- non FW advmod
 |       +-- L NNP nn
 |           +-- docTREC NNP nn
 |           |   +-- 9 CD num
 |           +-- TREC NNP nn
 |           +-- L NNP nn
 |           |   +-- Model NNP dep
 |           |   |   +-- 10 CD num
 |           |   +-- MAP NNP nn
 |           |   +-- W NNP nn
 |           +-- MAP NNP nn
 |           +-- W NNP nn
 +-- ? . punct
 +-- 0.219 CD dep
     +-- map VB dep
     |   +-- 0.236SVM CD dobj
     |   |   +-- 0.242 CD num
     |   +-- ? . punct
     +-- ** NFP dep
     +-- 47 CD number
     +-- 3 CD number
     +-- SVMacc2 CD number
     +-- ** NFP prep
         +-- 9 CD dep
             +-- Table JJ amod

31
Input: The vast majority of the documents are not relevant .
Parse:
relevant JJ ROOT
 +-- majority NN nsubj
 |   +-- The DT det
 |   +-- vast JJ amod
 |   +-- of IN prep
 |       +-- documents NNS pobj
 |           +-- the DT det
 +-- are VBP cop
 +-- not RB neg
 +-- . . punct

32
Input: SVMacc2 addresses this problem by assigning more penalty to false negative errors .
Parse:
addresses VBZ ROOT
 +-- SVMacc2 CD nsubj
 +-- problem NN dobj
 |   +-- this DT det
 +-- by IN prep
 |   +-- assigning VBG pcomp
 |       +-- penalty NN dobj
 |       |   +-- more JJR amod
 |       +-- to TO prep
 |           +-- errors NNS pobj
 |               +-- false JJ amod
 |               +-- negative JJ amod
 +-- . . punct

33
Input: For each dataset , the ratio of the false negative to false positive penalties is equal to the ratio of the number non relevant and relevant documents in that dataset .
Parse:
equal JJ ROOT
 +-- For IN prep
 |   +-- dataset NN pobj
 |       +-- each DT det
 +-- , , punct
 +-- ratio NN nsubj
 |   +-- the DT det
 |   +-- of IN prep
 |   |   +-- false JJ pobj
 |   |       +-- the DT det
 |   +-- negative JJ amod
 |       +-- to IN prep
 |           +-- penalties NNS pobj
 |               +-- false JJ amod
 |               +-- positive JJ amod
 +-- is VBZ cop
 +-- to IN prep
 |   +-- ratio NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |       |   +-- number NN pobj
 |       |       +-- the DT det
 |       |       +-- non FW dep
 |       |       +-- relevant JJ amod
 |       +-- and CC cc
 |       +-- documents NNS conj
 |           +-- relevant JJ amod
 |           +-- in IN prep
 |               +-- dataset NN pobj
 |                   +-- that DT det
 +-- . . punct

34
Input: Tables 9 , 10 and 11 indicate that SVMacc2 still performs significantly worse than SVM ? map .
Parse:
indicate VBP ROOT
 +-- Tables NNS nsubj
 |   +-- 9 CD num
 |   +-- , , punct
 |   +-- 10 CD num
 |   +-- and CC cc
 |   +-- 11 CD conj
 +-- performs VBZ ccomp
 |   +-- that IN mark
 |   +-- SVMacc2 LS nsubj
 |   +-- still RB advmod
 |   +-- worse JJR dep
 |   |   +-- significantly RB advmod
 |   |   +-- than IN prep
 |   |       +-- SVM NNP pobj
 |   +-- ? , punct
 |   +-- map NN dobj
 +-- . . punct

35
Input: Another possible issue is that SVMacc attempts to find just one discriminating threshold b that is query invariant .
Parse:
is VBZ ROOT
 +-- issue NN nsubj
 |   +-- Another DT det
 |   +-- possible JJ amod
 +-- find VB ccomp
 |   +-- that IN mark
 |   +-- attempts NNS nsubj
 |   |   +-- SVMacc NNP nn
 |   +-- to TO aux
 |   +-- threshold NN dobj
 |   |   +-- just RB advmod
 |   |   +-- one CD num
 |   |   +-- discriminating VBG amod
 |   +-- b NFP punct
 |   +-- invariant JJ dep
 |       +-- that WDT nsubj
 |       +-- is VBZ cop
 |       +-- query NN nn
 +-- . . punct

36
Input: It may be that different queries require different values of -LRB- when one does not exist -RRB- may be detrimental .
Parse:
be VB ROOT
 +-- It PRP nsubj
 +-- may MD aux
 +-- detrimental JJ ccomp
 |   +-- require VBP csubj
 |   |   +-- that IN mark
 |   |   +-- queries NNS nsubj
 |   |   |   +-- different JJ amod
 |   |   +-- values NNS dobj
 |   |       +-- different JJ amod
 |   |       +-- of IN prep
 |   |           +-- exist VB pcomp
 |   |               +-- -LRB- -LRB- punct
 |   |               +-- when WRB advmod
 |   |               +-- one PRP nsubj
 |   |               +-- does VBZ aux
 |   |               +-- not RB neg
 |   |               +-- -RRB- -RRB- punct
 |   +-- may MD aux
 |   +-- be VB cop
 +-- . . punct

37
Input: We took two approaches to address this issue .
Parse:
took VBD ROOT
 +-- We PRP nsubj
 +-- approaches NNS dobj
 |   +-- two CD num
 |   +-- address VB infmod
 |       +-- to TO aux
 |       +-- issue NN dobj
 |           +-- this DT det
 +-- . . punct

38
Input: The first method , SVMacc3 , converts the retrieval function scores into percentiles .
Parse:
converts VBZ ROOT
 +-- method NN nsubj
 |   +-- The DT det
 |   +-- first JJ amod
 |   +-- , , punct
 |   +-- SVMacc3 CD appos
 +-- scores VBZ ccomp
 |   +-- function NN nsubj
 |   |   +-- the DT det
 |   |   +-- retrieval NN nn
 |   +-- into IN prep
 |       +-- percentiles NNS pobj
 +-- . . punct
