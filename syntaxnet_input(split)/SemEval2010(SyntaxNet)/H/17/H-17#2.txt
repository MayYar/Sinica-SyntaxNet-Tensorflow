
1
Input: The amount of information on the Web is growing at a prodigious rate -LRB- 24 -RRB- .
Parse:
growing VBG ROOT
 +-- amount NN nsubj
 |   +-- The DT det
 |   +-- of IN prep
 |   |   +-- information NN pobj
 |   +-- on IN prep
 |       +-- Web NN pobj
 |           +-- the DT det
 +-- is VBZ aux
 +-- at IN prep
 |   +-- rate NN pobj
 |       +-- a DT det
 |       +-- prodigious JJ amod
 |       +-- -LRB- -LRB- punct
 |       +-- 24 CD dep
 |       +-- -RRB- -RRB- punct
 +-- . . punct

2
Input: According to a recent study -LRB- 13 -RRB- , it is estimated that the Web currently consists of more than 11 billion pages .
Parse:
estimated VBN ROOT
 +-- According VBG prep
 |   +-- to IN pcomp
 |       +-- study NN pobj
 |           +-- a DT det
 |           +-- recent JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- 13 CD dep
 |           +-- -RRB- -RRB- punct
 +-- , , punct
 +-- it PRP nsubjpass
 +-- is VBZ auxpass
 +-- consists VBZ ccomp
 |   +-- that IN mark
 |   +-- Web NN nsubj
 |   |   +-- the DT det
 |   +-- currently RB advmod
 |   +-- of IN prep
 |       +-- pages NNS pobj
 |           +-- billion CD num
 |               +-- than IN quantmod
 |               |   +-- more JJR mwe
 |               +-- 11 CD number
 +-- . . punct

3
Input: Due to this immense amount of available information , the users are becoming more and more dependent on the Web search engines for locating relevant information on the Web .
Parse:
becoming VBG ROOT
 +-- to IN prep
 |   +-- Due IN mwe
 |   +-- amount NN pobj
 |       +-- this DT det
 |       +-- immense JJ amod
 |       +-- of IN prep
 |           +-- information NN pobj
 |               +-- available JJ amod
 +-- , , punct
 +-- users NNS nsubj
 |   +-- the DT det
 +-- are VBP aux
 +-- dependent JJ acomp
 |   +-- more RBR advmod
 |   |   +-- and CC cc
 |   |   +-- more RBR conj
 |   +-- on IN prep
 |       +-- engines NNS pobj
 |           +-- the DT det
 |           +-- search NN nn
 |               +-- Web NN nn
 +-- for IN prep
 |   +-- locating VBG pcomp
 |       +-- information NN dobj
 |       |   +-- relevant JJ amod
 |       +-- on IN prep
 |           +-- Web NN pobj
 |               +-- the DT det
 +-- . . punct

4
Input: Typically , the Web search engines , similar to other information retrieval applications , utilize a data structure called inverted index .
Parse:
utilize VB ROOT
 +-- Typically RB advmod
 +-- , , punct
 +-- engines NNS nsubj
 |   +-- the DT det
 |   +-- search NN nn
 |   |   +-- Web NN nn
 |   +-- , , punct
 |   +-- similar JJ amod
 |       +-- to IN prep
 |           +-- applications NNS pobj
 |               +-- other JJ amod
 |               +-- retrieval NN nn
 |                   +-- information NN nn
 +-- structure NN dobj
 |   +-- a DT det
 |   +-- data NN nn
 |   +-- called VBN partmod
 |       +-- index NN dep
 |           +-- inverted VBN amod
 +-- . . punct

5
Input: An inverted index provides for the efficient retrieval of the documents -LRB- or Web pages -RRB- that contain a particular keyword .
Parse:
provides VBZ ROOT
 +-- index NN nsubj
 |   +-- An DT det
 |   +-- inverted JJ amod
 +-- for IN prep
 |   +-- retrieval NN pobj
 |       +-- the DT det
 |       +-- efficient JJ amod
 |       +-- of IN prep
 |           +-- documents NNS pobj
 |               +-- the DT det
 |               +-- -LRB- -LRB- punct
 |               +-- or CC cc
 |               +-- pages NNS conj
 |               |   +-- Web NN nn
 |               +-- -RRB- -RRB- punct
 |               +-- contain VBP rcmod
 |                   +-- that WDT nsubj
 |                   +-- keyword NN dobj
 |                       +-- a DT det
 |                       +-- particular JJ amod
 +-- . . punct

6
Input: In most cases , a query that the user issues may have thousands or even millions of matching documents .
Parse:
query NN ROOT
 +-- In IN prep
 |   +-- cases NNS pobj
 |       +-- most JJS amod
 +-- , , punct
 +-- a DT det
 +-- have VB ccomp
 |   +-- that IN mark
 |   +-- issues NNS nsubj
 |   |   +-- the DT det
 |   |   +-- user NN nn
 |   +-- may MD aux
 |   +-- thousands NNS dobj
 |       +-- or CC cc
 |       +-- millions NNS conj
 |       |   +-- even RB advmod
 |       +-- of IN prep
 |           +-- documents NNS pobj
 |               +-- matching VBG amod
 +-- . . punct

7
Input: In order to avoid overwhelming the users with a huge amount of results , the search engines present the results in batches of 10 to 20 relevant documents .
Parse:
present VBP ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- avoid VB infmod
 |           +-- to TO aux
 |           +-- overwhelming VBG xcomp
 |               +-- users NNS dobj
 |               |   +-- the DT det
 |               +-- with IN prep
 |                   +-- amount NN pobj
 |                       +-- a DT det
 |                       +-- huge JJ amod
 |                       +-- of IN prep
 |                           +-- results NNS pobj
 +-- , , punct
 +-- engines NNS nsubj
 |   +-- the DT det
 |   +-- search NN nn
 +-- results NNS dobj
 |   +-- the DT det
 |   +-- in IN prep
 |       +-- batches NNS pobj
 |           +-- of IN prep
 |               +-- documents NNS pobj
 |                   +-- 20 CD num
 |                   |   +-- 10 CD number
 |                   |   +-- to IN quantmod
 |                   +-- relevant JJ amod
 +-- . . punct

8
Input: The user then looks through the first batch of results and , if she doesn '' t find the answer she is looking for , she may potentially request to view the next batch or decide to issue a new query .
Parse:
looks VBZ ROOT
 +-- user NN nsubj
 |   +-- The DT det
 +-- then RB advmod
 +-- through IN prep
 |   +-- batch NN pobj
 |       +-- the DT det
 |       +-- first JJ amod
 |       +-- of IN prep
 |           +-- results NNS pobj
 +-- and CC cc
 +-- , , punct
 +-- request VB conj
 |   +-- doesn VBD advcl
 |   |   +-- if IN mark
 |   |   +-- she PRP nsubj
 |   |   +-- '' '' punct
 |   |   +-- find VB xcomp
 |   |       +-- t TO aux
 |   |       +-- answer NN dobj
 |   |           +-- the DT det
 |   |           +-- looking VBG rcmod
 |   |               +-- she PRP nsubj
 |   |               +-- is VBZ aux
 |   |               +-- for IN prep
 |   +-- , , punct
 |   +-- she PRP nsubj
 |   +-- may MD aux
 |   +-- potentially RB advmod
 |   +-- view VB xcomp
 |       +-- to TO aux
 |       +-- batch NN dobj
 |       |   +-- the DT det
 |       |   +-- next JJ amod
 |       +-- or CC cc
 |       +-- decide VB conj
 |           +-- issue VB xcomp
 |               +-- to TO aux
 |               +-- query NN dobj
 |                   +-- a DT det
 |                   +-- new JJ amod
 +-- . . punct

9
Input: A recent study -LRB- 16 -RRB- indicated that approximately 80 % of the users examine at most the first 3 batches of the results .
Parse:
indicated VBD ROOT
 +-- study NN nsubj
 |   +-- A DT det
 |   +-- recent JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- 16 CD dep
 |   +-- -RRB- -RRB- punct
 +-- examine VBP ccomp
 |   +-- that IN mark
 |   +-- % NN nsubj
 |   |   +-- 80 CD num
 |   |   |   +-- approximately RB quantmod
 |   |   +-- of IN prep
 |   |       +-- users NNS pobj
 |   |           +-- the DT det
 |   +-- most RBS advmod
 |   |   +-- at IN advmod
 |   +-- batches NNS dobj
 |       +-- the DT det
 |       +-- first JJ amod
 |       +-- 3 CD num
 |       +-- of IN prep
 |           +-- results NNS pobj
 |               +-- the DT det
 +-- . . punct

10
Input: That is , 80 % of the users typically view at most 30 to 60 results for every query that they issue to a search engine .
Parse:
view VBP ROOT
 +-- is VBZ advmod
 |   +-- That DT advmod
 +-- , , punct
 +-- % NN nsubj
 |   +-- 80 CD num
 |   +-- of IN prep
 |       +-- users NNS pobj
 |           +-- the DT det
 +-- typically RB advmod
 +-- at IN prep
 |   +-- results NNS pobj
 |       +-- 60 CD num
 |           +-- most RBS quantmod
 |           +-- 30 CD number
 |           +-- to IN quantmod
 +-- for IN prep
 |   +-- query NN pobj
 |       +-- every DT det
 |       +-- issue VBP rcmod
 |           +-- that IN dobj
 |           +-- they PRP nsubj
 |           +-- to IN prep
 |               +-- engine NN pobj
 |                   +-- a DT det
 |                   +-- search NN nn
 +-- . . punct

11
Input: At the same time , given the size of the Web , the inverted index that the search engines maintain can grow very large .
Parse:
grow VB ROOT
 +-- At IN prep
 |   +-- time NN pobj
 |       +-- the DT det
 |       +-- same JJ amod
 +-- , , punct
 +-- given VBN prep
 |   +-- size NN dep
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- Web NN pobj
 |               +-- the DT det
 +-- index NN nsubj
 |   +-- the DT det
 |   +-- inverted JJ amod
 |   +-- maintain VBP rcmod
 |       +-- that IN dobj
 |       +-- engines NNS nsubj
 |           +-- the DT det
 |           +-- search NN nn
 +-- can MD aux
 +-- large JJ acomp
 |   +-- very RB advmod
 +-- . . punct

12
Input: Since the users are interested in a small number of results -LRB- and thus are viewing a small portion of the index for every query that they issue -RRB- , using an index that is capable of returning all the results for a query may constitute a significant waste in terms of time , storage space and computational resources , which is bound to get worse as the Web grows larger over time -LRB- 24 -RRB- .
Parse:
constitute VB ROOT
 +-- interested JJ advcl
 |   +-- Since IN mark
 |   +-- users NNS nsubj
 |   |   +-- the DT det
 |   +-- are VBP cop
 |   +-- in IN prep
 |   |   +-- number NN pobj
 |   |       +-- a DT det
 |   |       +-- small JJ amod
 |   |       +-- of IN prep
 |   |           +-- results NNS pobj
 |   +-- -LRB- -LRB- punct
 |   +-- and CC cc
 |   +-- thus RB advmod
 |   +-- viewing VBG conj
 |   |   +-- are VBP aux
 |   |   +-- portion NN dobj
 |   |   |   +-- a DT det
 |   |   |   +-- small JJ amod
 |   |   |   +-- of IN prep
 |   |   |       +-- index NN pobj
 |   |   |           +-- the DT det
 |   |   +-- for IN prep
 |   |       +-- query NN pobj
 |   |           +-- every DT det
 |   |           +-- issue VBP rcmod
 |   |               +-- that IN dobj
 |   |               +-- they PRP nsubj
 |   +-- -RRB- -RRB- punct
 +-- , , punct
 +-- using VBG csubj
 |   +-- index NN dobj
 |       +-- an DT det
 |       +-- capable JJ rcmod
 |           +-- that WDT nsubj
 |           +-- is VBZ cop
 |           +-- of IN prep
 |               +-- returning VBG pcomp
 |                   +-- results NNS dobj
 |                       +-- all PDT predet
 |                       +-- the DT det
 |                       +-- for IN prep
 |                           +-- query NN pobj
 |                               +-- a DT det
 +-- may MD aux
 +-- waste NN dobj
 |   +-- a DT det
 |   +-- significant JJ amod
 +-- in IN prep
 |   +-- terms NNS pobj
 |       +-- of IN prep
 |           +-- time NN pobj
 +-- space NN dobj
 |   +-- storage NN nn
 |   +-- and CC cc
 |   +-- resources NNS conj
 |   |   +-- computational JJ amod
 |   +-- , , punct
 |   +-- bound VBN rcmod
 |       +-- which WDT nsubjpass
 |       +-- is VBZ auxpass
 |       +-- worse JJR xcomp
 |           +-- to TO aux
 |           +-- get VB dep
 |           +-- grows VBZ advcl
 |               +-- as IN mark
 |               +-- Web NN nsubj
 |               |   +-- the DT det
 |               +-- larger JJR advmod
 |               +-- over IN prep
 |                   +-- time NN pobj
 |                       +-- -LRB- -LRB- punct
 |                       +-- 24 CD dep
 |                       +-- -RRB- -RRB- punct
 +-- . . punct

13
Input: One natural solution to this problem is to create a small index on a subset of the documents that are likely to be returned as the top results -LRB- by using , for example , the pruning techniques in -LRB- 7 , 20 -RRB- -RRB- and compute the first batch of answers using the pruned index .
Parse:
is VBZ ROOT
 +-- solution NN nsubj
 |   +-- One CD num
 |   +-- natural JJ amod
 |   +-- to IN prep
 |       +-- problem NN pobj
 |           +-- this DT det
 +-- create VB xcomp
 |   +-- to TO aux
 |   +-- index NN dobj
 |   |   +-- a DT det
 |   |   +-- small JJ amod
 |   +-- on IN prep
 |   |   +-- subset NN pobj
 |   |       +-- a DT det
 |   |       +-- of IN prep
 |   |           +-- documents NNS pobj
 |   |               +-- the DT det
 |   |               +-- likely JJ rcmod
 |   |                   +-- that WDT nsubj
 |   |                   +-- are VBP cop
 |   |                   +-- returned VBN xcomp
 |   |                       +-- to TO aux
 |   |                       +-- be VB auxpass
 |   |                       +-- as IN prep
 |   |                           +-- results NNS pobj
 |   |                               +-- the DT det
 |   |                               +-- top JJ amod
 |   +-- -LRB- -LRB- punct
 |   +-- by IN prep
 |   |   +-- using VBG pcomp
 |   |       +-- , , punct
 |   |       +-- for IN prep
 |   |       |   +-- example NN pobj
 |   |       +-- techniques NNS dobj
 |   |           +-- the DT det
 |   |           +-- pruning VBG nn
 |   |           +-- in IN prep
 |   |               +-- 7 CD pobj
 |   |                   +-- -LRB- -LRB- punct
 |   |                   +-- , , punct
 |   |                   +-- 20 CD num
 |   |                   +-- -RRB- -RRB- punct
 |   +-- -RRB- -RRB- punct
 |   +-- and CC cc
 |   +-- compute VB conj
 |       +-- batch NN dobj
 |           +-- the DT det
 |           +-- first JJ amod
 |           +-- of IN prep
 |               +-- answers NNS pobj
 |                   +-- using VBG partmod
 |                       +-- index NN dobj
 |                           +-- the DT det
 |                           +-- pruned JJ amod
 +-- . . punct

14
Input: While this approach has been shown to give significant improvement in performance , it also leads to noticeable degradation in the quality of the search results , because the top answers are computed only from the pruned index -LRB- 7 , 20 -RRB- .
Parse:
leads VBZ ROOT
 +-- shown VBN advcl
 |   +-- While IN mark
 |   +-- approach NN nsubjpass
 |   |   +-- this DT det
 |   +-- has VBZ aux
 |   +-- been VBN auxpass
 |   +-- give VB xcomp
 |       +-- to TO aux
 |       +-- improvement NN dobj
 |       |   +-- significant JJ amod
 |       +-- in IN prep
 |           +-- performance NN pobj
 +-- , , punct
 +-- it PRP nsubj
 +-- also RB advmod
 +-- to TO prep
 |   +-- degradation NN pobj
 |       +-- noticeable JJ amod
 |       +-- in IN prep
 |           +-- quality NN pobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- results NNS pobj
 |                       +-- the DT det
 |                       +-- search NN nn
 +-- computed VBN advcl
 |   +-- because IN mark
 |   +-- answers NNS nsubjpass
 |   |   +-- the DT det
 |   |   +-- top JJ amod
 |   +-- are VBP auxpass
 |   +-- from IN prep
 |       +-- only RB advmod
 |       +-- index NN pobj
 |           +-- the DT det
 |           +-- pruned JJ amod
 |           +-- -LRB- -LRB- punct
 |           +-- 7 CD dep
 |           |   +-- , , punct
 |           |   +-- 20 CD num
 |           +-- -RRB- -RRB- punct
 +-- . . punct

15
Input: That is , even if a page should be placed as the top matching page according to a search engine '' s ranking metric , the page may be placed behind the ones contained in the pruned index if the page did not become part of the pruned index for various reasons -LRB- 7 , 20 -RRB- .
Parse:
is VBZ ROOT
 +-- That DT nsubj
 +-- , , punct
 +-- placed VBN advcl
 |   +-- even RB advmod
 |   +-- if IN mark
 |   +-- page NN nsubjpass
 |   |   +-- a DT det
 |   +-- should MD aux
 |   +-- be VB auxpass
 |   +-- as IN prep
 |   |   +-- page NN pobj
 |   |       +-- the DT det
 |   |       +-- top JJ amod
 |   |       +-- matching NN nn
 |   +-- according VBG prep
 |       +-- to IN pcomp
 |           +-- metric JJ pobj
 |               +-- engine NN poss
 |               |   +-- a DT det
 |               |   +-- search NN nn
 |               |   +-- '' '' punct
 |               |   +-- s POS possessive
 |               +-- ranking VBG amod
 +-- placed VBN ccomp
 |   +-- page NN nsubjpass
 |   |   +-- the DT det
 |   +-- may MD aux
 |   +-- be VB auxpass
 |   +-- behind IN prep
 |   |   +-- ones NNS pobj
 |   |       +-- the DT det
 |   |       +-- contained VBN partmod
 |   |           +-- in IN prep
 |   |               +-- index NN pobj
 |   |                   +-- the DT det
 |   |                   +-- pruned JJ amod
 |   +-- part NN advcl
 |       +-- if IN mark
 |       +-- page NN nsubj
 |       |   +-- the DT det
 |       +-- did VBD aux
 |       +-- not RB neg
 |       +-- become VB cop
 |       +-- of IN prep
 |           +-- index NN pobj
 |               +-- the DT det
 |               +-- pruned VBN amod
 |               +-- for IN prep
 |               |   +-- reasons NNS pobj
 |               |       +-- various JJ amod
 |               +-- -LRB- -LRB- punct
 |               +-- 7 CD dep
 |               |   +-- , , punct
 |               |   +-- 20 CD num
 |               +-- -RRB- -RRB- punct
 +-- . . punct

16
Input: Given the fierce competition among search engines today this degradation is clearly undesirable and needs to be addressed if possible .
Parse:
undesirable JJ ROOT
 +-- Given VBN prep
 |   +-- competition NN dep
 |       +-- the DT det
 |       +-- fierce JJ amod
 |       +-- among IN prep
 |       |   +-- engines NNS pobj
 |       |       +-- search NN nn
 |       +-- today NN dep
 +-- degradation NN nsubj
 |   +-- this DT det
 +-- is VBZ cop
 +-- clearly RB advmod
 +-- and CC cc
 +-- needs VBZ conj
 |   +-- addressed VBN xcomp
 |       +-- to TO aux
 |       +-- be VB auxpass
 |       +-- possible JJ advcl
 |           +-- if IN mark
 +-- . . punct

17
Input: In this paper , we study how we can avoid any degradation of search quality due to the above performance optimization while still realizing most of its benefit .
Parse:
study VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- avoid VB ccomp
 |   +-- how WRB advmod
 |   +-- we PRP nsubj
 |   +-- can MD aux
 |   +-- degradation NN dobj
 |   |   +-- any DT det
 |   |   +-- of IN prep
 |   |   |   +-- quality NN pobj
 |   |   |       +-- search NN nn
 |   |   +-- to IN prep
 |   |       +-- due IN mwe
 |   |       +-- optimization NN pobj
 |   |           +-- the DT det
 |   |           +-- performance NN nn
 |   |               +-- above JJ amod
 |   +-- while IN prep
 |       +-- realizing VBG pcomp
 |           +-- still RB advmod
 |           +-- most JJS dobj
 |               +-- of IN prep
 |                   +-- benefit NN pobj
 |                       +-- its PRP$ poss
 +-- . . punct

18
Input: That is , we present a number of simple -LRB- yet important -RRB- changes in the pruning techniques for creating the pruned index .
Parse:
present VBP ROOT
 +-- is VBZ advmod
 |   +-- That DT advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- number NN dobj
 |   +-- a DT det
 |   +-- of IN prep
 |       +-- changes NNS pobj
 |           +-- simple JJ amod
 |           |   +-- -LRB- -LRB- punct
 |           |   +-- yet RB cc
 |           |   +-- important JJ conj
 |           |   +-- -RRB- -RRB- punct
 |           +-- in IN prep
 |           |   +-- techniques NNS pobj
 |           |       +-- the DT det
 |           |       +-- pruning NN nn
 |           +-- for IN prep
 |               +-- creating VBG pcomp
 |                   +-- index NN dobj
 |                       +-- the DT det
 |                       +-- pruned JJ amod
 +-- . . punct

19
Input: Our main contribution is a new answer computation algorithm that guarantees that the top matching pages -LRB- according to the search engine '' s ranking metric -RRB- are always placed at the top of search results , even though we are computing the first batch of answers from the pruned index most of the time .
Parse:
algorithm NN ROOT
 +-- contribution NN nsubj
 |   +-- Our PRP$ poss
 |   +-- main JJ amod
 +-- is VBZ cop
 +-- a DT det
 +-- new JJ amod
 +-- answer NN nn
 +-- computation NN nn
 +-- guarantees VBZ rcmod
 |   +-- that WDT nsubj
 |   +-- placed VBN ccomp
 |       +-- that IN mark
 |       +-- pages NNS nsubjpass
 |       |   +-- the DT det
 |       |   +-- top JJ amod
 |       |   +-- matching NN nn
 |       |   +-- ranking VBG partmod
 |       |       +-- -LRB- -LRB- punct
 |       |       +-- according VBG prep
 |       |       |   +-- to IN pcomp
 |       |       |       +-- engine NN pobj
 |       |       |           +-- the DT det
 |       |       |           +-- search NN nn
 |       |       +-- '' '' punct
 |       |       +-- s POS aux
 |       |       +-- metric JJ dobj
 |       |       +-- -RRB- -RRB- punct
 |       +-- are VBP auxpass
 |       +-- always RB advmod
 |       +-- at IN prep
 |       |   +-- top NN pobj
 |       |       +-- the DT det
 |       |       +-- of IN prep
 |       |           +-- results NNS pobj
 |       |               +-- search NN nn
 |       +-- , , punct
 |       +-- computing VBG advcl
 |           +-- even RB advmod
 |           +-- though IN mark
 |           +-- we PRP nsubj
 |           +-- are VBP aux
 |           +-- batch NN dobj
 |           |   +-- the DT det
 |           |   +-- first JJ amod
 |           |   +-- of IN prep
 |           |       +-- answers NNS pobj
 |           |           +-- from IN prep
 |           |               +-- index NN pobj
 |           |                   +-- the DT det
 |           |                   +-- pruned JJ amod
 |           +-- most JJS advmod
 |               +-- of IN prep
 |                   +-- time NN pobj
 |                       +-- the DT det
 +-- . . punct

20
Input: These enhanced pruning techniques and answer computation algorithms are explored in the context of the cluster architecture commonly employed by today '' s search engines .
Parse:
explored VBN ROOT
 +-- techniques NNS nsubjpass
 |   +-- These DT det
 |   +-- enhanced VBN amod
 |   +-- pruning VBG nn
 |   +-- and CC cc
 |   +-- answer VB conj
 |       +-- algorithms NNS dobj
 |           +-- computation NN nn
 +-- are VBP auxpass
 +-- in IN prep
 |   +-- context NN pobj
 |       +-- the DT det
 |       +-- of IN prep
 |           +-- engines NNS pobj
 |               +-- architecture NN poss
 |               |   +-- the DT det
 |               |   +-- cluster JJ amod
 |               |   +-- employed VBN partmod
 |               |   |   +-- commonly RB advmod
 |               |   |   +-- by IN prep
 |               |   |       +-- today NN pobj
 |               |   +-- '' '' punct
 |               |   +-- s POS possessive
 |               +-- search NN nn
 +-- . . punct

21
Input: Finally , we study and present how search engines can minimize the operational cost of answering queries while providing high quality search results .
Parse:
study VBP ROOT
 +-- Finally RB advmod
 +-- , , punct
 +-- we PRP nsubj
 +-- and CC cc
 +-- present VB conj
 +-- minimize VB ccomp
 |   +-- how WRB advmod
 |   +-- engines NNS nsubj
 |   |   +-- search NN nn
 |   +-- can MD aux
 |   +-- cost NN dobj
 |       +-- the DT det
 |       +-- operational JJ amod
 |       +-- of IN prep
 |           +-- answering VBG pcomp
 |               +-- queries NNS dobj
 |               +-- providing VBG advcl
 |                   +-- while IN mark
 |                   +-- results NNS dobj
 |                       +-- high JJ amod
 |                       +-- search NN nn
 |                           +-- quality NN nn
 +-- . . punct

22
Input: IF IF IF IF IF IF IF Ip Ip Ip Ip Ip Ip 5000 queries sec 5000 queries sec
Parse:
IF IN ROOT
 +-- IF IN dep
 |   +-- IF IN pobj
 |   +-- IF IN prep
 |       +-- IF IN pcomp
 |           +-- queries NNS pcomp
 |               +-- IF IN mark
 |               +-- Ip NNP nsubj
 |               |   +-- Ip NNP nn
 |               +-- 5000 CD num
 |               +-- sec NNP iobj
 |               +-- queries NNS dobj
 |                   +-- 5000 CD num
 +-- sec . punct

23
Input: -LRB- b -RRB- In the 1st tier , small pindexes IP handle most of the queries .
Parse:
handle VB ROOT
 +-- b LS dep
 |   +-- -LRB- -LRB- punct
 |   +-- -RRB- -RRB- punct
 +-- In IN prep
 |   +-- tier NN pobj
 |       +-- the DT det
 |       +-- 1st JJ amod
 +-- , , punct
 +-- IP NN nsubj
 |   +-- small JJ amod
 |   +-- pindexes NNS nn
 +-- most JJS dobj
 |   +-- of IN prep
 |       +-- queries NNS pobj
 |           +-- the DT det
 +-- . . punct

24
Input: When IP can not answer a query , it is redirected to the 2nd tier , where the full index IF is used to compute the answer. .
Parse:
redirected VBN ROOT
 +-- answer VB advcl
 |   +-- When WRB advmod
 |   +-- IP NNP nsubj
 |   +-- can MD aux
 |   +-- not RB neg
 |   +-- query NN dobj
 |       +-- a DT det
 +-- , , punct
 +-- it PRP nsubjpass
 +-- is VBZ auxpass
 +-- to IN prep
 |   +-- tier NN pobj
 |       +-- the DT det
 |       +-- 2nd JJ amod
 |       +-- , , punct
 |       +-- used VBN rcmod
 |           +-- where WRB advmod
 |           +-- index NN nsubjpass
 |           |   +-- the DT det
 |           |   +-- full JJ amod
 |           +-- IF IN advmod
 |           +-- is VBZ auxpass
 |           +-- compute VB xcomp
 |               +-- to TO aux
 |               +-- answer. NN dobj
 |                   +-- the DT det
 +-- . . punct
