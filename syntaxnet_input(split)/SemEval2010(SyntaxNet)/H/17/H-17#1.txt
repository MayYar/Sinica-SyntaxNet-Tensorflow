
1
Input: The Web search engines maintain large scale inverted indexes which are queried thousands of times per second by users eager for information .
Parse:
maintain VBP ROOT
 +-- engines NNS nsubj
 |   +-- The DT det
 |   +-- search NN nn
 |       +-- Web NN nn
 +-- indexes NNS dobj
 |   +-- scale NN nn
 |   |   +-- large JJ amod
 |   +-- inverted VBN amod
 |   +-- queried VBN rcmod
 |       +-- which WDT nsubjpass
 |       +-- are VBP auxpass
 |       +-- thousands NNS dobj
 |       |   +-- of IN prep
 |       |       +-- times NNS pobj
 |       |           +-- per IN prep
 |       |               +-- second NN pobj
 |       +-- by IN prep
 |           +-- users NNS pobj
 |               +-- eager JJ amod
 |                   +-- for IN prep
 |                       +-- information NN pobj
 +-- . . punct

2
Input: In order to cope with the vast amounts of query loads , search engines prune their index to keep documents that are likely to be returned as top results , and use this pruned index to compute the first batches of results .
Parse:
prune VBP ROOT
 +-- In IN prep
 |   +-- order NN pobj
 |       +-- cope VB infmod
 |           +-- to TO aux
 |           +-- with IN prep
 |               +-- amounts NNS pobj
 |                   +-- the DT det
 |                   +-- vast JJ amod
 |                   +-- of IN prep
 |                       +-- loads NNS pobj
 |                           +-- query NN nn
 +-- , , punct
 +-- engines NNS nsubj
 |   +-- search NN nn
 +-- index NN dobj
 |   +-- their PRP$ poss
 +-- keep VB xcomp
 |   +-- to TO aux
 |   +-- documents NNS dobj
 |       +-- likely JJ rcmod
 |           +-- that WDT nsubj
 |           +-- are VBP cop
 |           +-- returned VBN xcomp
 |               +-- to TO aux
 |               +-- be VB auxpass
 |               +-- as IN prep
 |               |   +-- results NNS pobj
 |               |       +-- top JJ amod
 |               +-- , , punct
 |               +-- and CC cc
 |               +-- use VB conj
 |                   +-- index NN dobj
 |                   |   +-- this DT det
 |                   |   +-- pruned VBN amod
 |                   +-- compute VB xcomp
 |                       +-- to TO aux
 |                       +-- batches NNS dobj
 |                           +-- the DT det
 |                           +-- first JJ amod
 |                           +-- of IN prep
 |                               +-- results NNS pobj
 +-- . . punct

3
Input: While this approach can improve performance by reducing the size of the index , if we compute the top results only from the pruned index we may notice a significant degradation in the result quality
Parse:
notice VB ROOT
 +-- improve VB advcl
 |   +-- While IN mark
 |   +-- approach NN nsubj
 |   |   +-- this DT det
 |   +-- can MD aux
 |   +-- performance NN dobj
 |   +-- by IN prep
 |       +-- reducing VBG pcomp
 |           +-- size NN dobj
 |               +-- the DT det
 |               +-- of IN prep
 |                   +-- index NN pobj
 |                       +-- the DT det
 +-- , , punct
 +-- compute VBP advcl
 |   +-- if IN mark
 |   +-- we PRP nsubj
 |   +-- results NNS dobj
 |   |   +-- the DT det
 |   |   +-- top JJ amod
 |   +-- from IN prep
 |       +-- only RB advmod
 |       +-- index NN pobj
 |           +-- the DT det
 |           +-- pruned JJ amod
 +-- we PRP nsubj
 +-- may MD aux
 +-- degradation NN dobj
     +-- a DT det
     +-- significant JJ amod
     +-- in IN prep
     |   +-- result NN pobj
     |       +-- the DT det
     +-- quality NN dep

4
Input: Given the fierce competition in the online search market , this phenomenon is clearly undesirable .
Parse:
undesirable JJ ROOT
 +-- Given VBN prep
 |   +-- competition NN dep
 |       +-- the DT det
 |       +-- fierce JJ amod
 |       +-- in IN prep
 |           +-- market NN pobj
 |               +-- the DT det
 |               +-- online JJ amod
 |               +-- search NN nn
 +-- , , punct
 +-- phenomenon NN nsubj
 |   +-- this DT det
 +-- is VBZ cop
 +-- clearly RB advmod
 +-- . . punct

5
Input: In this paper , we study how we can avoid any degradation of result quality due to the pruning based performance optimization , while still realizing most of its benefit .
Parse:
study VBP ROOT
 +-- In IN prep
 |   +-- paper NN pobj
 |       +-- this DT det
 +-- , , punct
 +-- we PRP nsubj
 +-- avoid VB ccomp
 |   +-- how WRB advmod
 |   +-- we PRP nsubj
 |   +-- can MD aux
 |   +-- degradation NN dobj
 |   |   +-- any DT det
 |   |   +-- of IN prep
 |   |   |   +-- quality NN pobj
 |   |   |       +-- result NN amod
 |   |   +-- to IN prep
 |   |       +-- due IN mwe
 |   |       +-- optimization NN pobj
 |   |           +-- the DT det
 |   |           +-- based VBN amod
 |   |           |   +-- pruning VBG dep
 |   |           +-- performance NN nn
 |   +-- , , punct
 |   +-- realizing VBG advcl
 |       +-- while IN mark
 |       +-- still RB advmod
 |       +-- most JJS dobj
 |           +-- of IN prep
 |               +-- benefit NN pobj
 |                   +-- its PRP$ poss
 +-- . . punct

6
Input: Our contribution is a number of modifications in the pruning techniques for creating the pruned index and a new result computation algorithm that guarantees that the top matching pages are always placed at the top search results , even though we are computing the first batch from the pruned index most of the time .
Parse:
number NN ROOT
 +-- contribution NN nsubj
 |   +-- Our PRP$ poss
 +-- is VBZ cop
 +-- a DT det
 +-- of IN prep
 |   +-- modifications NNS pobj
 |       +-- in IN prep
 |       |   +-- techniques NNS pobj
 |       |       +-- the DT det
 |       |       +-- pruning NN nn
 |       +-- for IN prep
 |           +-- creating VBG pcomp
 |               +-- index NN dobj
 |                   +-- the DT det
 |                   +-- pruned JJ amod
 +-- and CC cc
 +-- algorithm NN conj
 |   +-- a DT det
 |   +-- new JJ amod
 |   +-- result NN amod
 |   +-- computation NN nn
 |   +-- guarantees NNS rcmod
 |       +-- that WDT nsubj
 |       +-- placed VBN ccomp
 |           +-- that IN mark
 |           +-- pages NNS nsubjpass
 |           |   +-- the DT det
 |           |   +-- top JJ amod
 |           |   +-- matching NN nn
 |           +-- are VBP auxpass
 |           +-- always RB advmod
 |           +-- at IN prep
 |           |   +-- results NNS pobj
 |           |       +-- the DT det
 |           |       +-- top JJ amod
 |           |       +-- search NN nn
 |           +-- , , punct
 |           +-- computing VBG advcl
 |               +-- even RB advmod
 |               +-- though IN mark
 |               +-- we PRP nsubj
 |               +-- are VBP aux
 |               +-- batch NN dobj
 |               |   +-- the DT det
 |               |   +-- first JJ amod
 |               +-- from IN prep
 |               |   +-- index NN pobj
 |               |       +-- the DT det
 |               |       +-- pruned VBN amod
 |               +-- most JJS dobj
 |                   +-- of IN prep
 |                       +-- time NN pobj
 |                           +-- the DT det
 +-- . . punct

7
Input: We also show how to determine the optimal size of a pruned index and we experimentally evaluate our algorithms on a collection of 130 million Web pages .
Parse:
show VBP ROOT
 +-- We PRP nsubj
 +-- also RB advmod
 +-- determine VB ccomp
 |   +-- how WRB advmod
 |   +-- to TO aux
 |   +-- size NN dobj
 |       +-- the DT det
 |       +-- optimal JJ amod
 |       +-- of IN prep
 |           +-- index NN pobj
 |               +-- a DT det
 |               +-- pruned VBN amod
 +-- and CC cc
 +-- evaluate VBP conj
 |   +-- we PRP nsubj
 |   +-- experimentally RB advmod
 |   +-- algorithms NNS dobj
 |   |   +-- our PRP$ poss
 |   +-- on IN prep
 |       +-- collection NN pobj
 |           +-- a DT det
 |           +-- of IN prep
 |               +-- pages NNS pobj
 |                   +-- million CD num
 |                   |   +-- 130 CD number
 |                   +-- Web NN nn
 +-- . . punct

8
Input: H.3.1 -LRB- Information Storage and Retrieval -RRB-
Parse:
H.3.1 CD ROOT
 +-- -LRB- -LRB- punct
 +-- Storage NNP dep
 |   +-- Information NNP nn
 |   +-- and CC cc
 |   +-- Retrieval NNP conj
 +-- -RRB- -RRB- punct
