ij = xij + P i =i
Theorem 4.4 Suppose algorithm A satisfies the conditions in Algorithm 1 and returns a makespan of at most c¡POPT(p) for every p .
Then, the algorithm A constructed above is a 2c approximation, cycle monotone fractional algorithm .
Moreover, if xF ij > 0 on input p, then pij ? c ¡P OPT(p) .
Proof .
First, note that xF is a valid assignment
We also have that if pij = Hj then xF ij = P i 
If pij = Lj, then xF ij = xij(1 ? m) + P i =i xi j m where = |{i = i 
Thus, by Lemma 4.3, A satisfies cycle monotonicity .
The total load on any machine i under xF is at mostP j
Finally, if xF ij > 0 and pij = Lj, then pij ? OPT(p) .
If pij = Hj, then for some i (possibly i) with pi j = Hj we have xi j > 0, so by assumption, pi j = Hj = pij ? c ¡P OPT(p) .
Theorem 4.4 combined with Lemmas 4.1 and 4.2, gives a 3c approximation, truthful in expectation mechanism .
The computation of payments will depend on the actual approximation algorithm used .
Section 3 does however give an explicit procedure to compute payments ensuring truthfulness, though perhaps not in polynomial time .
Theorem 4.5 The procedure in Algorithm 1 converts any c approximation fractional algorithm into a 3c approximation, truthful in expectation mechanism .
Taking A in Algorithm 1 to be the algorithm that returns an LP optimum assignment satisfying the required conditions (see [18, 25]), we obtain a 3 approximation mechanism .
Corollary 4.6 There is a truthful in expectation mechanism with approximation ratio 3 for the Lj Hj setting. .
