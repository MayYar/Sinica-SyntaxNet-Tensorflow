6.1 Summary We have framed the process of information aggregation in markets as a computation on distributed information
We have developed a simplified model of an information market that we believe captures many of the important aspects of real agent interaction in an information market
Within this model, we prove several results characterizing precisely what the market can compute and how quickly
Specifically, we show that the market is guaranteed to converge to the true rational expectations equilibrium if and only if the security payoff function is a weighted threshold function
We prove that the process whereby agents reveal their information over time and learn from the resulting announced prices takes at most n rounds to converge to the correct full information price in the worst case
We show that this bound is tight within a factor of two
6.2 Future work We view this paper as a first step towards understanding the computational power of information markets
Some interesting and important next steps include gaining a better understanding of the following
Further, we have neglected influences on the market price other than from rational traders; the market price may also be influenced by other factors such as misinformed or irrational traders
It is interesting to ask what aggregates can be computed even in the presence of noisy prices
? Incremental updates
In a sense, some of the computation itself is distributed among the participating agents, but can the market computation also be distributed? For example, can we find a good distributed computational model of a decentralized market? ? Agents" computation
? Strategic market models
A more satisfying approach would be to assume only rationality and solve for the resulting gametheoretic solution strategy, either in our current computational model or another model of an information market
? The common prior assumption
It is interesting to ask whether we would get very different results for generic prior distributions
? Information market design
What is the minimum number of threshold securities required to implement a given function? This is exactly the problem of minimizing the size of a neural network, a well studied problem known to be NP hard [15]
What configuration of securities can best approximate a given function? Are there ways to define and configure securities to speed up convergence to equilibrium? What is the relationship between machine learning (e.g., neural network learning) and information market design? Acknowledgments We thank Joe Kilian for many helpful discussions
We thank Robin Hanson and the anonymous reviewers for useful insights and pointers.
