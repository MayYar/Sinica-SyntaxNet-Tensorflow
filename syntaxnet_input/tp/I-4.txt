Meta-Level Coordination for Solving Negotiation Chains in 
content:
1 ABSTRACT :
1-1:A negotiation chain is formed when multiple related negotiations are spread over multiple agents .
1-2:In order to appropriately order and structure the negotiations occurring in the chain so as to optimize the expected utility, we present an extension to a singleagent concurrent negotiation framework .
1-3:This work is aimed at semi cooperative multi agent systems, where each agent has its own goals and works to maximize its local utility; however, the performance of each individual agent is tightly related to other agent"s cooperation and the system"s overall performance .
1-4:We introduce a pre negotiation phase that allows agents to transfer meta level information .
1-5:Using this information, the agent can build a more accurate model of the negotiation in terms of modeling the relationship of flexibility and success probability .
1-6:This more accurate model helps the agent in choosing a better negotiation solution in the global negotiation chain context .
1-7:The agent can also use this information to allocate appropriate time for each negotiation, hence to find a good ordering of all related negotiations .
1-8:The experimental data shows that these mechanisms improve the agents" and the system"s overall performance significantly .
1-9:I.2.11 [Distributed Artificial Intelligence]: Multiagent systems .
2 INTRODUCTION :
2-1:Sophisticated negotiation for task and resource allocation is crucial for the next generation of multi agent systems applications .
2-2:Groups of agents need to efficiently negotiate over multiple related issues concurrently in a complex, distributed setting where there are deadlines by which the negotiations must be completed .
2-3:This is an important research area where there has been very little work done .
2-4:This work is aimed at semi cooperative multi agent systems, where each agent has its own goals and works to maximize its local utility; however, the performance of each individual agent is tightly related to other agent"s cooperation and the system"s overall performance .
2-5:There is no single global goal in such systems, either because each agent represents a different organization user, or because it is difficult impossible to design one single global goal .
2-6:This issue arises due to multiple concurrent tasks, resource constrains and uncertainties, and thus no agent has sufficient knowledge or computational resources to determine what is best for the whole system [11] .
2-7:An example of such a system would be a virtual organization [12] (i.e .
2-8:a supply chain) dynamically formed in an electronic marketplace such as the one developed by the CONOISE project [5] .
2-9:To accomplish tasks continuously arriving in the virtual organization, cooperation and sub task relocation are needed and preferred .
2-10:There is no single global goal since each agent may be involved in multiple virtual organizations .
2-11:Meanwhile, the performance of each individual agent is tightly related to other agents" cooperation and the virtual organization"s overall performance .
2-12:The negotiation in such systems is not a zero sum game, a deal that increases both agents" utilities can be found through efficient negotiation .
2-13:Additionally, there are multiple encounters among agents since new tasks are arriving all the time .
2-14:In such negotiations, price may or may not be important, since it can be fixed resulting from a long term contract .
2-15:Other factors like quality and delivery time are important too .
2-16:Reputation mechanisms in the system makes cheating not attractive from a long term viewpoint due to multiple encounters among agents .
2-17:In such systems, agents are self interested because they primarily focus on their own goals; but they are also semi cooperative, meaning they are willing to be truthful and collaborate with other agents to find solutions that are beneficial to all participants, including itself; though it won"t voluntarily scarify its own utility in exchange of others" benefits .
2-18:Another major difference between this work and other work on negotiation is that negotiation, here, is not viewed as a stand alone process .
2-19:Rather it is one part of the agent"s activity which is tightly interleaved with the planning, scheduling and executing of the agent"s activities, which also may relate to other negotiations .
2-20:Based on this recognition, this work on negotiation is concerned more about the meta level decision making process in negotiation rather than the basic protocols or languages .
2-21:The goal of this research is to develop a set of macro strategies that allow the agents to effectively manage multiple related negotiations, including, but not limited to the following issues: how much time should be spent on each negotiation, how much flexibility (see formal definition in Formula 3) should be allocated for each negotiation, and in what order should 50 978 81 904262 7 5 c 2007 IFAAMAS the negotiations be performed .
2-22:These macro strategies are different from those micro strategies that direct the individual negotiation thread, such as whether the agent should concede and how much the agent should concede, etc[3] .
2-23:In this paper we extend a multi linked negotiation model [10] from a single agent perspective to a multi agent perspective, so that a group of agents involved in chains of interrelated negotiations can find nearly optimal macro negotiation strategies for pursuing their negotiations .
2-24:The remainder of this paper is structured in the following manner .
2-25:Section 2 describes the basic negotiation process and briefly reviews a single agent"s model of multi linked negotiation .
2-26:Section 3 introduces a complex supply chain scenario .
2-27:Section 4 details how to solve those problems arising in the negotiation chain .
2-28:Section 5 reports on the experimental work .
2-29:Section 6 discusses related work and Section 7 presents conclusions and areas of future work. .
3 BACKGROUND ON MULTI LINKED  NEGOTIATION :
3-1:NEGOTIATION In this work, the negotiation process between any pair of agents is based on an extended version of the contract net [6]: the initiator agent announces the proposal including multiple features; the responding agent evaluates it and responds with either a yes no answer or a counter proposal with some features modified .
3-2:This process can go back and forth until an agreement is reached or the agents decide to stop .
3-3:If an agreement is reached and one agent cannot fulfill the commitment, it needs to pay the other party a decommitment penalty as specified in the commitment .
3-4:A negotiation starts with a proposal, which announces that a task (t) needs to be performed includes the following attributes: t cannot be started before time est .
3-5:to be finished before the deadline dl .
3-6:finished with a quality achievement no less than minq .
3-7:requested, the contractor agent will get reward r .
3-8:the task earlier than dl, it will get the extra early finish reward proportional to this rate .
3-9:cannot perform the task as it promised in the contract or if the contractee agent needs to cancel the contract after it has been confirmed, it also needs to pay a decommitment penalty (p∗r) to the other agent .
3-10:The above attributes are also called attribute in negotiation which are the features of the subject (issue) to be negotiated, and they are domain dependent .
3-11:Another type of attribute 1 is the attribute ofnegotiation, which describes the negotiation process itself and is domain independent, such as: 1 These attributes are similar to those used in project management; however, the multi linked negotiation problem cannot be reduced to a project management problem or a scheduling problem .
3-12:The multi linked negotiation problem has two dimensions: the negotiations, and the subjects of negotiations .
3-13:The negotiations are interrelated and the subjects are interrelated; the attributes of negotiations and the attributes of the subjects are interrelated as well .
3-14:This two dimensional complexity of interrelationships distinguishes it from the classic project management problem or scheduling problem, where all tasks to be scheduled are local tasks and no negotiation is needed .
3-15:negotiation v to complete, either reaching an agreed upon proposal (success) or no agreement (failure) .
3-16:α(v) is an attribute that needs to be decided by the agent .
3-17:finished before this deadline (v) .
3-18:The negotiation is no longer valid after time (v), which is the same as a failure outcome of this negotiation .
3-19:successful .
3-20:It depends on a set of attributes, including both attributes in negotiation (i.e .
3-21:reward, flexibility, etc.) and attributes of negotiation (i.e .
3-22:negotiation start time, negotiation deadline, etc.) .
3-23:An agent involved in multiple related negotiation processes needs to reason on how to manage these negotiations in terms of ordering them and choosing the appropriate values for features .
3-24:This is the multi linked negotiation problem [10] : DEFINITION 2.1 .
3-25:A multi linked negotiation problem is defined as an undirected graph (more specifically, a forest as a set of rooted trees): M = (V, E), where V = {v} is a finite set of negotiations, and E = {(u, v)} is a set of binary relations on V .
3-26:(u, v) ∈ E denotes that negotiation u and negotiation v are directly linked .
3-27:The relationships among the negotiations are described by a forest, a set of rooted trees {Ti} .
3-28:There is a relation operator associated with every non leaf negotiation v (denoted as ρ(v)), which describes the relationship between negotiation v and its children .
3-29:This relation operator has two possible values: AND and OR .
3-30:The AND relationship associated with a negotiation v means the successful accomplishment of the commitment on v requires all its children nodes have successful accomplishments .
3-31:The OR relationship associated with a negotiation v means the successful accomplishment of the commitment on v requires at least one child node have successful accomplishment, where the multiple children nodes represent alternatives to accomplish the same goal .
3-32:Multi linked negotiation problem is a local optimization problem .
3-33:To solve a multi linked negotiation problem is to find a negotiation solution (φ, ϕ) with optimized expected utility EU(φ, ϕ), which is defined as: EU(φ, ϕ) = 2n X i=1 P(χi, ϕ) ∗ (R(χi, ϕ) − C(χi, φ, ϕ)) (1) A negotiation ordering φ defines a partial order of all negotiation issues .
3-34:A feature assignment ϕ is a mapping function that assigns a value to each attribute that needs to be decided in the negotiation .
3-35:A negotiation outcome χ for a set of negotiations {vj}, (j = 1, ..., n) specifies the result for each negotiation, either success or failure .
3-36:There are a total of 2n different outcomes for n negotiations: {chii}, (i = 1, ..., 2n Negotiation chain problem occurs in a multi agent system, where each agent represents an individual, a company, or an organization, and there is no absolute authority in the system .
3-37:Each agent has its own utility function for defining the implications of achieving its goals .
3-38:The agent is designed to optimize its expected utility given its limited information, computational and communication resources .
3-39:Dynamic tasks arrive to individual agents, most tasks requiring the coordination of multiple agents .
3-40:Each agent has the scheduling and planning ability to manage its local activities, some of these activities are related to other agents" activities .
3-41:Negotiation is used to coordinate the scheduling of these mutual related activities .
3-42:The negotiation is tightly connected with the agent"s local scheduling planning processes and is also related to other negotiations .
3-43:An agent may be involved in multiple related negotiations with multiple other agents, and each of the other agents may be involved in related negotiations with others too .
3-44:Figure 1 describes a complex negotiation chain scenario .
3-45:The Store, the PC manufacturer, the Memory Producer and the Distribution Center are all involved in multi linked negotiation problems .
3-46:Figure 2 shows a distributed model of part of the negotiation chain described in Figure 1 .
3-47:Each agent has a local optimization problem the multi linked negotiation problem (represented as an and or tree), which can be solved using the model and procedures described in Section 2 .
3-48:However, the local optimal solution may not be optimal in the global context given the local model is neither complete or accurate .
3-49:The dash line in Figure 2 represents the connection of these local optimization problem though the common negotiation subject .
3-50:Negotiation chain problem O is a group of tightly coupled local optimization problems: O = {O1, O2, ....On}, Oi denotes the local optimization problem (multi linked negotiation problem) of agent Ai Agent Ai"s local optimal solution Slo i maximizes the expected local utility based on an incomplete information and assumptions about other agents" local strategies we defined such incomplete information and imperfect assumptions of agent i as Ii): Uexp i (Slo i , Ii) ≥ Uexp i (Sx i , Ii) for all x = lo .
3-51:However, the combination of these local optimal solutions {Slo i } : < Slo 1 , Slo 2 , ....Slo n > can be sub optimal to a set of better local optimal solutions {Sblo i } : < Sblo 1 , Sblo 2 , ....Sblo n > if the global utility can be improved without any agent"s local utility being decreased by using {Sblo i } .
3-52:In other words, {Slo i } is dominated by {Sblo i } ({Slo i } ≺ {Sblo i }) iff: Ui(< Slo 1 , Slo 2 , ....Slo n >) ≤ Ui(< Sblo 1 , Sblo 2 , ....Sblo n >) for i = 1, ...n and Pn i=1 Ui(< Slo 1 , Slo 2 , ....Slo n >) < Pn i=1 Ui(< Sblo 1 , Sblo 2 , ....Sblo n >) There are multiple sets of better local optimal solutions: {Sblo1 i }, {Sblo2 i }, .. .
3-53:{Sblom i } .
3-54:Some of them may be dominated by others .
3-55:A set of better local optimal solutions {S blog i } that is not dominated by any others is called best local optimal .
3-56:If a set of best local optimal solutions {S blog i } dominates all others, {S blog i } is called globally local optimal .
3-57:However, sometimes the globally local optimal set does not exist, instead, there exist multiple sets of best local optimal solutions .
3-58:Even if the globally local optimal solution does exist in theory, finding it may not be realistic given the agents are making decision concurrently, to construct the perfect local information and assumptions about other agents (Ii) in this dynamic environment is a very difficult and sometimes even impossible task .
3-59:The goal of this work is to improve each agent"s local model about other agents (Ii) through meta level coordination .
3-60:As Ii become more accurate, the agent"s local optimal solution to its local multi linked negotiation problem become a better local optimal solution in the context of the global negotiation chain problem .
3-61:We are not arguing that this statement is a universal valid statement that holds in all situations, but our experimental work shows that the sum of the agents" utilities in the system has been improved by 95% on average when meta level coordination is used to improve each agent"s local model Ii .
3-62:In this work, we focus on improving the agent"s local model through two directions .
3-63:One direction is to build a better function to describe the relationship between the success probability of the negotiation and the flexibility allocated to the negotiation .
3-64:The other direction is to find how to allocate time more efficiently for each negotiation in the negotiation chain context. .
4 NEW MECHANISM   META LEVEL  COORDINATION :
4-1:COORDINATION In order for an agent to get a better local model about other agents in the negotiation chain context, we introduce a pre negotiation phase into the local negotiation process .
4-2:During the pre negotiation phase, agents communicate with other agents who have tasks contracting relationships with them, they transfer meta level information before they decide on how and when to do the negotiations .
4-3:Each agent tells other agents what types of tasks it will ask them to perform, and the probability distributions of some parameters of those tasks, i.e .
4-4:the earliest start times and the deadlines, etc .
4-5:When these probability distributions are not available directly, agents can learn such information from their past experience .
4-6:In our experiment described later, such distributed information is learned rather than being directly told by other agents .
4-7:Specifically, each agent provides the following information to other related agents: • Whether additional negotiation is needed in order to make a decision on the contracting task; if so, how many more negotiations are needed .
4-8:negCount represents the total number of additional negotiations needed for a task, including additional negotiations needed for its subtasks that happen among other agents .
4-9:In a negotiation chain situation, this information is being propagated and updated through the chain until 52 The Sixth Intl .
4-10:Joint Conf .
4-11:on Autonomous Agents and Multi Agent Systems (AAMAS 07) E: Order Hardware F: Deliver Computer H: Get Memory I: Deliver Hardware I: Deliver Hardware F: Deliver Computer G: Get CPU E: Get Hardware and TransporterDistribution Center A: Purchase Computer B: Purchase Memory C: Order Computer D: Order Memory Store Agent PC Manufacturer and C: Order Computer Figure 2: Distributed Model of Negotiation Chains every agent has accurate information .
4-12:Let subNeg(T) be a set of subtasks of task T that require additional negotiations, then we have: negCount(T) = |subNeg(T)| + X t∈subNeg(T ) (negCount(t)) (2) For example, in the scenario described in Figure 1, for the distribution center, task Order Hardware consists of three subtasks that need additional negotiations with other agents: Order Chips, Order Memory and Deliver Hardware .
4-13:However, no further negotiations are needed for other agents to make decision on these subtasks, hence the negCount for these subtasks are 0 .
4-14:The following information is sent to the PC manufacturer by the distribution center: negCount(Order Hardware) = 3 For the PC manufacturer task Order Computer contains two subtasks that requires additional negotiations: Deliver Computer and Order Hardware .
4-15:When the PC manufacturer receives the message from the Distribution Center, it updates its local information: negCount(Order Computer) = 2+ negCount(Deliver Computer)(0)+ negCount(Order Hardware)(3) = 5 and sends the updated information to the Store Agent .
4-16:• Whether there are other tasks competing with this task and what is the likelihood of conflict .
4-17:Conflict means that given all constrains, the agent cannot accomplish all tasks on time, it needs to reject some tasks .
4-18:The likelihood of conflict Pcij between a task of type i and another task of type j is calculated based on the statistical model of each task"s parameters, including earliest start time (est), deadline (dl), task duration (dur) and slack time (sl), using a formula [7]: Pcij = P(dli − estj ≤ duri + durj ∧ dlj − esti ≤ duri + durj) When there are more than two types of tasks, the likelihood of no conflict between task i and the rest of the tasks, is calculated as: PnoConflict(i) = Qn j=1,j=i(1 − Pcij) For example, the Memory Producer tells the Distribution Center about the task Order Memory .
4-19:Its local decision does not involve additional negotiation with other agents (negCount = 0), however, there is another task from the Store Agent that competes with this task, thus the likelihood of no conflict is 0.5 (PnoConflict = 0.5) .
4-20:On the other hand, the CPU Producer tells the Distribution Center about the task Order Chips: its local decision does not involve additional negotiation with other agents, and there are no other tasks competing with this task (PnoConflict = 1.0) given the current environment setting .
4-21:Based on the above information, the Distribution Center knows that task Order Memory needs more flexibility than task Order Chips in order to be successful in negotiation .
4-22:Meanwhile, the Distribution Center would tell the PC Manufacturer that task Order Hardware involves further negotiation with other agents (negCount = 3), and that its local decision depends on other agents" decisions .
4-23:This piece of information helps the PC Manufacturer allocate appropriate flexibility for task Order Hardware in negotiation .
4-24:In this work, we introduce a short period and Produce_Computer Get_Software Install_Software Deliver_Computer Memory ProducerHardware Producer Transporter Consumer Agent Order_Computer Order_Memory Order_Hardware Order_Hardware process−time: 3 Distribution Center PC Manufacturer Order_Chips Deliver_HardwareGet_Parts process−time: 11 enables enables process−time: 4 process−time: 3 and and enables process−time: 4 and enables process−time: 3 process−time: 2 Figure 3: Task Structures of PC Manufacturer and Distribution Center for agents to learn the characteristics of those incoming tasks, including est, dl, dur and sl, which are used to calculate Pcij and PnoConflict for the meta level coordination .
4-25:During system performance, agents are continually monitoring these characteristics .
4-26:An updated message will be send to related agents when there is significant change of the meta level information .
4-27:Next we will describe how the agent uses the meta level information transferred during the pre negotiation phase .
4-28:This information will be used to improve the agent"s local model, more specifically, they are used in the agent"s local decision making process by affecting the values of some features .
4-29:Especially, we will be concerned with two features that have strong implications for the agent"s macro strategy for the multi linked negotiations, and hence also affect the performance of a negotiation chain significantly .
4-30:The first is the amount of flexibility specified in the negotiation parameter .
4-31:The second feature we will explore is the time allocated for the negotiation process to complete .
4-32:The time allocated for each negotiation affects the possible ordering of those negotiations, and it also affects the negotiation outcome .
4-33:Details are discussed in the following sections .
4-34:4.1 Flexibility and Success Probability Agents not only need to deal with complex negotiation problems, they also need to handle their own local scheduling and planning process that are interleaved with the negotiation process .
4-35:Figure 3 shows the local task structures of the PC Manufacturer and the Distribution Center .
4-36:Some of these tasks can be performed locally by the PC manufacturer, such as Get Software and Install Software, while other tasks (non local tasks) such as Order Hardware and Deliver Computer need to be performed by other agents.The PC Manufacturer needs to negotiate with the Distribution Center and the Transporter about whether they can perform these tasks, and if so, when and how they will perform them .
4-37:When the PC Manufacturer negotiates with other agents about the non local task, it needs to have the other agents" arrangement fit into its local schedule .
4-38:Since the PC Manufacturer is dealing with multiple non local tasks simultaneously, it also needs to ensure the commitments on these non local tasks are consistent with each other .
4-39:For example, the deadline of task Order Hardware cannot be later than the start time of task Deliver Computer .
4-40:Figure 4 The Sixth Intl .
4-41:Joint Conf .
4-42:on Autonomous Agents and Multi Agent Systems (AAMAS 07) 53 Order_Hardware Deliver_Computer [34, 40] process time: 4 process time: 3 [11, 28] [11, 28] process time: 11 Get_Software Install_Software [28, 34] process time: 2 Order_Computer starts at time 11 and finishes by 40 Figure 4: A Sample Local Schedule of the PC Manufacturer shows a sample local schedule of the PC Manufacturer .
4-43:According to this schedule, as long as task Order Hardware is performed during time [11, 28] and task Deliver Computer is performed during time [34, 40], there exists a feasible schedule for all tasks and task Order Computer can be finished by time 40, which is the deadline promised to the Customer .
4-44:These time ranges allocated for task Order Hardware and task Deliver Computer are called consistent ranges; the negotiations on these tasks can be performed independently within these ranges without worrying about conflict .
4-45:Notice that each task should be allocated with a time range that is large enough to accommodate the estimated task process time .
4-46:The larger the range is, the more likely the negotiation will succeed, because it is easier for the other agent to find a local schedule for this task .
4-47:Then the question is, how big should this time range be? We defined a quantitative measure called flexibility: Given a task t, suppose the allocated time range for t is [est, dl], est is the earliest start time and dl stands for the deadline, flexibility(t) = dl − est − process time(t) process time(t) (3) Flexibility is an important attribute because it directly affects the possible outcome of the negotiation .
4-48:The success probability of a negotiation can be described as a function of the flexibility .
4-49:In this work, we adopt the following formula for the success probability function based on the flexibility of the negotiation issue: ps(v) = pbs(v) ∗ (2 π) ∗ (arctan(f(v) + c))) (4) This function describes a phenomenon where initially the likelihood of a successful negotiation increases significantly as the flexibility grows, and then levels off afterward, which mirrors our experience from previous experiments .
4-50:pbs is the basic success probability of this negotiation v when the flexibility f(v) is very large .
4-51:c is a parameter used to adjust the relationship .
4-52:Different function patterns can result from different parameter values, as shown in Figure 5 .
4-53:This function describes the agent"s assumption about how the other agent involved in this negotiation would response to this particular negotiation request, when it has flexibility f(v) .
4-54:This function is part of the agent"s local model about other agents .
4-55:To improve the accuracy of this function and make it closer to the reality, the agent adjusts these two values according to the meta level information transferred during pre negotiation phase .
4-56:The values of c depends on whether there is further negotiation involved and whether there are other tasks competing with this task for common resources .
4-57:If so, more flexibility is needed for this issue and hence c should be assigned a smaller value .
4-58:In our implementation, the following procedure is used to calculate c based on the meta level information negCount and PnoConflict: if(PnoConflict > 0.99) no other competing task c = Clarge − negCount else competing task exists c = Csmall This procedure works as follows: when there is no other competing Figure 5: Different Success Probability Functions task, c depends on the number of additional negotiations needed .
4-59:The more additional negotiations that are needed, the smaller value c has, hence more flexibility will be assigned to this issue to ensure the negotiation success .
4-60:If no more negotiation is needed, c is assigned to a large number Clarge, meaning that less flexibility is needed for this issue .
4-61:When there are other competing tasks, c is assigned to a small number Csmall, meaning that more flexibility is needed for this issue .
4-62:In our experimental work, we have Clarge as 5 and Csmall as 1 .
4-63:These values are selected according to our experience; however, a more practical approach is to have agents learn and dynamically adjust these values .
4-64:This is also part of our future work .
4-65:pbs is calculated based on PnoConflict, f(v) (the flexibility of v in previous negotiation), and c, using the reverse format of equation 4 .
4-66:pbs(v) = min(1.0, PnoConflict(v)∗(π 2) (arctan(f(v)+c))) (5) For example, based on the scenario described above, the agents have the following values for c and pbs based on the meta level information transferred: • PC Manufacturer, Order Hardware: pbs = 1.0, c = 2; • Distribution Center, Order Chips: pbs = 1.0, c = 5; • Store Agent, Order Memory: pbs = 0.79, c = 1; Figure 5 shows the different patterns of the success probability function given different parameter values .
4-67:Based on such patterns, the Store Agent would allocate more flexibility to the task Order Memory to increase the likelihood of success in negotiation .
4-68:In the agent"s further negotiation process, formula 4 with different parameter values is used in reasoning on how much flexibility should be allocated to a certain issue .
4-69:The pre negotiation communication occurs before negotiation, but not before every negotiation session .
4-70:Agents only need to communicate when the environment changes, for example, new types of tasks are generated, the characteristics of tasks changes, the negotiation partner changes, etc .
4-71:If no major change happens, the agent can just use the current knowledge from previous communications .
4-72:The communication and computation overhead of this prenegotiation mechanism is very small, given the simple information collection procedure and the short message to be transferred .
4-73:We will discuss the effect of this mechanism in Section 5 .
4-74:4.2 Negotiation Duration and Deadline In the agent"s local model, there are two attributes that describe how soon the agent expects the other agent would reply to the negotiation v: negotiation duration δ(v) and negotiation deadline (v) 54 The Sixth Intl .
4-75:Joint Conf .
4-76:on Autonomous Agents and Multi Agent Systems (AAMAS 07) Table 1: Examples of negotiations (δ(v): negotiation duration, s.p.: success probability) index task name δ(v) reward s.p .
4-77:penalty 1 Order Hardware 4 6 0.99 3 2 Order Chips 4 1 0.99 0.5 3 Order Memory 4 1 0.80 0.5 4 Deliver Hardware 4 1 0.70 0.5 .
4-78:These two important attributes that affect the negotiation solution .
4-79:Part of the negotiation solution is a negotiation ordering φ which specifies in what order the multiple negotiations should be performed .
4-80:In order to control the negotiation process, every negotiation should be finished before its negotiation deadline, and the negotiation duration is the time allocated for this negotiation .
4-81:If a negotiation cannot be finished during the allocated time, the agent has to stop this negotiation and consider it as a failure .
4-82:The decision about the negotiation order depends on the success probability, reward, and decommitment penalty of each negotiation .
4-83:A good negotiation order should reduce the risk of decommitment and hence reduce the decommitment penalty .
4-84:A search algorithm has been developed to find such negotiation order described in [10] .
4-85:For example, Table 1 shows some of the negotiations for the Distribution Center and their related attributes .
4-86:Given enough time (negotiation deadline is greater than 16), the best negotiation order is: 4 → 3 → 2 → 1 .
4-87:The most uncertain negotiation (4: Deliver Hardware) is performed first .
4-88:The negotiation with highest penalty (1: Order hardware) is performed after all related negotiations (2, 3, and 4) have been completed so as to reduce the risk of decommitment .
4-89:If the negotiation deadline is less than 12 and greater than 8, the following negotiation order is preferred: (4, 3, 2) → 1, which means negotiation 4, 3, 2 can be performed in parallel, and 1 needs to be performed after them .
4-90:If the negotiation deadline is less than 8, then all negotiations have to be performed in parallel, because there is no time for sequencing negotiations .
4-91:In the original model for single agent [10], the negotiation deadline (v) is assumed to be given by the agent who initiates the contract .
4-92:The negotiation duration δ(v) is an estimation of how long the negotiation takes based on experience .
4-93:However, the situation is not that simple in a negotiation chain problem .
4-94:Considering the following scenario .
4-95:When the customer posts a contract for task Purchase Computer, it could require the Store Agent to reply by time 20 .
4-96:Time 20 can be considered as the negotiation deadline for Purchase Computer .
4-97:When the Store Agent negotiates with the PC Manufacturer about Order Computer, what negotiation deadline should it specify? How long the negotiation on Order Computer takes depends on how the PC Manufacturer handles its local multiple negotiations: whether it replies to the Store Agent first or waits until all other related negotiations have been settled .
4-98:However, the ordering of negotiations depends on the negotiation deadline on Order Computer, which should be provided by the Store Agent .
4-99:The negotiation deadline of Order Computer for the PC Manufacturer is actually decided based on the negotiation duration of Order Computer for the Store Agent .
4-100:How much time the Store Agent would like to spend on the negotiation Order Computer is its duration, and also determines the negotiation deadline for the PC Manufacturer .
4-101:Now the question arises: how should an agent decide how much time it should spend on each negotiation, which actually affects the other agents" negotiation decisions .
4-102:The original model does not handle this question since it assumes the negotiation duration δ(v) is known .
4-103:Here we propose three different approaches to handle this issue .
4-104:all related negotiations, which means allocate all available time to all negotiations: δ(v) = total available time For example if the negotiation deadline for Purchase Computer is 20, the Store Agent will tell the PC Manufacturer to reply by 20 for Order Computer (ignoring the communication delay) .
4-105:This strategy allows every negotiation to have the largest possible duration, however it also eliminates the possibility of performing negotiations in sequence all negotiations need to be performed in parallel because the total available time is the same as the duration of each negotiation .
4-106:negotiation according to the meta level information transferred in the pre negotiation phase .
4-107:A more complicated negotiation, which involves further negotiations, should be allocated additional time .
4-108:For example, the PC Manufacturer allocates a duration of 12 for the negotiation Order Hardware, and a duration of 4 for Deliver Computer .
4-109:The reason is that the negotiation with the Distribution Center about Order Hardware is more complicated because it involves further negotiations between the Distribution Center and other agents .
4-110:In our implementation, we use the following procedure to decide the negotiation duration δ(v): if(negCount(v) >= 3) more additional negotiation needed δ(v) = (negCount(v)−1)∗basic neg cycle else if(negCount(v) > 0) one or two additional negotiations needed δ(v) = 2 ∗ basic neg cycle else no additional negotiation δ(v) = basic neg cycle + 1 basic neg cycle represents the minimum time needed for a negotiation cycle (proposal think reply), which is 3 in our system setting including communication delay .
4-111:One additional time unit is allocated for the simplest negotiation because it allows the agent to perform a more complicated reasoning process in thinking .
4-112:Again, the structure of this procedure is selected according to experience, and it can be learned and adjusted by agents dynamically .
4-113:time among the n related negotiations: δ(v) = total available time n For example, if the current time is 0, and the negotiation deadline for Order Computer is 21, given two other related negotiations, Order Hardware and Deliver Computer, each negotiation is allocated with a duration of 7 .
4-114:Intuitively we feel the strategy 1 may not be a good one, because performing all negotiations in parallel would increase the risk of decommitment and hence also decommitment penalties .
4-115:However, it is not very clear how strategy 2 and 3 perform, and we will discuss some experimental results in Section 5. .
5 EXPERIMENTS :
5-1:To verify and evaluate the mechanisms presented for the negotiation chain problem, we implemented the scenario described in Figure 1 .
5-2:New tasks were randomly generated with decommitment penalty rate p ∈ [0, 1], early finish reward rate e ∈ [0, 0.3], and deadline dl ∈ [10, 60] (this range allows different flexibilities available for those sub contracted tasks), and arrived at the store agent periodically .
5-3:We performed two sets of experiments to study The Sixth Intl .
5-4:Joint Conf .
5-5:on Autonomous Agents and Multi Agent Systems (AAMAS 07) 55 Table 2: Parameter Values Without With Meta level Information fixed flex meta info flex negotiation pbs pbs c Order Computer 0.95 1.0 0 Order Memory (1) 0.95 0.79 1 Order Hardware 0.95 1.0 2 Deliver Computer 0.95 1.0 1 Deliver Hardware 0.95 1.0 5 Order Chips 0.95 1.0 1 Order Memory (2) 0.95 0.76 1 Figure 6: Different Flexibility Policies how the success probability functions and negotiation deadlines affect the negotiation outcome, the agents" utilities and the system"s overall utility .
5-6:In this experiment, agents need to make decision on negotiation ordering and feature assignment for multiple attributes including: earliest start time, deadline, promised finish time, and those attributes of negotiation .
5-7:To focus on the study of flexibility, in this experiment, the regular rewards for each type of tasks are fixed and not under negotiation .
5-8:Here we only describe how agents handle the negotiation duration and negotiation deadlines because they are the attributes affected by the pre negotiation phase .
5-9:All other attributes involved in negotiation are handled according to how they affect the feasibility of local schedule (time related attributes) and how they affect the negotiation success probability (time and cost related attributes) and how they affect the expect utility .
5-10:A search algorithm [10] and a set of partial order scheduling algorithms are used to handle these attributes .
5-11:We tried two different flexibility policies .
5-12:success probability (ps(v) = pbs(v)), according to its local knowledge and estimation .
5-13:pbs(v) ∗ (2 π) ∗ (arctan(f(v) + c))) to model the success probability .
5-14:It also adjusts those parameters (pbs(v) and c) according to the meta level information obtained in prenegotiation phase as described in Section 4 .
5-15:Table 2 shows the values of those parameters for some negotiations .
5-16:Figure 6 shows the results of this experiment .
5-17:This set of experiments includes 10 system runs, and each run is for 1000 simulating time units .
5-18:In the first 200 time units, agents are learning about the task characteristics, which will be used to calculate the conflict probabilities Pcij .
5-19:At time 200, agents perform meta level information communication, and in the next 800 time units, agents use the meta level information in their local reasoning process .
5-20:The data was collected over the 800 time units after the pre negotiation Figure 7: Different Negotiation Deadline Policies phase 2 .
5-21:One Purchase Computer task is generated every 20 time units, and two Purchase Memory tasks are generated every 20 time units .
5-22:The deadline for task Purchase Computer is randomly generated in the range of [30, 60], the deadline for task Purchase Memory is in the range of [10, 30] .
5-23:The decommitment penalty rate is randomly generated in the range of [0, 1] .
5-24:This setting creates multiple concurrent negotiation chain situations; there is one long chain: Customer Store PC Manufacturer Distribution Center Producers Transporter and two short chains: Customer Store Memory Producer This demonstrates that this mechanism is capable of handling multiple concurrent negotiation chains .
5-25:All agents perform better in this example (gain more utility) when they are using the meta level information to adjust their local control through the parameters in the success probability function (meta info flex policy) .
5-26:Especially for those agents in the middle of the negotiation chain, such as the PC Manufacturer and the Distribution Center, the flexibility policy makes a significant difference .
5-27:When the agent has a better understanding of the global negotiation scenario, it is able to allocate more flexibility for those tasks that involve complicated negotiations and resource contentions .
5-28:Therefore, the success probability increases and fewer tasks are rejected or canceled (90% of the tasks have been successfully negotiated over when using meta level information, compared to 39% when no pre negotiation is used), resulting in both the agent and the system achieving better performance .
5-29:In the second set of experiments studies, we compare three negotiation deadline policies described in Section 4.2 when using the meta info flexibility policy described above .
5-30:The initial result shows that the same deadline policy and the meta info deadline policy perform almost the same when the amount of system workload level is moderate, tasks can be accommodated given sufficient flexibility .
5-31:In this situation, with either of the policies, most negotiations are successful, and there are few decommitment occurrences, so the ordering of negotiations does not make too much difference .
5-32:Therefore, in this second set of experiments, we increase the number of new tasks generated to raise the average workload in the system .
5-33:One Purchase Computer task is generated every 15 time units, three Purchase Memory tasks are generated every 2 We only measure the utility collected after the learning phase because that the learning phase is relatively short comparing to the evaluation phase, also during the learning phase, no meta level information is used, so some of the policies are invalid .
5-34:56 The Sixth Intl .
5-35:Joint Conf .
5-36:on Autonomous Agents and Multi Agent Systems (AAMAS 07) 15 time units, and one task Deliver Gift (directly from the customer to the Transporter) is generated every 10 time units .
5-37:This setup generates a higher level of system workload, which results in some tasks not being completed no matter what negotiation ordering is used .
5-38:In this situation, we found the meta info deadline policy performs much better than same deadline policy (See Figure 7) .
5-39:When an agent uses the same deadline policy, all negotiations have to be performed in parallel .
5-40:In the case that one negotiation fails, all related tasks have to be canceled, and the agent needs to pay multiple decommitment penalties .
5-41:When the agent uses the meta info deadline policy, complicated negotiations are allocated more time and, correspondingly, simpler negotiations are allocated less time .
5-42:This also has the effect of allowing some negotiations to be performed in sequence .
5-43:The consequence of sequencing negotiation is that, if there is failure, an agent can simply cancel the other related negotiations that have not been started .
5-44:In this way, the agent does not have to pay decommitment penalty for those canceled negotiations because no commitment has been established yet .
5-45:The evenly divided deadline policy performs much worse than the meta info deadline policy .
5-46:In the evenly divideddeadline policy, the agent allocates negotiation time evenly among the related negotiations, hence the complicated negotiation does not get enough time to complete .
5-47:The above experiment results show that the meta level information transferred among agents during the pre negotiation phase is critical in building a more accurate model of the negotiation problem .
5-48:The reasoning process based on this more accurate model produces an efficient negotiation solution, which improves the agent"s and the system"s overall utility significantly .
5-49:This conclusion holds for those environments where the system is facing moderate heavy load and tasks have relatively tight time deadline (our experiment setup is to produce such environment); the efficient negotiation is especially important in such environments. .
6 RELATED WORK :
6-1:Fatima, Wooldridge and Jennings [1] studied the multiple issues in negotiation in terms of the agenda and negotiation procedure .
6-2:However, this work is limited since it only involves a single agent"s perspective without any understanding that the agent may be part of a negotiation chain .
6-3:Mailler and Lesser [4] have presented an approach to a distributed resource allocation problem where the negotiation chain scenario occurs .
6-4:It models the negotiation problem as a distributed constraint optimization problem and a cooperative mediation mechanism is used to centralize relevant portions of the DCOP .
6-5:In our work, the negotiation involves more complicated issues such as reward, penalty and utility; also, we adopt a distribution approach where no centralized control is needed .
6-6:A mediator based partial centralized approach has been applied to the coordination and scheduling of complex task network [8], which is different from our work since the system is a complete cooperative system and individual utility of single agent is not concerned at all .
6-7:A combinatorial auction [2, 9] could be another approach to solving the negotiation chain problem .
6-8:However, in a combinatorial auction, the agent does not reason about the ordering of negotiations .
6-9:This would lead to a problem similar to those we discussed when the same deadline policy is used. .
7 ABSTRACT :
7-1:In this paper, we have solved negotiation chain problems by extending our multi linked negotiation model from the perspective of a single agent to multiple agents
7-2:Instead of solving the negotiation chain problem in a centralized approach, we adopt a distributed approach where each agent has an extended local model and decisionmaking process
7-3:We have introduced a pre negotiation phase that allows agents to transfer meta level information on related negotiation issues
7-4:Using this information, the agent can build a more accurate model of the negotiation in terms of modeling the relationship of flexibility and success probability
7-5:This more accurate model helps the agent in choosing the appropriate negotiation solution
7-6:The experimental data shows that these mechanisms improve the agent"s and the system"s overall performance significantly
7-7:In future extension of this work, we would like to develop mechanisms to verify how reliable the agents are
7-8:We also recognize that the current approach of applying the meta level information is mainly heuristic, so we would like to develop a learning mechanism that enables the agent to learn how to use such information to adjust its local model from previous experience
7-9:To further verify this distributed approach, we would like to develop a centralized approach, so we can evaluate how good the solution from this distributed approach is compared to the optimal solution found by the centralized approach.
8 ABSTRACT :
8-1:S
8-2:S
8-3:Fatima, M
8-4:Wooldridge, and N
8-5:R
8-6:Jennings
8-7:Optimal negotiation strategies for agents with incomplete information
8-8:In Revised Papers from the 8th International Workshop on Intelligent Agents VIII, pages 377 392
8-9:Springer Verlag, 2002
8-10:L
8-11:Hunsberger and B
8-12:J
8-13:Grosz
8-14:A combinatorial auction for collaborative planning
8-15:In Proceedings of the Fourth International Conference on Multi Agent Systems (ICMAS 2000), 2000
8-16:N
8-17:R
8-18:Jennings, P
8-19:Faratin, T
8-20:J
8-21:Norman, P
8-22:O"Brien, B
8-23:Odgers, and J
8-24:L
8-25:Alty
8-26:Implementing a business process management system using adept: A real world case study
8-27:Int
8-28:Journal of Applied Artificial Intelligence, 2000
8-29:R
8-30:Mailler and V
8-31:Lesser
8-32:A Cooperative Mediation Based Protocol for Dynamic, Distributed Resource Allocation
8-33:IEEE Transaction on Systems, Man, and Cybernetics, Part C, Special Issue on Game theoretic Analysis and Stochastic Simulation of Negotiation Agents, 2004
8-34:T
8-35:J
8-36:Norman, A
8-37:Preece, S
8-38:Chalmers, N
8-39:R
8-40:Jennings, M
8-41:Luck, V
8-42:D
8-43:Dang, T
8-44:D
8-45:Nguyen, V
8-46:Deora, J
8-47:Shao, A
8-48:Gray, and N
8-49:Fiddian
8-50:Agent based formation of virtual organisations
8-51:Int
8-52:J
8-53:Knowledge Based Systems, 17(2 4):103 111, 2004
8-54:T
8-55:Sandholm and V
8-56:Lesser
8-57:Issues in automated negotiation and electronic commerce: Extending the contract net framework
8-58:In Proceedings of the First International Conference on Multi Agent Systems (ICMAS95), pages 328 335, 1995
8-59:J
8-60:Shen, X
8-61:Zhang, and V
8-62:Lesser
8-63:Degree of Local Cooperation and its Implication on Global Utility
8-64:Proceedings of Third International Joint Conference on Autonomous Agents and MultiAgent Systems (AAMAS 2004), July 2004
8-65:M
8-66:Sims, H
8-67:Mostafa, B
8-68:Horling, H
8-69:Zhang, V
8-70:Lesser, and D
8-71:Corkill
8-72:Lateral and Hierarchical Partial Centralization for Distributed Coordination and Scheduling of Complex Hierarchical Task Networks
8-73:AAAI 2006 Spring Symposium on Distributed Plan and Schedule Management, 2006
8-74:W
8-75:Walsh, M
8-76:Wellman, and F
8-77:Ygge
8-78:Combinatorial auctions for supply chain formation
8-79:In Second ACM Conference on Electronic Commerce, 2000
8-80:X
8-81:Zhang, V
8-82:Lesser, and S
8-83:Abdallah
8-84:Efficient management of multi linked negotiation based on a formalized model
8-85:Autonomous Agents and MultiAgent Systems, 10(2):165 205, 2005
8-86:X
8-87:Zhang, V
8-88:Lesser, and T
8-89:Wagner
8-90:Integrative negotiation among agents situated in organizations
8-91:IEEE Transactions on System, Man, and Cybernetics: Part C, Special Issue on Game theoretic Analysis and Stochastic Simulation of Negotiation Agents, 36(1):19 30, January 2006
8-92:Q
8-93:Zheng and X
8-94:Zhang
8-95:Automatic formation and analysis of multi agent virtual organization
8-96:Journal of the Brazilian Computer Society: Special Issue on Agents Organizations, 11(1):74 89, July 2005
8-97:The Sixth Intl
8-98:Joint Conf
8-99:on Autonomous Agents and Multi Agent Systems (AAMAS 07) 57
picture:
