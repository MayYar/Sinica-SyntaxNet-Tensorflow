Temporal Linear Logic as a Basis for Flexible Agent 
content:
1 ABSTRACT :
1-1:Interactions between agents in an open system such as the Internet require a significant degree of flexibility .
1-2:A crucial aspect of the development of such methods is the notion of commitments, which provides a mechanism for coordinating interactive behaviors among agents .
1-3:In this paper, we investigate an approach to model commitments with tight integration with protocol actions .
1-4:This means that there is no need to have an explicit mapping from protocols actions to operations on commitments and an external mechanism to process and enforce commitments .
1-5:We show how agents can reason about commitments and protocol actions to achieve the end results of protocols using a reasoning system based on temporal linear logic, which incorporates both temporal and resource sensitive reasoning .
1-6:We also discuss the application of this framework to scenarios such as online commerce .
1-7:I.2.11 [Distributed Artificial Intelligence]: Intelligent .
2 INTRODUCTION AND MOTIVATION :
2-1:Recently, software development has evolved toward the development of intelligent, interconnected systems working in a distributed manner .
2-2:The agent paradigm has become well suited as a design metaphor to deal with complex systems comprising many components each having their own thread of control and purposes and involved in dynamic and complex interactions .
2-3:In multi agent environments, agents often need to interact with each other to fulfill their goals .
2-4:Protocols are used to regulate interactions .
2-5:In traditional approaches to protocol specification, like those using Finite State Machines or Petri Nets, protocols are often predetermined legal sequences of interactive behaviors .
2-6:In frequently changing environments such as the Internet, such fixed sequences can quickly become outdated and are prone to failure .
2-7:Therefore, agents are required to adapt their interactive behaviors to succeed and interactions among agents should not be constructed rigidly .
2-8:To achieve flexibility, as characterized by Yolum and Singh in [11], interaction protocols should ensure that agents have autonomy over their interactive behaviors, and be free from any unnecessary constraints .
2-9:Also, agents should be allowed to adjust their interactive actions to take advantages of opportunities or handle exceptions that arise during interaction .
2-10:For example, consider the scenario below for online sales .
2-11:A merchant Mer has 200 cricket bats available for sale with a unit price of 10 dollars .
2-12:A customer Cus has $50 .
2-13:Cus has a goal of obtaining from Mer a cricket bat at some time .
2-14:There are two options for Cus to pay .
2-15:If Cus uses credit payment, Mer needs a bank Ebank to check Cus"s credit .
2-16:If Cus"s credit is approved, Ebank will arrange the credit payment .
2-17:Otherwise, Cus may then take the option to pay via PayPal .
2-18:The interaction ends when goods are delivered and payment is arranged .
2-19:A flexible approach to this example should include several features .
2-20:Firstly, the payment method used by Cus should be at Cus"s own choice and have the property that if Cus"s credit check results in a disapproval, this exception should also be handled automatically by Cus"s switching to PayPal .
2-21:Secondly, there should be no unnecessary constraint on the order in which actions are performed, such as which of making payments and sending the cricket bat should come first .
2-22:Thirdly, choosing a sequence of interactive actions should be based on reasoning about the intrinsic meanings of protocol actions, which are based on the notion of commitment, i.e .
2-23:which refers to a strong promise to other agent(s) to undertake some courses of action .
2-24:Current approaches [11, 12, 10, 1] to achieve flexibilities using the notion of commitment make use of an abstract layer of commitments .
2-25:However, in these approaches, a mapping from protocol actions onto operations on commitments 124 978 81 904262 7 5 c 2007 IFAAMAS as well as handling and enforcement mechanisms of commitments must be externally provided .
2-26:Execution of protocol actions also requires concurrent execution of operations on related commitments .
2-27:As a result, the overhead of processing the commitment layer makes specification and execution of protocols more complicated and error prone .
2-28:There is also a lack of a logic to naturally express aspects of resources, internal and external choices as well as time of protocols .
2-29:Rather than creating another layer of commitment outside protocol actions, we try to achieve a modeling of commitments that is integrated with protocol actions .
2-30:Both commitments and protocol actions can then be reasoned about in one consistent system .
2-31:In order to achieve that, we specify protocols in a declarative manner, i.e .
2-32:what is to be achieved rather then how agents should interact .
2-33:A key to this is using logic .
2-34:Temporal logic, in particular, is suitable for describing and reasoning about temporal constraints while linear logic [3] is quite suitable for modeling resources .
2-35:We suggest using a combination of linear logic and temporal logic to construct a commitment based interaction framework which allows both temporal and resource related reasoning for interaction protocols .
2-36:This provides a natural manipulation and reasoning mechanism as well as internal enforcement mechanisms for commitments based on proof search .
2-37:This paper is organized as follows .
2-38:Section 2 discusses the background material of linear logic, temporal linear logic and commitments .
2-39:Section 3 introduces our modeling framework and specification of protocols .
2-40:Section 4 discusses how our framework can be used for an example of online sale interactions between a merchant, a bank and a customer .
2-41:We then discuss the advantages and limitations of using our framework to model interaction protocols and achieve flexibility in Section 5 .
2-42:Section 6 presents our conclusions and items of further work. .
3 BACKGROUND :
3-1:In order to increase the agents" autonomy over their interactive behaviors, protocols should be specified in terms of what is to be achieved rather than how the agents should act .
3-2:In other words, protocols should be specified in a declarative manner .
3-3:Using logic is central to this specification process .
3-4:2.1 Linear Logic Logic has been used as formalism to model and reason about agent systems .
3-5:Linear logic [3] is well known for modeling resources as well as updating processes .
3-6:It has been considered in agent systems to support agent negotiation and planning by means of proof search [5, 8] .
3-7:In real life, resources are consumed and new resources are created .
3-8:In such logic as classical or temporal logic, however, a direct mapping of resources onto formulas is troublesome .
3-9:If we model resources like A as one dollar and B as a chocolate bar, then A ⇒ B in classical logic is read as from one dollar we can get a chocolate bar .
3-10:This causes problems as the implication allows to get a chocolate bar (B is true) while retaining one dollar (A remains true) .
3-11:In order to resolve such resource formula mapping issues, Girard proposed the constraints on which formulas will be used exactly once and can no longer be freely added or removed in derivations and hence treating linear logic formulas as resources .
3-12:In linear logic, a linear implication A B, however, allows A to be removed after deriving B, which means the dollar is gone after using one dollar to buy a chocolate bar .
3-13:Classical conjunction (and) and disjunction (or) are recast over different uses of contexts multiplicative as combining and additive as sharing to come up with four connectives .
3-14:A ⊗ (multiplicative conjunction) A, means that one has two As at the same time, which is different from A ∧ A = A .
3-15:Hence, ⊗ allows a natural expression of proportion .
3-16:A ℘ (multiplicative disjunction) B, means that if not A then B or vice versa but not both A and B .
3-17:The ability to specify choices via the additive connectives is a particularly useful feature of linear logic .
3-18:A (additive conjunction) B, stands for one own choice, either of A or B but not both .
3-19:A ⊕ (additive disjunction) B, stands for the possibility of either A or B, but we don"t know which .
3-20:As remarked in [5], and ⊕ allow choices to be made clear between internal choices (one"s own), and external choices (others" choice) .
3-21:For instance, to specify that the choice of places A or B for goods" delivery is ours as the supplier, we use A B, or is the client"s, we use A ⊕ B .
3-22:In agent systems, this duality between inner and outer choices is manifested by one agent having the power to choose between alternatives and the other having to react to whatever choice is made .
3-23:Moreover, during interaction, the ability to match consumption and supply of resources among agents can simplify the specification of resource allocations .
3-24:Linear logic is a natural mechanism to provide this ability [5] .
3-25:In addition, it is emphasized in [8] that linear logic is used to model agent states as sets of consumable resources and particularly, linear implication is used to model transitions among states and capabilities of agents .
3-26:2.2 Temporal Linear Logic While linear logic provides advantages to modeling and reasoning about resources, it does not deal naturally with time constraints .
3-27:Temporal logic, on the other hand, is a formal system which addresses the description and reasoning about the changes of truth values of logic expressions over time [2] .
3-28:Temporal logic can be used for specification and verification of concurrent and reactive programs [2] .
3-29:Temporal Linear Logic [6] is the result of introducing temporal logic into linear logic and hence is resourceconscious as well as deals with time .
3-30:The temporal operators used are (next), (anytime), and (sometime) [6] .
3-31:Formulas with no temporal operators can be considered as being available only at present .
3-32:Adding to a formula A, i.e .
3-33:A, means that A can be used only at the next time and exactly once .
3-34:Similarly, A means that A can be used at any time and exactly once .
3-35:A means that A can be used once at some time .
3-36:Though both and refer to a point in time, the choice of which time is different .
3-37:Regarding , the choice is an internal choice, as appropriate to one"s own capability .
3-38:With , the choice is externally decided by others .
3-39:2.3 Commitment The concept of social commitment has been recognized as fundamental to agent interaction .
3-40:Indeed, social commitment provides intrinsic meanings of protocol actions and states [11] .
3-41:In particular, persistence in commitments introduces into agents" consideration a certain level of predictability of other agents" actions, which is important when agents deal with issues of inter dependencies, global constraints or The Sixth Intl .
3-42:Joint Conf .
3-43:on Autonomous Agents and Multi Agent Systems (AAMAS 07) 125 resources sharing [7] .
3-44:Commitment based approaches associate protocols actions with operations on commitments and protocol states with the set of effective commitments [11] .
3-45:Completing the protocol is done via means end reasoning on commitment operations to bring the current state to final states where all commitments are resolved .
3-46:From then, the corresponding legal sequences of interactive actions are determined .
3-47:Hence, the approaches systematically enhance a variety of legal computations [11] .
3-48:Commitments can be reduced to a more fundamental form known as pre commitments .
3-49:A pre commitment here refers to a potential commitment that specifies what the owner agent is willing to commit [4], like performing some actions or achieving a particular state .
3-50:Agents can negotiate about pre commitments by sending proposals of them to others .
3-51:The others can respond by agreeing or disagreeing with the proposal or proposing another pre commitment .
3-52:Once a precommitment is agreed, it then becomes a commitment and the process moves from negotiation phase to commitment phase, in which the agents act to fulfill their commitments. .
4 MODELING AGENT INTERACTIONS :
4-1:Protocols are normally viewed external to agents and are essentially a set of commitments externally imposed on participating agents .
4-2:We take an internal view of protocols, i.e .
4-3:from the view of participating agents by putting the specification of commitments locally at the respective agents according to their roles .
4-4:Such an approach enables agents to manage their own protocol commitments .
4-5:Indeed, agents no longer accept and follow a given set of commitments but can reason about which commitments of theirs to offer and which commitments of others to take, while considering the current needs and the environment .
4-6:Protocols arise as commitments are then linked together via agents" reasoning based on proof search during the interaction .
4-7:Also, ongoing changes in the environment are taken as input into the generation of protocols by agent reasoning .
4-8:This is the reverse of other approaches which try to make the specification flexible to accommodate changes in the environment .
4-9:Hence, it is a step closer to enabling emergent protocols, which makes protocols more dynamic and flexible to the context .
4-10:In a nutshell, services are what agents are capable of providing to other agents .
4-11:Commitments can then be seen to arise from combinations of services, i.e .
4-12:an agent"s capabiliA unit of consumable resources is modeled as a proposition in linear logic .
4-13:Numeric figures can be used to abbreviate a multiplicative conjunction of the same instances .
4-14:For example, 2 dollar = dollar ⊗ dollar .
4-15:Moreover, such 3 A is a shorthand for A .
4-16:In order to address the dynamic manipulation of resources, we also include information about the location and ownership in the encoding of resources to address the relocation and changes in possession of resources during agent interaction .
4-17:That resource A is located at agent α and owned by agent β is expressed via a shorthand notation as A@αβ , which is treated as a logic proposition in our framework .
4-18:This notation can be later extended to a more complex logic construct to reason about changes in location and ownership .
4-19:In our running example, a cricket bat cricket b being located at and owned by agent Mer is denoted as cricket b@M .M After a successful sale to the agent customer Cus, the cricket bat will be relocated to and owned by agent Cus .
4-20:The formula cricket b@CC will replace the formula cricket b@MM to reflect the changes .
4-21:Our treatment of unlimited resources is to model it as a number σ of copies of the resource"s formula such that the number σ is chosen to be extremely large, relative to the context .
4-22:For instance, to indicate that the merchant Mer can issue an unlimited number of sale quotes at any time, we use σ sale quote@M .M Declaration of actions is also modeled in a similar manner as of resources .
4-23:The capabilities of agents refer to producing, consuming, relocating and changing ownership of resources .
4-24:Capabilities are represented by describing the state before and after performing them .
4-25:The general representation form is Γ Δ, in which Γ describes the conditions before and Δ describes the conditions after .
4-26:The linear implication in linear logic indeed ensures that the conditions before will be transformed into the conditions after .
4-27:Moreover, some capabilities can be applied at any number of times in the interaction context and their formulas are also preceded by the number σ .
4-28:To take an example, we consider the capability of agent Mer of selling a cricket bat for 10 dollars .
4-29:The conditions before are 10 dollars and a payment method from agent Cus: 10$@CC ⊗ pay m@C .
4-30:Given these, by applying theC capability, Mer will gain 10 dollars (10$@MM ) and com⊥ ) so that CusM mit to providing a cricket bat (cricket b@M will get a cricket bat (cricket b@CC ) .
4-31:Together, the capability is encoded as 10$@C ⊗ pay m@C 10$@MC C ⊗ cricket b@C M ⊗ ties .
4-32:Hence, our approach shifts specifying a set of protocol commitments to specifying sets of pre commitments as capabilities for each agent .
4-33:Commitments are then can be ⊥ M cricket b@M .C 3.2 Modeling commitmentsreasoned about and manipulated by the same logic mechanism as is used for the agents" actions, resources and goals, which greatly simplifies the system .
4-34:Our framework uses TLL as a means of specifying interaction protocols .
4-35:We encode various concepts such as resource, capability and commitment in TLL .
4-36:The symmetry between a formula and its negation in TLL is explored as a way to model resources and commitments .
4-37:We then discuss the central role of pre commitments, and how they are specified at each participating agent .
4-38:It then remains for agents to reason about pre commitments to form protocol commitments, We discuss the modeling of various types of commitments, their fulfillments and enforcement mechanisms .
4-39:Due to duality in linear logic, positive formulas can be regarded as formulas in supply and negative formulas can be regarded as formulas in demand .
4-40:Hence, we take an approach of modeling non conditional or base commitments as negative formulas .
4-41:In particular, by turning a formula into its negative form, a base commitment to derive the resources or carry out the actions associated with the formula is created .
4-42:In the above example, a commitment of agent Mer to ⊥ M .which are subsequently discharged .
4-43:provide a cricket bat (cricket b@MM ) is cricket b@M A base commitment is fulfilled (discharged) whenever the 3.1 Modeling resources and capabilities committing agent successfully brings about the respective 126 The Sixth Intl .
4-44:Joint Conf .
4-45:on Autonomous Agents and Multi Agent Systems (AAMAS 07) resources or carries out the actions as required by the commitment .
4-46:In TLL modeling, this means that the corresponding positive formula is derived .
4-47:Resolution of commitments can then be naturally carried out by inference in TLL .
4-48:For example, cricket b@M will fulfil the commit M ment cricket b@M⊥ and both formulas are automaticallyM removed as cricket b@MM ⊗ cricket b@M⊥ .M ⊥ Under a further assumption that agents are expected to resolve all formulas in demand (removing negative formulas), this creates a driving pressure on agents to resolve base commitments .
4-49:This pressure then becomes a natural and internal enforcement mechanism for base commitments .
4-50:A commitment with conditions (or conditional commitment) can be modeled by connecting the conditions to base commitments via a linear implication .
4-51:A general form is Γ Δ where Γ is the condition part and Δ includes base commitments .
4-52:If the condition Γ is derived, by consuming Γ, the linear implication will ensure that Δ results, which means the base commitments in Δ become effective .
4-53:If the conditions can not be achieved, the linear implication can not be applied and hence commitment part in the conditional commitment is still inactive .
4-54:In our approach, conditional commitments are specified in their potential form as pre commitments of participating agents .
4-55:Pre commitments are negotiated among agents via proposals and upon being accepted, will form conditional commitments among the engaged agents .
4-56:Conditional commitments are interpreted as that the condition Γ is required of the proposed agent and the commitment part Δ is the responsibility of the owner (proposing) agent .
4-57:Indeed, such interpretation and the encoding of realize the notion of a conditional commitment that owner agent is willing to commit to deriving Δ given the proposed agent satisfies the conditions Γ .
4-58:Conditional commitments, pre commitments and capabilities all have similar encodings .
4-59:However, their differences lie in the phases of commitment that they are in .
4-60:Capabilities are used internally by the owner agent and do not involve any commitment .
4-61:Pre commitments can be regarded as capabilities intended for forming conditional commitments .
4-62:Upon being accepted, pre commitments will turn into conditional commitments and bring the two engaged agents into a commitment phase .
4-63:As an example, consider that Mer has a capability of selling cricket bats: (10$@CC ⊗pay m@CC ) (10$@M ⊗ cricket b@M⊥ ⊗ cricket b@CC ) .
4-64:When MerM M proposes its capability to Cus, the capability acts as a precommitment .
4-65:When the proposal gets accepted, that precommitment will turn into a conditional commitment in which Mer commits to fulfilling the base commitment cricket b@M⊥ (which leads to having cricket b@CC ) uponM the condition that Cus derives 10$@CC ⊗pay m@C (whichC leads to having 10$@MM ) .
4-66:Breakable commitments which are in place to provide agents with the desired flexibility to remove itself from its commitments (cancel commitments) are also modeled naturally in our framework .
4-67:A base commitment Com⊥ is turned into a breakable base commitment (cond ⊕ Com)⊥ .
4-68:The extra token cond reflects the agent"s internal deliberation about when the commitment to derive Com is broken .
4-69:Once cond is produced, due to the logic deduction cond ⊗ (cond ⊕ Com)⊥ ⊥, the commitment (cond ⊕ Com)⊥ is removed, and hence breaking the commitment of deriving Com .
4-70:Moreover, a breakable conditional commitment is modeled as A (1 B), instead of A B .
4-71:When the condition A is provided, the linear implication brings about (1 B) and it is now up to the owner agent"s internal choice whether 1 or B is resulted .
4-72:If the agent chooses 1, which practically means nothing is derived, then the conditional commitment is deliberately broken .
4-73:3.3 Protocol Construction Given the modeling of various interaction concepts like resource, action, capability, and commitment, we will discuss how protocols can be specified .
4-74:In our framework, each agent is encoded with the resources, actions, capabilities, pre commitments, any pending commitments that it has .
4-75:Pre commitments, which stem from services the agents are capable of providing, are designated to be fair exchanges .
4-76:In a pre commitment, all the requirements of the other party are put in the condition part and all the effects to be provided by the owner agent are put on the commitment part to make up a trade off .
4-77:Such a design allows agents to freely propose pre commitments to any interested parties .
4-78:An example of pre commitments is that of an agent Merchant regarding a sale of a cricket bat: [10$@CC ⊗pay m@C 10 $@MM ⊗ cricket b@CC ⊗cricket b@M⊥ M We return to the online sales scenario introduced in Section 1 .
4-79:4.1 Specifying Protocol We design a set of pre commitments and capabilities to implement the above scenario .
4-80:For simplicity, we refer to them as rules .
4-81:Rules at agent Mer Mer has available at any time 200 cricket bats for sale and can issue sale quotes at any time: 200 cricket b@M ⊗ σ sale quote@M .M M Rule 1: Mer commits to offering a cricket bat (cricket b@M⊥ M ) to Cus ( cricket b@CC ) if Cus pays 10 dollars (10$@CC ) either via Paypal or credit card .
4-82:The choice is at Cus .
4-83:σ [10$@C ⊗ (Paypal paid@M ⊕ credit paid@MM )C M 10 $@M ⊗ cricket b@C ⊗ cricket b@M⊥ M C M ] Rule 2: If EBank carries out the credit payment to Mer then the requirement of credit payment at Mer is fulfilled: σ [credit paym@M credit paid@MM ]B Rule 3: If Ebank informs Mer of its disapproval of Cus"s credit then Mer will also let Cus know .
4-84:σ [credit not appr@M credit not appr@CB ]B Rules at agent Ebank Rule 4: Upon receiving a sale quote from Mer, at the next time point, Ebank commits to either informing Mer that Cus"s credit is not approved ( credit not appr@MB ) or arranging a credit payment to Mer ( credit paym@MB ) .
4-85:The decision is dependent on the credibility of Cus and hence is external (⊕) to Ebank and Mer: σ [sale quote@M ( credit not appr@MB ) ⊕M credit paym@MB ] Rules at agent Cus Cus has an amount of 50 dollars available at any time, can be used for credit payment or cash payment: $50@C .
4-86:Cus has a commitment of obtaining a cricket bat at some time: [ cricket b@CC ]⊥ .
4-87:Rule 5: Cus will pay Mer via Paypal if there is an indication from EBank that Cus"s credit is not approved: σ [credit not appr@C Paypal paid@MM ]B 4.2 Description of the interaction Cus requests from Mer a cricket bat at some time .
4-88:Mer replies with a proposal in which each cricket bat costs 10 dollars .
4-89:Cus needs to prepare 10 dollars and payment can be made by credit or via Paypal .
4-90:Assuming that Cus only pays via Paypal if credit payment fails, Cus will let Mer charges by credit .
4-91:Mer will then ask EBank to arrange a credit payment .
4-92:EBank proposes that Mer gives a quote of sale and depending on Cus"s credibility, at the next time point, either credit payment will be arranged or a disapproval of Cus"s credit will be informed .
4-93:Mer accepts and fulfills the conditions .
4-94:If the first case happens, credit payment is done .
4-95:If the second case happens, credit payment is failed, Cus may back track to take the option paying via Paypal .
4-96:Once payment is arranged, Mer will apply its original proposal to satisfy the Cus"s request of a cricket bat and hence removing one cricket bat and adding 10 dollars into its set of resources .
4-97:4.3 Interaction and hence, makes a request to Merchant: C to M: REQUEST [ cricket b@CC ]⊥ One applications of rule 1 can derive cricket b@C and cricket b@C cricket b@C .
4-98:Mer will propose rule 1C C at a time instance n1 to Cus as a pre commitment .
4-99:M to C: PROPOSE n1 [10$@C ⊗ (Paypal paid@M ⊕ credit paid@MM )C M 10 $@M ⊗ cricket b@C ⊗ cricket b@M⊥ M ]M C With similar analysis, Cus determines that given the conC 128 The Sixth Intl .
4-100:Joint Conf .
4-101:on Autonomous Agents and Multi Agent Systems (AAMAS 07) ditions can be satisfied, the proposals can help to derive its request .
4-102:Hence, C to M: ACCEPT Cus analyzes the conditions of the accepted proposal by proof search .
4-103:n110$@CC ; n1Paypal paid@M or n1credit paid@MM ; (*) M n110$@C ⊗ ( n1Paypal paid@M ⊕ n1credit paid@MM )C M n1(10$@C ⊗ (Paypal paid@M ⊕ credit paid@MM ))C M From (*), one way to satisfy the conditions is for Cus to derive, at the next n1 time points, 10 dollars ( n1 10$@CC ); and to choose paying via Paypal ( n1 Paypal paid@MM ) OR by credit payment ( n1 credit paid@MM ). .
5 Deriving n1 :
5-1:10$@C : as Cus has 50 dollars, it canC make use of 10 dollars: 10 $@C 10$@C n1 10$@C .C C C There are two options for payment method, the choice is at agent Cus .
5-2:We assume that Cus prefers credit payment. .
6 Deriving n1 :
6-1:credit paid@M : Cus can not deriveM this formula by itself, hence, it will make a request to Mer: C to M: REQUEST [ n1 credit paid@MM ]⊥ .
6-2:condition ( n1 credit paym@MB ) .
6-3:Hence, Mer will further make a request to EBank .
6-4:M to E: REQUEST [ n1 credit paym@MB ]⊥ Ebank searches and finds rule 4 applicable .
6-5:Because credit paym@M will be available one time point after theB rule"s application time, Ebank proposes to Mer an instance of rule 4 at the next n1 1 time points. .
7 B to M: PROPOSE n1−1 :
7-1:[quote@MM ( credit not appr@M ⊕ credit paym@MB )]B With similar analysis, Mer accepts the proposal .
7-2:M to B: ACCEPT The rule condition is fulfilled by Mer as quote@MM n1−1 quote@M .
7-3:Hence, Ebank then applies the proposalM to derive: n1−1 ( credit not appr@M ⊕ credit paym@MB ).B ⊕ indicates the choice is external to both agents .
7-4:There are two cases, Cus"s credit is approved or disapproved .
7-5:For simplicity, we show only the case where Cus"s credit is approved .
7-6:At the next (n1 1) time point, n1−1 ( credit not appr@MB ⊕ credit paym@MB ) becomes n1−1 credit paym@M n1 credit paym@M .B B As a result, at the next n1 time points, Ebank will arrange the credit payment. .
8 Mer fulfills Cus"s initial request. :
8-1:When any of n1 Paypal paid@M (if Cus pays via Pay M pal) or n1 credit paid@M (if Cus pays by credit card)M is derived, n1 (credit paym@M ⊕ Paypal paid@MM ) isM also derived, hence the payment method is arranged .
8-2:Together with the other condition 10$@C being satisfied,C this allows the initial proposal to be applied by Mer to derive n1 cricket b@CC and a commitment of n1 cricket b@M⊥ M for Mer, which is also resolved by the resource cricket b@MM available at Mer .
8-3:Any values of n1 such that n1 − 1 ≥ 0 ⇔ n1 ≥ 1 will allow Mer to fulfill Cus"s initial request of [ cricket b@CC ]⊥ .
8-4:The interaction ends as all commitments are resolved .
8-5:4.4 Flexibility The desired flexibility has been achieved in the example .
8-6:It is Cus"s own decision to proceed with the preferred payment method .
8-7:Also, non determinism that whether Cus"s credit is disapproved or credit payment is made to Mer is faithfully represented .
8-8:If an exception happens that Cus"s credit is not approved, credit not appr@C is produced andB Cus can backtrack to paying via Paypal .
8-9:Rule 5 will then be utilized to allow Cus to handle the exception by paying via Paypal .
8-10:Moreover, in order to specify that making payments and sending cricket bats can be in any order, we can add in front of payment method in rule 1 as follows: σ [10$@C ⊗ (Paypal paid@M ⊕ credit paid@MM )C M 10 $@M ⊗ cricket b@C ⊗ cricket b@M⊥ M ].M C This addition in the condition of the rule means that the time of payment can be any time up to Cus"s choice, as long as Cus pays and hence, the time order between making payments and sending goods becomes flexible. .
9 ENCODING ISSUES :
9-1:5.1 Advantages of TLL framework Our TLL framework has demonstrated natural and expressive specification of agent interaction protocols .
9-2:Linear implication ( ) expresses causal relationship, which makes it natural to model a removal or a consumption, especially of resources, together with its consequences .
9-3:Hence, in our framework, resource transformation is modeled as a linear implication of the consumed resources to the produced resources .
9-4:Resource relocation is modeled as a linear implication from a resource at one agent to that resource at the other agent .
9-5:Linear implication also ensures that fulfillment of the conditions of a conditional commitment will cause the commitments to happen .
9-6:Moreover, state updates of agents are resulted from a linear implication from the old state to the current state .
9-7:Temporal operators ( , and ) and their combinations help to specify the time of actions, of resource availability and express the time order of events .
9-8:Particularly, precise time points are described by the use of operator or multiple copies of it .
9-9:Based on this ability to specify correct time points for actions or events, time order or sequencing of them can also be captured .
9-10:Also, a sense of duration is simulated by spreading copies of the resources or actions" formulas across multiple adjacent time points .
9-11:Moreover, uncertainty in time can represented and reasoned about by the use of and and their combinations with .
9-12:can be used to express outer non determinism while expresses inner non determinism .
9-13:These time properties of resources, actions and events are correctly respected through out the agent reasoning process based on sequent calculus rules .
9-14:Furthermore, the centrality of the notion of commitment in agent interaction has been recognized in many frameworks [11, 12, 1, 10, 4] .
9-15:However, to the best of our knowledge, modeling commitments directly at the propositional level of such a resource conscious and time aware logic as TLL is The Sixth Intl .
9-16:Joint Conf .
9-17:on Autonomous Agents and Multi Agent Systems (AAMAS 07) 129 firstly investigated in our framework .
9-18:Our framework models base commitments as negative formulas and conditional commitments via the use of linear implication and or negative formulas .
9-19:The modeling of commitments has a number of advantages: • Commitments are represented directly at the propositional logic level or via a logic connective rather than a non logical construct like [11], which makes treatment of commitments more natural and simple and allows to make use of readily available proof search systems like using sequent calculus for handling commitments .
9-20:Existing logic connectives like ⊗, , ⊕, are also readily available for describing the relationships among commitments .
9-21:• Fulfillment of commitments then becomes deriving the corresponding positive formulas or condition formulas, which then simply reduces to a proof search task .
9-22:Also, given the required formulas, fulfillment of commitments can be implemented easily and automatically as deduction (com ⊗ com⊥ ⊥) .
9-23:The enforcement of commitments is also internal and• simply implemented via the assumption that agents are driven to remove all negative formulas for base commitments and via the use of linear implication for conditional commitments .
9-24:Regarding making protocol specification more flexible, our approach has marked a number of significant points .
9-25:Firstly, flexibility of protocol specifications in our framework comes from the expressive power of the connectives of TLL .
9-26:and ⊕ refer to internal and external choices of agents on resources and actions while and refer to internal choices and external choices in time domain .
9-27:Given that flexibility includes the ability to make a sensible choice, having the choices expressed explicitly in the specification of interaction protocols provides agents with an opportunity to reason about the right choices during interaction and hence explore the flexibility in them .
9-28:Secondly, instead of being sequences of interactive actions, protocols are structured on commitments, which are more abstract than protocol actions .
9-29:Execution of protocols is then based on fulfilling commitments .
9-30:Hence, unnecessary constraints on which particular interactive actions to execute by which agents and on the order among them are now removed, which is a step forward to flexibility as compared to traditional approaches .
9-31:On the other hand, in the presence of changes introduced externally, agents have the freedom to explore new sets of interactive actions or skip some interactive actions ahead as long as they still fulfill the protocol"s commitments .
9-32:This brings more flexibility to the overall level of agents" interactive behaviors, and thus the protocol .
9-33:Thirdly, the protocol is specified in a declarative manner essentially as sets of pre commitments at each participating agents .
9-34:To achieve goals, agents use reasoning based on TLL sequent calculus to construct proofs of goals from pre commitments and state formulas .
9-35:This essentially gives agents an autonomy in utilization of pre commitments and hence agents can adapt the ways they use these to flexibly deal with changing environments .
9-36:In particular, as proof construction by agents selects a sequence of pre commitments for interaction, being able to select from all the possible combinations of pre commitments in proof search gives more chances and flexibility than selecting from only a few fixed and predefined sequences .
9-37:It is then also more likely to allow agents to handle exceptions or explore opportunities that arise .
9-38:Moreover, as the actual order of pre commitments is determined by the proof construction process rather than predefined, agents can flexibly change the order to suit new situations .
9-39:Fourthly, changes in the environment can be regarded as removing or adding formulas onto the state formulas .
9-40:Because the proof construction by agents takes into account the current state formulas when it picks up pre commitments, changes in the state formulas will be reflected in the choice of which relevant pre commitments to proceed .
9-41:Hence, the agents have the flexibility in deciding what to do to deal with changes .
9-42:Lastly, specifying protocols in our framework has a modular approach which adds ease and flexibility to the designing process of protocols .
9-43:Protocols are specified by placing a set of pre commitments at each participating agent according to their roles .
9-44:Each pre commitment can indeed be specified as a process in its own with condition formulas as its input and commitment part"s formulas as its output .
9-45:Execution of each conditional commitment is a relatively independent thread and they are linked together by the proof search to fulfill agents" commitments .
9-46:As a results, with such a design of pre commitments, one pre commitment can be added or removed without interfering the others and hence, achieving a modular design of the protocols .
9-47:5.2 Limitations of TLL Framework on Modeling As all the temporal operators in TLL refer to concrete time points, we can not express durations in time faithfully .
9-48:One major disadvantage of simulating a duration of an event by spreading copies of that event over adjacent time points A⊗ 10 continuously (like A⊗ 2 .
9-49:.
9-50:.
9-51:A) is that it requires the time range to be provided explicitly .
9-52:Hence, such notion like until can not be naturally expressed in TLL .
9-53:Commitments of agents can be in conflict, especially when resolving all of them requires more resources or actions than what agents have .
9-54:Our work has not covered handling commitments that are in conflict .
9-55:Another troublesome aspect of this approach is that the rules for interaction require some detailed knowledge of the formulas of temporal linear logic .
9-56:Clearly it would be beneficial to have a visually based tool similar to UML diagrams which would allow non experts to specify the appropriate rules without having to learn the details of the formulas themselves. .
10  ABSTRACT :
10-1:This paper uses TLL for specifying interaction protocols
10-2:In particular, TLL is used to model the concept of resource, capability, pre commitment and commitment with tight integration as well as their manipulations with respect to time
10-3:Agents then make use of proof search techniques to perform the desired interactions
10-4:In particular, the approach allows protocol specifications to capture the meaning of interactive actions via commitments, to capture the internal choices and external choices of agents about resources, commitments and about time as well as updating processes
10-5:The proof construction mechanism 130 The Sixth Intl
10-6:Joint Conf
10-7:on Autonomous Agents and Multi Agent Systems (AAMAS 07) provides agents with the ability to dynamically select appropriate pre commitments, and hence, help agents to gain the flexibility in choosing the interactive actions that are most suitable and the flexibility in the order of them, taking into consideration on going changes in the environment
10-8:Many other approaches to modeling protocols also use the commitment concept to bring more meaning into agents" interactive actions
10-9:Approaches based on commitment machines [11, 12, 10, 1] endure a number of issues
10-10:These approaches use logic systems that are limited in their expressiveness to model resources
10-11:Also, as an extra abstract layer of commitments is created, more tasks are created accordingly
10-12:In particular, there must be a human designed mapping between protocol actions and operations on commitments as well as between control variables (fluent) and phases of commitment achievement
10-13:Moreover, external mechanisms must be in place to comprehend and handle operations and resolution of commitments as well as enforcement of the notion of commitment on its abstract data type representations
10-14:This requires another execution in the commitment layer in conjunction with the actual execution of the protocol
10-15:Not only these extra tasks create an overhead but also makes the specification and execution of protocols more error prone
10-16:Similar works in [8] and [9] explore the advantages of linear logic and TLL respectively by using partial deduction techniques to help agents to figure out the missing capabilities or resources and based on that, to negotiate with other agents about cooperation strategies
10-17:Our approach differs in bringing the concept of commitment into the modeling of interaction, and providing a more natural and detailed map for specifying interaction, especially about choices, time and updating using the full propositional TLL
10-18:Moreover, we emphasize on the use of pre commitments as interaction rules with a full set of TLL inference rules to provide the advantages of proof construction in achieving flexible interaction
10-19:Our further work will include using TLL to verify various properties of interaction protocols such as liveness and safety
10-20:Also, we will investigate developing an execution mechanism for such TLL specifications in our framework
10-21:Acknowledgments We are very thankful to Michael Winikoff for many stimulating and helpful discussions of this material
10-22:We also would like to acknowledge the support of the Australian Research Council under grant DP0663147.
11 ABSTRACT :
11-1:A
11-2:K
11-3:Chopra and M
11-4:P
11-5:Singh
11-6:Contextualizing commitment protocol
11-7:In AAMAS "06: Proceedings of the fifth international joint conference on Autonomous agents and multiagent systems, pages 1345 1352, New York, NY, USA, 2006
11-8:ACM Press
11-9:E
11-10:A
11-11:Emerson
11-12:Temporal and modal logic
11-13:Handbook of Theoretical Computer Science, B, Chapter 16:995 1072, 1990
11-14:J. Y
11-15:Girard
11-16:Linear logic
11-17:Theoretical Computer Science, 50:1 102, 1987
11-18:A
11-19:Haddadi
11-20:Communication and Cooperation in Agent Systems: a pragmatic theory
11-21:Springer Verlag, Berlin Heidelberg, 1995
11-22:J
11-23:Harland and M
11-24:Winikoff
11-25:Agent negotiation as proof search in linear logic
11-26:In AAMAS "02: Proceedings of the first international joint conference on Autonomous agents and multiagent systems, pages 938 939, New York, NY, USA, 2002
11-27:ACM Press
11-28:T
11-29:Hirai
11-30:Temporal Linear Logic and Its Applications
11-31:PhD thesis, Graduate School of Science and Technology, Kobe University, 2000
11-32:N
11-33:R
11-34:Jennings
11-35:Commitments and conventions: The foundation of coordination in multi agent systems
11-36:The Knowledge Engineering Review, 8(3):223 250, 1993
11-37:P
11-38:K¨ungas
11-39:Linear logic, partial deduction and cooperative problem solving
11-40:In J
11-41:A
11-42:Leite, A
11-43:Omicini, L
11-44:Sterling, and P
11-45:Torroni, editors, Declarative Agent Languages and Technologies, First International Workshop, DALT 2003
11-46:Melbourne, Victoria, July 15th, 2003
11-47:Workshop Notes, pages 97 112, 2003
11-48:P
11-49:K¨ungas
11-50:Temporal linear logic for symbolic agent negotiation
11-51:Lecture Notes in Artificial Intelligence, 3157:23 32, 2004
11-52:M
11-53:Venkatraman and M
11-54:P
11-55:Singh
11-56:Verifying compliance with commitment protocols
11-57:Autonomous Agents and Multi Agent Systems, 2(3):217 236, 1999
11-58:P
11-59:Yolum and M
11-60:P
11-61:Singh
11-62:Commitment machines
11-63:In Proceedings of the 8th International Workshop on Agent Theories, Architectures, and Languages (ATAL 01), pages 235 247
11-64:Springer Verlag, 2002
11-65:P
11-66:Yolum and M
11-67:P
11-68:Singh
11-69:Flexible protocol specification and execution: applying event calculus planning using commitments
11-70:In AAMAS "02: Proceedings of the first international joint conference on Autonomous agents and multiagent systems, pages 527 534, New York, NY, USA, 2002
11-71:ACM Press
11-72:APPENDIX
picture:
