A Framework for Architecting Peer-to-Peer Receiver-driven 
content:
1 ABSTRACT :
1-1:This paper presents a simple and scalable framework for architecting peer to peer overlays called Peer to peer Receiverdriven Overlay (or PRO) .
1-2:PRO is designed for non interactive streaming applications and its primary design goal is to maximize delivered bandwidth (and thus delivered quality) to peers with heterogeneous and asymmetric bandwidth .
1-3:To achieve this goal, PRO adopts a receiver driven approach where each receiver (or participating peer) (i) independently discovers other peers in the overlay through gossiping, and (ii) selfishly determines the best subset of parent peers through which to connect to the overlay to maximize its own delivered bandwidth .
1-4:Participating peers form an unstructured overlay which is inherently robust to high churn rate .
1-5:Furthermore, each receiver leverages congestion controlled bandwidth from its parents as implicit signal to detect and react to long term changes in network or overlay condition without any explicit coordination with other participating peers .
1-6:Independent parent selection by individual peers dynamically converge to an efficient overlay structure .
1-7:Categories and Subject Descriptors: C.2.4 [ComputerCommunication Networks]: Distributed Systems Limited deployment of IP multicast has motivated a new distribution paradigm over the Internet based on overlay networks where a group of participating end systems (or peers) form an overlay structure and actively participate in distribution of content without any special support from the network (e.g., [7]) .
1-8:Since overlay structures are layered over the best effort Internet, any approach for constructing overlay should address the following fundamental challenges: (i) Scalability with the number of participating peers, (ii) Robustness to dynamics of peer participation, (iii) Adaptation to variations of network bandwidth, and (iv) Accommodating heterogeneity and asymmetry of bandwidth connectivity among participating peers[19] .
1-9:Coping with bandwidth variations, heterogeneity and asymmetry are particularly important in design of peer to peer overlay for streaming applications because delivered quality to each peer is directly determined by its bandwidth connectivity to (other peer(s) on) the overlay .
1-10:This paper presents a simple framework for architecting Peer to peer Receiver driven Overlay, called PRO .
1-11:PRO can accommodate a spectrum of non interactive streaming applications ranging from playback to lecture mode live sessions .
1-12:The main design philosophy in PRO is that each peer should be allowed to independently and selfishly determine the best way to connect to the overlay in order to maximize its own delivered quality .
1-13:Toward this end, each peer can connect to the overlay topology at multiple points (i.e., receive content through multiple parent peers) .
1-14:Therefore, participating peers form an unstructured overlay that can gracefully cope with high churn rate[5] .
1-15:Furthermore, having multiple parent peers accommodates bandwidth heterogeneity and asymmetry while improves resiliency against dynamics of peer participation .
1-16:PRO consists of two key components: (i) Gossip based Peer Discovery: Each peer periodically exchanges message (i.e., gossips) with other known peers to progressively learn about a subset of participating peers in the overlay that are likely to be good parents .
1-17:Gossiping provides a scalable and efficient approach to peer discovery in unstructured peer to peer networks that can be customized to guide direction of discovery towards peers with desired properties (e.g., peers with shorter distance or higher bandwidth) .
1-18:(ii) Receiver driven Parent Selection: Given the collected information about other participating peers by gossiping mechanism, each peer (or receiver) gradually improves its own delivered quality by dynamically selecting a proper subset of parent peers that collectively maximize provided bandwidth to the receiver .
1-19:Since the available bandwidth from different participating peers to a receiver (and possible correlation among them) can be measured only at that receiver, a receiver driven approach is the natural solution to maximize available bandwidth to heterogeneous peers .
1-20:Furthermore, the available bandwidth from parent peers serves as an implicit signal for a receiver to detect and react to changes in network or overlay condition without any explicit coordination with other participating peers .
1-21:Independent parent selection by individual peers leads to an efficient overlay that maximizes delivered quality to each peer .
1-22:PRO incorporates 42 several damping functions to ensure stability of the overlay despite uncoordinated actions by different peers .
1-23:PRO is part of a larger architecture that we have developed for peer to peer streaming .
1-24:In our earlier work, we developed a mechanism called PALS [18] that enables a receiver to stream layered structured content from a given set of congestion controlled senders .
1-25:Thus, PRO and PALS are both receiver driven but complement each other .
1-26:More specifically, PRO determines a proper subset of parent peers that collectively maximize delivered bandwidth to each receiver whereas PALS coordinates in time streaming of different segments of multimedia content from these parents despite unpredictable variations in their available bandwidth .
1-27:This division of functionality provides a great deal of flexibility because it decouples overlay construction from delivery mechanism .
1-28:In this paper, we primarily focus on the overlay construction mechanism, or PRO .
1-29:The rest of this paper is organized as follows: In Section 2, we revisit the problem of overlay construction for peerto peer streaming and identify its two key components and explore their design space .
1-30:We illustrate the differences between PRO and previous solutions, and justify our design choices .
1-31:We present our proposed framework in Section 3 .
1-32:In Sections 4 and 5, the key components of our framework are described in further detail .
1-33:Finally, Section 6 concludes the paper and presents our future plans. .
2 REVISITING THE PROBLEM :
2-1:Constructing a peer to peer overlay for streaming applications should not only accommodate global design goals such as scalability and resilience but also satisfy the local design goal of maximizing delivered quality to individual peers 1 .
2-2:More specifically, delivered quality of streaming content to each peer should be proportional to its incoming access link bandwidth .
2-3:Achieving these goals is particularly challenging because participating peers often exhibit heterogeneity and asymmetry in their bandwidth connectivity .
2-4:Solutions for constructing peer to peer overlays often require two key mechanisms to be implemented at each peer: Peer Discovery and Parent Selection .
2-5:The PD mechanism enables each peer to learn about other participating peers in the overlay .
2-6:Information about other peers are used by the PS mechanism at each peer to determine proper parent peers through which it should connect to the overlay .
2-7:The collective behavior of PD and PS mechanisms at all participating peers leads to an overlay structure that achieves the above design goals .
2-8:There has been a wealth of previous research that explored design space of the PD and PS mechanisms as follows: Peer Discovery: In structured peer to peer networks, the existing structure enables each peer to find other participating peers in a scalable fashion (e.g., [4]) .
2-9:However, structured peer to peer networks may not be robust against high churn rate [5] .
2-10:In contrast, unstructured peer to peer networks can gracefully accommodate high churn rate [5] but require a separate peer discovery mechanism .
2-11:Meshfirst approaches (e.g., [7, 6]) that require each peer to know about all other participating peers as well as centralized approaches (e.g., [16]) to peer discovery exhibit limited scalability .
2-12:NICE [2] leverages a hierarchal structure to achieve 1 It is worth clarifying that our design goal is different from common goals in building application level multicast trees [7] (i.e., minimizing stretch and stress) .
2-13:scalability but each peer only knows about a group of closeby peers who may not be good parents (i.e., may not provide sufficient bandwidth) .
2-14:Parent Selection: We examine two key aspects of parent selections: (i) Selection Criteria: There are two main criteria for parent selections: relative delay and available bandwidth between two peers .
2-15:Relative delay between any two peers can be estimated in a scalable fashion with one of the existing landmark based solutions such as Global Network Positioning [15] .
2-16:However, estimating available bandwidth between two peers requires end to end measurement .
2-17:Using available bandwidth as criteria for parent selection does not scale for two reasons: First, to cope with dynamics of bandwidth variations, each peer requires to periodically estimate the available bandwidth from all other peers through measurement (e.g., [6]) .
2-18:Second, the probability of interference among different measurements grows with the number of peers in an overlay (similar to joint experiment in RLM [13]) .
2-19:Most of the previous solutions adopted the idea of application level multicast and used delay as the main selection criteria .
2-20:Participating peers cooperatively run a distributed algorithm to organize themselves into a source rooted tree structure in order to minimize either overall delay across all branches of the tree (e.g., [7]), or delay between source and each receiver peer (e.g., [20]) .
2-21:While these parent selection strategies minimize associated network load, they may not provide sufficient bandwidth to individual peers because delay is often not a good indicator for available bandwidth between two peers [12, 14] .
2-22:The key issue is that minimizing overall delay (global design goal) and maximizing delivered bandwidth to each peer (local design goal) could easily be in conflict .
2-23:More specifically, parent peers with longer relative distance may provide higher bandwidth than close by parents .
2-24:This suggests that there might exist a tradeoff between maximizing provided bandwidth to each peer and minimizing overall delay across the overlay .
2-25:(ii) Single vs Multiple Parents: A single tree structure for the overlay (where each peer has a single parent) is inherently unable to accommodate peers with heterogeneous and asymmetric bandwidth .
2-26:A common approach to accommodating bandwidth heterogeneity is to use layer structured content (either layered or multiple description encodings) and allow each receiver to have multiple parents .
2-27:This approach could accommodate heterogeneity but it introduces several new challenges .
2-28:First, parent selection strategy should be determined based on location of a bottleneck .
2-29:If the bottleneck is at the (outgoing) access links of parent peers 2 , then a receiver should simply look for more parents .
2-30:However, when the bottleneck is else where in the network, a receiver should select parents with a diverse set of paths (i.e., utilize different network paths) .
2-31:In practice, a combination of these cases might simultaneously exist among participating peers [1] .
2-32:Second, streaming a single content from multiple senders is challenging for two reasons: 1) This requires tight coordination among senders to determine overall delivered quality (e.g., number of layers) and decide which sender is responsible for delivery of each segment .
2-33:2) Delivered segments from different senders should arrive before their playout times despite uncorrelated vari2 if bottleneck is at the receiver"s access link, then provided bandwidth to the receiver is already maximized .
2-34:43 ations in (congestion controlled) bandwidth from different senders .
2-35:This also implies that those solutions that build multi parent overlay structure but do not explicitly ensure in time delivery of individual segments (e.g., [3, 11]) may not be able to support streaming applications .
2-36:One approach to build a multi parent overlay is to organize participating peers into different trees where each layer of the stream is sent to a separate tree (e.g., [4, 16]) .
2-37:Each peer can maximize its quality by participating in a proper number of trees .
2-38:This approach raises several issues: 1) the provided bandwidth to peers in each tree is limited by minimum uplink bandwidth among upstream peers on that tree .
2-39:In the presence of bandwidth asymmetry, this could easily limit delivered bandwidth on each tree below the required bandwidth for a single layer, 2) it is not feasible to build separate trees that are all optimal for a single selection criteria (e.g., overall delay), .
2-40:3) connections across different trees are likely to compete for available bandwidth on a single bottleneck3 .
2-41:We conclude that a practical solution for peer topeer streaming applications should incorporate the following design properties: (i) it should use an unstructured, multiparent peer to peer overlay, (ii) it should provide a scalable peer discovery mechanism that enables each peer to find its good parents efficiently, (iii) it should detect (and possibly avoid) any shared bottleneck among different connections in the overlay, and (iv) it should deploy congestion controlled connections but ensure in time arrival of delivered segments to each receiver .
2-42:In the next section, we explain how PRO incorporates all the above design properties. .
3 P2P RECEIVER DRIVEN OVERLAY :
3-1:Assumptions: We assume that each peer can estimate the relative distance between any two peers using the GNP mechanism [15] .
3-2:Furthermore, each peer knows the incoming and outgoing bandwidth of its access link .
3-3:Each peer uses the PALS mechanism to stream content from multiple parent peers .
3-4:All connections are congestion controlled by senders (e.g., [17]) .
3-5:To accommodate peer bandwidth heterogeneity, we assume that the content has a layered representation .
3-6:In other words, with proper adjustment, the framework should work with both layered and multipledescription encodings .
3-7:Participating peers have heterogeneous and asymmetric bandwidth connectivity .
3-8:Furthermore, peers may join and leave in an arbitrary fashion .
3-9:Overview: In PRO, each peer (or receiver) progressively searches for a subset of parents that collectively maximize delivered bandwidth and minimize overall delay from all parents to the receiver .
3-10:Such a subset of parents may change over time as some parents join (or leave) the overlay, or available bandwidth from current parents significantly changes .
3-11:Note that each peer can be both receiver and parent at the same time 4 .
3-12:Each receiver periodically exchanges messages (i.e., gossips) with other peers in the overlay to learn about those participating peers that are potentially good parents .
3-13:Potentially good parents for a receiver are identified based on their relative utility for the receiver .
3-14:The utility of a parent peer pi for a receiver pj is a function of their relative network distance (delij) and the outgoing access link bandwidth of the parent (outbwi), (i.e., U(pi, pj) 3 These multi tree approaches often do not use congestion control for each connection .
3-15:4 Throughout this paper we use receiver and parent as short form for receiver peer and parent peer .
3-16:= f(delij, outbwi)) .
3-17:Using parents" access link bandwidth instead of available bandwidth has several advantages: (i) outgoing bandwidth is an upper bound for available bandwidth from a parent .
3-18:Therefore, it enables the receiver to roughly classify different parents .
3-19:(ii) estimating available bandwidth requires end to end measurement and such a solution does not scale with the number of peers, and more importantly, (iii) given a utility function, this approach enables any peer in the overlay to estimate relative utility of any other two peers .
3-20:Each receiver only maintains information about a fixed (and relatively small) number of promising parent peers in its local image .
3-21:The local image at each receiver is dynamically updated with new gossip messages as other peers join leave the overlay .
3-22:Each peer selects a new parent in a demand driven fashion in order to minimize the number of end to end bandwidth measurements, and thus improve scalability .
3-23:When a receiver needs a new parent, its PS mechanism randomly selects a peer from its local image where probability of selecting a peer directly depends on its utility .
3-24:Then, the actual properties (i.e., available bandwidth and delay) of the selected parent are verified through passive measurement .
3-25:Toward this end, the selected parent is added to the parent list which triggers PALS to request content from this parent .
3-26:Figure 1 depicts the interactions between PD and PS mechanisms .
3-27:In PRO, each receiver leverages congestion controlled bandwidth from its parents as an implicit signal to detect two events: (i) any measurable shared bottleneck among connections from different parents, and (ii) any change in network or overlay conditions (e.g., departure or arrival of other close by peers) .
3-28:Figure 2 shows part of an overlay to illustrate this feature .
3-29:Each receiver continuously monitors available bandwidth from all its parents .
3-30:Receiver p0 initially has only p1 as a parent .
3-31:When p0 adds a new parent (p2), the receiver examines the smoothed available bandwidth from p1 and p2 and any measurable correlation between them .
3-32:If the available bandwidth from p1 decreases after p2 is added, the receiver can conclude that these two parents are behind the same bottleneck (i.e., link L0) .
3-33:We note that paths from two parents might have some overlap that does not include any bottleneck .
3-34:Assume another receiver p3 selects p1 as a parent and thus competes with receiver p0 for available bandwidth on link L1 .
3-35:Suppose that L1 becomes a bottleneck and the connection between p1 to p3 obtains a significantly higher share of L1"s bandwidth than connection between p1 to p0 .
3-36:This change in available bandwidth from p1 serves as a signal for p0 .
3-37:Whenever a receiver detects such a drop in bandwidth, it waits for a random period of time (proportional to the available bandwidth) and then drops Source Peer Disc .
3-38:Peer Selec .
3-39:gossip Exam .
3-40:a New Parent Criteriafor PeerDiscovery Update LocalImage oftheOverlay Unknown peers in the overlay Known peers in the overlay Select Internal Components of Receiver Peer Receiver Peer Figure 1: Interactions between PD and PS mechanisms through local image 44 P1 P3 P0 L0 L1 L3 Overlay connection Network Path P2 L2 P1 P3 P0 L0 L1 L3 P2 L2 Initial Overlay Reshaped Overlay Figure 2: Using congestion controlled bandwidth as signal to reshape the overlay the corresponding parent if its bandwidth remains low [8] .
3-41:Therefore, the receiver with a higher bandwidth connectivity (p3) is more likely to keep p1 as parent whereas p0 may examine other parents with higher bandwidth including p3 .
3-42:The congestion controlled bandwidth signals the receiver to properly reshape the overlay .
3-43:We present a summary of key features and limitations of PRO in the next two sections .
3-44:Table 1 summarizes our notation throughout this paper .
3-45:Main Features: Gossiping provides a scalable approach to peer discovery because each peer does not require global knowledge about all group members, and its generated traffic can be controlled .
3-46:The PD mechanism actively participates in peer selection by identifying peers for the local image which limits the possible choices of parents for the PS mechanism .
3-47:PRO constructs a multi parent, unstructured overlay .
3-48:But PRO does not have the same limitations that exist in multi tree approaches because it allows each receiver to independently micro manage its parents to maximize its overall bandwidth based on local information .
3-49:PRO conducts passive measurement not only to determine available bandwidth from a parent but also to detect any shared bottleneck between paths from different parents .
3-50:Furthermore, by selecting a new parent from the local image, PRO increases the probability of finding a good parent in each selection, and thus significantly decreases number of required measurements which in turn improves scalability .
3-51:PRO can gracefully accommodate bandwidth heterogeneity and asymmetry among peers since PALS is able to manage delivery of content from a group of parents with different bandwidth .
3-52:Limitations and Challenges: The main hypothesis in our framework is that the best subset of parents for each receiver are likely to be part of its local image i.e., PD mechanism can find the best parents .
3-53:Whenever this condition is not satisfied, either a receiver may not be able to maximize its overall bandwidth or resulting overlay may not be efficient .
3-54:Table 1: Notation used throughout the paper Symbol Definition .
3-55:pi Peer i inbwi Incoming access link BW for pi outbwi Outgoing access link BW for pi min nopi Min .
3-56:No of parents for pi max nopi Max .
3-57:No of parents for pi nopi(t) No of active parents for pi at time t img sz Size of local image at each peer sgm Size of gossip message delij Estimated delay between pi and pj Clearly, properties of the selected utility function as well as accuracy of estimated parameters (in particular using outgoing bandwidth instead of available bandwidth) determine properties of the local image at each peer which in turn affects performance of the framework in some scenarios .
3-58:In these cases, the utility value may not effectively guide the search process in identifying good parents which increases the average convergence time until each peer finds a good subset of parents .
3-59:Similar to many other adaptive mechanisms (e.g., [13]), the parent selection mechanism should address the fundamental tradeoff between responsiveness and stability .
3-60:Finally, the congestion controlled bandwidth from parent peers may not provide a measurable signal to detect a shared bottleneck when level of multiplexing is high at the bottleneck link .
3-61:However, this is not a major limitation since the negative impact of a shared bottleneck in these cases is minimal .
3-62:All the above limitations are in part due to the simplicity of our framework and would adversely affect its performance .
3-63:However, we believe that this is a reasonable design tradeoff since simplicity is one of our key design goals .
3-64:In the following sections, we describe the two key components of our framework in further details. .
4 GOSSIP BASED PEER DISCOVERY :
4-1:Peer discovery at each receiver is basically a search among all participating peers in the overlay for a certain number (img sz) of peers with the highest relative utility .
4-2:PRO adopts a gossip like [10] approach to peer discovery .
4-3:Gossiping (or rumor spreading) has been frequently used as a scalable alternative to flooding that gradually spreads information among a group of peers.However, we use gossiping as a search mechanism [9] for finding promising parents since it has two appealing properties (i) the volume of exchanged messages can be controlled, and (ii) the gossip based information exchange can be customized to leverage relative utility values to improve search efficiency .
4-4:The gossip mechanism works as follow: each peer maintains a local image that contains up to img sz records where each record represents the following information for a previously discovered peer pi in the overlay: 1) IP address, 2) GNP coordinates, 3) number of received layers, 4) timestamp when the record was last generated by a peer, 5) outbwi and 6) inbwi .
4-5:To bootstrap the discovery process, a new receiver needs to learn about a handful of other participating peers in the overlay .
4-6:This information can be obtained from the original server (or a well known rendezvous point) .
4-7:The server should implement a strategy for selecting the initial peers that are provided to each new receiver .
4-8:We call this the initial parent selection mechanism .
4-9:Once the initial set of peers are known, each peer pi periodically invokes a target selection mechanism to determine a target peer (pj) from its local image for gossip .
4-10:Given a utility function, peer pi uses a content selection strategy to select sgm records (or smaller number when sgm records are not available) from its local image that are most useful for pj and send those records to pj .
4-11:In response, pj follows the same steps and replies with a gossip message that includes sgm records from its local image that are most useful for pi, i.e., bidirectional gossip .
4-12:When a gossip message arrives at each peer, an image maintenance scheme integrates new records into the current local image and discards excess records such that certain property of the local image is improved (e.g., increase overall utility of peers in the image) Aggregate performance of 45 a gossip mechanism can be presented by two average metrics and their distribution among peers: (i) Average Convergence Time: average number of gossip messages until all peers in an overlay reach their final images, and (ii) Average Efficiency Ratio: average ratio of unique records to the total number of received records by each peer .
4-13:We have been exploring the design space of four key components of the gossip mechanism .
4-14:Frequency and size of gossip messages determine average freshness of local images .
4-15:Currently, the server randomly selects the initial parents from its local image for each new peer .
4-16:Target Selection: Target selection randomly picks a peer from the current image to evenly obtain information from different areas of the overlay and speed up discovery .
4-17:Content Selection: peer pk determines relative utility of all the peers (pj) in its local image for target peer pi, and then randomly selects sgm peers to prepare a gossip message for pi .
4-18:However, probability of selecting a peer directly depends on its utility .
4-19:This approach is biased towards peers with higher utility but its randomness tend to reduce number of duplicate records in different gossip message from one peer (i.e., improves efficiency) .
4-20:A potential drawback of this approach is the increase in convergence time .
4-21:We plan to examine more efficient information sharing schemes such as bloom filters [3] in our future work .
4-22:PRO uses joint ranking [15] to determine relative utility of a parent for a receiver .
4-23:Given a collection of peers in a local image of pk, the jointranking scheme ranks all the peers once based on their outgoing bandwidth, and then based on their estimated delay from a target peer pi .
4-24:The utility of peer pj (U(pj, pi)) is inversely proportional to the sum of pj"s ranks in both rankings .
4-25:Values for each property (i.e., bandwidth and delay) of various peers are divided into multiple ranges (i.e., bins) where all peers within each range are assumed to have the same value for that property .
4-26:This binning scheme minimizes the sensitivity to minor differences in delay or bandwidth among different peers .
4-27:Image maintenance: Image maintenance mechanism evicts extra records (beyond img sz) that satisfy one of the following conditions: (i) represent peers with the lower utility, (ii) represent peers that were already dropped by the PS mechanism due to poor performance and (iii) have a timestamp older than a threshold .
4-28:This approach attempts to balance image quality (in terms of overall utility of existing peers) and its freshness .
4-29:Note that the gossip mechanism can discover any peer in the overlay as long as reachability is provided through overlap among local images at different peers .
4-30:The higher the amount of overlap, the higher the efficiency of discovery, and the higher the robustness of the overlay to dynamics of peer participations .
4-31:The amount of overlap among images depends on both the size and shape of the local images at each peer .
4-32:The shape of the local image is a function of the deployed utility function .
4-33:Joint ranking utility gives the same weight to delay and bandwidth .
4-34:Delay tends to bias selection towards near by peers whereas outgoing bandwidth introduces some degree of randomness in location of selected peers .
4-35:Therefore, the resulting local images should exhibit a sufficient degree of overlap. .
5 PARENT SELECTION :
5-1:The PS mechanism at each peer is essentially a progressive search within the local image for a subset of parent peers such that the following design goals are achieved: (i) maximizing delivered bandwidth 5 , (ii) minimizing the total delay from all parents to the receiver, and (iii) maximizing diversity of paths from parents (whenever it is feasible) .
5-2:Whenever these goals are in conflict, a receiver optimizes the goal with the highest priority .
5-3:Currently, our framework does not directly consider diversity of paths from different parents as a criteria for parent selection .
5-4:However, the indirect effect of shared path among parents is addressed because of its potential impact on available bandwidth from a parent when two or more parents are behind the same bottleneck .
5-5:The number of active parents (nopi(t)) for each receiver should be within a configured range [min nop, max nop] .
5-6:Each receiver tries to maximize its delivered bandwidth with the minimum number of parents .
5-7:If this goal can not be achieved after evaluation of a certain number of new parents, the receiver will gradually increase its number of parents .
5-8:This flexibility is important in order to utilize available bandwidth from low bandwidth parents, i.e., cope with bandwidth heterogeneity .
5-9:min nop determines minimum degree of resilience to parent departure, and minimum level of path diversity (whenever diverse paths are available) .
5-10:The number of children for each peer should not be limited .
5-11:Instead, each peer only limits maximum outgoing bandwidth that it is able (or willing) to provide to its children .
5-12:This allows child peers to compete for congestion controlled bandwidth from a parent which motivates child peers with poor bandwidth connectivity to look for other parents (i.e., properly reshape the overlay) .
5-13:Design of a PS mechanism should address three main questions as follows: 1) When should a new parent be selected? There is a fundamental tradeoff between responsiveness of a receiver to changes in network conditions (or convergence time after a change) and stability of the overlay .
5-14:PRO adopts a conservative approach where each peer selects a new parent in a demand driven fashion .
5-15:This should significantly reduce number of new parent selections, which in turn improves scalability (by minimizing the interference caused by new connections) and stability of the overlay structure .
5-16:A new parent is selected in the following scenarios: (i) Initial Phase: when a new peer joins the overlay, it periodically adds a new parent until it has min nop parents .
5-17:(ii) Replacing a Poorly Performing Parent: when available bandwidth from an existing parent is significantly reduced for a long time or a parent leaves the session, the receiver can select another peer after a random delay .
5-18:Each receiver selects a random delay proportional to its available bandwidth from the parent peer [8] .
5-19:This approach dampens potential oscillation in the overlay while increasing the chance for receivers with higher bandwidth connectivity to keep a parent (i.e., properly reshapes the overlay) .
5-20:(iii) Improvement in Performance: when it is likely that a new parent would significantly improve a non optimized aspect of performance (increase the bandwidth or decrease the delay) .
5-21:This strategy allows gradual improvement of the parent subset as new peers are discovered (or joined) the overlay .
5-22:The available information for each peer in the image is used as a heuristic to predict performance of a new peer .
5-23:Such an improvement should be examined infrequently .
5-24:A hysteresis mechanism 5 The target bandwidth is the lower value between maximum stream bandwidth and receiver"s incoming bandwidth .
5-25:46 is implemented in scenario (ii) and (iii) to dampen any potential oscillation in the overlay .
5-26:2) Which peer should be selected as a new parent? At any point of time, peers in the local image are the best known candidate peers to serve as parent .
5-27:In PRO, each receiver randomly selects a parent from its current image where the probability of selecting a parent is proportional to its utility .
5-28:Deploying this selection strategy by all peers lead to proportional utilization of outgoing bandwidth of all peers without making the selection heavily biased towards high bandwidth peers .
5-29:This approach (similar to [5]) leverages heterogeneity among peers since number of children for each peer is proportional to its outgoing bandwidth .
5-30:3) How should a new parent be examined? Each receiver continuously monitors available bandwidth from all parents and potential correlation between bandwidth of two or more connections as signal for shared bottleneck .
5-31:The degree of such correlation also reveals the level of multiplexing at the bottleneck link, and could serve as an indicator for separating remote bottlenecks from a local one .
5-32:Such a monitoring should use average bandwidth of each flow over a relatively long time scale (e.g., hundreds of RTT) to filter out any transient variations in bandwidth .
5-33:To avoid selecting a poorly performing parent in the near future, the receiver associates a timer to each parent and exponentially backs off the timer after each failed experience [13] .
5-34:After the initial phase, each receiver maintains a fixed number of parents at any point of time (nopi(t)) .
5-35:Thus, a new parent should replace one of the active parents .
5-36:However, to ensure monotonic improvement in overall performance of active parents, a new parent is always added before one of the existing parents is dropped (i.e., a receiver can temporarily have one extra parent) .
5-37:Given the available bandwidth from all parents (including the new one) and possible correlation among them, a receiver can use one of the following criteria to drop a parent: (i) to maximize the bandwidth, the receiver can drop the parent that contributes minimum bandwidth, (ii) to maximize path diversity among connections from parents, the receiver should drop the parent that is located behind the same bottleneck with the largest number of active parents and contributes minimum bandwidth among them .
5-38:Finally, if the aggregate bandwidth from all parents remains below the required bandwidth after examining certain number of new parents (and nopi(t) < max nop), the receiver can increase the total number of parents by one. .
6-1:In this paper, we presented a simple receiver driven framework for architecting peer to pee overlay structures called PRO
6-2:PRO allows each peer to selfishly and independently determine the best way to connect to the overlay to maximize its performance
6-3:Therefore, PRO should be able to maximize delivered quality to peers with heterogeneous and asymmetric bandwidth connectivity
6-4:Both peer discovery and peer selection in this framework are scalable
6-5:Furthermore, PRO uses congestion controlled bandwidth as an implicit signal to detect shared bottleneck among existing parents as well as changes in network or overlay conditions to properly reshape the structure
6-6:We described the basic framework and its key components, and sketched our strawman solutions
6-7:This is a starting point for our work on PRO
6-8:We are currently evaluating various aspects of this framework via simulation, and exploring the design space of key components
6-9:We are also prototyping this framework to conduct real world experiments on the Planet Lab in a near future.
7-1:A
7-2:Akella, S
7-3:Seshan, and A
7-4:Shaikh
7-5:An empirical evaluation of wide area internet bottlenecks
7-6:In Internet Measurement Conference, 2003
7-7:S
7-8:Banerjee, B
7-9:Bhattacharjee, and C
7-10:Kommareddy
7-11:Scalable application layer multicast
7-12:In ACM SIGCOMM, 2002
7-13:J
7-14:Byers, J
7-15:Considine, M
7-16:Mitzenmacher, and S
7-17:Rost
7-18:Informed Content Delivery Across Adaptive Overlay Networks
7-19:In ACM SIGCOMM, 2002
7-20:M
7-21:Castro, P
7-22:Druschel, A. M
7-23:Kermarrec, A
7-24:R
7-25:A
7-26:Nandi, and A
7-27:Singh
7-28:SplitStream: High bandwidth content distribution in a cooperative environment
7-29:In ACM SOSP, 2003
7-30:Y
7-31:Chawathe, S
7-32:Ratnasamy, L
7-33:Breslau, N
7-34:Lanham, and S
7-35:Shenker
7-36:Making gnutella like p2p systems scalable
7-37:In ACM SIGCOMM, 2003
7-38:Y
7-39:Chu, S
7-40:G
7-41:Rao, S
7-42:Seshan, and H
7-43:Zhang
7-44:Enabling conferencing applications on the internet using an overlay multicast architecture
7-45:In ACM SIGCOMM, 2001
7-46:Y
7-47:Chu, S
7-48:G
7-49:Rao, and H
7-50:Zhang
7-51:A case for end system multicast
7-52:In ACM SIGMETRICS, 2000
7-53:S
7-54:Floyd, V
7-55:Jacobson, C
7-56:Liu, S
7-57:McCanne, and L
7-58:Zhang
7-59:Reliable Multicast Framework for Light Weight Sessions and Application Level Framing
7-60:ACM IEEE Transactions on Networking, 1997
7-61:M
7-62:Harchol Balter, F
7-63:T
7-64:Leighton, and D
7-65:Lewin
7-66:Resource discovery in distributed networks
7-67:In Symposium on Principles of Distributed Computing, pages 229 237, 1999
7-68:S
7-69:Hedetniemi, S
7-70:Hedetniemi, and A
7-71:Liestman
7-72:A Survey of Gossiping and Broadcasting in Communication Networks
7-73:In Networks, 1988
7-74:D
7-75:Kostic, A
7-76:Rodriguez, J
7-77:Albrecht, and A
7-78:Vahdat
7-79:Bullet: High bandwidth data dissemination using an overlay mesh
7-80:In SOSP, 2003
7-81:K
7-82:Lakshminarayanan and V
7-83:N
7-84:Padmanabhan
7-85:Some findings on the network performance of broadband hosts
7-86:In Internet Measurement Conference, 2003
7-87:S
7-88:McCanne, V
7-89:Jacobson, and M
7-90:Vettereli
7-91:Receiver driven layered multicast
7-92:In ACM SIGCOMM, 1996
7-93:T
7-94:S
7-95:E
7-96:Ng, Y
7-97:Chu, S
7-98:G
7-99:Rao, K
7-100:Sripanidkulchai, and H
7-101:Zhang
7-102:Measurement based optimization techniques for bandwidth demanding peer to peer systems
7-103:In IEEE INFOCOM, 2003
7-104:T
7-105:S
7-106:E
7-107:Ng and H
7-108:Zhang
7-109:Predicting internet network distance with coordinates based approaches
7-110:In IEEE INFOCOM, 2002
7-111:V
7-112:N
7-113:Padmanabhan, H
7-114:J
7-115:Wang, and P
7-116:A
7-117:Chou
7-118:Resilient peer to peer streaming
7-119:In IEEE ICNP, 2003
7-120:R
7-121:Rejaie, M
7-122:Handley, and D
7-123:Estrin
7-124:RAP: An end to end rate based congestion control mechanism for realtime streams in the internet
7-125:In IEEE INFOCOM, 1999
7-126:R
7-127:Rejaie and A
7-128:Ortega
7-129:PALS: Peer to Peer Adaptive Layered Streaming
7-130:In NOSSDAV, 2003
7-131:S
7-132:Saroiu, P
7-133:K
7-134:Gummadi, and S
7-135:D
7-136:Gribble
7-137:Measurement study of peer to peer file system sharing
7-138:In SPIE MMCN, 2002
7-139:D
7-140:A
7-141:Tran, K
7-142:A
7-143:Hua, and T
7-144:Do
7-145:Zigzag: An efficient peer to peer scheme for media streaming
7-146:In IEEE INFOCOM, 2003
7-147:47
picture:
