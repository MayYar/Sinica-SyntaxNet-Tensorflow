Betting on Permutations 
content:
1 ABSTRACT :
1-1:We consider a permutation betting scenario, where people wager on the final ordering of n candidates: for example, the outcome of a horse race .
1-2:We examine the auctioneer problem of risklessly matching up wagers or, equivalently, finding arbitrage opportunities among the proposed wagers .
1-3:Requiring bidders to explicitly list the orderings that they"d like to bet on is both unnatural and intractable, because the number of orderings is n! and the number of subsets of orderings is 2n! .
1-4:We propose two expressive betting languages that seem natural for bidders, and examine the computational complexity of the auctioneer problem in each case .
1-5:Subset betting allows traders to bet either that a candidate will end up ranked among some subset of positions in the final ordering, for example, horse A will finish in positions 4, 9, or 13 21, or that a position will be taken by some subset of candidates, for example horse A, B, or D will finish in position 2 .
1-6:For subset betting, we show that the auctioneer problem can be solved in polynomial time if orders are divisible .
1-7:Pair betting allows traders to bet on whether one candidate will end up ranked higher than another candidate, for example horse A will beat horse B .
1-8:We prove that the auctioneer problem becomes NP hard for pair betting .
1-9:We identify a sufficient condition for the existence of a pair betting match that can be verified in polynomial time .
1-10:We also show that a natural greedy algorithm gives a poor approximation for indivisible orders .
1-11:J.4 [Computer Applications]: Social and Behavioral .
2 INTRODUCTION :
2-1:Buying or selling a financial security in effect is a wager on the security"s value .
2-2:For example, buying a stock is a bet that the stock"s value is greater than its current price .
2-3:Each trader evaluates his expected profit to decide the quantity to buy or sell according to his own information and subjective probability assessment .
2-4:The collective interaction of all bets leads to an equilibrium that reflects an aggregation of all the traders" information and beliefs .
2-5:In practice, this aggregate market assessment of the security"s value is often more accurate than other forecasts relying on experts, polls, or statistical inference [16, 17, 5, 2, 15] .
2-6:Consider buying a security at price fifty two cents, that pays $1 if and only if a Democrat wins the 2008 US Presidential election .
2-7:The transaction is a commitment to accept a fifty two cent loss if a Democrat does not win in return for a forty eight cent profit if a Democrat does win .
2-8:In this case of an event contingent security, the price the market"s value of the security corresponds directly to the estimated probability of the event .
2-9:Almost all existing financial and betting exchanges pair up bilateral trading partners .
2-10:For example, one trader willing to accept an x dollar loss if a Democrat does not win in return for a y dollar profit if a Democrat wins is matched up with a second trader willing to accept the opposite .
2-11:However in many scenarios, even if no bilateral agreements exist among traders, multilateral agreements may be possible .
2-12:For example, if one trader bets that the Democratic candidate will receive more votes than the Republican candidate, a second trader bets that the Republican candidate will receive more votes than the Libertarian candidate, and a third trader bets that the Libertarian candidate will receive more votes than the Democratic candidate, then, depending on the odds they each offer, there may be a three way agreeable match even though no two way matches exist .
2-13:We propose an exchange where traders have considerable flexibility to naturally and succinctly express their wagers, 326 and examine the computational complexity of the auctioneer"s resulting matching problem of identifying bilateral and multilateral agreements .
2-14:In particular, we focus on a setting where traders bet on the outcome of a competition among n candidates .
2-15:For example, suppose that there are n candidates in an election (or n horses in a race, etc.) and thus n! possible orderings of candidates after the final vote tally .
2-16:Traders may like to bet on arbitrary properties of the final ordering, for example candidate D will win, candidate D will finish in either first place or last place, candidate D will defeat candidate R, candidates D and R will both defeat candidate L, etc .
2-17:The goal of the exchange is to search among all the offers to find two or more that together form an agreeable match .
2-18:As we shall see, the matching problem can be set up as a linear or integer program, depending on whether orders are divisible or indivisible, respectively .
2-19:Attempting to reduce the problem to a bilateral matching problem by explicitly creating n! securities, one for each possible final ordering, is both cumbersome for the traders and computationally infeasible even for modest sized n .
2-20:Moreover, traders" attention would be spread among n! independent choices, making the likelihood of two traders converging at the same time and place seem remote .
2-21:There is a tradeoff between the expressiveness of the bidding language and the computational complexity of the matching problem .
2-22:We want to offer traders the most expressive bidding language possible while maintaining computational feasibility .
2-23:We explore two bidding languages that seem natural from a trader perspective .
2-24:Subset betting, described in Section 3.2, allows traders to bet on which positions in the ranking a candidate will fall, for example candidate D will finish in position 1, 3 5, or 10 .
2-25:Symetrically, traders can also bet on which candidates will fall in a particular position .
2-26:In Section 4, we derive a polynomial time algorithm for matching (divisible) subset bets .
2-27:The key to the result is showing that the exponentially big linear program has a corresponding separation problem that reduces to maximum weighted bipartite matching and consequently we can solve it in time polynomial in the number of orders .
2-28:Pair betting, described in Section 3.3, allows traders to bet on the final ranking of any two candidates, for example candidate D will defeat candidate R .
2-29:In Section 5, we show that optimal matching of (divisible or indivisible) pair bets is NP hard, via a reduction from the unweighted minimum feedback arc set problem .
2-30:We also provide a polynomiallyverifiable sufficient condition for the existence of a pairbetting match and show that a greedy algorithm offers poor approximation for indivisible pair bets. .
3 BACKGROUND AND RELATED WORK :
3-1:We consider permutation betting, or betting on the outcome of a competition among n candidates .
3-2:The final outcome or state s ∈ S is an ordinal ranking of the n candidates .
3-3:For example, the candidates could be horses in a race and the outcome the list of horses in increasing order of their finishing times .
3-4:The state space S contains all n! mutually exclusive and exhaustive permutations of candidates .
3-5:In a typical horse race, people bet on properties of the outcome like horse A will win, horse A will show, or finish in either first or second place, or horses A and B will finish in first and second place, respectively .
3-6:In practice at the racetrack, each of these different types of bets are processed in separate pools or groups .
3-7:In other words, all the win bets are processed together, and all the show bets are processed together, but the two types of bets do not mix .
3-8:This separation can hurt liquidity and information aggregation .
3-9:For example, even though horse A is heavily favored to win, that may not directly boost the horse"s odds to show .
3-10:Instead, we describe a central exchange where all bets on the outcome are processed together, thus aggregating liquidity and ensuring that informational inference happens automatically .
3-11:Ideally, we"d like to allow traders to bet on any property of the final ordering they like, stated in exactly the language they prefer .
3-12:In practice, allowing too flexible a language creates a computational burden for the auctioneer attempting to match willing traders .
3-13:We explore the tradeoff between the expressiveness of the bidding language and the computational complexity of the matching problem .
3-14:We consider a framework where people propose to buy securities that pay $1 if and only if some property of the final ordering is true .
3-15:Traders state the price they are willing to pay per share and the number of shares they would like to purchase .
3-16:(Sell orders may not be explicitly needed, since buying the negation of an event is equivalent to selling the event.) A divisible order permits the trader to receive fewer shares than requested, as long as the price constraint is met; an indivisible order is an all or nothing order .
3-17:The description of bets in terms of prices and shares is without loss of generality: we can also allow bets to be described in terms of odds, payoff vectors, or any of the diverse array of approaches practiced in financial and gambling circles .
3-18:In principle, we can do everything we want by explicitly offering n! securities, one for every state s ∈ S (or in fact any set of n! linearly independent securities) .
3-19:This is the so called complete Arrow Debreu securities market [1] for our setting .
3-20:In practice, traders do not want to deal with low level specification of complete orderings: people think more naturally in terms of high level properties of orderings .
3-21:Moreover, operating n! securities is infeasible in practice from a computational point of view as n grows .
3-22:A very simple bidding language might allow traders to bet only on who wins the competition, as is done in the win pool at racetracks .
3-23:The corresponding matching problem is polynomial, however the language is not very expressive .
3-24:A trader who believes that A will defeat B, but that neither will win outright cannot usefully impart his information to the market .
3-25:The price space of the market reveals the collective estimates of win probabilities but nothing else .
3-26:Our goal is to find languages that are as expressive and intuitive as possible and reveal as much information as possible, while maintaining computational feasibility .
3-27:Our work is in direct analogy to work by Fortnow et .
3-28:al .
3-29:[6] .
3-30:Whereas we explore permutation combinatorics, Fortnow et .
3-31:al .
3-32:explore Boolean combinatorics .
3-33:The authors consider a state space of the 2n possible outcomes of n binary variables .
3-34:Traders express bets in Boolean logic .
3-35:The authors show that divisible matching is co NP complete and indivisible matching is Σp 2 complete .
3-36:Hanson [9] describes a market scoring rule mechanism which can allow betting on combinatorial number of outcomes .
3-37:The market starts with a joint probability distribution across all outcomes .
3-38:It works like a sequential version of a scoring rule .
3-39:Any trader can change the probability distribution as long as he agrees to pay the most recent trader 327 according to the scoring rule .
3-40:The market maker pays the last trader .
3-41:Hence, he bears risk and may incur loss .
3-42:Market scoring rule mechanisms have a nice property that the worst case loss of the market maker is bounded .
3-43:However, the computational aspects on how to operate the mechanism have not been fully explored .
3-44:Our mechanisms have an auctioneer who does not bear any risk and only matches orders .
3-45:Research on bidding languages and winner determination in combinatorial auctions [4, 14, 18] considers similar computational challenges in finding an allocation of items to bidders that maximizes the auctioneer"s revenue .
3-46:Combinatorial auctions allow bidders to place distinct values on bundles of goods rather than just on individual goods .
3-47:Uncertainty and risk are typically not considered and the central auctioneer problem is to maximize social welfare .
3-48:Our mechanisms allow traders to construct bets for an event with n! outcomes .
3-49:Uncertainty and risk are considered and the auctioneer problem is to explore arbitrage opportunities and risklessly match up wagers. .
4 PERMUTATION BETTING :
4-1:In this section, we define the matching and optimal matching problems that an auctioneer needs to solve in a general permutation betting market .
4-2:We then illustrate the problem definitions in the context of the subset betting and pairbetting markets .
4-3:3.1 Securities, Orders and Matching Problems Consider an event with n competing candidates where the outcome (state) is a ranking of the n candidates .
4-4:The bidding language of a market offering securities in the future outcomes determines the type and number of securities available and directly affects what information can be aggregated about the outcome .
4-5:A fully expressive bidding language can capture any possible information that traders may have about the final ranking; a less expressive language limits the type of information that can be aggregated though it may enable a more efficient solution to the matching problem .
4-6:For any bidding language and number of securities in a permutation betting market, we can succinctly represent the problem of the auctioneer to risklessly match offers as follows .
4-7:Consider an index set of bets or orders O which traders submit to the auctioneer .
4-8:Each order i ∈ O is a triple (bi, qi, φi), where bi denotes how much the trader is willing to pay for a unit share of security φi and qi is the number of shares of the security he wants to purchase at price bi .
4-9:Naturally, bi ∈ (0, 1) since a unit of the security pays off at most $1 when the event is realized .
4-10:Since order i is defined for a single security φi, we will omit the security variable whenever it is clear from the context .
4-11:The auctioneer can accept or reject each order, or in a divisible world accept a fraction of the order .
4-12:Let xi be the fraction of order i ∈ O accepted .
4-13:In the indivisible version of the market xi = 0 or 1 while in the divisible version xi ∈ [0, 1] .
4-14:Further let Ii(s) be the indicator variable for whether order i is winning in state s, that is Ii(s) = 1 if the order is paid back $1 in state s and Ii(s) = 0 otherwise .
4-15:There are two possible problems that the auctioneer may want to solve .
4-16:The simpler one is to find a subset of orders that can be matched risk free, namely a subset of orders which accepted together give a nonnegative profit to the auctioneer in every possible outcome .
4-17:We call this problem the existence of a match or sometimes simply, the matching problem .
4-18:The more complex problem is for the auctioneer to find the optimal match with respect to some criterion such as profit, trading volume, etc .
4-19:Definition 1 (Existence of match, indivisible orders) .
4-20:Given a set of orders O, does there exist a set of xi ∈ {0, 1}, i ∈ O, with at least one xi = 1 such that i (bi − Ii(s))qixi ≥ 0, ∀s ∈ S? (1) Similarly we can define the existence of a match with divisible orders .
4-21:Definition 2 (Existence of match, divisible orders) .
4-22:Given a set of orders O, does there exist a set of xi ∈ [0, 1], i ∈ O, with at least one xi > 0 such that i (bi − Ii(s))qixi ≥ 0, ∀s ∈ S? (2) The existence of a match is a decision problem .
4-23:It only returns whether trade can occur at no risk to the auctioneer .
4-24:In addition to the risk free requirement, the auctioneer can optimize some criterion in determining the orders to accept .
4-25:Some reasonable objectives include maximizing the total trading volume in the market or the worst case profit of the auctioneer .
4-26:The following optimal matching problems are defined for an auctioneer who maximizes his worst case profit .
4-27:Definition 3 (Optimal match, indivisible orders) .
4-28:Given a set of orders O, choose xi ∈ {0, 1} such that the following mixed integer programming problem achieves its optimality max xi,c c (3) s.t .
4-29:i bi − Ii(s) qixi ≥ c, ∀s ∈ S xi ∈ {0, 1}, ∀i ∈ O .
4-30:Definition 4 (Optimal match, divisible orders) .
4-31:Given a set of orders O, choose xi ∈ [0, 1] such that the following linear programming problem achieves its optimality max xi,c c (4) s.t .
4-32:i bi − Ii(s) qixi ≥ c, ∀s ∈ S 0 ≤ xi ≤ 1, ∀i ∈ O .
4-33:The variable c is the worst case profit for the auctioneer .
4-34:Note that, strictly speaking, the optimal matching problems do not require to solve the optimization problems (3) and (4), because only the optimal set of orders are needed .
4-35:The optimal worst case profit may remain unknown .
4-36:3.2 Subset Betting A subset betting market allows two different types of bets .
4-37:Traders can bet on a subset of positions a candidate may end up at, or they can bet on a subset of candidates that will occupy a particular position .
4-38:A security α|Φ where Φ is a subset of positions pays off $1 if candidate α stands at a position that is an element of Φ and it pays $0 otherwise .
4-39:For example, security α|{2, 4} pays $1 when candidate α 328 is ranked second or fourth .
4-40:Similarly, a security Ψ|j where Ψ is a subset of candidates pays off $1 if any of the candidates in the set Ψ ranks at position j .
4-41:For instance, security {α, γ}|2 pays off $1 when either candidate α or candidate γ is ranked second .
4-42:The auctioneer in a subset betting market faces a nontrivial matching problem, that is to determine which orders to accept among all submitted orders i ∈ O .
4-43:Note that although there are only n candidates and n possible positions, the number of available securities to bet on is exponential since a trader may bet on any of the 2n subsets of candidates or positions .
4-44:With this, it is not immediately clear whether one can even find a trading partner or a match for trade to occur, or that the auctioneer can solve the matching problem in polynomial time .
4-45:In the next section, we will show that somewhat surprisingly there is an elegant polynomial solution to both the matching and optimal matching problems, based on classic combinatorial problems .
4-46:When an order is accepted, the corresponding trader pays the submitted order price bi to the auctioneer and the auctioneer pays the winning orders $1 per share after the outcome is revealed .
4-47:The auctioneer has to carefully choose which orders and what fractions of them to accept so as to be guaranteed a nonnegative profit in any future state .
4-48:The following example illustrates the matching problem for indivisible orders in the subset betting market .
4-49:Example 1 .
4-50:Suppose n = 3 .
4-51:Objects α, β, and γ compete for positions 1, 2, and 3 in a competition .
4-52:The auctioneer receives the following 4 orders: (1) buy 1 share α|{1} at price $0.6; (2) buy 1 share β|{1, 2} at price $0.7; (3) buy 1 share γ|{1, 3} at price $0.8; and (4) buy 1 share β|{3} at price $0.7 .
4-53:There are 6 possible states of ordering: αβγ, αγβ, βαγ, βγα, γαβ,and γβα .
4-54:The corresponding statedependent profit of the auctioneer for each order can be calculated as the following vectors, c1 = (−0.4, −0.4, 0.6, 0.6, 0.6, 0.6) c2 = (−0.3, 0.7, −0.3, −0.3, 0.7, −0.3) c3 = (−0.2, 0.8, −0.2, 0.8, −0.2, −0.2) c4 = ( 0.7, −0.3, 0.7, 0.7, −0.3, 0.7) .
4-55:6 columns correspond to the 6 future states .
4-56:For indivisible orders, the auctioneer can either accept orders (2) and (4) and obtain profit vector c = (0.4, 0.4, 0.4, 0.4, 0.4, 0.4), or accept orders (2), (3), and (4) and has profit across state c = (0.2, 1.2, 0.2, 1.2, 0.2, 0.2) .
4-57:3.3 Pair Betting A pair betting market allows traders to bet on whether one candidate will rank higher than another candidate, in an outcome which is a permutation of n candidates .
4-58:A security α > β pays off $ 1 if candidate α is ranked higher than candidate β and $ 0 otherwise .
4-59:There are a total of N(N −1) different securities offered in the market, each corresponding to an ordered pair of candidates .
4-60:Traders place orders of the form buy qi shares of α > β at price per share no greater than bi .
4-61:bi in general should be between 0 and 1 .
4-62:Again the order can be either indivisible or divisible and the auctioneer needs to decide what fraction xi of each order to accept so as not to incur any loss, with A B C D E F .99 .99 .5 .5 .5 .99 .99 .99 .99 Figure 1: Every cycle has negative worst case profit of −0.02 (for the cycles of length 4) or less (for the cycles of length 6), however accepting all edges in full gives a positive worst case profit of 0.44 .
4-63:xi ∈ {0, 1} for indivisible and xi ∈ [0, 1] for divisible orders .
4-64:The same definitions for existence of a match and optimal match from Section 3.1 apply .
4-65:The orders in the pair betting market have a natural interpretation as a graph, where the candidates are nodes in the graph and each order which ranks a pair of candidates α > β is represented by a directed edge e = (α, β) with price be and weight qe .
4-66:With this interpretation, it is tempting to assume that a necessary condition for a match is to have a cycle in the graph with a nonnegative worst case profit .
4-67:Assuming qe = 1 for all e, this is a cycle C with a total of |C| edges such that the worst case profit for the auctioneer is e∈C be − (|C| − 1) ≥ 0, since in the worst case state the auctioneer needs to pay $,1 to every order in the cycle except one .
4-68:However, the example in Figure 1 shows that this is not the case: we may have a set of orders in which every single cycle has a negative worst case profit, and yet there is a positive worstcase match overall .
4-69:The edge labels in the figure are the prices be; both the optimal divisible and indivisible solution in this case accept all orders in full, xe = 1. .
5 COMPLEXITY OF SUBSET BETTING :
5-1:The matching problems of the auctioneer in any permutation market, including the subset betting market have n! constraints .
5-2:Brute force methods would take exponential time to solve .
5-3:However, given the special form of the securities in the subset betting market, we can show that the matching problems for divisible orders can be solved in polynomial time .
5-4:Theorem 1 .
5-5:The existence of a match and the optimal match problems with divisible orders in a subset betting market can both be solved in polynomial time .
5-6:329 Proof .
5-7:Consider the linear programming problem (4) for finding an optimal match .
5-8:This linear program has |O| + 1 variables, one variable xi for each order i and the profit variable c .
5-9:It also has exponentially many constraints .
5-10:However, we can solve the program in time polynomial in the number of orders |O| by using the ellipsoid algorithm, as long as we can efficiently solve its corresponding separation problem in polynomial time [7, 8] .
5-11:The separation problem for a linear program takes as input a vector of variable values and returns if the vector is feasible, or otherwise it returns a violated constraint .
5-12:For given values of the variables, a violated constraint in Eq .
5-13:(4) asks whether there is a state or permutation s in which the profit is less than c, and can be rewritten as i Ii(s)qixi < i biqixi − c ∀s ∈ S .
5-14:(5) Thus it suffices to show how to find efficiently a state s satisfying the above inequality (5) or verify that the opposite inequality holds for all states s .
5-15:We will show that the separation problem can be reduced to the maximum weighted bipartite matching1 problem [3] .
5-16:The left hand side in Eq .
5-17:(5) is the total money that the auctioneer needs to pay back to the winning traders in state collected by the auctioneer and it is fixed for a given solution vector of xi"s and c .
5-18:A weighted bipartite graph can be constructed between the set of candidates and the set of positions .
5-19:For every order of the form α|Φ there are edges from candidate node α to every position node in Φ .
5-20:For orders of the form Ψ|j there are edges from each candidate in Ψ to position j .
5-21:For each order i we put weight qixi on each of these edges .
5-22:All multi edges with the same end points are then replaced with a single edge that carries the total weight of the multi edge .
5-23:Every state s then corresponds to a perfect matching in the bipartite graph .
5-24:In addition, the auctioneer pays out to the winners the sum of all edge weights in the perfect matching since every candidate can only stand in one position and every position is taken by one candidate .
5-25:Thus, the auctioneer"s worst cast state and payment are the solution to the maximum weighted bipartite matching problem, which has known polynomial time algorithms [12, 13] .
5-26:Hence, the separation problem can be solved in polynomial time .
5-27:Naturally, if the optimal solution to (4) gives a worst case profit of c∗ > 0, there exists a matching .
5-28:Thus, the matching problem can be solved in polynomial time also. .
6 COMPLEXITY OF PAIR BETTING :
6-1:In this section we show that a slight change of the bidding language may bring about a dramatic change in the complexity of the optimal matching problem of the auctioneer .
6-2:In particular, we show that finding the optimal match in the pair betting market is NP hard for both divisible and indivisible orders .
6-3:We then identify a polynomially verifiable sufficient condition for deciding the existence of a match .
6-4:The hardness results are surprising especially in light of the observation that a pair betting market has a seemingly more restrictive bidding language which only offers n(n−1) 1 The notion of perfect matching in a bipartite graph, which we use only in this proof, should not be confused with the notion of matching bets which we use throughout the paper .
6-5:securities .
6-6:In contrast, the subset betting market enables traders to bet on an exponential number of securities and yet had a polynomial time solution for finding the optimal match .
6-7:Our hope is that the comparison of the complexities of the subset and pair betting markets would offer insight into what makes a bidding language expressive while at the same time enabling an efficient matching solution .
6-8:In all analysis that follows, we assume that traders submit unit orders in pair betting markets, that is qi = 1 .
6-9:A set of orders O received by the auctioneer in a pair betting market with unit orders can be represented by a directed graph, G(V, E), where the vertex set V contains candidates that traders bet on .
6-10:An edge e ∈ E, denoted (α, β, be), represents an order to buy 1 share of the security α > β at price be .
6-11:All edges have equal weight of 1 .
6-12:We adopt the following notations throughout the paper: • G(V, E): original equally weighted directed graph for the set of unit orders O .
6-13:• be: price of the order for edge e .
6-14:• G∗ (V ∗ , E∗ ); a weighted directed graph of accepted orders for optimal matching, where edge weight xe is the quantity of order e accepted by the auctioneer .
6-15:xe = 1 for indivisible orders and 0 < xe ≤ 1 for divisible orders .
6-16:• H(V, E): a generic weighted directed graph of accepted orders .
6-17:• k(H): solution to the unweighted minimum feedback arc set problem on graph H .
6-18:k(H) is the minimum number of edges to remove so that H becomes acyclic .
6-19:• l(H): solution to the weighted minimum feedback arc set problem on graph H .
6-20:l(H) is the minimum total weights for the set of edges which, when removed, leave H acyclic .
6-21:• c(H): worst case profit of the auctioneer if he accepts all orders in graph H .
6-22:• : a sufficiently small positive real number .
6-23:Where not stated, < 1 (2|E|) for a graph H(V, E) .
6-24:In other cases, the value is determined in context .
6-25:A feedback arc set of a directed graph is a set of edges which, when removed from the graph, leave a directed acyclic graph .
6-26:Unweighted minimum feedback arc set problem is to find a feedback arc set with the minimum cardinality, while weighted minimum feedback arc set problem seeks to find a feedback arc set with the minimum total edge weight .
6-27:Both unweighted and weighted minimum feedback arc set problems have been shown to be NP complete [10] .
6-28:We will use this result in our complexity analysis on pair betting markets .
6-29:5.1 Optimal Indivisible Matching The auctioneer"s optimal indivisible matching problem is introduced in Definition 3 of Section 3 .
6-30:Assuming unit orders and considering the order graph G(V, E), we restate the auctioneer"s optimal matching problem in a pair betting market as picking a subset of edges to accept such that 330 worst case profit is maximized in the following optimization problem, max xe,c c (6) s.t .
6-31:e be − Ie(s) xe ≥ c, ∀s ∈ S xe ∈ {0, 1}, ∀e ∈ E .
6-32:Without lose of generality, we assume that there are no multi edges in the order graph G .
6-33:We show that the optimal matching problem for indivisible orders is NP hard via a reduction from the unweighted minimum feedback arc set problem .
6-34:The latter takes as input a directed graph, and asks what is the minimum number of edges to delete from the graph so as to be left with a DAG .
6-35:Our hardness proof is based on the following lemmas .
6-36:Lemma 2 .
6-37:Suppose the auctioneer accepts all edges in an equally weighted directed graph H(V, E) with edge price be = (1 − ) and edge weight xe = 1 .
6-38:Then the worst case profit is equal to k(H) − |E|, where k(H) is the solution to the unweighted minimum feedback arc problem on H .
6-39:Proof .
6-40:If the order of an edge gets $1 payoff at the end of the market we call the edge a winning edge, otherwise it is called a losing edge .
6-41:For any state s, all winning edges necessarily form a DAG .
6-42:Conversely, for every DAG there is a state in which the DAG edges are winners (though the remaining edges in G are not necessarily losers) .
6-43:Suppose that in state s there are ws winning edges and ls = |E| − ws losing edges .
6-44:Then, ls is the cardinality of a feedback arc set that consists of all losing edges in state s .
6-45:The edges that remain after deleting the minimum feedback arc set form the maximum DAG for the graph H .
6-46:Consider the state smax in which all edges of the maximum DAG are winners .
6-47:This gives the maximum number of winning edges wmax .
6-48:All other edges are necessarily losers in the state smax, since any edge which is not in the max DAG must form a cycle together with some of the DAG edges .
6-49:The number of losing edges in state smax is the cardinality of the minimum feedback arc set of H, that is |E| − wmax = k(H) .
6-50:The profit of the auctioneer in a state s is profit(s) = e∈E be − w = (1 − )|E| − w ≥ (1 − )|E| − wmax, where equality holds when s = smax .
6-51:Thus, the worst case profit is achieved at state smax, profit(smax) = (|E| − wmax) − |E| = k(H) − |E| .
6-52:Consider the graph of accepted orders for optimal matching, G∗ (V ∗ , E∗ ), which consists of the optimal subset of edges E∗ to be accepted by the auctioneer, that is edges with xe = 1 in the solution of the optimization problem (6) .
6-53:We have the following lemma .
6-54:Lemma 3 .
6-55:If the edge prices are be = (1− ), then the optimal indivisible solution graph G∗ has the same unweighted minimum feedback arc set size as the graph of all orders G, that is k(G∗ ) = k(G) .
6-56:Furthermore, G∗ is the smallest such subgraph of G, i.e., it is the subgraph of G with the smallest number of edges, that has the same size of unweighted minimum feedback arc set as G .
6-57:Proof .
6-58:G∗ is a subgraph of G, hence the minimum number of edges to break cycles in G∗ is no more than that in G, namely k(G∗ ) ≤ k(G) .
6-59:Suppose k(G∗ ) < k(G) .
6-60:Since both k(G∗ ) and k(G) are integers, for any < 1 |E| we have that k(G∗ ) − |E∗ | < k(G)− |E| .
6-61:Hence by Lemma 2, the auctioneer has a higher worst case profit by accepting G than accepting G∗ , which contradicts the optimality of G∗ .
6-62:Finally, the worst case profit k(G) − |E∗ | is maximized when |E∗ | is minimized .
6-63:Hence, G∗ is the smallest subgraph of G such that k(G∗ ) = k(G) .
6-64:The above two lemmas prove that the maximum worstcase profit in the optimal indivisible matching is directly related to the size of the minimum feedback arc set .
6-65:Thus computing each automatically gives the other, hence computing the maximum worst case profit in the indivisible pair betting problem is NP hard .
6-66:Theorem 4 .
6-67:Computing the maximum worst case profit in indivisible pair betting is NP hard .
6-68:Proof .
6-69:By Lemma 3, the maximum worst case profit which is the optimum to the mixed integer programming problem (6), is k(G) − |E∗ |, where |E∗ | is the number of accepted edges .
6-70:Since k(G) is integer and |E∗ | ≤ |E| < 1, solving (6) will automatically give us the cardinality of the minimum feedback arc set of G, k(G) .
6-71:Because the minimum feedback arc set problem is NP complete [10], computing the maximum worst case profit is NP hard .
6-72:Theorem 4 states that solving the optimization problem is hard, because even if the optimal set of orders are provided computing the optimal worst case profit from accepting those orders is NP hard .
6-73:However, it does not imply whether the optimal matching problem, i.e .
6-74:finding the optimal set of orders to accept, is NP hard .
6-75:It is possible to be able to determine which edges in a graph participating in the optimal match, yet unable to compute the corresponding worst case profit .
6-76:Next, we prove that the indivisible optimal matching problem is actually NP hard .
6-77:We will use the following short fact repeatedly .
6-78:Lemma 5 (Edge removal lemma) .
6-79:Given a weighted graph H(V, E), removing a single edge e with weight xe from the graph decreases the weighted minimum feedback arc set solution l(H) by no more than xe and reduces the unweighted minimum feedback arc set solution k(H) by no more than 1 .
6-80:Proof .
6-81:Suppose the weighted minimum feedback arc set for the graph H − {e} is F .
6-82:Then F ∪ {e} is a feedback arc set for H, and has total edge weight l(H−{e})+xe .
6-83:Because l(H) is the solution to the weighted minimum feedback arc set problem on H, we have l(H) ≤ l(H −{e})+xe, implying that l(H − {e}) ≥ l(H) − xe .
6-84:Similarly, suppose the unweighted minimum feedback arc set for the graph H − {e} is F .
6-85:Then F ∪ {e} is a feedback arc set for H, and has set cardinality k(H−{e})+1 .
6-86:Because k(H) is the solution to the unweighted minimum feedback arc set problem on H, we have k(H) ≤ k(H − {e}) + 1, giving that k(H − {e}) ≥ k(H) − 1 .
6-87:Theorem 6 .
6-88:Finding the optimal match in indivisible pair betting is NP hard .
6-89:331 Proof .
6-90:We reduce from the unweighted minimum feedback arc set problem again, although with a slightly more complex polynomial transformation involving multiple calls to the optimal match oracle .
6-91:Consider an instance graph G of the minimum feedback arc set problem .
6-92:We are interested in computing k(G), the size of the minimum feedback arc set of G .
6-93:Suppose we have an oracle which solves the optimal matching problem .
6-94:Denote by optimal match(G ) the output of the optimal matching oracle on graph G with prices be = (1− ) on all its edges .
6-95:By Lemma 3, on input G , the oracle optimal match returns the subgraph of G with the smallest number of edges, that has the same size of minimum feedback arc set as G .
6-96:The following procedure finds k(G) by using polynomially many calls to the optimal match oracle on a sequence of subgraphs of G .
6-97:set G := G iterations := 0 while (G has nonempty edge set) reset G := optimal match(G ) if (G has nonempty edge set) increment iterations by 1 reset G by removing any edge e end if end while return (iterations) This procedure removes edges from the original graph G layer by layer until the graph is empty, while at the same time computing the minimum feedback arc set size k(G) of the original graph as the number of iterations .
6-98:In each iteration, we start with a graph G and replace it with the smallest subgraph G that has the same k(G ) .
6-99:At this stage, removing an additional edge e necessarily results in k(G −{e}) = k(G )−1, because k(G −{e}) < k(G ) by the optimality of G , and k(G − {e}) ≥ k(G ) − 1 by the edgeremoval lemma .
6-100:Therefore, in each iteration the cardinality of the minimum feedback arc set gets reduced exactly by 1 .
6-101:Hence the number of iterations is equal to k(G) .
6-102:Note that this procedure gives a polynomial transformation from the optimal matching problem to the unweighted minimum feedback arc set problem, which calls the optimal matching oracle exactly k(G) ≤ |E| times, where |E| is the number of edges of G .
6-103:Hence the optimal matching problem is NP hard .
6-104:5.2 Optimal Divisible Matching When orders are divisible, the auctioneer"s optimal matching problem is described in Definition 4 of Section 3 .
6-105:Assuming unit orders and considering the order graph G(V, E), we restate the auctioneer"s optimal matching problem for divisible orders as choosing quantity of orders to accept, xe ∈ [0, 1], such that worst case profit is maximized in the following linear programming problem, max xe,c c (7) s.t .
6-106:e be − Ie(s) xe ≥ c, ∀s ∈ S xe ∈ [0, 1], ∀e ∈ E .
6-107:We still assume that there are no multi edges in the order graph G .
6-108:When orders are divisible, the auctioneer can be better off by accepting partial orders .
6-109:Example 2 shows a situation when accepting partial orders generates higher worst case profit than the optimal indivisible solution .
6-110:Example 2 .
6-111:We show that the linear program (7) sometimes has a non integer optimal solution .
6-112:A B C D E F b b b b b b b b b Figure 2: An order graph .
6-113:Letters on edges represent order prices .
6-114:Consider the graph in Figure 2 .
6-115:There are a total of five cycles in the graph: three four edge cycles ABCD, ABEF, CDEF, and two six edge cycles ABCDEF and ABEFCD .
6-116:Suppose each edge has price b such that 4b − 3 > 0 and 6b − 5 < 0, namely b ∈ (.75, .80), for example b = .78 .
6-117:With this, the optimal indivisible solution consists of at most one four edge cycle, with worst case profit (4b−3) .
6-118:On the other hand, taking 1 2 fraction of each of the three four edge cycles would yield higher worst case profit of 3 2 (4b − 3) .
6-119:Despite the potential profit increase for accepting divisible orders, the auctioneer"s optimal matching problem remains to be NP hard for divisible orders, which is presented below via several lemmas and theorems .
6-120:Lemma 7 .
6-121:Suppose the auctioneer accept orders described by a weighted directed graph H(V, E) with edge weight xe to be the quantity accepted for edge order e .
6-122:The worst case profit for the auctioneer is c(H) = e∈E (be − 1)xe + l(H) .
6-123:(8) Proof .
6-124:For any state s, the winning edges form a DAG .
6-125:Thus, the worst case profit for the auctioneer achieves at the state(s) when the total quantity of losing orders is minimized .
6-126:The minimum total quantity of losing orders is the solution to weighted minimal feedback arc set problem on H, that is l(H) .
6-127:Consider the graph of accepted orders for optimal divisible matching, G∗ (V ∗ , E∗ ), which consists of the optimal subset of edges E∗ to be accepted by the auctioneer, with edge weight xe > 0 getting from the optimal solution of the linear program (7) .
6-128:We have the following lemmas .
6-129:332 Lemma 8 .
6-130:l(G∗ ) ≤ k(G∗ ) ≤ k(G) .
6-131:Proof .
6-132:l(G∗ ) is the solution of the weighted minimum feedback arc set problem on G∗ , while k(G∗ ) is the solution of the unweighted minimum feedback arc set problem on G∗ .
6-133:When all edge weights in G∗ are 1, l(G∗ ) = k(G∗ ) .
6-134:When xe"s are less than 1, l(G∗ ) can be less than or equal to k(G∗ We consider a permutation betting scenario, where traders wager on the final ordering of n candidates .
6-135:While it is unnatural and intractable to allow traders to bet directly on the n! different final orderings, we propose two expressive betting languages, subset betting and pair betting .
6-136:In a subset betting market, traders can bet either on a subset of positions that a candidate stands or on a subset of candidates who occupy a specific position in the final ordering .
6-137:Pair betting allows traders bet on whether one given candidate ranks higher than another given candidate .
6-138:We examine the auctioneer problem of matching orders without incurring risk .
6-139:We find that in a subset betting market an auctioneer can find the optimal set and quantity of orders to accept such that his worst case profit is maximized in polynomial time if orders are divisible .
6-140:The complexity changes dramatically for pair betting .
6-141:We prove that the optimal matching problem for the auctioneer is NP hard for pair betting with both indivisible and divisible orders via reductions to the minimum feedback arc set problem .
6-142:We identify a sufficient condition for the existence of a match, which can be verified in polynomial time .
6-143:A natural greedy algorithm has been shown to give poor approximation for indivisible pair betting .
6-144:Interesting open questions for our permutation betting include the computational complexity of optimal indivisible matching for subset betting and the necessary condition for the existence of a match in pair betting markets .
6-145:We are interested in further exploring better approximation algorithms for pair betting markets. .
7-1:We thank Ravi Kumar, Yishay Mansour, Amin Saberi, Andrew Tomkins, John Tomlin, and members of Yahoo! Research for valuable insights and discussions.
8-1:K
8-2:J
8-3:Arrow
8-4:The role of securities in the optimal allocation of risk bearing
8-5:Review of Economic Studies, 31(2):91 96, 1964
8-6:J
8-7:E
8-8:Berg, R
8-9:Forsythe, F
8-10:D
8-11:Nelson, and T
8-12:A
8-13:Rietz
8-14:Results from a dozen years of election futures markets research
8-15:In C
8-16:A
8-17:Plott and V
8-18:Smith, editors, Handbook of Experimental Economic Results (forthcoming)
8-19:2001
8-20:T
8-21:H
8-22:Cormen, C
8-23:E
8-24:Leiserson, R
8-25:L
8-26:Rivest, and C
8-27:Stein
8-28:Introduction to Algorithms (Second Edition)
8-29:MIT Press and McGraw Hill, 2001
8-30:P
8-31:Cramton, Y
8-32:Shoham, and R
8-33:Steinberg
8-34:Combinatorial Auctions
8-35:MIT Press, Cambridge, MA, 2005
8-36:R
8-37:Forsythe, T
8-38:A
8-39:Rietz, and T
8-40:W
8-41:Ross
8-42:Wishes, expectations, and actions: A survey on price formation in election stock markets
8-43:Journal of Economic Behavior and Organization, 39:83 110, 1999
8-44:L
8-45:Fortnow, J
8-46:Kilian, D
8-47:M
8-48:Pennock, and M
8-49:P
8-50:Wellman
8-51:Betting boolean style: A framework for trading in securities based on logical formulas
8-52:Decision Support Systems, 39(1):87 104, 2004
8-53:M
8-54:Gr¨otschel, L
8-55:Lov´asz, and A
8-56:Schrijver
8-57:The ellipsoid method and its consequences in combinatorial optimization
8-58:Combinatorica, 1(2):169 197, 1981
8-59:M
8-60:Gr¨otschel, L
8-61:Lov´asz, and A
8-62:Schrijver
8-63:Geometric Algorithms and Combinatorial Optimization
8-64:Springer Verlag, Berlin Heidelberg, 1993
8-65:R
8-66:D
8-67:Hanson
8-68:Combinatorial information market design
8-69:Information Systems Frontiers, 5(1):107 119, 2003
8-70:R
8-71:M
8-72:Karp
8-73:Reducibility among combinatorial problems
8-74:In Complexity of computer computations (Proc
8-75:Sympos., IBM Thomas J
8-76:Watson Res
8-77:Center, Yorktown Heights, N.Y.), pages 85 103
8-78:Plenum, New York, 1972
8-79:M
8-80:Krivelevich, Z
8-81:Nutov, and R
8-82:Yuster
8-83:Approximation algorithms for cycle packing problems
8-84:Proceedings of the sixteenth annual ACM SIAM symposium on Discrete algorithms, pages 556 561, 2005
8-85:H
8-86:W
8-87:Kuhn
8-88:The hungarian method for the assignment problem
8-89:Naval Research Logistic Quarterly, 2:83 97, 1955
8-90:J
8-91:Munkres
8-92:Algorithms for the assignment and transportation problems
8-93:Journal of the Society of Industrial and Applied Mathematics, 5(1):32 38, 1957
8-94:N
8-95:Nisan
8-96:Bidding and allocation in combinatorial auctions
8-97:In Proceedings of the 2nd ACM Conference on Electronic Commerce (EC"00), Minneapolis, MN, 2000
8-98:D
8-99:M
8-100:Pennock, S
8-101:Lawrence, C
8-102:L
8-103:Giles, and F
8-104:A
8-105:Nielsen
8-106:The real power of artificial markets
8-107:Science, 291:987 988, February 2002
8-108:C
8-109:Plott and S
8-110:Sunder
8-111:Efficiency of experimental security markets with insider information: An application of rational expectations models
8-112:Journal of Political Economy, 90:663 98, 1982
8-113:C
8-114:Plott and S
8-115:Sunder
8-116:Rational expectations and the aggregation of diverse information in laboratory security markets
8-117:Econometrica, 56:1085 1118, 1988
8-118:T
8-119:Sandholm
8-120:Algorithm for optimal winner determination in combinatorial auctions
8-121:Artificial Intelligence, 135:1 54, 2002
8-122:R
8-123:Yuster and Z
8-124:Nutov
8-125:Packing directed cycles efficiently
8-126:Proceedings of the 29th International Symposium on Mathematical Foundations of Computer Science (MFCS), 2004
8-127:335
picture:
