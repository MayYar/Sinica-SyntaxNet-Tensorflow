Live Data Center Migration across WANs: 
content:
1 ABSTRACT :
1-1:A significant concern for Internet based service providers is the continued operation and availability of services in the face of outages, whether planned or unplanned .
1-2:In this paper we advocate a cooperative, context aware approach to data center migration across WANs to deal with outages in a non disruptive manner .
1-3:We specifically seek to achieve high availability of data center services in the face of both planned and unanticipated outages of data center facilities .
1-4:We make use of server virtualization technologies to enable the replication and migration of server functions .
1-5:We propose new network functions to enable server migration and replication across wide area networks (e.g., the Internet), and finally show the utility of intelligent and dynamic storage replication technology to ensure applications have access to data in the face of outages with very tight recovery point objectives .
1-6:C.2.4 [Computer Communication Networks]: Distributed .
2 INTRODUCTION :
2-1:A significant concern for Internet based service providers is the continued operation and availability of services in the face of outages, whether planned or unplanned .
2-2:These concerns are exacerbated by the increased use of the Internet for mission critical business and real time entertainment applications .
2-3:A relatively minor outage can disrupt and inconvenience a large number of users .
2-4:Today these services are almost exclusively hosted in data centers .
2-5:Recent advances in server virtualization technologies [8, 14, 22] allow for the live migration of services within a local area network environment .
2-6:In the LAN environment, these technologies have proven to be a very effective tool to enable data center management in a non disruptive fashion .
2-7:Not only can it support planned maintenance events [8], but it can also be used in a more dynamic fashion to automatically balance load between the physical servers in a data center [22] .
2-8:When using these technologies in a LAN environment, services execute in a virtual server, and the migration services provided by the underlying virtualization framework allows for a virtual server to be migrated from one physical server to another, without any significant downtime for the service or application .
2-9:In particular, since the virtual server retains the same network address as before, any ongoing network level interactions are not disrupted .
2-10:Similarly, in a LAN environment, storage requirements are normally met via either network attached storage or via a storage area network which is still reachable from the new physical server location to allow for continued storage access .
2-11:Unfortunately in a wide area environment (WAN), live server migration is not as easily achievable for two reasons: First, live migration requires the virtual server to maintain the same network address so that from a network connectivity viewpoint the migrated server is indistinguishable from the original .
2-12:While this is fairly easily achieved in a shared LAN environment, no current mechanisms are available to efficiently achieve the same feat in a WAN environment .
2-13:Second, while fairly sophisticated remote replication mechanisms have been developed in the context of disaster recovery [20, 7, 11], these mechanisms are ill suited to live data center migration, because in general the available technologies are unaware of application service level semantics .
2-14:In this paper we outline a design for live service migration across WANs .
2-15:Our design makes use of existing server virtualization technologies and propose network and storage mechanisms to facilitate migration across a WAN .
2-16:The essence of our approach is cooperative, context aware migration, where a migration management system orchestrates the data center migration across all three subsystems involved, namely the server platforms, the wide area network and the disk storage system .
2-17:While conceptually similar in nature to the LAN based work described above, using migration technologies across a wide area network presents unique challenges and has to our knowledge not been achieved .
2-18:Our main contribution is the design of a framework that will allow the migration across a WAN of all subsystems involved with enabling data center services .
2-19:We describe new mechanisms as well as extensions to existing technologies to enable this and outline the cooperative, context aware functionality needed across the different subsystems to enable this .
2-20:262 .
3 LIVE DATA CENTER MIGRATION ACROSS WANS :
3-1:ACROSS WANS Three essential subsystems are involved with hosting services in a data center: First, the servers host the application or service logic .
3-2:Second, services are normally hosted in a data center to provide shared access through a network, either the Internet or virtual private networks (VPNs) .
3-3:Finally, most applications require disk storage for storing data and the amount of disk space and the frequency of access varies greatly between different services applications .
3-4:Disruptions, failures, or in general, outages of any kind of any of these components will cause service disruption .
3-5:For this reason, prior work and current practices have addressed the robustness of individual components .
3-6:For example, data centers typically have multiple network connections and redundant LAN devices to ensure redundancy at the networking level .
3-7:Similarly, physical servers are being designed with redundant hot swappable components (disks, processor blades, power supplies etc) .
3-8:Finally, redundancy at the storage level can be provided through sophisticated data mirroring technologies .
3-9:The focus of our work, however, is on the case where such local redundancy mechanisms are not sufficient .
3-10:Specifically, we are interested in providing service availability when the data center as a whole becomes unavailable, for example because of data center wide maintenance operations, or because of catastrophic events .
3-11:As such, our basic approach is to migrate services between data centers across the wide are network .
3-12:By necessity, moving or migrating services from one data center to another needs to consider all three of these components .
3-13:Historically, such migration has been disruptive in nature, requiring downtime of the actual services involved, or requiring heavy weight replication techniques .
3-14:In the latter case concurrently running replicas of a service can be made available thus allowing a subset of the service to be migrated or maintained without impacting the service as a whole .
3-15:We argue that these existing mechanisms are inadequate to meet the needs of network based services, including real time services, in terms of continuous availability and operation .
3-16:Instead, we advocate an approach where server, network and storage subsystems cooperate and coordinate actions, in a manner that is cognizant of the service context in order to realize seamless migration across wide area networks .
3-17:In this section we briefly describe the technical building blocks that would enable our approach .
3-18:As outlined below, some of these building blocks exist, or exist in part, while in other cases we use the desire for high availability of services as the driver for the changes we are proposing .
3-19:2.1 Live Virtual Server Migration The main enabler for our approach is the live server migration capabilities that have been developed in the context of server virtualization in recent years [5, 8] .
3-20:In this approach an entire running operating system (including any active applications) executing as a virtual server is being transfered from one physical machine to another .
3-21:Since the virtual server is migrated in its entirety, both application and kernel level state gets migrated, including any state associated with ongoing network connections .
3-22:Assuming that network level reachability to the virtual server"s network addresses are maintained after the migration, the implication is that applications executing in the virtual server experience very little downtime (in the order of tens to hundreds of milliseconds) and ongoing network connections remain intact .
3-23:In order to maintain network level reachability, the IP address(es) associated with the virtual server has to be reachable at the physical server where the virtual server is migrated to .
3-24:In a LAN environment this is achieved either by issuing an unsolicited ARP reply to establish the binding between the new MAC address and the IP address, or by relying on layer two technologies to allow the virtual server to reuse its (old) MAC address [8] .
3-25:Because of the difficulty of moving network level (i.e., IP addresses) in a routed non LAN environment, use of live server migration as a management tool has been limited to the LAN environments [22] .
3-26:However, virtual server migration across the wide area will also be an attractive tool, specifically to deal with outages, and therefore propose networking mechanisms to enable this .
3-27:If disk storage needs are being met with network attached storage (NAS), the storage becomes just another network based application and can therefore be addressed in the same way with LAN based migration [8] .
3-28:Modern virtualization environments also include support for other forms of (local) storage including storage area networks (SANs) [23] .
3-29:However, since we propose to use WAN server migration as a means to deal with complete data center outages, these mechanisms are inadequate for our purposes and below we propose extension to remote replication technologies which can work in concert with server migration to minimize service downtime .
3-30:2.2 Networking Requirements From the discussion above, a key requirement for live server migration across a WAN is the ability to have the IP address(es) of the virtual server be reachable at the new data center location immediately after the migration has completed .
3-31:This presents a significant challenge for a number of reasons .
3-32:First, despite decades of work in this area, IP address mobility remains an unresolved problem that is typically only addressed at manual configuration time scales .
3-33:The second challenge comes from the fact that current routing protocols are well known to have convergence issues which is ill suited to the time constraints imposed by live migration .
3-34:Third, in today"s WAN networking environment connectivity changes are typically initiated, and controlled, by network operators or network management systems .
3-35:Again this is poorly suited to WAN server migration where it is essential that the migration software, which is closely monitoring the status of the server migration process, initiate this change at the appropriate time .
3-36:Our approach to addressing the networking requirements for live WAN migration builds on the observations that not all networking changes in this approach are time critical and further that instantaneous changes are best achieved in a localized manner .
3-37:Specifically, in our solution, described in detail in Section 3, we allow the migration software to initiate the necessary networking changes as soon as the need for migration has been identified .
3-38:We make use of tunneling technologies during this initial phase to preemptively establish connectivity between the data centers involved .
3-39:Once server migration is complete, the migration software initiates a local change to direct traffic towards the new data center via the tunnel .
3-40:Slower time scale network changes then phase out this local network connectivity change for a more optimal network wide path to the new data center .
3-41:2.3 Storage Replication Requirements Data availability is typically addressed by replicating business data on a local primary storage system, to some remote location from where it can be accessed .
3-42:From a business usability point of view, such remote replication is driven by two metrics [9] .
3-43:First 263 is the recovery point objective which is the consistent data point to which data can be restored after a disaster .
3-44:Second is the recoverytime objective which is the time it takes to recover to that consistent data point after a disaster [13] .
3-45:Remote replication can be broadly classified into the following two categories: ¡ Synchronous replication: every data block written to a local storage system is replicated to the remote location before the local write operation returns .
3-46:¡ Asynchronous replication: in this case the local and remote storage systems are allowed to diverge .
3-47:The amount of divergence between the local and remote copies is typically bounded by either a certain amount of data, or by a certain amount of time .
3-48:Synchronous replication is normally recommended for applications, such as financial databases, where consistency between local and remote storage systems is a high priority .
3-49:However, these desirable properties come at a price .
3-50:First, because every data block needs to be replicated remotely, synchronous replication systems can not benefit from any local write coalescing of data if the same data blocks are written repeatedly [16] .
3-51:Second, because data have to be copied to the remote location before the write operation returns, synchronous replication has a direct performance impact on the application, since both lower throughput and increased latency of the path between the primary and the remote systems are reflected in the time it takes for the local disk write to complete .
3-52:An alternative is to use asynchronous replication .
3-53:However, because the local and remote systems are allowed to diverge, asynchronous replication always involves some data loss in the event of a failure of the primary system .
3-54:But, because write operations can be batched and pipelined, asynchronous replication systems can move data across the network in a much more efficient manner than synchronous replication systems .
3-55:For WAN live server migration we seek a more flexible replication system where the mode can be dictated by the migration semantics .
3-56:Specifically, to support live server migration we propose a remote replication system where the initial transfer of data between the data centers is performed via asynchronous replication to benefit from the efficiency of that mode of operation .
3-57:When the bulk of the data have been transfered in this manner, replication switches to synchronous replication in anticipation of the completion of the server migration step .
3-58:The final server migration step triggers a simultaneous switch over to the storage system at the new data center .
3-59:In this manner, when the virtual server starts executing in the new data center, storage requirements can be locally met. .
4 WAN MIGRATION SCENARIOS :
4-1:In this section we illustrate how our cooperative, context aware approach can combine the technical building blocks described in the previous section to realize live server migration across a wide area network .
4-2:We demonstrate how the coordination of server virtualization and migration technologies, the storage replication subsystem and the network can achieve live migration of the entire data center across the WAN .
4-3:We utilize different scenarios to demonstrate our approach .
4-4:In Section 3.1 we outline how our approach can be used to achieve the safe live migration of a data center when planned maintenance events are handled .
4-5:In Section 3.2 we show the use of live server migration to mitigate the effects of unplanned outages or failures .
4-6:3.1 Maintenance Outages We deal with maintenance outages in two parts .
4-7:First, we consider the case where the service has no (or very limited) storage requirements .
4-8:This might for example be the case with a network element such as a voice over IP (VoIP) gateway .
4-9:Second, we deal with the more general case where the service also requires the migration of data storage to the new data center .
4-10:Without Requiring Storage to be Migrated: Without storage to be replicated, the primary components that we need to coordinate are the server migration and network mobility .
4-11:Figure 1 shows the environment where the application running in a virtual server VS has to be moved from a physical server in data center A to a physical server in data center B .
4-12:Prior to the maintenance event, the coordinating migration management system would signal to both the server management system as well as the network that a migration is imminent .
4-13:The server management system would initiate the migration of the virtual server from physical server a (¢¤£¦¥ ) to physical server b (¢¤£¦§ ) .
4-14:After an initial bulk state transfer as preparation for migration, the server management system will mirror any state changes between the two virtual servers .
4-15:Similarly, for the network part, based on the signal received from the MMS, the service provider edge (¢©¨ ) router will initiate a number of steps to prepare for the migration .
4-16:Specifically, as shown in Figure 1(b), the migration system will cause the network to create a tunnel between ¢©¨ and ¢©¨ which will be used subsequently to transfer data destined to VS to data center B .
4-17:When the MMS determines a convenient point to quiesce the VS, another signal is sent to both the server management system and the network .
4-18:For the server management system, this signal will indicate the final migration of the VS from data center A to data center B, i.e., after this the VS will become active in data center B .
4-19:For the network, this second signal enables the network data path to switchover locally at ¢©¨©¥ to the remote data center .
4-20:Specifically, from this point in time, any traffic destined for the virtual server address that arrives at ¢©¨©¥ will be switched onto the tunnel to ¢©¨©§ for delivery to data center B .
4-21:Note that at this point, from a server perspective the migration is complete as the VS is now active in data center B .
4-22:However, traffic is sub optimally flowing first to ¢©¨©¥ and then across the tunnel to ¢©¨¤§ .
4-23:To rectify this situation another networking step is involved .
4-24:Specifically, ¢©¨©§ starts to advertise a more preferred route to reach VS, than the route currently being advertised by ¢©¨¤¥ .
4-25:In this manner, as ingress PEs to the network (¢©¨¤ to ¢©¨¤ in Figure 1) receive the more preferred route, traffic will start to flow to ¢©¨©§ directly and the tunnel between ¢©¨©¥ and ¢©¨©§ can be torn down leading to the final state shown in Figure 1(c) .
4-26:Requiring Storage Migration: When storage has to also be replicated, it is critical that we achieve the right balance between performance (impact on the application) and the recovery point or data loss when the switchover occurs to the remote data center .
4-27:To achieve this, we allow the storage to be replicated asynchronously, prior to any initiation of the maintenance event, or, assuming the amount of data to be transfered is relatively small, asynchronous replication can be started in anticipation of a migration that is expected to happen shortly .
4-28:Asynchronous replication during this initial phase allows for the application to see no performance impact .
4-29:However, when the maintenance event is imminent, the MMS would signal to the replication system to switch from asynchronous replication to synchronous replication to ensure that there is no loss of data during migration .
4-30:When data is being replicated synchronously, there will be a performance impact on the application .
4-31:264 Figure 1: Live server migration across a WAN This requires us to keep the exposure to the amount of time we replicate on a synchronous basis to a minimum .
4-32:When the MMS signals to the storage system the requirement to switch to synchronous replication, the storage system completes all the pending asynchronous operations and then proceeds to perform all the subsequent writes by synchronously replicating it to the remote data center .
4-33:Thus, between the server migration and synchronous replication, both the application state and all the storage operations are mirrored at the two environments in the two data centers .
4-34:When all the pending write operations are copied over, then as in the previous case, we quiesce the application and the network is signaled to switch traffic over to the remote data center .
4-35:From this point on, both storage and server migration operations are complete and activated in data center B .
4-36:As above, the network state still needs to be updated to ensure optimal data flow directly to data center B .
4-37:Note that while we have described the live server migration process as involving the service provider for the networking part, it is possible for a data center provider to perform a similar set of functions without involving the service provider .
4-38:Specifically, by creating a tunnel between the customer edge routers in the data center, and performing local switching on the appropriate CE, rather than on the PE, the data center provider can realize the same functionality .
4-39:3.2 Unplanned Outages We propose to also use cooperative, context aware migration to deal with unplanned data center outages .
4-40:There are multiple considerations that go into managing data center operations to plan and overcome failures through migration .
4-41:Some of these are: (1) amount of overhead under normal operation to overcome anticipated failures; (2) amount of data loss affordable (recovery point objective RPO); (3) amount of state that has to be migrated; and (4) time available from anticipated failure to occurrence of event .
4-42:At the one extreme, one might incur the overhead of completely mirroring the application at the remote site .
4-43:This has the consequence of both incurring processing and network overhead under normal operation as well as impacting application performance (latency and throughput) throughout .
4-44:The other extreme is to only ensure data recovery and to start a new copy of the application at the remote site after an outage .
4-45:In this case, application memory state such as ongoing sessions are lost, but data stored on disk is replicated and available in a consistent state .
4-46:Neither this hot standby nor the cold standby approach described are desirable due to the overhead or the loss of application memory state .
4-47:An intermediate approach is to recover control and essential state of the application, in addition to data stored on disk, to further minimize disruptions to users .
4-48:A spectrum of approaches are possible .
4-49:In a VoIP server, for instance, session based information can be mirrored without mirroring the data flowing through each session .
4-50:More generally, this points to the need to checkpoint some application state in addition to mirroring data on disk .
4-51:Checkpointing application state involves storing application state either periodically or in an application aware manner like databases do and then copying it to the remote site .
4-52:Of course, this has the consequence that the application can be restarted remotely at the checkpoint boundary only .
4-53:Similarly, for storage one may use asynchronous replication with a periodic snapshot ensuring all writes are up to date at the remote site at the time of checkpointing .
4-54:Some data loss may occur upon an unanticipated, catastrophic failure, but the recovery point may be fairly small, depending on the frequency of checkpointing application and storage state .
4-55:Coordination between 265 the checkpointing of the application state and the snapshot of storage is key to successful migration while meeting the desired RPOs .
4-56:Incremental checkpointing of application and storage is key to efficiency, and we see existing techniques to achieve this [4, 3, 11] .
4-57:For instance, rather than full application mirroring, a virtualized replica can be maintained as a warm standby in dormant or hibernating state enabling a quick switch over to the previously checkpointed state .
4-58:To make the switch over seamless, in addition to replicating data and recovering state, network support is needed .
4-59:Specifically, on detecting the unavailability of the primary site, the secondary site is made active, and the same mechanism described in Section 3.1 is used to switch traffic over to reach the secondary site via the pre established tunnel .
4-60:Note that for simplicity of exposition we assume here that the PE that performs the local switch over is not affected by the failure .
4-61:The approach can however, easily be extended to make use of a switchover at a router deeper in the network .
4-62:The amount of state and storage that has to be migrated may vary widely from application to application .
4-63:There may be many situations where, in principle, the server can be stateless .
4-64:For example, a SIP proxy server may not have any persistent state and the communication between the clients and the proxy server may be using UDP .
4-65:In such a case, the primary activity to be performed is in the network to move the communication over to the new data center site .
4-66:Little or no overhead is incurred under normal operation to enable the migration to a new data center .
4-67:Failure recovery involves no data loss and we can deal with near instantaneous, catastrophic failures .
4-68:As more and more state is involved with the server, more overhead is incurred to checkpoint application state and potentially to take storage snapshots, either periodically or upon application prompting .
4-69:It also means that the RPO is a function of the interval between checkpoints, when we have to deal with instantaneous failures .
4-70:The more advanced information we have of an impending failure, the more effective we can be in having the state migrated over to the new data center, so that we can still have a tighter RPO when operations are resumed at the new site. .
5 RELATED WORK :
5-1:Prior work on this topic falls into several categories: virtual machine migration, storage replication and network support .
5-2:At the core of our technique is the ability of encapsulate applications within virtual machines that can be migrated without application downtimes [15] .
5-3:Most virtual machine software, such as Xen [8] and VMWare [14] support live migration of VMs that involve extremely short downtimes ranging from tens of milliseconds to a second; details of Xen"s live migration techniques are discussed in [8] .
5-4:As indicated earlier, these techniques assume that migration is being done on a LAN .
5-5:VM migration has also been studied in the Shirako system [10] and for grid environments [17, 19] .
5-6:Current virtual machine software support a suspend and resume feature that can be used to support WAN migration, but with downtimes [18, 12] .
5-7:Recently live WAN migration using IP tunnels was demonstrated in [21], where an IP tunnel is set up from the source to destination server to transparently forward packets to and from the application; we advocate an alternate approach that assumes edge router support .
5-8:In the context of storage, there exist numerous commercial products that perform replication, such as IBM Extended Remote Copy, HP Continuous Access XP, and EMC RepliStor .
5-9:An excellent description of these and others, as well as a detailed taxonomy of the different approaches for replication can be found in [11] .
5-10:The Ursa Minor system argues that no single fault model is optimal for all applications and proposed supporting data type specific selections of fault models and encoding schemes for replication [1] .
5-11:Recently, we proposed the notion of semantic aware replication [13] where the system supports both synchronous and asynchronous replication concurrently and use signals from the file system to determine whether to replicate a particular write synchronously and asynchronously .
5-12:In the context of network support, our work is related to the RouterFarm approach [2], which makes use of orchestrated network changes to realize near hitless maintenance on provider edge routers .
5-13:In addition to being in a different application area, our approach differs from the RouterFarm work in two regards .
5-14:First, we propose to have the required network changes be triggered by functionality outside of the network (as opposed to network management functions inside the network) .
5-15:Second, due to the stringent timing requirements of live migration, we expect that our approach would require new router functionality (as opposed to being realizable via the existing configuration interfaces) .
5-16:Finally, the recovery oriented computing work emphasizes recovery from failures rather than failure avoidance [6] .
5-17:In a similar spirit to ROC, we advocate using mechanisms from live VM migration to storage replication to support planned and unplanned outages in data centers (rather than full replication to mask such failures). .
6-1:A significant concern for Internet based service providers is the continued operation and availability of services in the face of outages, whether planned or unplanned
6-2:In this paper we advocated a cooperative, context aware approach to data center migration across WANs to deal with outages in a non disruptive manner
6-3:We sought to achieve high availability of data center services in the face of both planned and incidental outages of data center facilities
6-4:We advocated using server virtualization technologies to enable the replication and migration of server functions
6-5:We proposed new network functions to enable server migration and replication across wide area networks (such as the Internet or a geographically distributed virtual private network), and finally showed the utility of intelligent and dynamic storage replication technology to ensure applications have access to data in the face of outages with very tight recovery point objectives.
7-1:M
7-2:Abd El Malek, W
7-3:V
7-4:Courtright II, C
7-5:Cranor, G
7-6:R
7-7:Ganger, J
7-8:Hendricks, A
7-9:J
7-10:Klosterman, M
7-11:Mesnier, M
7-12:Prasad, B
7-13:Salmon, R
7-14:R
7-15:Sambasivan, S
7-16:Sinnamohideen, J
7-17:D
7-18:Strunk, E
7-19:Thereska, M
7-20:Wachs, and J
7-21:J
7-22:Wylie
7-23:Ursa minor: versatile cluster based storage
7-24:USENIX Conference on File and Storage Technologies, December 2005
7-25:Mukesh Agrawal, Susan Bailey, Albert Greenberg, Jorge Pastor, Panagiotis Sebos, Srinivasan Seshan, Kobus van der Merwe, and Jennifer Yates
7-26:Routerfarm: Towards a dynamic, manageable network edge
7-27:SIGCOMM Workshop on Internet Network Management (INM), September 2006
7-28:L
7-29:Alvisi
7-30:Understanding the Message Logging Paradigm for Masking Process Crashes
7-31:PhD thesis, Cornell, January 1996
7-32:L
7-33:Alvisi and K
7-34:Marzullo
7-35:Message logging: Pessimistic, optimistic, and causal
7-36:In Proceedings of the 15th International Conference on Distributed Computing Systems, pages 229 236
7-37:IEEE Computer Society, June 1995
7-38:266 Paul Barham, Boris Dragovic, Keir Fraser, Steven Hand, Tim Harris, Alex Ho, Rolf Neugebar, Ian Pratt, and Andrew Warfield
7-39:Xen and the art of virtualization
7-40:In the Proceedings of the ACM Symposium on Operating Systems Principles (SOSP), October 2003
7-41:A
7-42:Brown and D
7-43:A
7-44:Patterson
7-45:Embracing failure: A case for recovery oriented computing (roc)
7-46:2001 High Performance Transaction Processing Symposium, October 2001
7-47:K
7-48:Brown, J
7-49:Katcher, R
7-50:Walters, and A
7-51:Watson
7-52:Snapmirror and snaprestore: Advances in snapshot technology
7-53:Network Appliance Technical Report TR3043
7-54:www
7-55:ne t app
7-56:c om t e c h_ l i br ar y 3043
7-57:ht ml
7-58:C
7-59:Clark, K
7-60:Fraser, S
7-61:Hand, J
7-62:Hanse, E
7-63:Jul, C
7-64:Limpach, I
7-65:Pratt, and A
7-66:Warfiel
7-67:Live migration of virtual machines
7-68:In Proceedings of NSDI, May 2005
7-69:Disaster Recovery Journal
7-70:Business continuity glossary
7-71:ht t p:   www
7-72:dr j
7-73:c om gl os s ar y dr j gl os s ar y
7-74:ht ml
7-75:Laura Grit, David Irwin, , Aydan Yumerefendi, and Jeff Chase
7-76:Virtual machine hosting for networked clusters: Building the foundations for autonomic orchestration
7-77:In In the First International Workshop on Virtualization Technology in Distributed Computing (VTDC), November 2006
7-78:M
7-79:Ji, A
7-80:Veitch, and J
7-81:Wilkes
7-82:Seneca: Remote mirroring done write
7-83:USENIX 2003 Annual Technical Conference, June 2003
7-84:M
7-85:Kozuch and M
7-86:Satyanarayanan
7-87:Internet suspend and resume
7-88:In Proceedings of the Fourth IEEE Workshop on Mobile Computing Systems and Applications, Calicoon, NY, June 2002
7-89:Xiaotao Liu, Gal Niv, K
7-90:K
7-91:Ramakrishnan, Prashant Shenoy, and Jacobus Van der Merwe
7-92:The case for semantic aware remote replication
7-93:In Proc
7-94:2nd International Workshop on Storage Security and Survivability (StorageSS 2006), Alexandria, VA, October 2006
7-95:Michael Nelson, Beng Hong Lim, and Greg Hutchins
7-96:Fast Transparent Migration for Virtual Machines
7-97:In USENIX Annual Technical Conference, 2005
7-98:Mendel Rosenblum and Tal Garfinkel
7-99:Virtual machine monitors: Current technology and future trends
7-100:Computer, 38(5):39 47, 2005
7-101:C
7-102:Ruemmler and J
7-103:Wilkes
7-104:Unix disk access patterns
7-105:Proceedings of Winter 1993 USENIX, Jan 1993
7-106:Paul Ruth, Junghwan Rhee, Dongyan Xu, Rick Kennell, and Sebastien Goasguen
7-107:Autonomic Live Adaptation of Virtual Computational Environments in a Multi Domain Infrastructure
7-108:In IEEE International Conference on Autonomic Computing (ICAC), June 2006
7-109:Constantine P
7-110:Sapuntzakis, Ramesh Chandra, Ben Pfaff, Jim Chow, Monica S
7-111:Lam, and Mendel Rosenblum
7-112:Optimizing the migration of virtual computers
7-113:In Proceedings of the 5th Symposium on Operating Systems Design and Implementation, December 2002
7-114:A
7-115:Sundararaj, A
7-116:Gupta, and P
7-117:Dinda
7-118:Increasing Application Performance in Virtual Environments through Run time Inference and Adaptation
7-119:In Fourteenth International Symposium on High Performance Distributed Computing (HPDC), July 2005
7-120:Symantec Corporation
7-121:Veritas Volume Replicator Administrator"s Guide
7-122:ht t p:   f t p
7-123:s uppor t
7-124:ve r i t as
7-125:c om pub s uppor t   pr oduc t s  Vol ume _ Re pl i c at or  2%83842
7-126:pdf , 5.0 edition, 2006
7-127:F
7-128:Travostino, P
7-129:Daspit, L
7-130:Gommans, C
7-131:Jog, C
7-132:de Laat, J
7-133:Mambretti, I
7-134:Monga, B
7-135:van Oudenaarde, S
7-136:Raghunath, and P
7-137:Wang
7-138:Seamless live migration of virtual machines over the man wan
7-139:Elsevier Future Generations Computer Systems, 2006
7-140:T
7-141:Wood, P
7-142:Shenoy, A
7-143:Venkataramani, and M
7-144:Yousif
7-145:Black box and gray box strategies for virtual machine migration
7-146:In Proceedings of the Usenix Symposium on Networked System Design and Implementation (NSDI), Cambridge, MA, April 2007
7-147:A xen way to iscsi virtualization? http:  www.internetnews.com dev news article.php 3669246, April 2007
7-148:267
picture:
