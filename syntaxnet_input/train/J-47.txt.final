On the Computational Power of Iterative Auctions∗ 
content:
1 ABSTRACT :
1-1:Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions .
1-2:Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices .
1-3:We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind .
1-4:We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending price auctions .
1-5:F.2 [Theory of Computation]: Analysis of Algorithms .
2 INTRODUCTION :
2-1:Combinatorial auctions have recently received a lot of attention .
2-2:In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders .
2-3:The bidders have preferences regarding the bundles of items that they may receive .
2-4:The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S .
2-5:We assume free disposal, i.e., that the vi"s are monotone non decreasing .
2-6:The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items .
2-7:Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems .
2-8:Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science .
2-9:A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions .
2-10:The design of a combinatorial auction involves many considerations .
2-11:In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism preference elicitation .
2-12:Transferring all information about bidders" preferences requires an infeasible (exponential in m) amount of communication .
2-13:Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences .
2-14:We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders" preferences as to be able to find a good (optimal or close to optimal) allocation .
2-15:Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]) .
2-16:Effectively, such an iterative auction accesses the bidders" preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S). .
2-17:These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders .
2-18:Some auctions, called item price or linear price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi .
2-19:Other auctions, called bundle price auctions, allow specifying arbitrary (non linear) prices p(S) for bundles .
2-20:Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices) .
2-21:In other auctions (non anonymous), different bidders may face different (discriminatory) vectors of prices .
2-22:In ascending price auctions, forcing prices to be anonymous may be a significant restriction .
2-23:In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries .
2-24:We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions .
2-25:In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries? That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S) .
2-26:Note that from an algorithmic point of view we are talking about sub linear time algorithms: the input size here is really n(2m − 1) numbers the descriptions of the valuation functions of all bidders .
2-27:There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability .
2-28:Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP .
2-29:Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation .
2-30:As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives .
2-31:This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending price auctions .
2-32:Ascending auctions are iterative auctions where the published prices cannot decrease in time .
2-33:In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean .
2-34:We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare? Are some models computationally stronger than others? Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]) .
2-35:Most of this work presented "upper bounds", i.e., proposed mechanisms with ascending prices and analyzed their properties .
2-36:A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand query auctions since myopic players will answer all demand queries truthfully .
2-37:We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey Clarke Groves prices (e.g., [4, 34]) .
2-38:2 We further discuss this result in Section 5.3 .
2-39:Iterative auctions Demand auctions Item price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawford"s [22] auction .
2-40:(2) The Proxy Auction [3] by Ausubel & Milgrom .
2-41:(3) iBundle(3) by Parkes & Ungar [34] .
2-42:(4) iBundle(2) by Parkes & Ungar [37] .
2-43:(5) Our descending adaptation for the 2 approximation for submodular valuations by [25] (see Subsection 5.4) .
2-44:(6) Ausubel"s [4] auction for substitutes valuations .
2-45:(7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26] .
2-46:(8) The duplicate item auction by [5] .
2-47:(9) Auction for Read Once formulae by [43] .
2-48:(10) The AkBA Auction by Wurman & Wellman [42] .
2-49:payments and in particular, on reaching "Walrasian equilibria" or "Competitive equilibria" .
2-50:A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16] .
2-51:This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome both the allocation and the payments can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons .
2-52:First, ascending auctions are widely used in many real life settings from the FCC spectrum auctions [15] to almost any e commerce website (e.g., [2, 1]) .
2-53:Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over demanded goods .
2-54:Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders" responses .
2-55:Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs .
2-56:second price sealed bid auctions) .
2-57:1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]) .
2-58:Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set .
2-59:4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions .
2-60:30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1 2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1 1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k duplicates O(m1 k+1 ) [14] O(m1 k+1 ) [14] Procurement ln m [32] (log m) 2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally efficient combinatorial auctions, for several classes of valuations .
2-61:All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item price demand queries .
2-62:rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification .
2-63:For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations but not necessarily with computational efficiency .
2-64:The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub exponentially many queries .
2-65:A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1 2− .
2-66:Several lower bounds and upper bounds for approximation are known for some natural classes of valuations these are summarized in Figure 2 .
2-67:In [32], the universal generality of demand queries is also shown: any non deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices) .
2-68:In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy freeness) .
2-69:However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication .
2-70:Bundle price auctions are a generalization of (the more natural and intuitive) item price auctions .
2-71:It is known that indeed item price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial) .
2-72:Lahaie and Parkes [24] show an economically efficient bundle price auction that uses a polynomial number of queries whenever k is polynomial .
2-73:In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item price auction that finds an optimal allocation between them requires exponentially many queries .
2-74:These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains .
2-75:ing the exact valuations of the bidders) .
2-76:These papers adapt methods from machine learning theory to the combinatorialauction setting .
2-77:The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]) .
2-78:This problem studies if and when one can derive the utility function of a consumer from her demand function .
2-79:Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2 .
2-80:After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4 .
2-81:Then, we describe the power of item price ascending auctions (Section 5) and bundle price ascending auctions (Section 6) .
2-82:Readers who are mainly interested in the self contained discussion of ascending auctions can skip Section 4 .
2-83:Missing proofs from Section 4 can be found in part I of the full paper ([8]) .
2-84:Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). .
3 A SURVEY OF OUR RESULTS :
3-1:Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions .
3-2:In this section, we will present an exposition describing our new results .
3-3:We first discuss the power of demand query iterative auctions, and then we turn our attention to ascending auctions .
3-4:Figure 3 summarizes some of our main results .
3-5:2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using? Here is a list of such queries that are either natural, have been used in the literature, or that we found useful .
3-6:bidder reports his value v(S) for this bundle .
3-7:bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A) .
3-8:presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified .
3-9:All of our results 31 Communication Constraint Can find an optimal allocation? Upper bound for welfare approx .
3-10:Lower bound for welfare approx .
3-11:Item Price Demand Queries Yes 1 1 Poly .
3-12:Communication No [32] min(n, O(m1 2 )) [26] min(n, m1 2− ) [32] Poly .
3-13:Item Price Demand Queries No [32] min(n, O(m1 2 )) min(n, m1 2− ) [32] Poly .
3-14:Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item Price AA No min(O(n), O(m1 2− )) Non anonymous Item Price AA No Anonymous Bundle Price AA No min(O(n), O(m1 2− )) Non anonymous Bundle Price AA Yes [37] 1 1 Poly Number of Item Price AA No min(n, O(m1 2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints .
3-15:For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds) .
3-16:New results are highlighted .
3-17:Abbreviations: Poly .
3-18:(Polynomial number size), AA (ascending auctions) .
3-19:means that nothing is currently known except trivial solutions .
3-20:item prices p1...pm, and the bidder responds with his indirect utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 of non zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices .
3-21:In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries .
3-22:We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect utility queries can also simulate each other in polynomial time .
3-23:We prove that exponentially many value queries may be needed in order to simulate a single demand query .
3-24:It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6] .
3-25:Welfare approximation The next question that we ask is how well can a computationally efficient auction that uses only demand queries approximate the optimal allocation? Two separate obstacles are known: In [32], a lower bound of min(n, m1 2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule .
3-26:7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices .
3-27:This notion relates to the Indirect utility function studied in the Microeconomic literature (see, e.g., [27]) .
3-28:8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per item price .
3-29:We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2 .
3-30:obtained using any polynomial amount of communication .
3-31:A computational bound with the same value applies even for the case of single minded bidders, but under the assumption of NP = ZPP [39] .
3-32:As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)) .
3-33:This iterative auction may be implemented with bundle price demand queries but, as far as we see, not as one with item prices .
3-34:Since in a single bundle price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost .
3-35:In Section 4.2, we describe a different item price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication) .
3-36:Theorem: There exists a computationally efficient iterative auction with item price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)) .
3-37:One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries .
3-38:However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al .
3-39:[19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi sized bundles .
3-40:We do not know how to close the (tiny) gap between this upper bound and our lower bound .
3-41:Representing bundle prices We then deal with a critical issue with bundle price auctions that was side stepped by our model, as well as by all previous works that used bundle price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira .
3-42:32 the bundle prices represented? For item price auctions this is not an issue since a query needs only to specify a small number, m, of prices .
3-43:In bundle price auctions that situation is more difficult since there are exponentially many bundles that require pricing .
3-44:Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol .
3-45:A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle prices in this language, and require that the representations of the bundle prices also be polynomial .
3-46:What could such a language for denoting prices for all bundles look like? First note that specifying a price for each bundle is equivalent to specifying a valuation .
3-47:Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations thus we could use any of them .
3-48:This point of view opens up the general issue of which language should be used in bundle price auctions and what are the implications of this choice .
3-49:Here we initiate this line of investigation .
3-50:We consider bundle price auctions where the prices must be given as a XOR bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets .
3-51:Note that all bundle price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.) We show that once the representation length of bundle prices is taken into account (using the XOR language), bundle price auctions are no more strictly stronger than item price auctions .
3-52:Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case) .
3-53:Theorem: For some class of valuations, bundle price auctions that use the XOR language require an exponential cost for finding the optimal allocation .
3-54:In contrast, item price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgrom"s Clock Proxy auction ([10]) .
3-55:Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program .
3-56:In many cases solving the linear program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]) .
3-57:However, the linear program has an exponential number of variables .
3-58:Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits .
3-59:We were not able to find an elementary proof .
3-60:ponential number of variables, this linear program may be solved within polynomial communication .
3-61:The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]) .
3-62:The dual program has a polynomial number of variables, but an exponential number of constraints .
3-63:The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints .
3-64:Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders .
3-65:The treatment of [32] was somewhat ad hoc to the problem at hand (the case of substitute valuations) .
3-66:Here we give a somewhat more general form of this important observation .
3-67:Let us call the following class of linear programs generalized winner determination relaxation LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t .
3-68:X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem .
3-69:More generally, wi may be viewed as the weight given to bidder i"s welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i .
3-70:Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item price auctions: It is well known that the item price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players" valuations have the substitutes property .
3-71:The obvious question is whether the optimal allocation can be found for a larger class of valuations .
3-72:Our main result here is a strong negative result: Theorem: There is a 2 item 2 player problem where no ascending item price auction can find the optimal allocation .
3-73:This is in contrast to both the power of bundle price ascending auctions and to the power of general item price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation .
3-74:The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non anonymous auctions) .
3-75:More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item price trajectories .
3-76:11 The produced optimal solution will have polynomial support and thus can be listed fully .
3-77:33 • At least k − 1 ascending item price trajectories are needed to elicit XOR formulae with k terms .
3-78:This result is in some sense tight, since we show that any k term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot .
3-79:Motivated by several recent papers that studied the relation between eliciting and fully eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions .
3-80:We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully elicit such a valuation even for a single bidder .
3-81:While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation .
3-82:While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation .
3-83:We also give several results separating the power of different models for ascending combinatorial auctions that use item prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non deterministic ascending auctions are more powerful than deterministic ascending auctions .
3-84:We also compare different kinds of non anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle price auctions and non anonymous item price auctions are incomparable in their power .
3-85:Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item price auctions but not by descending item price auctions, and vice versa .
3-86:Ascending bundle price auctions: All known ascending bundle price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non anonymous prices .
3-87:Anonymous ascending price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]) .
3-88:We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations .
3-89:12 Non deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]) .
3-90:In some settings, deterministic and non deterministic models have equal power (e.g., computation with finite automata) .
3-91:This bound is regardless of the running time, and it also holds for descending auctions and non deterministic auctions .
3-92:We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item price demand queries .
3-93:The same lower bound clearly holds for anonymous item price ascending auctions since such auctions can be simulated by anonymous bundle price ascending auctions .
3-94:We currently do not have any lower bound on the approximation achievable by non anonymous item price ascending auctions .
3-95:Finally, we study the performance of the existing computationally efficient ascending auctions .
3-96:These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32] .
3-97:However, we also observe that these auctions, as well as the whole class of similar ascending bundle price auctions, require an exponential time even for simple additive valuations .
3-98:This is avoidable and indeed the ascending item price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. .
4 THE MODEL :
4-1:3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real valued valuations .
4-2:There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations .
4-3:This is exactly the same problem as in modeling a simple English auction .
4-4:There are three standard formal ways to model it: its trajectory in time .
4-5:For example, the so called Japanese auction is basically a continuous model of an English model.13 continuously valued .
4-6:In this case we introduce a parameter and usually require the auction to produce results that are close to optimal .
4-7:assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny .
4-8:All communication in this case is then naturally finite .
4-9:In this paper we use the latter formulation and assume that all values are multiples of some δ .
4-10:Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral .
4-11:Almost all (if not all) of our results can be translated to the other two models with little effort .
4-12:3.2 Valuations A single auctioneer is selling m indivisible non homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake cutting literature .
4-13:34 items and N be the set of bidders .
4-14:Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L .
4-15:We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L .
4-16:We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders .
4-17:We will mention the following classes of valuations: • A valuation is called sub modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B) .
4-18:• A valuation is called super additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B) .
4-19:• A valuation is called a k bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi .
4-20:Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ .
4-21:.
4-22:.
4-23:⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q termed the query is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation .
4-24:In this paper, we assume that we have complete control over the bidders" behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder i"s reply to query q .
4-25:The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries .
4-26:At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j .
4-27:We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si) .
4-28:We say that it finds a c approximation if P i vi(Si) ≥ P i vi(Ti) c where T1...Tn is an optimal allocation .
4-29:The running time of the auction on a given instance of the bidders" valuations is the total number of queries made on this instance .
4-30:The running time of a protocol is the worst case cost over all instances .
4-31:Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results .
4-32:Yet, our positive results will not use this power and will be efficient also in the usual computational sense .
4-33:Our goal will be to design computationally efficient protocols .
4-34:We will deem a protocol computationally efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle .
4-35:However, when we discuss ascending price auctions and their variants, a computationally efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively .
4-36:For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4 .
4-37:15 The running time really measures communication costs and not computational running time .
4-38:pseudo polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .
4-39:This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big Oh notation just as a shorthand .
4-40:We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S) .
4-41:3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions .
4-42:In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S .
4-43:The reply of bidder i is simply the set most desired demanded under these prices .
4-44:Formally, a set S that maximizes vi(S) − p(S) .
4-45:It may happen that more than one set S maximizes this value .
4-46:In which case, ties are broken according to some fixed tie breaking rule, e.g., the lexicographically first such set is returned .
4-47:All of our results hold for any fixed tie breaking rule .
4-48:Ascending auctions are iterative auctions with non decreasing prices: Definition 1 .
4-49:In an ascending auction, the prices in the queries to the same bidder can only increase in time .
4-50:Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol .
4-51:Then for all sets S, q(S) ≥ p(S) .
4-52:A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time .
4-53:Note that the term ascending auction refers to an auction with a single ascending trajectory of prices .
4-54:It may be useful to define multi trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]) .
4-55:We consider two main restrictions on the types of allowed demand queries: Definition 2 .
4-56:Item Prices: The prices in each query are given by prices pj for each item j .
4-57:The price of a set S is additive: p(S) = P j∈S pj .
4-58:Definition 3 .
4-59:Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e .
4-60:whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged) .
4-61:In auctions with non anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified .
4-62:Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary search like procedure, losing their ascending nature .
4-63:17 Note that a non anonymous auction can clearly be simulated by n parallel anonymous auctions .
4-64:35 use arbitrary real numbers in + .
4-65:That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ .
4-66:All our hardness results hold for any , even for continuous price increments .
4-67:A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query .
4-68:Formally, this is not a problem as the model does not limit the length of queries in any way the protocol must simply define what the prices are in terms of the replies received for previous queries .
4-69:We look into this issue further in Section 4.3. .
5 THE POWER OF DEMAND QUERIES :
5-1:In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending) .
5-2:We start by comapring demand queries to other types of queries .
5-3:Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries .
5-4:We also initiate the study of the representation of bundle price demand queries, and finally, we show how demand queries help solving the linear programming relaxation of combinatorial auctions in polynomial time .
5-5:4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2 .
5-6:We will present computationally efficient simulations of these query types using item price demand queries .
5-7:In Section 5.1 we show that these simulations can also be done using item price ascending auctions .
5-8:Lemma 4.1 .
5-9:A value query can be simulated by m marginalvalue queries .
5-10:A marginal value query can be simulated by two value queries .
5-11:Lemma 4.2 .
5-12:A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders" valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation .
5-13:Note, however, that this elicitation may be computationally inefficient .
5-14:The next lemma shows that demand queries can be exponentially more powerful than value queries .
5-15:Lemma 4.3 .
5-16:An exponential number of value queries may be required for simulating a single demand query .
5-17:Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4 .
5-18:An indirect utility query can be simulated by mt + 1 demand queries .
5-19:A demand query can be simulated by m + 1 indirect utility queries .
5-20:Demand queries can also simulate relative demand queries:19 18 Note that t bundle price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S .
5-21:19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column .
5-22:Abbreviations: V (value query), MV (marginal value query), D (demand query), IU (Indirect utility query), RD (relative demand query) .
5-23:Lemma 4.5 .
5-24:Relative demand queries can be simulated by a polynomial number of demand queries .
5-25:According to our definition of relative demand queries, they clearly cannot simulate even value queries .
5-26:Figure 4 summarizes the relations between these query types .
5-27:4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1 2− approximation be done using demand queries with item prices, or using the weaker value queries .
5-28:We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse .
5-29:Figure 5 describes a polynomial time algorithm that achieves a min(n, O( √ m)) approximation ratio .
5-30:This algorithm greedily picks the bundles that maximize the bidders" per item value (using relative demand queries, see Section 4.1) .
5-31:As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries) .
5-32:Since both value queries and relative demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6 .
5-33:The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m} approximation for the social welfare .
5-34:We now ask how well can the optimal welfare be approximated by a polynomial number of value queries .
5-35:First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands .
5-36:In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )) .
5-37:When the relative demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length .
5-38:20 In the full paper [8], we observe that this algorithm can be implemented by two descending item price auctions (where we allow removing items along the auction) .
5-39:36 generated by such an auction is at least m√ k approximation of that possible in the original auction .
5-40:Notice that such an auction can be implemented by 2k − 1 value queries to each bidder querying the value of each bundle of the fixed bundles .
5-41:Thus, if we choose k = log m bundles we get an m√ log m approximation while still using a polynomial number of queries .
5-42:The following lemma shows that not much more is possible using value queries: Lemma 4.7 .
5-43:Any iterative auction that uses only value queries and distinguishes between k tuples of 0 1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries .
5-44:Proof .
5-45:Consider the following family of valuations: for every S, such that |S| > m 2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m 2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise .
5-46:Now look at the behavior of the protocol when all valuations vi have T = {1...m} .
5-47:Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non zero value for any player .
5-48:Fix the sequence of queries and answers received on this k tuple of valuations .
5-49:Now consider the k tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions .
5-50:Now consider the k tuple of valuations from our family that correspond to this partition clearly Ti can be allocated to i, for each i, getting a total value of k .
5-51:Now look at the protocol when running on these valuations and compare its behavior to the original case .
5-52:Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S .
5-53:Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple .
5-54:This is forbidden since the protocol must distinguish between this case and the original case which cannot happen if all queries receive the same answer .
5-55:Hence there must have been at least 2 m k queries for the original tuple of valuations .
5-56:We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8 .
5-57:An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m ) approximation for the social welfare .
5-58:Proof .
5-59:Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries .
5-60:An Approximation Algorithm: Initialization: Let T ← M be the current items for sale .
5-61:Let K ← N be the currently participating bidders .
5-62:Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation .
5-63:Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .
5-64:Let i be the bidder with the maximal per item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .
5-65:Set: s∗ i = si, K = K \ i, M = M \ Si Finally: Ask the bidders for their values vi(M) for the grand bundle .
5-66:If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i .
5-67:Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst case approximation possible with polynomial communication .
5-68:This algorithm can be implemented with a polynomial number of demand queries .
5-69:4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle price auctions .
5-70:This language requires the algorithm to explicitly list the price of every bundle with a non trivial price .
5-71:Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly) .
5-72:This representation is equivalent to the XOR language for expressing valuations .
5-73:Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ .. .
5-74:⊕ (Sl : pl) .
5-75:In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk .
5-76:Definition 4 .
5-77:The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ .. .
5-78:⊕ (Sl : pl) is l .
5-79:The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input .
5-80:Note that under this definition, bundle price auctions are not necessarily stronger than item price auctions .
5-81:An itemprice query that prices each item for 1, is translated to an exponentially long bundle price query that needs to specify the price |S| for each bundle S .
5-82:But perhaps bundle price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries? We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions .
5-83:Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2} .
5-84:Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine .
5-85:If one of them is empty and the other non empty, allocate the non empty demand set to its bidder, and the rest to the other .
5-86:If both demand sets are non empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set .
5-87:37 We will show that any bundle price auction that uses only the XOR language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations .
5-88:Lemma 4.9 .
5-89:Every bundle price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family .
5-90:The complication in the proof stems from the fact that using XOR expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets this may be significantly smaller than the number of bundles that have a non zero price .
5-91:(The proof becomes easy if we require the protocol to explicitly name every bundle with non zero price.) We do not know of any elementary proof for this lemma (although we believe that one can be found) .
5-92:Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size .
5-93:4.4 Demand Queries and Linear Programming Consider the following linear programming relaxation for the generalized winner determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t .
5-94:X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables .
5-95:Yet, we will be able to solve it in polynomial time using demand queries to the bidders .
5-96:The solution will have a polynomial size support (non zero values for xi,S), and thus we will be able to describe it in polynomial time .
5-97:Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t .
5-98:ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints .
5-99:Thus, the dual can be solved using the Ellipsoid method in polynomial time if a separation oracle can be implemented in polynomial time .
5-100:Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution .
5-101:We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders .
5-102:Consider a possible solution (u, p) for the dual program .
5-103:We can re write the constraints of the dual program as: ui wi ≥ vi(S) − X j∈S pj wi Now a demand query to bidder i with prices pj wi reveals exactly the set S that maximizes the RHS of the previous inequality .
5-104:Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2) .
5-105:If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint .
5-106:What is left to be shown is how the primal program can be solved .
5-107:(Recall that the primal program has an exponential number of variables.) Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation .
5-108:Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions) .
5-109:Now take the reduced dual where only the constraints encountered exist, and look at its dual .
5-110:It will have the same solution as the original dual and hence of the original primal .
5-111:However, look at the form of this dual of the reduced dual .
5-112:It is just a version of the primal program with a polynomial number of variables those corresponding to constraints that remained in the reduced dual .
5-113:Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. .
6 ITEM PRICE ASCENDING AUCTIONS :
6-1:In this section we characterize the power of ascending item price auctions .
6-2:We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information .
6-3:On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending price trajectories .
6-4:Finally, we separate the power of different models of ascending auctions .
6-5:5.1 The Power of Item Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item prices can elicit preferences that cannot be elicited with polynomial communication .
6-6:As mentioned, all our hardness results hold for any increment, even infinitesimal .
6-7:Theorem 5.1 .
6-8:Some classes of valuations can be elicited by item price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind .
6-9:Proof .
6-10:(sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1} .
6-11:Due to [32], determining the optimal allocation here requires exponential communication in the worst case .
6-12:Nevertheless, we show (see [9]) that an item price ascending auction can do it, as long as it can use exponentially small increments .
6-13:We now describe another positive result for the power of item price ascending auctions .
6-14:In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item price ascending auctions can determine the optimal allocation for this class of valuations .
6-15:that a value query can be simulated with a (truly) polynomial number of item price demand queries .
6-16:Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item price demand queries .
6-17:(In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item price ascending auction.) In the full paper (part II,[9]), we show that we can simulate other types of queries using item price ascending auctions .
6-18:Proposition 5.2 .
6-19:A value query can be simulated by an item price ascending auction .
6-20:This simulation requires a polynomial number of queries .
6-21:Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions .
6-22:It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed .
6-23:The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles .
6-24:Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles .
6-25:We say that an auction is pseudo continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query .
6-26:Proposition 5.3 .
6-27:Consider any pseudo continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction .
6-28:Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction .
6-29:5.2 Limitations of Item Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully elicited .
6-30:An example for such class of valuations is given in Figure 6 .
6-31:Theorem 5.4 .
6-32:There are classes of valuations that cannot be elicited nor fully elicited by any item price ascending auction .
6-33:Proof .
6-34:Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1) .
6-35:First, we prove that this class cannot be fully elicited by a single ascending auction .
6-36:Specifically, an ascending auction cannot reveal the values of both α and β .
6-37:As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately .
6-38:For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g .
6-39:pa ≥ 1 .
6-40:But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α .
6-41:Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6 .
6-42:The optimal allocation depends on whether α is greater than β (in bidder 1"s valuation), and we proved that an ascending auction cannot determine this .
6-43:The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than one of these values can be revealed .
6-44:An immediate conclusion is that this impossibility result also holds for item price descending auctions .
6-45:Since no such trajectory exists, then the same conclusion even holds for non deterministic itemprice auctions (in which exogenous data tells us how to increase the prices) .
6-46:Also note that since the hardness stems from the impossibility to fully elicit a valuation of a single bidder, this result also holds for non anonymous ascending item price auctions .
6-47:5.3 Limitations of Multi Trajectory Ascending Auctions According to Theorem 5.4, no ascending item price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6) .
6-48:But can two ascending trajectories do the job? Or a polynomial number of ascending trajectories? We give negative answers for such suggestions .
6-49:We define a k trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time .
6-50:Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories .
6-51:The power of multiple trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions .
6-52:Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories .
6-53:On the other hand, we show that an XOR formula can be fully elicited by k−1 non deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non anonymous prices with bundle prices are necessary in order that an ascending auction will end up with a universal competitive equilibrium (that leads to VCG payments) .
6-54:22 This result actually separates the power of deterministic 39 Proposition 5.5 .
6-55:XOR valuations with k terms cannot be elicited (or fully elicited) by any (k 2) trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor .
6-56:However, these valuations can be elicited (and fully elicited) by (k 1) trajectory non deterministic non anonymous item price ascending auctions .
6-57:Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6 .
6-58:Elicitation and full elicitation of some classes of valuations cannot be done by any k trajectory itemprice ascending auction, where k = o(2m ) .
6-59:Proof .
6-60:(sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1) .
6-61:We show ([9]) that a single item price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations .
6-62:We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m) approximation can be achieved by a polynomial number of ascending auctions .
6-63:We do not currently have a better upper bound or any lower bound .
6-64:5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature .
6-65:In this section, we compare the power of the different models .
6-66:As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise .
6-67:Ascending vs .
6-68:Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example .
6-69:The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item price descending auction (see the full paper for details [9]) .
6-70:This algorithm guarantees at least half of the optimal efficiency for submodular valuations .
6-71:However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency .
6-72:This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)? We give negative answers to these questions .
6-73:The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non deterministic iterative auctions: our proof shows that a non deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries .
6-74:23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries .
6-75:In descending auctions, one can easily find the bundle with the highest average per item price, keeping all other bundles with non positive utilities, and use this information in the adaptive price change .
6-76:Proposition 5.7 .
6-77:There are classes that cannot be elicited (fully elicited) by ascending item price auctions, but can be elicited (resp .
6-78:fully elicited) with a descending item price auction .
6-79:Proposition 5.8 .
6-80:There are classes that cannot be elicited (fully elicited) by item price descending auctions, but can be elicited (resp .
6-81:fully elicited) by item price ascending auctions .
6-82:Deterministic vs .
6-83:Non Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices .
6-84:That is, preference elicitation can be done by a non deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal) .
6-85:We show that non deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9 .
6-86:Some classes can be elicited (fully elicited) by an item price non deterministic ascending auction, but cannot be elicited (resp .
6-87:fully elicited) by item price deterministic ascending auctions .
6-88:Anonymous vs .
6-89:Non Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle price ascending auctions differs significantly .
6-90:Here, we show that a difference also exists for itemprice ascending auctions .
6-91:Proposition 5.10 .
6-92:Some classes cannot be elicited by anonymous item price ascending auctions, but can be elicited by a non anonymous item price ascending auction .
6-93:Sequential vs .
6-94:Simultaneous Auctions: A non anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder .
6-95:The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries .
6-96:A non anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order .
6-97:The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory .
6-98:Proposition 5.11 .
6-99:There are classes that cannot be elicited by simultaneous non anonymous item price ascending auctions, but can be elicited by a sequential non anonymous item price ascending auction .
6-100:Adaptive vs .
6-101:Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders" responses (i.e., the queries are predefined) we say that the auction is oblivious .
6-102:Otherwise, the auction is adaptive .
6-103:We prove that an adaptive behaviour of the auctioneer may be beneficial .
6-104:Proposition 5.12 .
6-105:There are classes that cannot be elicited (fully elicited) using oblivious item price ascending auctions, but can be elicited (resp .
6-106:fully elicited) by an adaptive item price ascending auction .
6-107:40 5.5 Preference Elicitation vs .
6-108:Full Elicitation Preference elicitation and full elicitation are closely related problems .
6-109:If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]) .
6-110:The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub class of OXS valuations defined in [25]), even for a single bidder, by an item price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!) .
6-111:Theorem 5.13 .
6-112:Substitute valuations cannot be fully elicited by ascending item price auctions .
6-113:Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3) .
6-114:Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question .
6-115:As a step in this direction, we show that its sub class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14 .
6-116:Any OXS valuation can be represented by no more than m2 values. .
7-1:AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non anonymous bundle price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3])
7-2:Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37])
7-3:In this section, we prove that anonymous bundle price ascending auctions achieve poor results in the worst case
7-4:We also show that the family of non anonymous bundleprice ascending auctions can run exponentially slower than simple item price ascending auctions
7-5:6.1 Limitations of Anonymous Bundle Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle price ascending auctions
7-6:These valuations are described in Figure 7
7-7:The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction
7-8:25 Substitute valuations are defined, e.g., in [16]
7-9:Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased
7-10:For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations
7-11:26 A unit demand valuation is an XOR valuation in which all the atomic bundles are singletons
7-12:OXS valuations can be interpreted as an aggregation (OR) of any number of unit demand bidders
7-13:Bid
7-14:1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid
7-15:2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle price auctions cannot determine the optimal allocation for this class of valuations
7-16:a price of a bundle that should be demanded by the other bidder in the future
7-17:Theorem 6.1
7-18:Some classes of valuations cannot be elicited by anonymous bundle price ascending auctions
7-19:Proof
7-20:Consider a pair of XOR valuations as described in Figure 7
7-21:For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g
7-22:that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens)
7-23:In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd)
7-24:Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β
7-25:The valuations described in the proof of Theorem 6.1 can be easily elicited by a non anonymous item price ascending auction
7-26:On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle price ascending auction
7-27:We conclude that the power of these two families of ascending auctions is incomparable
7-28:We strengthen the impossibility result above by showing that anonymous bundle price auctions cannot even achieve better than a min{O(n), O( √ m)} approximation for the social welfare
7-29:This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item price demand queries.28 Theorem 6.2
7-30:An anonymous bundle price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare
7-31:Proof
7-32:(Sketch) Assume we have n bidders and n2 items for sale, and that n is prime
7-33:We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect
7-34:In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields
7-35:The rest of the proof is independent of the specific construction
7-36:Using these n2 bundles we construct a hard to elicit class
7-37:Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles
7-38:A bidder i has a value of 2 for any bundle Si j in his partition
7-39:For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer
7-40:Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2
7-41:27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2
7-42:Otherwise, we give bd to bidder 2 and ac to bidder 1
7-43:Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high valued bundles
7-44:28 Note that bundle price queries may use exponential communication, thus the lower bound of [32] does not hold
7-45:41 Non anonymous Bundle Price Economically Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non anonymous bundle prices)
7-46:Repeat:  Each bidder submits a bundle that maximizes his utility under his current personalized prices
7-47:The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices
7-48:The prices of bundles that were demanded by losing bidders are increased by
7-49:Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded
7-50:Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare
7-51:No bidder will demand a low valued bundle, as long as the price of one of his high valued bundles is below 1 (and thus gain him a utility greater than 1)
7-52:Therefore, for eliciting any information about the low valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1
7-53:Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages
7-54:An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1"s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1"s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1"s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1"s high valued bundle, 0 for all other bidders)
7-55:At this point, the auctioneer cannot have any information about the identity of the bundles with the non zero values
7-56:Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero
7-57:We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1
7-58:6.2 Bundle Prices vs
7-59:Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices
7-60:Auctions from this scheme end up with the optimal allocation for any class of valuations
7-61:We denote this family of ascending auctions as NBEA auctions29
7-62:NBEA auctions can elicit k term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item price queries ([7]), and item price ascending auctions cannot do it at all (Theorem 5.4)
7-63:Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item price demand auctions
7-64:This may justify the use of hybrid auctions that use both linear and non linear prices (e.g., the clock proxy auction [10])
7-65:We show that auctions from this 29 Non anonymous Bundle price economically Efficient Ascending auctions
7-66:For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme
7-67:family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item price ascending auction
7-68:We actually prove this property for a wider class of auctions we call conservative auctions
7-69:We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps  if L is not too high (but with exponential communication, of course)
7-70:An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage
7-71:In addition, each bidder can only receive bundles he demanded during the auction
7-72:Note that NBEA auctions are by definition conservative
7-73:Proposition 6.3
7-74:If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations
7-75:If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ
7-76:Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mu"alem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions
7-77:Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation.
8-1:amazon
8-2:Web Page: http:  www.amazon.com
8-3:ebay
8-4:Web Page: http:  www.ebay.com
8-5:L
8-6:M
8-7:Ausubel and P
8-8:R
8-9:Milgrom
8-10:Ascending auctions with package bidding
8-11:Frontiers of Theoretical Economics, 1:1 42, 2002
8-12:Lawrence Ausubel
8-13:An efficient dynamic auction for heterogeneous commodities, 2000
8-14:Working paper, University of Maryland
8-15:Yair Bartal, Rica Gonen, and Noam Nisan
8-16:Incentive compatible multi unit combinatorial auctions
8-17:In TARK 03, 2003
8-18:Alejandro Bertelsen
8-19:Substitutes valuations and m concavity
8-20:M.Sc
8-21:Thesis, The Hebrew University of Jerusalem, 2005
8-22:Avrim Blum, Jeffrey C
8-23:Jackson, Tuomas Sandholm, and Martin A
8-24:Zinkevich
8-25:Preference elicitation and query learning
8-26:Journal of Machine Learning Research, 5:649 667, 2004
8-27:Liad Blumrosen and Noam Nisan
8-28:On the computational power of iterative auctions I: demand queries
8-29:Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B)
8-30:Additive valuations are both sub additive and super additive and are determined by the m values assigned for the singletons
8-31:42 Jerusalem
8-32:Available from http:  www.cs.huji.ac.il ˜noam mkts.html
8-33:Liad Blumrosen and Noam Nisan
8-34:On the computational power of iterative auctions II: ascending auctions
8-35:Working paper, The Hebrew University of Jerusalem
8-36:Available from http:  www.cs.huji.ac.il ˜noam mkts.html
8-37:P
8-38:Cramton, L.M
8-39:Ausubel, and P.R
8-40:Milgrom
8-41:In P
8-42:Cramton and Y
8-43:Shoham and R
8-44:Steinberg (Editors), Combinatorial Auctions
8-45:Chapter 5
8-46:The Clock Proxy Auction: A Practical Combinatorial Auction Design
8-47:MIT Press
8-48:Forthcoming, 2005
8-49:P
8-50:Cramton, Y
8-51:Shoham, and R
8-52:Steinberg (Editors)
8-53:Combinatorial Auctions
8-54:MIT Press
8-55:Forthcoming, 2005
8-56:G
8-57:Demange, D
8-58:Gale, and M
8-59:Sotomayor
8-60:Multi item auctions
8-61:Journal of Political Economy, 94:863 872, 1986
8-62:Shahar Dobzinski, Noam Nisan, and Michael Schapira
8-63:Approximation algorithms for cas with complement free bidders
8-64:In The 37th ACM symposium on theory of computing (STOC)., 2005
8-65:Shahar Dobzinski and Michael Schapira
8-66:Optimal upper and lower approximation bounds for k duplicates combinatorial auctions
8-67:Working paper, the Hebrew University
8-68:Combinatorial bidding conference
8-69:Web Page: http:  wireless.fcc.gov auctions conferences combin2003
8-70:Faruk Gul and Ennio Stacchetti
8-71:Walrasian equilibrium with gross substitutes
8-72:Journal of Economic Theory, 87:95  124, 1999
8-73:Faruk Gul and Ennio Stacchetti
8-74:The english auction with differentiated commodities
8-75:Journal of Economic Theory, 92(3):66  95, 2000
8-76:J
8-77:Hastad
8-78:Almost optimal lower bounds for small depth circuits
8-79:In 18th STOC, pages 6 20, 1986
8-80:Ron Holzman, Noa Kfir Dahav, Dov Monderer, and Moshe Tennenholtz
8-81:Bundling equilibrium in combinatrial auctions
8-82:Games and Economic Behavior, 47:104 123, 2004
8-83:H
8-84:Karloff
8-85:Linear Programming
8-86:Birkh¨auser Verlag, 1991
8-87:Frank Kelly and Richard Steinberg
8-88:A combinatorial auction with multiple winners for universal service
8-89:Management Science, 46:586 596, 2000
8-90:A.S
8-91:Kelso and V.P
8-92:Crawford
8-93:Job matching, coalition formation, and gross substitute
8-94:Econometrica, 50:1483 1504, 1982
8-95:Subhash Khot, Richard J
8-96:Lipton, Evangelos Markakis, and Aranyak Mehta
8-97:Inapproximability results for combinatorial auctions with submodular utility functions
8-98:In Working paper., 2004
8-99:Sebastien Lahaie and David C
8-100:Parkes
8-101:Applying learning algorithms to preference elicitation
8-102:In EC 04
8-103:Benny Lehmann, Daniel Lehmann, and Noam Nisan
8-104:Combinatorial auctions with decreasing marginal utilities
8-105:In ACM conference on electronic commerce
8-106:To appear, Games and Economic Behaviour., 2001
8-107:D
8-108:Lehmann, L
8-109:O"Callaghan, and Y
8-110:Shoham
8-111:Truth revelation in approximately efficient combinatorial auctions
8-112:JACM, 49(5):577 602, Sept
8-113:2002
8-114:A
8-115:Mas Collel, W
8-116:Whinston, and J
8-117:Green
8-118:Microeconomic Theory
8-119:Oxford university press, 1995
8-120:Debasis Mishra and David Parkes
8-121:Ascending price vickrey auctions using primal dual algorithms., 2004
8-122:Working paper, Harvard University
8-123:Noam Nisan
8-124:The communication complexity of approximate set packing and covering
8-125:In ICALP 2002
8-126:Noam Nisan
8-127:Bidding and allocation in combinatorial auctions
8-128:In ACM Conference on Electronic Commerce, 2000
8-129:Noam Nisan
8-130:In P
8-131:Cramton and Y
8-132:Shoham and R
8-133:Steinberg (Editors), Combinatorial Auctions
8-134:Chapter 1
8-135:Bidding Languages
8-136:MIT Press
8-137:Forthcoming, 2005
8-138:Noam Nisan and Ilya Segal
8-139:The communication requirements of efficient allocations and supporting prices, 2003
8-140:Working paper
8-141:Available from http:  www.cs.huji.ac.il ˜noam mkts.html Forthcoming in the Journal of Economic Theory
8-142:Noam Nisan and Ilya Segal
8-143:Exponential communication inefficiency of demand queries, 2004
8-144:Working paper
8-145:Available from http:  www.stanford.edu  isegal queries1.pdf
8-146:D
8-147:C
8-148:Parkes and L
8-149:H
8-150:Ungar
8-151:An ascending price generalized vickrey auction
8-152:Tech
8-153:Rep., Harvard University, 2002
8-154:David Parkes
8-155:In P
8-156:Cramton and Y
8-157:Shoham and R
8-158:Steinberg (Editors), Combinatorial Auctions
8-159:Chapter 3
8-160:Iterative Combinatorial Auctions
8-161:MIT Press
8-162:Forthcoming, 2005
8-163:David C
8-164:Parkes
8-165:Iterative combinatorial auctions: Achieving economic and computational efficiency
8-166:Ph.D
8-167:Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001
8-168:David C
8-169:Parkes and Lyle H
8-170:Ungar
8-171:Iterative combinatorial auctions: Theory and practice
8-172:In AAAI IAAI, pages 74 81, 2000
8-173:Ariel Rubinstein
8-174:Why are certain properties of binary relations relatively more common in natural languages
8-175:Econometrica, 64:343 356, 1996
8-176:Tuomas Sandholm
8-177:Algorithm for optimal winner determination in combinatorial auctions
8-178:In Artificial Intelligence, volume 135, pages 1 54, 2002
8-179:P
8-180:Santi, V
8-181:Conitzer, and T
8-182:Sandholm
8-183:Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions
8-184:In The 17th Annual Conference on Learning Theory, 2004
8-185:Ilya Segal
8-186:The communication requirements of social choice rules and supporting budget sets, 2004
8-187:Working paper
8-188:Available from http:  www.stanford.edu  isegal rules.pdf
8-189:P.R
8-190:Wurman and M.P
8-191:Wellman
8-192:Akba: A progressive, anonymous price combinatorial auction
8-193:In Second ACM Conference on Electronic Commerce, 2000
8-194:Martin A
8-195:Zinkevich, Avrim Blum, and Tuomas Sandholm
8-196:On polynomial time preference elicitation with value queries
8-197:In ACM Conference on Electronic Commerce, 2003
8-198:43
picture:
