Efficiency and Nash Equilibria in a Scrip System for P2P 
content:
1 ABSTRACT :
1-1:A model of providing service in a P2P network is analyzed .
1-2:It is shown that by adding a scrip system, a mechanism that admits a reasonable Nash equilibrium that reduces free riding can be obtained .
1-3:The effect of varying the total amount of money (scrip) in the system on efficiency (i.e., social welfare) is analyzed, and it is shown that by maintaining the appropriate ratio between the total amount of money and the number of agents, efficiency is maximized .
1-4:The work has implications for many online systems, not only P2P networks but also a wide variety of online forums for which scrip systems are popular, but formal analyses have been lacking .
1-5:C.2.4 [Computer Communication Networks]: Distributed .
2 INTRODUCTION :
2-1:A common feature of many online distributed systems is that individuals provide services for each other .
2-2:Peer topeer (P2P) networks (such as Kazaa [25] or BitTorrent [3]) have proved popular as mechanisms for file sharing, and applications such as distributed computation and file storage are on the horizon; systems such as Seti@home [24] provide computational assistance; systems such as Slashdot [21] provide content, evaluations, and advice forums in which people answer each other"s questions .
2-3:Having individuals provide each other with service typically increases the social welfare: the individual utilizing the resources of the system derives a greater benefit from it than the cost to the individual providing it .
2-4:However, the cost of providing service can still be nontrivial .
2-5:For example, users of Kazaa and BitTorrent may be charged for bandwidth usage; in addition, in some filesharing systems, there is the possibility of being sued, which can be viewed as part of the cost .
2-6:Thus, in many systems there is a strong incentive to become a free rider and benefit from the system without contributing to it .
2-7:This is not merely a theoretical problem; studies of the Gnutella [22] network have shown that almost 70 percent of users share no files and nearly 50 percent of responses are from the top 1 percent of sharing hosts [1] .
2-8:Having relatively few users provide most of the service creates a point of centralization; the disappearance of a small percentage of users can greatly impair the functionality of the system .
2-9:Moreover, current trends seem to be leading to the elimination of the altruistic users on which these systems rely .
2-10:These heavy users are some of the most expensive customers ISPs have .
2-11:Thus, as the amount of traffic has grown, ISPs have begun to seek ways to reduce this traffic .
2-12:Some universities have started charging students for excessive bandwidth usage; others revoke network access for it [5] .
2-13:A number of companies have also formed whose service is to detect excessive bandwidth usage [19] .
2-14:These trends make developing a system that encourages a more equal distribution of the work critical for the continued viability of P2P networks and other distributed online systems .
2-15:A significant amount of research has gone into designing reputation systems to give preferential treatment to users who are sharing files .
2-16:Some of the P2P networks currently in use have implemented versions of these techniques .
2-17:However, these approaches tend to fall into one of two categories: either they are barter like or reputational .
2-18:By barter like, we mean that each agent bases its decisions only on information it has derived from its own interactions .
2-19:Perhaps the best known example of a barter like system is BitTorrent, where clients downloading a file try to find other clients with parts they are missing so that they can trade, thus creating a roughly equal amount of work .
2-20:Since the barter is restricted to users currently interested in a single file, this works well for popular files, but tends to have problems maintaining availability of less popular ones .
2-21:An example of a barter like system built on top of a more traditional file sharing system is the credit system used by eMule 140 [8] .
2-22:Each user tracks his history of interactions with other users and gives priority to those he has downloaded from in the past .
2-23:However, in a large system, the probability that a pair of randomly chosen users will have interacted before is quite small, so this interaction history will not be terribly helpful .
2-24:Anagnostakis and Greenwald [2] present a more sophisticated version of this approach, but it still seems to suffer from similar problems .
2-25:A number of attempts have been made at providing general reputation systems (e.g .
2-26:[12, 13, 17, 27]) .
2-27:The basic idea is to aggregate each user"s experience into a global number for each individual that intuitively represents the system"s view of that individual"s reputation .
2-28:However, these attempts tend to suffer from practical problems because they implicitly view users as either good or bad, assume that the good users will act according to the specified protocol, and that there are relatively few bad users .
2-29:Unfortunately, if there are easy ways to game the system, once this information becomes widely available, rational users are likely to make use of it .
2-30:We cannot count on only a few users being bad (in the sense of not following the prescribed protocol) .
2-31:For example, Kazaa uses a measure of the ratio of the number of uploads to the number of downloads to identify good and bad users .
2-32:However, to avoid penalizing new users, they gave new users an average rating .
2-33:Users discovered that they could use this relatively good rating to free ride for a while and, once it started to get bad, they could delete their stored information and effectively come back as a new user, thus circumventing the system (see [2] for a discussion and [11] for a formal analysis of this whitewashing) .
2-34:Thus Kazaa"s reputation system is ineffective .
2-35:This is a simple case of a more general vulnerability of such systems to sybil attacks [6], where a single user maintains multiple identities and uses them in a coordinated fashion to get better service than he otherwise would .
2-36:Recent work has shown that most common reputation systems are vulnerable (in the worst case)to such attacks [4]; however, the degree of this vulnerability is still unclear .
2-37:The analyses of the practical vulnerabilities and the existence of such systems that are immune to such attacks remains an area of active research (e.g., [4, 28, 14]) .
2-38:Simple economic systems based on a scrip or money seem to avoid many of these problems, are easy to implement and are quite popular (see, e.g., [13, 15, 26]) .
2-39:However, they have a different set of problems .
2-40:Perhaps the most common involve determining the amount of money in the system .
2-41:Roughly speaking, if there is too little money in the system relative to the number of agents, then relatively few users can afford to make request .
2-42:On the other hand, if there is too much money, then users will not feel the need to respond to a request; they have enough money already .
2-43:A related problem involves handling newcomers .
2-44:If newcomers are each given a positive amount of money, then the system is open to sybil attacks .
2-45:Perhaps not surprisingly, scrip systems end up having to deal with standard economic woes such as inflation, bubbles, and crashes [26] .
2-46:In this paper, we provide a formal model in which to analyze scrip systems .
2-47:We describe a simple scrip system and show that, under reasonable assumptions, for each fixed amount of money there is a nontrivial Nash equilibrium involving threshold strategies, where an agent accepts a request if he has less than $k for some threshold k.1 An interesting aspect of our analysis is that, in equilibrium, the distribution of users with each amount of money is the distribution that maximizes entropy (subject to the money supply constraint) .
2-48:This allows us to compute the money supply that maximizes efficiency (social welfare), given the number of agents .
2-49:It also leads to a solution for the problem of dealing with newcomers: we simply assume that new users come in with no money, and adjust the price of service (which is equivalent to adjusting the money supply) to maintain the ratio that maximizes efficiency .
2-50:While assuming that new users come in with no money will not work in all settings, we believe the approach will be widely applicable .
2-51:In systems where the goal is to do work, new users can acquire money by performing work .
2-52:It should also work in Kazaalike system where a user can come in with some resources (e.g., a private collection of MP3s) .
2-53:The rest of the paper is organized as follows .
2-54:In Section 2, we present our formal model and observe that it can be used to understand the effect of altruists .
2-55:In Section 3, we examine what happens in the game under nonstrategic play, if all agents use the same threshold strategy .
2-56:We show that, in this case, the system quickly converges to a situation where the distribution of money is characterized by maximum entropy .
2-57:Using this analysis, we show in Section 4 that, under minimal assumptions, there is a nontrivial Nash equilibrium in the game where all agents use some threshold strategy .
2-58:Moreover, we show in Section 5 that the analysis leads to an understanding of how to choose the amount of money in the system (or, equivalently, the cost to fulfill a request) so as to maximize efficiency, and also shows how to handle new users .
2-59:In Section 6, we discuss the extent to which our approach can handle sybils and collusion .
2-60:We conclude in Section 7. .
3 THE MODEL :
3-1:To begin, we formalize providing service in a P2P network as a non cooperative game .
3-2:Unlike much of the modeling in this area, our model will model the asymmetric interactions in a file sharing system in which the matching of players (those requesting a file with those who have that particular file) is a key part of the system .
3-3:This is in contrast with much previous work which uses random matching in a prisoner"s dilemma .
3-4:Such models were studied in the economics literature [18, 7] and first applied to online reputations in [11]; an application to P2P is found in [9] .
3-5:This random matching model fails to capture some salient aspects of a number of important settings .
3-6:When a request is made, there are typically many people in the network who can potentially satisfy it (especially in a large P2P network), but not all can .
3-7:For example, some people may not have the time or resources to satisfy the request .
3-8:The randommatching process ignores the fact that some people may not be able to satisfy the request .
3-9:Presumably, if the person matched with the requester could not satisfy the match, he would have to defect .
3-10:Moreover, it does not capture the fact that the decision as to whether to volunteer to satisfy the request should be made before the matching process, not after .
3-11:That is, the matching process does not capture 1 Although we refer to our unit of scrip as the dollar, these are not real dollars nor do we view them as convertible to dollars .
3-12:141 the fact that if someone is unwilling to satisfy the request, there will doubtless be others who can satisfy it .
3-13:Finally, the actions and payoffs in the prisoner"s dilemma game do not obviously correspond to actual choices that can be made .
3-14:For example, it is not clear what defection on the part of the requester means .
3-15:In our model we try to deal with all these issues .
3-16:Suppose that there are n agents .
3-17:At each round, an agent is picked uniformly at random to make a request .
3-18:Each other agent is able to satisfy this request with probability β > 0 at all times, independent of previous behavior .
3-19:The term β is intended to capture the probability that an agent is busy, or does not have the resources to fulfill the request .
3-20:Assuming that β is time independent does not capture the intution that being an unable to fulfill a request at time t may well be correlated with being unable to fulfill it at time t+1 .
3-21:We believe that, in large systems, we should be able to drop the independence assumption, but we leave this for future work .
3-22:In any case, those agents that are able to satisfy the request must choose whether or not to volunteer to satisfy it .
3-23:If at least one agent volunteers, the requester gets a benefit of 1 util (the job is done) and one of volunteers is chosen at random to fulfill the request .
3-24:The agent that fulfills the request pays a cost of α < 1 .
3-25:As is standard in the literature, we assume that agents discount future payoffs by a factor of δ per time unit .
3-26:This captures the intuition that a util now is worth more than a util tomorrow, and allows us to compute the total utility derived by an agent in an infinite game .
3-27:Lastly, we assume that with more players requests come more often .
3-28:Thus we assume that the time between rounds is 1 n .
3-29:This captures the fact that the systems we want to model are really processing many requests in parallel, so we would expect the number of concurrent requests to be proportional to the number of users.2 Let G(n, δ, α, β) denote this game with n agents, a discount factor of δ, a cost to satisfy requests of α, and a probability of being able to satisfy requests of β .
3-30:When the latter two parameters are not relevant, we sometimes write G(n, δ) .
3-31:We use the following notation throughout the paper: • pt denotes the agent chosen in round t .
3-32:• Bt i ∈ {0, 1} denotes whether agent i can satisfy the request in round t .
3-33:Bt i = 1 with probability β > 0 and Bt i is independent of Bt i for all t = t .
3-34:• V t i ∈ {0, 1} denotes agent i"s decision about whether to volunteer in round t; 1 indicates volunteering .
3-35:V t i is determined by agent i"s strategy .
3-36:• vt ∈ {j | V t j Bt j = 1} denotes the agent chosen to satisfy the request .
3-37:This agent is chosen uniformly at random from those who are willing (V t j = 1) and able (Bt j = 1) to satisfy the request .
3-38:• ut i denotes agent i"s utility in round t .
3-39:A standard agent is one whose utility is determined as discussed in the introduction; namely, the agent gets 2 For large n, our model converges to one in which players make requests in real time, and the time between a player"s requests are exponentially distributed with mean 1 .
3-40:In addition, the time between requests served by a single player is also exponentially distributed .
3-41:a utility of 1 for a fulfilled request and utility −α for fulfilling a request .
3-42:Thus, if i is a standard agent, then ut i = 8 < : 1 if i = pt and P j=i V t j Bt j > 0 −α if i = vt 0 otherwise .
3-43:• Ui = P∞ t=0 δt n ut i denotes the total utility for agent round .
3-44:Note that the effective discount factor is δ1 n since an increase in n leads to a shortening of the time between rounds .
3-45:Now that we have a model of making and satisfying requests, we use it to analyze free riding .
3-46:Take an altruist to be someone who always fulfills requests .
3-47:Agent i might rationally behave altruistically if agent i"s utility function has the following form, for some α > 0: ut i = 8 < : 1 if i = pt and P j=i V t j Bt j > 0 α if i = vt 0 otherwise .
3-48:Thus, rather than suffering a loss of utility when satisfying a request, an agent derives positive utility from satisfying it .
3-49:Such a utility function is a reasonable representation of the pleasure that some people get from the sense that they provide the music that everyone is playing .
3-50:For such altruistic agents, playing the strategy that sets V t i = 1 for all t is dominant .
3-51:While having a nonstandard utility function might be one reason that a rational agent might use this strategy, there are certainly others .
3-52:For example a naive user of filesharing software with a good connection might well follow this strategy .
3-53:All that matters for the following discussion is that there are some agents that use this strategy, for whatever reason .
3-54:As we have observed, such users seem to exist in some large systems .
3-55:Suppose that our system has a altruists .
3-56:Intuitively, if a is moderately large, they will manage to satisfy most of the requests in the system even if other agents do no work .
3-57:Thus, there is little incentive for any other agent to volunteer, because he is already getting full advantage of participating in the system .
3-58:Based on this intuition, it is a relatively straightforward calculation to determine a value of a that depends only on α, β, and δ, but not the number n of players in the system, such that the dominant strategy for all standard agents i is to never volunteer to satisfy any requests (i.e., V t i = 0 for all t) .
3-59:Proposition 2.1 .
3-60:There exists an a that depends only on α, β, and δ such that, in G(n, δ, α, β) with at least a altruists, not volunteering in every round is a dominant strategy for all standard agents .
3-61:Proof .
3-62:Consider the strategy for a standard player j in the presence of a altruists .
3-63:Even with no money, player j will get a request satisfied with probability 1 − (1 − β)a just through the actions of these altruists .
3-64:Thus, even if j is chosen to make a request in every round, the most additional expected utility he can hope to gain by having money isP∞ k=1(1 − β)a δk = (1 − β)a (1 − δ) .
3-65:If (1 − β)a (1 − δ) > α or, equivalently, if a > log1−β(α(1 − δ)), never volunteering is a dominant strategy .
3-66:Consider the following reasonable values for our parameters: β = .01 (so that each player can satisfy 1% of the requests), α = .1 (a low but non negligible cost), δ = .9999 day 142 (which corresponds to a yearly discount factor of approximately 0.95), and an average of 1 request per day per player .
3-67:Then we only need a > 1145 .
3-68:While this is a large number, it is small relative to the size of a large P2P network .
3-69:Current systems all have a pool of users behaving like our altruists .
3-70:This means that attempts to add a reputation system on top of an existing P2P system to influence users to cooperate will have no effect on rational users .
3-71:To have a fair distribution of work, these systems must be fundamentally redesigned to eliminate the pool of altruistic users .
3-72:In some sense, this is not a problem at all .
3-73:In a system with altruists, the altruists are presumably happy, as are the standard agents, who get almost all their requests satisfied without having to do any work .
3-74:Indeed, current P2P network work quite well in terms of distributing content to people .
3-75:However, as we said in the introduction, there is some reason to believe these altruists may not be around forever .
3-76:Thus, it is worth looking at what can be done to make these systems work in their absence .
3-77:For the rest of this paper we assume that all agents are standard, and try to maximize expected utility .
3-78:We are interested in equilibria based on a scrip system .
3-79:Each time an agent has a request satisfied he must pay the person who satisfied it some amount .
3-80:For now, we assume that the payment is fixed; for simplicity, we take the amount to be $1 .
3-81:We denote by M the total amount of money in the system .
3-82:We assume that M > 0 (otherwise no one will ever be able to get paid) .
3-83:In principle, agents are free to adopt a very wide variety of strategies .
3-84:They can make decisions based on the names of other agents or use a strategy that is heavily history dependant, and mix these strategies freely .
3-85:To aid our analysis, we would like to be able to restrict our attention to a simpler class of strategies .
3-86:The class of strategies we are interested in is easy to motivate .
3-87:The intuitive reason for wanting to earn money is to cater for the possibility that an agent will run out before he has a chance to earn more .
3-88:On the other hand, a rational agent with plenty of mone would not want to work, because by the time he has managed to spend all his money, the util will have less value than the present cost of working .
3-89:The natural balance between these two is a threshold strategy .
3-90:Let Sk be the strategy where an agent volunteers whenever he has less than k dollars and not otherwise .
3-91:Note that S0 is the strategy where the agent never volunteers .
3-92:While everyone playing S0 is a Nash equilibrium (nobody can do better by volunteering if no one else is willing to), it is an uninteresting one .
3-93:As we will show in Section 4, it is sufficient to restrict our attention to this class of strategies .
3-94:We use Kt i to denote the amount of money agent i has at time t .
3-95:Clearly Kt+1 i = Kt i unless agent i has a request satisfied, in which case Kt+1 i = Kt+1 i − 1 or agent i fulfills a request, in which case Kt+1 i = Kt+1 i + 1 .
3-96:Formally, Kt+1 i = 8 < : Kt i − 1 if i = pt , P j=i V t j Bt j > 0, and Kt i > 0 Kt i + 1 if i = vt and Kt pt > 0 Kt i otherwise .
3-97:The threshold strategy Sk is the strategy such that V t i =  1 if Kt pt > 0 and Kt i < k 0 otherwise. .
4 THE GAME UNDER NONSTRATEGIC PLAY :
4-1:PLAY Before we consider strategic play, we examine what happens in the system if everyone just plays the same strategy Sk .
4-2:Our overall goal is to show that there is some distribution over money (i.e., the fraction of people with each amount of money) such that the system converges to this distribution in a sense to be made precise shortly .
4-3:Suppose that everyone plays Sk .
4-4:For simplicity, assume that everyone has at most k dollars .
4-5:We can make this assumption with essentially no loss of generality, since if someone has more than k dollars, he will just spend money until he has at most k dollars .
4-6:After this point he will never acquire more than k .
4-7:Thus, eventually the system will be in such a state .
4-8:If M ≥ kn, no agent will ever be willing to work .
4-9:Thus, for the purposes of this section we assume that M < kn .
4-10:From the perspective of a single agent, in (stochastic) equilibrium, the agent is undergoing a random walk .
4-11:However, the parameters of this random walk depend on the random walks of the other agents and it is quite complicated to solve directly .
4-12:Thus we consider an alternative analysis based on the evolution of the system as a whole .
4-13:If everyone has at most k dollars, then the amount of money that an agent has is an element of {0, .
4-14:.
4-15:.
4-16:, k} .
4-17:If there are n agents, then the state of the game can be described by identifying how much money each agent has, so we can represent it by an element of Sk,n = {0, .
4-18:.
4-19:.
4-20:, k}{1,...,n} .
4-21:Since the total amount of money is constant, not all of these states can arise in the game .
4-22:For example the state where each player has $0 is impossible to reach in any game with money in the system .
4-23:Let mS(s) = P i∈{1...n} s(i) denote the total mount of money in the game at state s, where s(i) is the number of dollars that agent i has in state s .
4-24:We want to consider only those states where the total money in the system is M, namely Sk,n,M = {s ∈ Sk,n | mS(s) = M} .
4-25:Under the assumption that all agents use strategy Sk, the evolution of the system can be treated as a Markov chain Mk,n,M over the state space Sk,n,M .
4-26:It is possible to move from one state to another in a single round if by choosing a particular agent to make a request and a particular agent to satisfy it, the amounts of money possesed by each agent become those in the second state .
4-27:Therefore the probability of a transition from a state s to t is 0 unless there exist two agents i and j such that s(i ) = t(i ) for all i ∈ {i, j}, t(i) = s(i) + 1, and t(j) = s(j) − 1 .
4-28:In this case the probability of transitioning from s to t is the probability of j being chosen to spend a dollar and has someone willing and able to satisfy his request ((1 n)(1 − (1 − β)|{i |s(i )=k}|−Ij ) multiplied by the probability of i being chosen to satisfy his request (1 (|({i | s(i ) = k}| − Ij )) .
4-29:Ij is 0 if j has k dollars and 1 otherwise (it is just a correction for the fact that j cannot satisfy his own request.) Let ∆k denote the set of probability distributions on {0, .
4-30:.
4-31:.
4-32:, k} .
4-33:We can think of an element of ∆k as describing the fraction of people with each amount of money .
4-34:This is a useful way of looking at the system, since we typically don"t care who has each amount of money, but just the fraction of people that have each amount .
4-35:As before, not all elements of ∆k are possible, given our constraint that the total amount of 143 money is M .
4-36:Rather than thinking in terms of the total amount of money in the system, it will prove more useful to think in terms of the average amount of money each player has .
4-37:Of course, the total amount of money in a system with n agents is M iff the average amount that each player has is m = M n .
4-38:Let ∆k m denote all distributions d ∈ ∆k such that E(d) = m (i.e., Pk j=0 d(j)j = m) .
4-39:Given a state s ∈ Sk,n,M , let ds ∈ ∆k m denote the distribution of money in s .
4-40:Our goal is to show that, if n is large, then there is a distribution d∗ ∈ ∆k m such that, with high probability, the Markov chain Mk,n,M will almost always be in a state s such that ds is close to d∗ .
4-41:Thus, agents can base their decisions about what strategy to use on the assumption that they will be in such a state .
4-42:We can in fact completely characterize the distribution d∗ .
4-43:Given a distribution d ∈ ∆k , let H(d) = − X {j:d(j)=0} d(j) log(d(j)) denote the entropy of d .
4-44:If ∆ is a closed convex set of distributions, then it is well known that there is a unique distribution in ∆ at which the entropy function takes its maximum value in ∆ .
4-45:Since ∆k m is easily seen to be a closed convex set of distributions, it follows that there is a unique distribution in ∆k m that we denote d∗ k,m whose entropy is greater than that of all other distributions in ∆k We have seen that the system is well behaved if the agents all follow a threshold strategy; we now want to show that there is a nontrivial Nash equilibrium where they do so (that is, a Nash equilibrium where all the agents use Sk for some k > 0.) This is not true in general .
4-46:If δ is small, then agents have no incentive to work .
4-47:Intuitively, if future utility is sufficiently discounted, then all that matters is the present, and there is no point in volunteering to work .
4-48:With small δ, S0 is the only equilibrium .
4-49:However, we show that for δ sufficiently large, there is another equilibrium in threshold strategies .
4-50:We do this by first showing that, if every other agent is playing a threshold strategy, then there is a best response that is also a threshold strategy (although not necessarily the same one) .
4-51:We then show that there must be some (mixed) threshold strategy for which this best response is the same strategy .
4-52:It follows that this tuple of threshold strategies is a Nash equilibrium .
4-53:As a first step, we show that, for all k, if everyone other than agent i is playing Sk, then there is a threshold strategy Sk that is a best response for agent i .
4-54:To prove this, we need to assume that the system is close to the steadystate distribution (i.e., the maximum entropy distribution) .
4-55:However, as long as δ is sufficiently close to 1, we can ignore what happens during the period that the system is not in steady state.3 We have thus far considered threshold strategies of the form Sk, where k is a natural number; this is a discrete set of strategies .
4-56:For a later proof, it will be helpful to have a continuous set of strategies .
4-57:If γ = k + γ , where k is a natural number and 0 ≤ γ < 1, let Sγ be the strategy that performs Sk with probability 1 − γ and Sk+1 with probability γ .
4-58:(Note that we are not considering arbitrary mixed threshold strategies here, but rather just mixing between adjacent strategies for the sole purpose of making out strategies continuous in a natural way.) Theorem 3.1 applies to strategies Sγ (the same proof goes through without change), where γ is an arbitrary nonnegative real number .
4-59:Theorem 4.1 .
4-60:Fix a strategy Sγ and an agent i .
4-61:There exists δ∗ < 1 and n∗ such that if δ > δ∗ , n > n∗ , and every agent other than i is playing Sγ in game G(n, δ), then there is an integer k such that the best response for agent i is Sk .
4-62:Either k is unique (that is, there is a unique best response that is also a threshold strategy), or there exists an integer k such that Sγ is a best response for agent i for all γ in the interval [k , k +1] (and these are the only best responses among threshold strategies) .
4-63:Proof .
4-64:(Sketch:) If δ is sufficiently large, we can ignore what happens before the system converges to the maximumentropy distribution .
4-65:If n is sufficiently large, then the strategy played by one agent will not affect the distribution of money significantly .
4-66:Thus, the probability of i moving from one state (dollar amount) to another depends only on i"s strategy (since we can take the probability that i will be chosen to make a request and the probability that i will be chosen to satisfy a request to be constant) .
4-67:Thus, from i"s point of view, the system is a Markov decision process (MDP), and i needs to compute the optimal policy (strategy) for this MDP .
4-68:It follows from standard results [23, Theorem 6.11.6] that there is an optimal policy that is a threshold policy .
4-69:The argument that the best response is either unique or there is an interval of best responses follows from a more careful analysis of the value function for the MDP .
4-70:We remark that there may be best responses that are not threshold strategies .
4-71:All that Theorem 4.1 shows is that, among best responses, there is at least one that is a threshold strategy .
4-72:Since we know that there is a best response that is a threshold strategy, we can look for a Nash equilibrium in the space of threshold strategies .
4-73:Theorem 4.2 .
4-74:For all M, there exists δ∗ < 1 and n∗ such that if δ > δ∗ and n > n∗ , there exists a Nash equilibrium in the game G(n, δ) where all agents play Sγ for some integer γ > 0 .
4-75:Proof .
4-76:It follows easily from the proof Theorem 4.1 that if br(δ, γ) is the minimal best response threshold strategy if all the other agents are playing Sγ and the discount factor is δ then, for fixed δ, br(δ, ·) is a step function .
4-77:It also follows 3 Formally, we need to define the strategies when the system is far from equilibrium .
4-78:However, these far from (stochastic) equilibrium strategies will not affect the equilibrium behavior when n is large and deviations from stochastic equilibrium are extremely rare .
4-79:145 from the theorem that if there are two best responses, then a mixture of them is also a best response .
4-80:Therefore, if we can join the steps by a vertical line, we get a best response curve .
4-81:It is easy to see that everywhere that this bestresponse curve crosses the diagonal y = x defines a Nash equilibrium where all agents are using the same threshold strategy .
4-82:As we have already observed, one such equilibrium occurs at 0 .
4-83:If there are only $M in the system, we can restrict to threshold strategies Sk where k ≤ M + 1 .
4-84:Since no one can have more than $M, all strategies Sk for k > M are equivalent to SM ; these are just the strategies where the agent always volunteers in response to request made by someone who can pay .
4-85:Clearly br(δ, SM ) ≤ M for all δ, so the best response function is at or below the equilibrium at and so will be unwilling to work and the best response is just 0 .
4-86:Consider k∗ , the smallest k such that k > M n .
4-87:It is not hard to show that for k∗ there exists a δ∗ such that for all δ ≥ δ∗ , br(δ, k∗ ) ≥ k∗ .
4-88:It follows by continuity that if δ ≥ δ∗ , there must be some γ such that br(δ, γ) = γ .
4-89:This is the desired Nash equilibrium .
4-90:This argument also shows us that we cannot in general expect fixed points to be unique .
4-91:If br(δ, k∗ ) = k∗ and br(δ, k + 1) > k + 1 then our argument shows there must be a second fixed point .
4-92:In general there may be multiple fixed points even when br(δ, k∗ ) > k∗ , as illustrated in the Figure 4 with n = 1000 and M = 3000 .
4-93:0 5 10 15 20 25 Strategy of Rest of Agents 0 5 10 15 20 25 BestResponse Figure 4: The best response function for n = 1000 and M = 3000 .
4-94:Theorem 4.2 allows us to restrict our design to agents using threshold strategies with the confidence that there will be a nontrivial equilibrium .
4-95:However, it does not rule out the possibility that there may be other equilibria that do not involve threshold stratgies .
4-96:It is even possible (although it seems unlikely) that some of these equilibria might be better. .
5 SOCIAL WELFARE AND SCALABITY :
5-1:Our theorems show that for each value of M and n, for sufficiently large δ, there is a nontrivial Nash equilibrium where all the agents use some threshold strategy Sγ(M,n) .
5-2:From the point of view of the system designer, not all equilibria are equally good; we want an equilibrium where as few as possible agents have $0 when they get a chance to make a request (so that they can pay for the request) and relatively few agents have more than the threshold amount of money (so that there are always plenty of agents to fulfill the request) .
5-3:There is a tension between these objectives .
5-4:It is not hard to show that as the fraction of agents with $0 increases in the maximum entropy distribution, the fraction of agents with the maximum amount of money decreases .
5-5:Thus, our goal is to understand what the optimal amount of money should be in the system, given the number of agents .
5-6:That is, we want to know the amount of money M that maximizes efficiency, i.e., the total expected utility if all the agents use Sγ(M,n) .
5-7:4 We first observe that the most efficient equilibrium depends only on the ratio of M to n, not on the actual values of M and n .
5-8:Theorem 5.1 .
5-9:There exists n∗ such that for all games G(n1, δ) and G(n2, δ) where n1, n2 > n∗ , if M1 n1 = M2 n2, then Sγ(M1,n1) = Sγ(M2,n2) .
5-10:Proof .
5-11:Fix M n = r .
5-12:Theorem 3.1 shows that the maximum entropy distribution depends only on k and the ratio M n, not on M and n separately .
5-13:Thus, given r, for each choice of k, there is a unique maximum entropy distribution dk,r .
5-14:The best response br(δ, k) depends only on the distribution dk,r, not M or n .
5-15:Thus, the Nash equilibrium depends only on the ratio r .
5-16:That is, for all choices of M and n such that n is sufficiently large (so that Theorem 3.1 applies) and M n = r, the equilibrium strategies are the same .
5-17:In light of Theorem 5.1, the system designer should ensure that there is enough money M in the system so that the ratio between M n is optimal .
5-18:We are currently exploring exactly what the optimal ratio is .
5-19:As our very preliminary results for β = 1 show in Figure 5, the ratio appears to be monotone increasing in δ, which matches the intuition that we should provide more patient agents with the opportunity to save more money .
5-20:Additionally, it appears to be relatively smooth, which suggests that it may have a nice analytic solution .
5-21:0.9 0.91 0.92 0.93 0.94 0.95 Discount Rate ∆ 5 5.5 6 6.5 7 OptimalRatioofMn Figure 5: Optimal average amount of money to the nearest .25 for β = 1 We remark that, in practice, it may be easier for the designer to vary the price of fulfilling a request rather than 4 If there are multiple equilibria, we take Sγ(M,n) to be the Nash equilibrium that has highest efficiency for fixed M and n .
5-22:146 injecting money in the system .
5-23:This produces the same effect .
5-24:For example, changing the cost of fulfilling a request from $1 to $2 is equivalent to halving the amount of money that each agent has .
5-25:Similarly, halving the the cost of fulfilling a request is equivalent to doubling the amount of money that everyone has .
5-26:With a fixed amount of money M, there is an optimal product nc of the number of agents and the cost c of fulfilling a request .
5-27:Theorem 5.1 also tells us how to deal with a dynamic pool of agents .
5-28:Our system can handle newcomers relatively easily: simply allow them to join with no money .
5-29:This gives existing agents no incentive to leave and rejoin as newcomers .
5-30:We then change the price of fulfilling a request so that the optimal ratio is maintained .
5-31:This method has the nice feature that it can be implemented in a distributed fashion; if all nodes in the system have a good estimate of n then they can all adjust prices automatically .
5-32:(Alternatively, the number of agents in the system can be posted in a public place.) Approaches that rely on adjusting the amount of money may require expensive system wide computations (see [26] for an example), and must be carefully tuned to avoid creating incentives for agents to manipulate the system by which this is done .
5-33:Note that, in principle, the realization that the cost of fulfilling a request can change can affect an agent"s strategy .
5-34:For example, if an agent expects the cost to increase, then he may want to defer volunteering to fulfill a request .
5-35:However, if the number of agents in the system is always increasing, then the cost always decreases, so there is never any advantage in waiting .
5-36:There may be an advantage in delaying a request, but it is far more costly, in terms of waiting costs than in providing service, since we assume the need for a service is often subject to real waiting costs, while the need to supply the service is merely to augment a money supply .
5-37:(Related issues are discussed in [10].) We ultimately hope to modify the mechanism so that the price of a job can be set endogenously within the system (as in real world economies), with agents bidding for jobs rather than there being a fixed cost set externally .
5-38:However, we have not yet explored the changes required to implement this change .
5-39:Thus, for now, we assume that the cost is set as a function of the number of agents in the system (and that there is no possibility for agents to satisfy a request for less than the official cost or for requesters to offer to pay more than it). .
6 SYBILS AND COLLUSION :
6-1:In a naive sense, our system is essentially sybil proof .
6-2:To get d dollars, his sybils together still have to perform d units of work .
6-3:Moreover, since newcomers enter the system with $0, there is no benefit to creating new agents simply to take advantage of an initial endowment .
6-4:Nevertheless, there are some less direct ways that an agent could take advantage of sybils .
6-5:First, by having more identities he will have a greater probability of getting chosen to make a request .
6-6:It is easy to see that this will lead to the agent having higher total utility .
6-7:However, this is just an artifact of our model .
6-8:To make our system simple to analyze, we have assumed that request opportunities came uniformly at random .
6-9:In practice, requests are made to satisfy a desire .
6-10:Our model implicitly assumed that all agents are equally likely to have a desire at any particular time .
6-11:Having sybils should not increase the need to have a request satisfied .
6-12:Indeed, it would be reasonable to assume that sybils do not make requests at all .
6-13:Second, having sybils makes it more likely that one of the sybils will be chosen to fulfill a request .
6-14:This can allow a user to increase his utility by setting a lower threshold; that is, to use a strategy Sk where k is smaller than the k used by the Nash equilibrium strategy .
6-15:Intuitively, the need for money is not as critical if money is easier to obtain .
6-16:Unlike the first concern, this seems like a real issue .
6-17:It seems reasonable to believe that when people make a decision between a number of nodes to satisfy a request they do so at random, at least to some extent .
6-18:Even if they look for advertised node features to help make this decision, sybils would allow a user to advertise a wide range of features .
6-19:Third, an agent can drive down the cost of fulfilling a request by introducing many sybils .
6-20:Similarly, he could increase the cost (and thus the value of his money) by making a number of sybils leave the system .
6-21:Concievably he could alternate between these techniques to magnify the effects of work he does .
6-22:We have not yet calculated the exact effect of this change (it interacts with the other two effects of having sybils that we have already noted) .
6-23:Given the number of sybils that would be needed to cause a real change in the perceived size of a large P2P network, the practicality of this attack depends heavily on how much sybils cost an attacker and what resources he has available .
6-24:The second point raised regarding sybils also applies to collusion if we allow money to be loaned .
6-25:If k agents collude, they can agree that, if one runs out of money, another in the group will loan him money .
6-26:By pooling their money in this way, the k agents can again do better by setting a higher threshold .
6-27:Note that the loan mechanism doesn"t need to be built into the system; the agents can simply use a fake transaction to transfer the money .
6-28:These appear to be the main avenues for collusive attacks, but we are still exploring this issue. .
7 CONCLUSION :
7-1:We have given a formal analysis of a scrip system and have shown that the existence of a Nash equilibrium where all agents use a threshold strategy .
7-2:Moreover, we can compute efficiency of equilibrium strategy and optimize the price (or money supply) to maximize efficiency .
7-3:Thus, our analysis provides a formal mechanisms for solving some important problems in implementing scrip systems .
7-4:It tells us that with a fixed population of rational users, such systems are very unlikely to become unstable .
7-5:Thus if this stability is common belief among the agents we would not expect inflation, bubbles, or crashes because of agent speculation .
7-6:However, we cannot rule out the possibility that that agents may have other beliefs that will cause them to speculate .
7-7:Our analysis also tells us how to scale the system to handle an influx of new users without introducing these problems: scale the money supply to keep the average amount of money constant (or equivalently adjust prices to achieve the same goal) .
7-8:There are a number of theoretical issues that are still open, including a characterization of the multiplicity of equilibria are there usually 2? In addition, we expect that one should be able to compute analytic estimates for the best response function and optimal pricing which would allow us to understand the relationship between pricing and various parameters in the model .
7-9:147 It would also be of great interest to extend our analysis to handle more realistic settings .
7-10:We mention a few possible extensions here: • We have assumed that the world is homogeneous in a number of ways, including request frequency, utility, and ability to satisfy requests .
7-11:It would be interesting to examine how relaxing any of these assumptions would alter our results .
7-12:• We have assumed that there is no cost to an agent to be a member of the system .
7-13:Suppose instead that we imposed a small cost simply for being present in the system to reflect the costs of routing messages and overlay maintainance .
7-14:This modification could have a significant impact on sybil attacks .
7-15:• We have described a scrip system that works when there are no altruists and have shown that no system can work once there there are sufficiently many altruists .
7-16:What happens between these extremes? • One type of irrational behavior encountered with scrip systems is hoarding .
7-17:There are some similarities between hoarding and altruistic behavior .
7-18:While an altruist provide service for everyone, a hoarder will volunteer for all jobs (in order to get more money) and rarely request service (so as not to spend money) .
7-19:It would be interesting to investigate the extent to which our system is robust against hoarders .
7-20:Clearly with too many hoarders, there may not be enough money remaining among the non hoarders to guarantee that, typically, a non hoarder would have enough money to satisfy a request .
7-21:• Finally, in P2P filesharing systems, there are overlapping communities of various sizes that are significantly more likely to be able to satisfy each other"s requests .
7-22:It would be interesting to investigate the effect of such communities on the equilibrium of our system .
7-23:There are also a number of implementation issues that would have to be resolved in a real system .
7-24:For example, we need to worry about the possibility of agents counterfeiting money or lying about whether service was actually provided .
7-25:Karma [26] provdes techniques for dealing with both of these issues and a number of others, but some of Karma"s implementation decisions point to problems for our model .
7-26:For example, it is prohibitively expensive to ensure that bank account balances can never go negative, a fact that our model does not capture .
7-27:Another example is that Karma has nodes serve as bookkeepers for other nodes account balances .
7-28:Like maintaining a presence in the network, this imposes a cost on the node, but unlike that, responsibility it can be easily shirked .
7-29:Karma suggests several ways to incentivize nodes to perform these duties .
7-30:We have not investigated whether these mechanisms be incorporated without disturbing our equilibrium. .
8-1:We would like to thank Emin Gun Sirer, Shane Henderson, Jon Kleinberg, and 3 anonymous referees for helpful suggestions
8-2:EF, IK and JH are supported in part by NSF under grant ITR 0325453
8-3:JH is also supported in part by NSF under grants CTC 0208535 and IIS 0534064, by ONR under grant N00014 01 10 511, by the DoD Multidisciplinary University Research Initiative (MURI) program administered by the ONR under grants N00014 01 1 0795 and N00014 04 1 0725, and by AFOSR under grant F49620 021 0101.
9-1:E
9-2:Adar and B
9-3:A
9-4:Huberman
9-5:Free riding on Gnutella
9-6:First Monday, 5(10), 2000
9-7:K
9-8:G
9-9:Anagnostakis and M
9-10:Greenwald
9-11:Exchange based incentive mechanisms for peer to peer file sharing
9-12:In International Conference on Distributed Computing Systems (ICDCS), pages 524 533, 2004
9-13:BitTorrent Inc
9-14:BitTorrent web site
9-15:http:  www.bittorent.com
9-16:A
9-17:Cheng and E
9-18:Friedman
9-19:Sybilproof reputation mechanisms
9-20:In Workshop on Economics of Peer to Peer Systems (P2PECON), pages 128 132, 2005
9-21:Cornell Information Technologies
9-22:Cornell"s ccommodity internet usage statistics
9-23:http:  www.cit.cornell.edu computer students  bandwidth charts.html
9-24:J
9-25:R
9-26:Douceur
9-27:The sybil attack
9-28:In International Workshop on Peer to Peer Systems (IPTPS), pages 251 260, 2002
9-29:G
9-30:Ellison
9-31:Cooperation in the prisoner"s dilemma with anonymous random matching
9-32:Review of Economic Studies, 61:567 588, 1994
9-33:eMule Project
9-34:eMule web site
9-35:http:  www.emule project.net
9-36:M
9-37:Feldman, K
9-38:Lai, I
9-39:Stoica, and J
9-40:Chuang
9-41:Robust incentive techniques for peer to peer networks
9-42:In ACM Conference on Electronic Commerce (EC), pages 102 111, 2004
9-43:E
9-44:J
9-45:Friedman and D
9-46:C
9-47:Parkes
9-48:Pricing wifi at starbucks: issues in online mechanism design
9-49:In EC "03: Proceedings of the 4th ACM Conference on Electronic Commerce, pages 240 241
9-50:ACM Press, 2003
9-51:E
9-52:J
9-53:Friedman and P
9-54:Resnick
9-55:The social cost of cheap pseudonyms
9-56:Journal of Economics and Management Strategy, 10(2):173 199, 2001
9-57:R
9-58:Guha, R
9-59:Kumar, P
9-60:Raghavan, and A
9-61:Tomkins
9-62:Propagation of trust and distrust
9-63:In Conference on the World Wide Web(WWW), pages 403 412, 2004
9-64:M
9-65:Gupta, P
9-66:Judge, and M
9-67:H
9-68:Ammar
9-69:A reputation system for peer to peer networks
9-70:In Network and Operating System Support for Digital Audio and Video(NOSSDAV), pages 144 152, 2003
9-71:Z
9-72:Gyongi, P
9-73:Berkhin, H
9-74:Garcia Molina, and J
9-75:Pedersen
9-76:Link spam detection based on mass estimation
9-77:Technical report, Stanford University, 2005
9-78:J
9-79:Ioannidis, S
9-80:Ioannidis, A
9-81:D
9-82:Keromytis, and V
9-83:Prevelakis
9-84:Fileteller: Paying and getting paid for file storage
9-85:In Financial Cryptography, pages 282 299, 2002
9-86:E
9-87:T
9-88:Jaynes
9-89:Where do we stand on maximum entropy? In R
9-90:D
9-91:Levine and M
9-92:Tribus, editors, The Maximum Entropy Formalism, pages 15 118
9-93:MIT Press, Cambridge, Mass., 1978
9-94:148 S
9-95:D
9-96:Kamvar, M
9-97:T
9-98:Schlosser, and H
9-99:Garcia Molina
9-100:The Eigentrust algorithm for reputation management in P2P networks
9-101:In Conference on the World Wide Web (WWW), pages 640 651, 2003
9-102:M
9-103:Kandori
9-104:Social norms and community enforcement
9-105:Review of Economic Studies, 59:63 80, 1992
9-106:LogiSense Corporation
9-107:LogiSense web site
9-108:http:  www.logisense.com tm p2p.html
9-109:L
9-110:Lovasz and P
9-111:Winkler
9-112:Mixing of random walks and other diffusions on a graph
9-113:In Surveys in Combinatorics, 1993, Walker (Ed.), London Mathematical Society Lecture Note Series 187, Cambridge University Press
9-114:1995
9-115:Open Source Technology Group
9-116:Slashdot FAQcomments and moderation
9-117:http:  slashdot.org faq com mod.shtml#cm700
9-118:OSMB LLC
9-119:Gnutella web site
9-120:http:  www.gnutella.com
9-121:M
9-122:L
9-123:Puterman
9-124:Markov Decision Processes
9-125:Wiley, 1994
9-126:SETI@home
9-127:SETI@home web page
9-128:http:  setiathome.ssl.berkeley.edu
9-129:Sharman Networks Ltd
9-130:Kazaa web site
9-131:http:  www.kazaa.com
9-132:V
9-133:Vishnumurthy, S
9-134:Chandrakumar, and E
9-135:Sirer
9-136:Karma: A secure economic framework for peer to peer resource sharing
9-137:In Workshop on Economics of Peer to Peer Systems (P2PECON), 2003
9-138:L
9-139:Xiong and L
9-140:Liu
9-141:Building trust in decentralized peer to peer electronic communities
9-142:In Internation Conference on Electronic Commerce Research (ICECR), 2002
9-143:H
9-144:Zhang, A
9-145:Goel, R
9-146:Govindan, K
9-147:Mason, and B
9-148:V
9-149:Roy
9-150:Making eigenvector based reputation systems robust to collusion
9-151:In Workshop on Algorithms and Models for the Web Graph(WAW), pages 92 104, 2004
9-152:149
picture:
