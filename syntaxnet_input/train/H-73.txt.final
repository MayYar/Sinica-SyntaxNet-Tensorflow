Unified Utility Maximization Framework for Resource 
content:
1 ABSTRACT :
1-1:This paper presents a unified utility framework for resource selection of distributed text information retrieval .
1-2:This new framework shows an efficient and effective way to infer the probabilities of relevance of all the documents across the text databases .
1-3:With the estimated relevance information, resource selection can be made by explicitly optimizing the goals of different applications .
1-4:Specifically, when used for database recommendation, the selection is optimized for the goal of highrecall (include as many relevant documents as possible in the selected databases); when used for distributed document retrieval, the selection targets the high precision goal (high precision in the final merged list of documents) .
1-5:This new model provides a more solid framework for distributed information retrieval .
1-6:Empirical studies show that it is at least as effective as other state of the art algorithms .
1-7:H.3.3 [Information Search and Retrieval]: .
2 INTRODUCTION :
2-1:Conventional search engines such as Google or AltaVista use ad hoc information retrieval solution by assuming all the searchable documents can be copied into a single centralized database for the purpose of indexing .
2-2:Distributed information retrieval, also known as federated search [1,4,7,11,14,22] is different from ad hoc information retrieval as it addresses the cases when documents cannot be acquired and stored in a single database .
2-3:For example, Hidden Web contents (also called invisible or deep Web contents) are information on the Web that cannot be accessed by the conventional search engines .
2-4:Hidden web contents have been estimated to be 2 50 [19] times larger than the contents that can be searched by conventional search engines .
2-5:Therefore, it is very important to search this type of valuable information .
2-6:The architecture of distributed search solution is highly influenced by different environmental characteristics .
2-7:In a small local area network such as small company environments, the information providers may cooperate to provide corpus statistics or use the same type of search engines .
2-8:Early distributed information retrieval research focused on this type of cooperative environments [1,8] .
2-9:On the other side, in a wide area network such as very large corporate environments or on the Web there are many types of search engines and it is difficult to assume that all the information providers can cooperate as they are required .
2-10:Even if they are willing to cooperate in these environments, it may be hard to enforce a single solution for all the information providers or to detect whether information sources provide the correct information as they are required .
2-11:Many applications fall into the latter type of uncooperative environments such as the Mind project [16] which integrates non cooperating digital libraries or the QProber system [9] which supports browsing and searching of uncooperative hidden Web databases .
2-12:In this paper, we focus mainly on uncooperative environments that contain multiple types of independent search engines .
2-13:There are three important sub problems in distributed information retrieval .
2-14:First, information about the contents of each individual database must be acquired (resource representation) [1,8,21] .
2-15:Second, given a query, a set of resources must be selected to do the search (resource selection) [5,7,21] .
2-16:Third, the results retrieved from all the selected resources have to be merged into a single final list before it can be presented to the end user (retrieval and results merging) [1,5,20,22] .
2-17:Many types of solutions exist for distributed information retrieval .
2-18:Invisible web.net1 provides guided browsing of hidden Web databases by collecting the resource descriptions of these databases and building hierarchies of classes that group them by similar topics .
2-19:A database recommendation system goes a step further than a browsing system like Invisible web.net by recommending most relevant information sources to users" queries .
2-20:It is composed of the resource description and the resource selection components .
2-21:This solution is useful when the users want to browse the selected databases by themselves instead of asking the system to retrieve relevant documents automatically .
2-22:Distributed document retrieval is a more sophisticated task .
2-23:It selects relevant information sources for users" queries as the database recommendation system does .
2-24:Furthermore, users" queries are forwarded to the corresponding selected databases and the returned individual ranked lists are merged into a single list to present to the users .
2-25:The goal of a database recommendation system is to select a small set of resources that contain as many relevant documents as possible, which we call a high recall goal .
2-26:On the other side, the effectiveness of distributed document retrieval is often measured by the Precision of the final merged document result list, which we call a high precision goal .
2-27:Prior research indicated that these two goals are related but not identical [4,21] .
2-28:However, most previous solutions simply use effective resource selection algorithm of database recommendation system for distributed document retrieval system or solve the inconsistency with heuristic methods [1,4,21] .
2-29:This paper presents a unified utility maximization framework to integrate the resource selection problem of both database recommendation and distributed document retrieval together by treating them as different optimization goals .
2-30:First, a centralized sample database is built by randomly sampling a small amount of documents from each database with query based sampling [1]; database size statistics are also estimated [21] .
2-31:A logistic transformation model is learned off line with a small amount of training queries to map the centralized document scores in the centralized sample database to the corresponding probabilities of relevance .
2-32:Second, after a new query is submitted, the query can be used to search the centralized sample database which produces a score for each sampled document .
2-33:The probability of relevance for each document in the centralized sample database can be estimated by applying the logistic model to each document"s score .
2-34:Then, the probabilities of relevance of all the (mostly unseen) documents among the available databases can be estimated using the probabilities of relevance of the documents in the centralized sample database and the database size estimates .
2-35:For the task of resource selection for a database recommendation system, the databases can be ranked by the expected number of relevant documents to meet the high recall goal .
2-36:For resource selection for a distributed document retrieval system, databases containing a small number of documents with large probabilities of relevance are favored over databases containing many documents with small probabilities of relevance .
2-37:This selection criterion meets the high precision goal of distributed document retrieval application .
2-38:Furthermore, the Semi supervised learning [20,22] algorithm is applied to merge the returned documents into a final ranked list .
2-39:The unified utility framework makes very few assumptions and works in uncooperative environments .
2-40:Two key features make it a more solid model for distributed information retrieval: i) It formalizes the resource selection problems of different applications as various utility functions, and optimizes the utility functions to achieve the optimal results accordingly; and ii) It shows an effective and efficient way to estimate the probabilities of relevance of all documents across databases .
2-41:Specifically, the framework builds logistic models on the centralized sample database to transform centralized retrieval scores to the corresponding probabilities of relevance and uses the centralized sample database as the bridge between individual databases and the logistic model .
2-42:The human effort (relevance judgment) required to train the single centralized logistic model does not scale with the number of databases .
2-43:This is a large advantage over previous research, which required the amount of human effort to be linear with the number of databases [7,15] .
2-44:The unified utility framework is not only more theoretically solid but also very effective .
2-45:Empirical studies show the new model to be at least as accurate as the state of the art algorithms in a variety of configurations .
2-46:The next section discusses related work .
2-47:Section 3 describes the new unified utility maximization model .
2-48:Section 4 explains our experimental methodology .
2-49:Sections 5 and 6 present our experimental results for resource selection and document retrieval .
2-50:Section 7 concludes. .
3 PRIOR RESEARCH :
3-1:There has been considerable research on all the sub problems of distributed information retrieval .
3-2:We survey the most related work in this section .
3-3:The first problem of distributed information retrieval is resource representation .
3-4:The STARTS protocol is one solution for acquiring resource descriptions in cooperative environments [8] .
3-5:However, in uncooperative environments, even the databases are willing to share their information, it is not easy to judge whether the information they provide is accurate or not .
3-6:Furthermore, it is not easy to coordinate the databases to provide resource representations that are compatible with each other .
3-7:Thus, in uncooperative environments, one common choice is query based sampling, which randomly generates and sends queries to individual search engines and retrieves some documents to build the descriptions .
3-8:As the sampled documents are selected by random queries, query based sampling is not easily fooled by any adversarial spammer that is interested to attract more traffic .
3-9:Experiments have shown that rather accurate resource descriptions can be built by sending about 80 queries and downloading about 300 documents [1] .
3-10:Many resource selection algorithms such as gGlOSS vGlOSS [8] and CORI [1] have been proposed in the last decade .
3-11:The CORI algorithm represents each database by its terms, the document frequencies and a small number of corpus statistics (details in [1]) .
3-12:As prior research on different datasets has shown the CORI algorithm to be the most stable and effective of the three algorithms [1,17,18], we use it as a baseline algorithm in this work .
3-13:The relevant document distribution estimation (ReDDE [21]) resource selection algorithm is a recent algorithm that tries to estimate the distribution of relevant documents across the available databases and ranks the databases accordingly .
3-14:Although the ReDDE algorithm has been shown to be effective, it relies on heuristic constants that are set empirically [21] .
3-15:The last step of the document retrieval sub problem is results merging, which is the process of transforming database specific 33 document scores into comparable database independent document scores .
3-16:The semi supervised learning [20,22] result merging algorithm uses the documents acquired by querybased sampling as training data and linear regression to learn the database specific, query specific merging models .
3-17:These linear models are used to convert the database specific document scores into the approximated centralized document scores .
3-18:The SSL algorithm has been shown to be effective [22] .
3-19:It serves as an important component of our unified utility maximization framework (Section 3) .
3-20:In order to achieve accurate document retrieval results, many previous methods simply use resource selection algorithms that are effective of database recommendation system .
3-21:But as pointed out above, a good resource selection algorithm optimized for high recall may not work well for document retrieval, which targets the high precision goal .
3-22:This type of inconsistency has been observed in previous research [4,21] .
3-23:The research in [21] tried to solve the problem with a heuristic method .
3-24:The research most similar to what we propose here is the decision theoretic framework [7,15] .
3-25:This framework computes a selection that minimizes the overall costs (e.g., retrieval quality, time) of document retrieval system and several methods [15] have been proposed to estimate the retrieval quality .
3-26:However, two points distinguish our research from the DTF model .
3-27:First, the DTF is a framework designed specifically for document retrieval, but our new model integrates two distinct applications with different requirements (database recommendation and distributed document retrieval) into the same unified framework .
3-28:Second, the DTF builds a model for each database to calculate the probabilities of relevance .
3-29:This requires human relevance judgments for the results retrieved from each database .
3-30:In contrast, our approach only builds one logistic model for the centralized sample database .
3-31:The centralized sample database can serve as a bridge to connect the individual databases with the centralized logistic model, thus the probabilities of relevance of documents in different databases can be estimated .
3-32:This strategy can save large amount of human judgment effort and is a big advantage of the unified utility maximization framework over the DTF especially when there are a large number of databases. .
4 UNIFIED UTILITY MAXIMIZATION FRAMEWORK :
4-1:FRAMEWORK The Unified Utility Maximization framework is based on estimating the probabilities of relevance of the (mostly unseen) documents available in the distributed search environment .
4-2:In this section we describe how the probabilities of relevance are estimated and how they are used by the Unified Utility Maximization model .
4-3:We also describe how the model can be optimized for the high recall goal of a database recommendation system and the high precision goal of a distributed document retrieval system .
4-4:3.1 Estimating Probabilities of Relevance As pointed out above, the purpose of resource selection is highrecall and the purpose of document retrieval is high precision .
4-5:In order to meet these diverse goals, the key issue is to estimate the probabilities of relevance of the documents in various databases .
4-6:This is a difficult problem because we can only observe a sample of the contents of each database using query based sampling .
4-7:Our strategy is to make full use of all the available information to calculate the probability estimates .
4-8:3.1.1 Learning Probabilities of Relevance In the resource description step, the centralized sample database is built by query based sampling and the database sizes are estimated using the sample resample method [21] .
4-9:At the same time, an effective retrieval algorithm (Inquery [2]) is applied on the centralized sample database with a small number (e.g., 50) of training queries .
4-10:For each training query, the CORI resource selection algorithm [1] is applied to select some number (e.g., 10) of databases and retrieve 50 document ids from each database .
4-11:The SSL results merging algorithm [20,22] is used to merge the results .
4-12:Then, we can download the top 50 documents in the final merged list and calculate their corresponding centralized scores using Inquery and the corpus statistics of the centralized sample database .
4-13:The centralized scores are further normalized (divided by the maximum centralized score for each query), as this method has been suggested to improve estimation accuracy in previous research [15] .
4-14:Human judgment is acquired for those documents and a logistic model is built to transform the normalized centralized document scores to probabilities of relevance as follows: ( ) ))(exp(1 ))(exp( |)( _ _ dSba dSba drelPdR ccc ccc ++ + == (1) where )( _ dSc is the normalized centralized document score and ac and bc are the two parameters of the logistic model .
4-15:These two parameters are estimated by maximizing the probabilities of relevance of the training queries .
4-16:The logistic model provides us the tool to calculate the probabilities of relevance from centralized document scores .
4-17:3.1.2 Estimating Centralized Document Scores When the user submits a new query, the centralized document scores of the documents in the centralized sample database are calculated .
4-18:However, in order to calculate the probabilities of relevance, we need to estimate centralized document scores for all documents across the databases instead of only the sampled documents .
4-19:This goal is accomplished using: the centralized scores of the documents in the centralized sample database, and the database size statistics .
4-20:We define the database scale factor for the ith database as the ratio of the estimated database size and the number of documents sampled from this database as follows: ^ _ i i i db db db samp N SF N = (2) where ^ idbN is the estimated database size and _idb sampN is the number of documents from the ith database in the centralized sample database .
4-21:The intuition behind the database scale factor is that, for a database whose scale factor is 50, if one document from this database in the centralized sample database has a centralized document score of 0.5, we may guess that there are about 50 documents in that database which have scores of about 0.5 .
4-22:Actually, we can apply a finer non parametric linear interpolation method to estimate the centralized document score curve for each database .
4-23:Formally, we rank all the sampled documents from the ith database by their centralized document 34 scores to get the sampled centralized document score list {Sc(dsi1), Sc(dsi2), Sc(dsi3),…..} for the ith database; we assume that if we could calculate the centralized document scores for all the documents in this database and get the complete centralized document score list, the top document in the sampled list would have rank SFdbi 2, the second document in the sampled list would rank SFdbi3 2, and so on .
4-24:Therefore, the data points of sampled documents in the complete list are: {(SFdbi 2, Sc(dsi1)), (SFdbi3 2, Sc(dsi2)), (SFdbi5 2, Sc(dsi3)),…..} .
4-25:Piecewise linear interpolation is applied to estimate the centralized document score curve, as illustrated in Figure 1 .
4-26:The complete centralized document score list can be estimated by calculating the values of different ranks on the centralized document curve as: ],1[,)(S ^^ c idbij Njd ∈ .
4-27:It can be seen from Figure 1 that more sample data points produce more accurate estimates of the centralized document score curves .
4-28:However, for databases with large database scale ratios, this kind of linear interpolation may be rather inaccurate, especially for the top ranked (e.g., [1, SFdbi 2]) documents .
4-29:Therefore, an alternative solution is proposed to estimate the centralized document scores of the top ranked documents for databases with large scale ratios (e.g., larger than 100) .
4-30:Specifically, a logistic model is built for each of these databases .
4-31:The logistic model is used to estimate the centralized document score of the top 1 document in the corresponding database by using the two sampled documents from that database with highest centralized scores .
4-32:))()(exp(1 ))()(exp( )( 22110 22110 ^ 1 iciicii iciicii ic dsSdsS dsSdsS dS ααα ααα +++ ++ = (3) 0iα , 1iα and 2iα are the parameters of the logistic model .
4-33:For each training query, the top retrieved document of each database is downloaded and the corresponding centralized document score is calculated .
4-34:Together with the scores of the top two sampled documents, these parameters can be estimated .
4-35:After the centralized score of the top document is estimated, an exponential function is fitted for the top part ([1, SFdbi 2]) of the centralized document score curve as: ]2 ,1[)*exp()( 10 ^ idbiiijc SFjjdS ∈+= ββ (4) ^ 0 1 1log( ( ))i c i iS dβ β= − (5) )12 ( ))(log()((log( ^ 11 1 − − = idb icic i SF dSdsS β (6) The two parameters 0iβ and 1iβ are fitted to make sure the exponential function passes through the two points (1, ^ 1)( ic dS ) and (SFdbi 2, Sc(dsi1)) .
4-36:The exponential function is only used to adjust the top part of the centralized document score curve and the lower part of the curve is still fitted with the linear interpolation method described above .
4-37:The adjustment by fitting exponential function of the top ranked documents has been shown empirically to produce more accurate results .
4-38:From the centralized document score curves, we can estimate the complete centralized document score lists accordingly for all the available databases .
4-39:After the estimated centralized document scores are normalized, the complete lists of probabilities of relevance can be constructed out of the complete centralized document score lists by Equation 1 .
4-40:Formally for the ith database, the complete list of probabilities of relevance is: ],1[,)(R ^^ idbij Njd ∈ .
4-41:3.2 The Unified Utility Maximization Model In this section, we formally define the new unified utility maximization model, which optimizes the resource selection problems for two goals of high recall (database recommendation) and high precision (distributed document retrieval) in the same framework .
4-42:In the task of database recommendation, the system needs to decide how to rank databases .
4-43:In the task of document retrieval, the system not only needs to select the databases but also needs to decide how many documents to retrieve from each selected database .
4-44:We generalize the database recommendation selection process, which implicitly recommends all documents in every selected database, as a special case of the selection decision for the document retrieval task .
4-45:Formally, we denote di as the number of documents we would like to retrieve from the ith database and ,.....},{ 21 ddd = as a selection action for all the databases .
4-46:The database selection decision is made based on the complete lists of probabilities of relevance for all the databases .
4-47:The complete lists of probabilities of relevance are inferred from all the available information specifically sR , which stands for the resource descriptions acquired by query based sampling and the database size estimates acquired by sample resample; cS stands for the centralized document scores of the documents in the centralized sample database .
4-48:If the method of estimating centralized document scores and probabilities of relevance in Section 3.1 is acceptable, then the most probable complete lists of probabilities of relevance can be derived and we denote them as 1 ^ ^ * 1{(R( ), [1, ]),dbjd j Nθ = ∈ 2 ^ ^ 2(R( ), [1, ]),.......}dbjd j N∈ .
4-49:Random vector   denotes an arbitrary set of complete lists of probabilities of relevance and ),|( cs SRP θ as the probability of generating this set of lists .
4-50:Finally, to each selection action d and a set of complete lists of Figure 1 .
4-51:Linear interpolation construction of the complete centralized document score list (database scale factor is 50) .
4-52:35 probabilities of relevance θ , we associate a utility function ),( dU θ which indicates the benefit from making the d selection when the true complete lists of probabilities of relevance are θ .
4-53:Therefore, the selection decision defined by the Bayesian framework is: θθθ θ dSRPdUd cs d ).|(),(maxarg * = (7) One common approach to simplify the computation in the Bayesian framework is to only calculate the utility function at the most probable parameter values instead of calculating the whole expectation .
4-54:In other words, we only need to calculate ),( * dU θ and Equation 7 is simplified as follows: ),(maxarg * * θdUd d = (8) This equation serves as the basic model for both the database recommendation system and the document retrieval system .
4-55:3.3 Resource Selection for High Recall High recall is the goal of the resource selection algorithm in federated search tasks such as database recommendation .
4-56:The goal is to select a small set of resources (e.g., less than Nsdb databases) that contain as many relevant documents as possible, which can be formally defined as: = = i N j iji idb ddIdU ^ 1 ^ * )(R)(),( θ (9) I(di) is the indicator function, which is 1 when the ith database is selected and 0 otherwise .
4-57:Plug this equation into the basic model in Equation 8 and associate the selected database number constraint to obtain the following: sdb i i i N j iji d NdItoSubject ddId idb = = = )(: )(R)(maxarg ^ 1 ^* (10) The solution of this optimization problem is very simple .
4-58:We can calculate the expected number of relevant documents for each database as follows: = = idb i N j ijRd dN ^ 1 ^^ )(R (11) The Nsdb databases with the largest expected number of relevant documents can be selected to meet the high recall goal .
4-59:We call this the UUM HR algorithm (Unified Utility Maximization for High Recall) .
4-60:3.4 Resource Selection for High Precision High Precision is the goal of resource selection algorithm in federated search tasks such as distributed document retrieval .
4-61:It is measured by the Precision at the top part of the final merged document list .
4-62:This high precision criterion is realized by the following utility function, which measures the Precision of retrieved documents from the selected databases .
4-63:= = i d j iji i ddIdU 1 ^ * )(R)(),( θ (12) Note that the key difference between Equation 12 and Equation 9 is that Equation 9 sums up the probabilities of relevance of all the documents in a database, while Equation 12 only considers a much smaller part of the ranking .
4-64:Specifically, we can calculate the optimal selection decision by: = = i d j iji d i ddId 1 ^* )(R)(maxarg (13) Different kinds of constraints caused by different characteristics of the document retrieval tasks can be associated with the above optimization problem .
4-65:The most common one is to select a fixed number (Nsdb) of databases and retrieve a fixed number (Nrdoc) of documents from each selected database, formally defined as: 0, )(: )(R)(maxarg 1 ^* ≠= = = = irdoci sdb i i i d j iji d difNd NdItoSubject ddId i (14) This optimization problem can be solved easily by calculating the number of expected relevant documents in the top part of the each database"s complete list of probabilities of relevance: = = rdoc i N j ijRdTop dN 1 ^^ _ )(R (15) Then the databases can be ranked by these values and selected .
4-66:We call this the UUM HP FL algorithm (Unified Utility Maximization for High Precision with Fixed Length document rankings from each selected database) .
4-67:A more complex situation is to vary the number of retrieved documents from each selected database .
4-68:More specifically, we allow different selected databases to return different numbers of documents .
4-69:For simplification, the result list lengths are required to be multiples of a baseline number 10 .
4-70:(This value can also be varied, but for simplification it is set to 10 in this paper.) This restriction is set to simulate the behavior of commercial search engines on the Web .
4-71:(Search engines such as Google and AltaVista return only 10 or 20 document ids for every result page.) This procedure saves the computation time of calculating optimal database selection by allowing the step of dynamic programming to be 10 instead of 1 (more detail is discussed latterly) .
4-72:For further simplification, we restrict to select at most 100 documents from each database (di<=100) Then, the selection optimization problem is formalized as follows: ]10..,,2,1,0[,*10 )(: )(R)(maxarg _ 1 ^* ∈= = = = = kkd Nd NdItoSubject ddId i rdocTotal i i sdb i i i d j iji d i (16) NTotal_rdoc is the total number of documents to be retrieved .
4-73:Unfortunately, there is no simple solution for this optimization problem as there are for Equations 10 and 14 .
4-74:However, a 36 dynamic programming algorithm can be applied to calculate the optimal solution .
4-75:The basic steps of this dynamic programming method are described in Figure 2 .
4-76:As this algorithm allows retrieving result lists of varying lengths from each selected database, it is called UUM HP VL algorithm .
4-77:After the selection decisions are made, the selected databases are searched and the corresponding document ids are retrieved from each database .
4-78:The final step of document retrieval is to merge the returned results into a single ranked list with the semisupervised learning algorithm .
4-79:It was pointed out before that the SSL algorithm maps the database specific scores into the centralized document scores and builds the final ranked list accordingly, which is consistent with all our selection procedures where documents with higher probabilities of relevance (thus higher centralized document scores) are selected. .
5 EXPERIMENTAL METHODOLOGY :
5-1:4.1 Testbeds It is desirable to evaluate distributed information retrieval algorithms with testbeds that closely simulate the real world applications .
5-2:The TREC Web collections WT2g or WT10g [4,13] provide a way to partition documents by different Web servers .
5-3:In this way, a large number (O(1000)) of databases with rather diverse contents could be created, which may make this testbed a good candidate to simulate the operational environments such as open domain hidden Web .
5-4:However, two weakness of this testbed are: i) Each database contains only a small amount of document (259 documents by average for WT2g) [4]; and ii) The contents of WT2g or WT10g are arbitrarily crawled from the Web .
5-5:It is not likely for a hidden Web database to provide personal homepages or web pages indicating that the pages are under construction and there is no useful information at all .
5-6:These types of web pages are contained in the WT2g WT10g datasets .
5-7:Therefore, the noisy Web data is not similar with that of high quality hidden Web database contents, which are usually organized by domain experts .
5-8:Another choice is the TREC news government data [1,15,17, 18,21] .
5-9:TREC news government data is concentrated on relatively narrow topics .
5-10:Compared with TREC Web data: i) The news government documents are much more similar to the contents provided by a topic oriented database than an arbitrary web page, ii) A database in this testbed is larger than that of TREC Web data .
5-11:By average a database contains thousands of documents, which is more realistic than a database of TREC Web data with about 250 documents .
5-12:As the contents and sizes of the databases in the TREC news government testbed are more similar with that of a topic oriented database, it is a good candidate to simulate the distributed information retrieval environments of large organizations (companies) or domainspecific hidden Web sites, such as West that provides access to legal, financial and news text databases [3] .
5-13:As most current distributed information retrieval systems are developed for the environments of large organizations (companies) or domainspecific hidden Web other than open domain hidden Web, TREC news government testbed was chosen in this work .
5-14:Trec123 100col bysource testbed is one of the most used TREC news government testbed [1,15,17,21] .
5-15:It was chosen in this work .
5-16:Three testbeds in [21] with skewed database size distributions and different types of relevant document distributions were also used to give more thorough simulation for real environments .
5-17:Trec123 100col bysource: 100 databases were created from TREC CDs 1, 2 and 3 .
5-18:They were organized by source and publication date [1] .
5-19:The sizes of the databases are not skewed .
5-20:Details are in Table 1 .
5-21:Three testbeds built in [21] were based on the trec123 100colbysource testbed .
5-22:Each testbed contains many small databases and two large databases created by merging about 10 20 small databases together .
5-23:Input: Complete lists of probabilities of relevance for all the |DB| databases .
5-24:Output: Optimal selection solution for Equation 16 .
5-25:i) Create the three dimensional array: Sel (1..|DB|, 1..NTotal_rdoc 10, 1..Nsdb) Each Sel (x, y, z) is associated with a selection decision xyzd , which represents the best selection decision in the condition: only databases from number 1 to number x are considered for selection; totally y*10 documents will be retrieved; only z databases are selected out of the x database candidates .
5-26:And Sel (x, y, z) is the corresponding utility value by choosing the best selection .
5-27:ii) Initialize Sel (1, 1..NTotal_rdoc 10, 1..Nsdb) with only the estimated relevance information of the 1st database .
5-28:iii) Iterate the current database candidate i from 2 to |DB| For each entry Sel (i, y, z): Find k such that: )10,min(1: ))()1,,1((maxarg *10 ^ * yktosubject dRzkyiSelk kj ij k ≤≤ +−−−= ≤ ),,1())()1,,1(( * *10 ^ * zyiSeldRzkyiSelIf kj ij −>+−−− ≤ This means that we should retrieve * 10 k∗ documents from the ith database, otherwise we should not select this database and the previous best solution Sel (i 1, y, z) should be kept .
5-29:Then set the value of iyzd and Sel (i, y, z) accordingly .
5-30:iv) The best selection solution is given by _ 10| | Toral rdoc sdbDB N Nd and the corresponding utility value is Sel (|DB|, NTotal_rdoc 10, Nsdb) .
5-31:Figure 2 .
5-32:The dynamic programming optimization procedure for Equation 16 .
5-33:Table1: Testbed statistics .
5-34:Number of documents Size Testbed Size Min Avg Max Min Avg Max Trec123 3.2 752 10782 39713 28 32 42 Table2: Query set statistics .
5-35:Name TREC Topic Set TREC Topic Field Average Length (Words) Trec123 51 150 Title 3.1 37 Trec123 2ldb 60col (representative): The databases in the trec123 100col bysource were sorted with alphabetical order .
5-36:Two large databases were created by merging 20 small databases with the round robin method .
5-37:Thus, the two large databases have more relevant documents due to their large sizes, even though the densities of relevant documents are roughly the same as the small databases .
5-38:Trec123 AP WSJ 60col (relevant): The 24 Associated Press collections and the 16 Wall Street Journal collections in the trec123 100col bysource testbed were collapsed into two large databases APall and WSJall .
5-39:The other 60 collections were left unchanged .
5-40:The APall and WSJall databases have higher densities of documents relevant to TREC queries than the small databases .
5-41:Thus, the two large databases have many more relevant documents than the small databases .
5-42:Trec123 FR DOE 81col (nonrelevant): The 13 Federal Register collections and the 6 Department of Energy collections in the trec123 100col bysource testbed were collapsed into two large databases FRall and DOEall .
5-43:The other 80 collections were left unchanged .
5-44:The FRall and DOEall databases have lower densities of documents relevant to TREC queries than the small databases, even though they are much larger .
5-45:100 queries were created from the title fields of TREC topics 51 150 .
5-46:The queries 101 150 were used as training queries and the queries 51 100 were used as test queries (details in Table 2) .
5-47:4.2 Search Engines In the uncooperative distributed information retrieval environments of large organizations (companies) or domainspecific hidden Web, different databases may use different types of search engine .
5-48:To simulate the multiple type engine environment, three different types of search engines were used in the experiments: INQUERY [2], a unigram statistical language model with linear smoothing [12,20] and a TFIDF retrieval algorithm with ltc weight [12,20] .
5-49:All these algorithms were implemented with the Lemur toolkit [12] .
5-50:These three kinds of search engines were assigned to the databases among the four testbeds in a round robin manner. .
6 RESULTS: RESOURCE SELECTION OF DATABASE RECOMMENDATION :
6-1:DATABASE RECOMMENDATION All four testbeds described in Section 4 were used in the experiments to evaluate the resource selection effectiveness of the database recommendation system .
6-2:The resource descriptions were created using query based sampling .
6-3:About 80 queries were sent to each database to download 300 unique documents .
6-4:The database size statistics were estimated by the sample resample method [21] .
6-5:Fifty queries (101 150) were used as training queries to build the relevant logistic model and to fit the exponential functions of the centralized document score curves for large ratio databases (details in Section 3.1) .
6-6:Another 50 queries (51 100) were used as test data .
6-7:Resource selection algorithms of database recommendation systems are typically compared using the recall metric nR [1,17,18,21] .
6-8:Let B denote a baseline ranking, which is often the RBR (relevance based ranking), and E as a ranking provided by a resource selection algorithm .
6-9:And let Bi and Ei denote the number of relevant documents in the ith ranked database of B or EFFECTIVENESS For document retrieval, the selected databases are searched and the returned results are merged into a single final list .
6-10:In all of the experiments discussed in this section the results retrieved from individual databases were combined by the semisupervised learning results merging algorithm .
6-11:This version of the SSL algorithm [22] is allowed to download a small number of returned document texts on the fly to create additional training data in the process of learning the linear models which map database specific document scores into estimated centralized document scores .
6-12:It has been shown to be very effective in environments where only short result lists are retrieved from each selected database [22] .
6-13:This is a common scenario in operational environments and was the case for our experiments .
6-14:Document retrieval effectiveness was measured by Precision at the top part of the final document list .
6-15:The experiments in this section were conducted to study the document retrieval effectiveness of five selection algorithms, namely the CORI, ReDDE, UUM HR, UUM HP FL and UUM HP VL algorithms .
6-16:The last three algorithms were proposed in Section 3 .
6-17:All the first four algorithms selected 3 or 5 databases, and 50 documents were retrieved from each selected database .
6-18:The UUM HP FL algorithm also selected 3 or 5 databases, but it was allowed to adjust the number of documents to retrieve from each selected database; the number retrieved was constrained to be from 10 to 100, and a multiple of 10 .
6-19:The Trec123 100Col and representative testbeds were selected for document retrieval as they represent two extreme cases of resource selection effectiveness; in one case the CORI algorithm is as good as the other algorithms and in the other case it is quite Table 5 .
6-20:Precision on the representative testbed when 3 databases were selected .
6-21:(The first baseline is CORI; the second baseline for UUM HP methods is UUM HR.) Precision at Doc Rank CORI ReDDE UUM HR UUM HP FL UUM HP VL 5 docs 0.3720 0.4080 (+9.7%) 0.4640 (+24.7%) 0.4600 (+23.7%)( 0.9%) 0.5000 (+34.4%)(+7.8%) 10 docs 0.3400 0.4060 (+19.4%) 0.4600 (+35.3%) 0.4540 (+33.5%)( 1.3%) 0.4640 (+36.5%)(+0.9%) 15 docs 0.3120 0.3880 (+24.4%) 0.4320 (+38.5%) 0.4240 (+35.9%)( 1.9%) 0.4413 (+41.4%)(+2.2) 20 docs 0.3000 0.3750 (+25.0%) 0.4080 (+36.0%) 0.4040 (+34.7%)( 1.0%) 0.4240 (+41.3%)(+4.0%) 30 docs 0.2533 0.3440 (+35.8%) 0.3847 (+51.9%) 0.3747 (+47.9%)( 2.6%) 0.3887 (+53.5%)(+1.0%) Table 6 .
6-22:Precision on the representative testbed when 5 databases were selected .
6-23:(The first baseline is CORI; the second baseline for UUM HP methods is UUM HR.) Precision at Doc Rank CORI ReDDE UUM HR UUM HP FL UUM HP VL 5 docs 0.3960 0.4080 (+3.0%) 0.4560 (+15.2%) 0.4280 (+8.1%)( 6.1%) 0.4520 (+14.1%)( 0.9%) 10 docs 0.3880 0.4060 (+4.6%) 0.4280 (+10.3%) 0.4460 (+15.0%)(+4.2%) 0.4560 (+17.5%)(+6.5%) 15 docs 0.3533 0.3987 (+12.9%) 0.4227 (+19.6%) 0.4440 (+25.7%)(+5.0%) 0.4453 (+26.0%)(+5.4%) 20 docs 0.3330 0.3960 (+18.9%) 0.4140 (+24.3%) 0.4290 (+28.8%)(+3.6%) 0.4350 (+30.6%)(+5.1%) 30 docs 0.2967 0.3740 (+26.1%) 0.4013 (+35.3%) 0.3987 (+34.4%)( 0.7%) 0.4060 (+36.8%)(+1.2%) Table 3 .
6-24:Precision on the trec123 100col bysource testbed when 3 databases were selected .
6-25:(The first baseline is CORI; the second baseline for UUM HP methods is UUM HR.) Precision at Doc Rank CORI ReDDE UUM HR UUM HP FL UUM HP VL 5 docs 0.3640 0.3480 ( 4.4%) 0.3960 (+8.8%) 0.4680 (+28.6%)(+18.1%) 0.4640 (+27.5%)(+17.2%) 10 docs 0.3360 0.3200 ( 4.8%) 0.3520 (+4.8%) 0.4240 (+26.2%)(+20.5%) 0.4220 (+25.6%)(+19.9%) 15 docs 0.3253 0.3187 ( 2.0%) 0.3347 (+2.9%) 0.3973 (+22.2%)(+15.7%) 0.3920 (+20.5%)(+17.1%) 20 docs 0.3140 0.2980 ( 5.1%) 0.3270 (+4.1%) 0.3720 (+18.5%)(+13.8%) 0.3700 (+17.8%)(+13.2%) 30 docs 0.2780 0.2660 ( 4.3%) 0.2973 (+6.9%) 0.3413 (+22.8%)(+14.8%) 0.3400 (+22.3%)(+14.4%) Table 4 .
6-26:Precision on the trec123 100col bysource testbed when 5 databases were selected .
6-27:(The first baseline is CORI; the second baseline for UUM HP methods is UUM HR.) Precision at Doc Rank CORI ReDDE UUM HR UUM HP FL UUM HP VL 5 docs 0.4000 0.3920 ( 2.0%) 0.4280 (+7.0%) 0.4680 (+17.0%)(+9.4%) 0.4600 (+15.0%)(+7.5%) 10 docs 0.3800 0.3760 ( 1.1%) 0.3800 (+0.0%) 0.4180 (+10.0%)(+10.0%) 0.4320 (+13.7%)(+13.7%) 15 docs 0.3560 0.3560 (+0.0%) 0.3720 (+4.5%) 0.3920 (+10.1%)(+5.4%) 0.4080 (+14.6%)(+9.7%) 20 docs 0.3430 0.3390 ( 1.2%) 0.3550 (+3.5%) 0.3710 (+8.2%)(+4.5%) 0.3830 (+11.7%)(+7.9%) 30 docs 0.3240 0.3140 ( 3.1%) 0.3313 (+2.3%) 0.3500 (+8.0%)(+5.6%) 0.3487 (+7.6%)(+5.3%) 39 a lot worse than the other algorithms .
6-28:Tables 3 and 4 show the results on the Trec123 100Col testbed, and Tables 5 and 6 show the results on the representative testbed .
6-29:On the Trec123 100Col testbed, the document retrieval effectiveness of the CORI selection algorithm is roughly the same or a little bit better than the ReDDE algorithm but both of them are worse than the other three algorithms (Tables 3 and 4) .
6-30:The UUM HR algorithm has a small advantage over the CORI and ReDDE algorithms .
6-31:One main difference between the UUM HR algorithm and the ReDDE algorithm was pointed out before: The UUM HR uses training data and linear interpolation to estimate the centralized document score curves, while the ReDDE algorithm [21] uses a heuristic method, assumes the centralized document score curves are step functions and makes no distinction among the top part of the curves .
6-32:This difference makes UUM HR better than the ReDDE algorithm at distinguishing documents with high probabilities of relevance from low probabilities of relevance .
6-33:Therefore, the UUM HR reflects the high precision retrieval goal better than the ReDDE algorithm and thus is more effective for document retrieval .
6-34:The UUM HR algorithm does not explicitly optimize the selection decision with respect to the high precision goal as the UUM HP FL and UUM HP VL algorithms are designed to do .
6-35:It can be seen that on this testbed, the UUM HP FL and UUM HP VL algorithms are much more effective than all the other algorithms .
6-36:This indicates that their power comes from explicitly optimizing the high precision goal of document retrieval in Equations 14 and 16 .
6-37:On the representative testbed, CORI is much less effective than other algorithms for distributed document retrieval (Tables 5 and 6) .
6-38:The document retrieval results of the ReDDE algorithm are better than that of the CORI algorithm but still worse than the results of the UUM HR algorithm .
6-39:On this testbed the three UUM algorithms are about equally effective .
6-40:Detailed analysis shows that the overlap of the selected databases between the UUM HR, UUM HP FL and UUM HP VL algorithms is much larger than the experiments on the Trec123 100Col testbed, since all of them tend to select the two large databases .
6-41:This explains why they are about equally effective for document retrieval .
6-42:In real operational environments, databases may return no document scores and report only ranked lists of results .
6-43:As the unified utility maximization model only utilizes retrieval scores of sampled documents with a centralized retrieval algorithm to calculate the probabilities of relevance, it makes database selection decisions without referring to the document scores from individual databases and can be easily generalized to this case of rank lists without document scores .
6-44:The only adjustment is that the SSL algorithm merges ranked lists without document scores by assigning the documents with pseudo document scores normalized for their ranks (In a ranked list of 50 documents, the first one has a score of 1, the second has a score of 0.98 etc) ,which has been studied in [22] .
6-45:The experiment results on trec123 100Col bysource testbed with 3 selected databases are shown in Table 7 .
6-46:The experiment setting was the same as before except that the document scores were eliminated intentionally and the selected databases only return ranked lists of document ids .
6-47:It can be seen from the results that the UUM HP FL and UUM HP VL work well with databases returning no document scores and are still more effective than other alternatives .
6-48:Other experiments with databases that return no document scores are not reported but they show similar results to prove the effectiveness of UUM HP FL and UUM HPVL algorithms .
6-49:The above experiments suggest that it is very important to optimize the high precision goal explicitly in document retrieval .
6-50:The new algorithms based on this principle achieve better or at least as good results as the prior state of the art algorithms in several environments. .
7-1:Distributed information retrieval solves the problem of finding information that is scattered among many text databases on local area networks and Internets
7-2:Most previous research use effective resource selection algorithm of database recommendation system for distributed document retrieval application
7-3:We argue that the high recall resource selection goal of database recommendation and high precision goal of document retrieval are related but not identical
7-4:This kind of inconsistency has also been observed in previous work, but the prior solutions either used heuristic methods or assumed cooperation by individual databases (e.g., all the databases used the same kind of search engines), which is frequently not true in the uncooperative environment
7-5:In this work we propose a unified utility maximization model to integrate the resource selection of database recommendation and document retrieval tasks into a single unified framework
7-6:In this framework, the selection decisions are obtained by optimizing different objective functions
7-7:As far as we know, this is the first work that tries to view and theoretically model the distributed information retrieval task in an integrated manner
7-8:The new framework continues a recent research trend studying the use of query based sampling and a centralized sample database
7-9:A single logistic model was trained on the centralized Table 7
7-10:Precision on the trec123 100col bysource testbed when 3 databases were selected (The first baseline is CORI; the second baseline for UUM HP methods is UUM HR.) (Search engines do not return document scores) Precision at Doc Rank CORI ReDDE UUM HR UUM HP FL UUM HP VL 5 docs 0.3520 0.3240 ( 8.0%) 0.3680 (+4.6%) 0.4520 (+28.4%)(+22.8%) 0.4520 (+28.4%)(+22.8) 10 docs 0.3320 0.3140 ( 5.4%) 0.3340 (+0.6%) 0.4120 (+24.1%)(+23.4%) 0.4020 (+21.1%)(+20.4%) 15 docs 0.3227 0.2987 ( 7.4%) 0.3280 (+1.6%) 0.3920 (+21.5%)(+19.5%) 0.3733 (+15.7%)(+13.8%) 20 docs 0.3030 0.2860 ( 5.6%) 0.3130 (+3.3%) 0.3670 (+21.2%)(+17.3%) 0.3590 (+18.5%)(+14.7%) 30 docs 0.2727 0.2640 ( 3.2%) 0.2900 (+6.3%) 0.3273 (+20.0%)(+12.9%) 0.3273 (+20.0%)(+12.9%) 40 sample database to estimate the probabilities of relevance of documents by their centralized retrieval scores, while the centralized sample database serves as a bridge to connect the individual databases with the centralized logistic model
7-11:Therefore, the probabilities of relevance for all the documents across the databases can be estimated with very small amount of human relevance judgment, which is much more efficient than previous methods that build a separate model for each database
7-12:This framework is not only more theoretically solid but also very effective
7-13:One algorithm for resource selection (UUM HR) and two algorithms for document retrieval (UUM HP FL and UUM HP VL) are derived from this framework
7-14:Empirical studies have been conducted on testbeds to simulate the distributed search solutions of large organizations (companies) or domain specific hidden Web
7-15:Furthermore, the UUM HP FL and UUM HP VL resource selection algorithms are extended with a variant of SSL results merging algorithm to address the distributed document retrieval task when selected databases do not return document scores
7-16:Experiments have shown that these algorithms achieve results that are at least as good as the prior state of the art, and sometimes considerably better
7-17:Detailed analysis indicates that the advantage of these algorithms comes from explicitly optimizing the goals of the specific tasks
7-18:The unified utility maximization framework is open for different extensions
7-19:When cost is associated with searching the online databases, the utility framework can be adjusted to automatically estimate the best number of databases to search so that a large amount of relevant documents can be retrieved with relatively small costs
7-20:Another extension of the framework is to consider the retrieval effectiveness of the online databases, which is an important issue in the operational environments
7-21:All of these are the directions of future research
7-22:ACKNOWLEDGEMENT This research was supported by NSF grants EIA 9983253 and IIS 0118767
7-23:Any opinions, findings, conclusions, or recommendations expressed in this paper are the authors", and do not necessarily reflect those of the sponsor.
8-1:J
8-2:Callan
8-3:(2000)
8-4:Distributed information retrieval
8-5:In W.B
8-6:Croft, editor, Advances in Information Retrieval
8-7:Kluwer Academic Publishers
8-8:(pp
8-9:127 150)
8-10:J
8-11:Callan, W.B
8-12:Croft, and J
8-13:Broglio
8-14:(1995)
8-15:TREC and TIPSTER experiments with INQUERY
8-16:Information Processing and Management, 31(3)
8-17:(pp
8-18:327 343)
8-19:J
8-20:G
8-21:Conrad, X
8-22:S
8-23:Guo, P
8-24:Jackson and M
8-25:Meziou
8-26:(2002)
8-27:Database selection using actual physical and acquired logical collection resources in a massive domainspecific operational environment
8-28:Distributed search over the hidden web: Hierarchical database sampling and selection
8-29:In Proceedings of the 28th International Conference on Very Large Databases (VLDB)
8-30:N
8-31:Craswell
8-32:(2000)
8-33:Methods for distributed information retrieval
8-34:Ph
8-35:D
8-36:thesis, The Australian Nation University
8-37:N
8-38:Craswell, D
8-39:Hawking, and P
8-40:Thistlewaite
8-41:(1999)
8-42:Merging results from isolated search engines
8-43:In Proceedings of 10th Australasian Database Conference
8-44:D
8-45:D'Souza, J
8-46:Thom, and J
8-47:Zobel
8-48:(2000)
8-49:A comparison of techniques for selecting text collections
8-50:In Proceedings of the 11th Australasian Database Conference
8-51:N
8-52:Fuhr
8-53:(1999)
8-54:A Decision Theoretic approach to database selection in networked IR
8-55:ACM Transactions on Information Systems, 17(3)
8-56:(pp
8-57:229 249)
8-58:L
8-59:Gravano, C
8-60:Chang, H
8-61:Garcia Molina, and A
8-62:Paepcke
8-63:(1997)
8-64:STARTS: Stanford proposal for internet metasearching
8-65:In Proceedings of the 20th ACM SIGMOD International Conference on Management of Data
8-66:L
8-67:Gravano, P
8-68:Ipeirotis and M
8-69:Sahami
8-70:(2003)
8-71:QProber: A System for Automatic Classification of Hidden Web Databases
8-72:ACM Transactions on Information Systems, 21(1)
8-73:P
8-74:Ipeirotis and L
8-75:Gravano
8-76:(2002)
8-77:Distributed search over the hidden web: Hierarchical database sampling and selection
8-78:In Proceedings of the 28th International Conference on Very Large Databases (VLDB)
8-79:InvisibleWeb.com
8-80:http:  www.invisibleweb.com The lemur toolkit
8-81:http:  www.cs.cmu.edu ~lemur J
8-82:Lu and J
8-83:Callan
8-84:(2003)
8-85:Content based information retrieval in peer to peer networks
8-86:In Proceedings of the 12th International Conference on Information and Knowledge Management
8-87:W
8-88:Meng, C.T
8-89:Yu and K.L
8-90:Liu
8-91:(2002) Building efficient and effective metasearch engines
8-92:ACM Comput
8-93:Surv
8-94:34(1)
8-95:H
8-96:Nottelmann and N
8-97:Fuhr
8-98:(2003)
8-99:Evaluating different method of estimating retrieval quality for resource selection
8-100:In Proceedings of the 25th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval
8-101:H., Nottelmann and N., Fuhr
8-102:(2003)
8-103:The MIND architecture for heterogeneous multimedia federated digital libraries
8-104:ACM SIGIR 2003 Workshop on Distributed Information Retrieval
8-105:A.L
8-106:Powell, J.C
8-107:French, J
8-108:Callan, M
8-109:Connell, and C.L
8-110:Viles
8-111:(2000)
8-112:The impact of database selection on distributed searching
8-113:In Proceedings of the 23rd Annual International ACM SIGIR Conference on Research and Development in Information Retrieval
8-114:A.L
8-115:Powell and J.C
8-116:French
8-117:(2003)
8-118:Comparing the performance of database selection algorithms
8-119:ACM Transactions on Information Systems, 21(4)
8-120:(pp
8-121:412 456)
8-122:C
8-123:Sherman (2001)
8-124:Search for the invisible web
8-125:Guardian Unlimited
8-126:L
8-127:Si and J
8-128:Callan
8-129:(2002)
8-130:Using sampled data and regression to merge search engine results
8-131:In Proceedings of the 25th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval
8-132:L
8-133:Si and J
8-134:Callan
8-135:(2003)
8-136:Relevant document distribution estimation method for resource selection
8-137:In Proceedings of the 26th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval
8-138:L
8-139:Si and J
8-140:Callan
8-141:(2003)
8-142:A Semi Supervised learning method to merge search engine results
8-143:ACM Transactions on Information Systems, 21(4)
8-144:(pp
8-145:457 491)
8-146:41
picture:
