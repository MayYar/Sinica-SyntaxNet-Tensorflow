Multi-Attribute Coalitional Games∗ 
content:
1 ABSTRACT :
1-1:We study coalitional games where the value of cooperation among the agents are solely determined by the attributes the agents possess, with no assumption as to how these attributes jointly determine this value .
1-2:This framework allows us to model diverse economic interactions by picking the right attributes .
1-3:We study the computational complexity of two coalitional solution concepts for these gamesthe Shapley value and the core .
1-4:We show how the positive results obtained in this paper imply comparable results for other games studied in the literature .
1-5:I.2.11 [Distributed Artificial Intelligence]: Multiagent .
2 INTRODUCTION :
2-1:When agents interact with one another, the value of their contribution is determined by what they can do with their skills and resources, rather than simply their identities .
2-2:Consider the problem of forming a soccer team .
2-3:For a team to be successful, a team needs some forwards, midfielders, defenders, and a goalkeeper .
2-4:The relevant attributes of the players are their skills at playing each of the four positions .
2-5:The value of a team depends on how well its players can play these positions .
2-6:At a finer level, we can extend the model to consider a wider range of skills, such as passing, shooting, and tackling, but the value of a team remains solely a function of the attributes of its players .
2-7:Consider an example from the business world .
2-8:Companies in the metals industry are usually vertically integrated and diversified .
2-9:They have mines for various types of ores, and also mills capable of processing and producing different kinds of metal .
2-10:They optimize their production profile according to the market prices for their products .
2-11:For example, when the price of aluminum goes up, they will allocate more resources to producing aluminum .
2-12:However, each company is limited by the amount of ores it has, and its capacities in processing given kinds of ores .
2-13:Two or more companies may benefit from trading ores and processing capacities with one another .
2-14:To model the metal industry, the relevant attributes are the amount of ores and the processing capacities of the companies .
2-15:Given the exogenous input of market prices, the value of a group of companies will be determined by these attributes .
2-16:Many real world problems can be likewise modeled by picking the right attributes .
2-17:As attributes apply to both individual agents and groups of agents, we propose the use of coalitional game theory to understand what groups may form and what payoffs the agents may expect in such models .
2-18:Coalitional game theory focuses on what groups of agents can achieve, and thus connects strongly with e commerce, as the Internet economies have significantly enhanced the abilities of business to identify and capitalize on profitable opportunities of cooperation .
2-19:Our goal is to understand the computational aspects of computing the solution concepts (stable and or fair distribution of payoffs, formally defined in Section 3) for coalitional games described using attributes .
2-20:Our contributions can be summarized as follows: • We define a formal representation for coalitional games based on attributes, and relate this representation to others proposed in the literature .
2-21:We show that when compared to other representations, there exists games for which a multi attribute description can be exponentially more succinct, and for no game it is worse .
2-22:• Given the generality of the model, positive results carry over to other representations .
2-23:We discuss two positive results in the paper, one for the Shapley value and one for the core, and show how these imply related results in the literature .
2-24:170 • We study an approximation heuristic for the Shapley value when its exact values cannot be found efficiently .
2-25:We provide an explicit bound on the maximum error of the estimate, and show that the bound is asymptotically tight .
2-26:We also carry out experiments to evaluate how the heuristic performs on random instances.1 .
3 RELATED WORK :
3-1:Coalitional game theory has been well studied in economics [9, 10, 14] .
3-2:A vast amount of literature have focused on defining and comparing solution concepts, and determining their existence and properties .
3-3:The first algorithmic study of coalitional games, as far as we know, is performed by Deng and Papadimitriou in [5] .
3-4:They consider coalitional games defined on graphs, where the players are the vertices and the value of coalition is determined by the sum of the weights of the edges spanned by these players .
3-5:This can be efficiently modeled and generalized using attributes .
3-6:As a formal representation, multi attribute coalitional games is closely related to the multi issue representation of Conitzer and Sandholm [3] and our work on marginal contribution networks [7] .
3-7:Both of these representations are based on dividing a coalitional game into subgames (termed issues in [3] and rules in [7]), and aggregating the subgames via linear combination .
3-8:The key difference in our work is the unrestricted aggregation of subgames: the aggregation could be via a polynomial function of the attributes, or even by treating the subgames as input to another computational problem such as a min cost flow problem .
3-9:The relationship of these models will be made clear after we define the multiattribute representation in Section 4 .
3-10:Another representation proposed in the literature is one specialized for superadditive games by Conitzer and Sandholm [2] .
3-11:This representation is succinct, but to find the values of some coalitions may require solving an NP hard problem .
3-12:While it is possible for multi attribute coalitional games to efficiently represent these games, it necessarily requires the solution to an NP hard problem in order to find out the values of some coalitions .
3-13:In this paper, we stay within the boundary of games that admits efficient algorithm for determining the value of coalitions .
3-14:We will therefore not make further comparisons with [2] .
3-15:The model of coalitional games with attributes has been considered in the works of Shehory and Kraus .
3-16:They model the agents as possessing capabilities that indicates their proficiencies in different areas, and consider how to efficiently allocate tasks [12] and the dynamics of coalition formation [13] .
3-17:Our work differs significantly as our focus is on reasoning about solution concepts .
3-18:Our model also covers a wider scope as attributes generalize the notion of capabilities .
3-19:Yokoo et al .
3-20:have also considered a model of coalitional games where agents are modeled by sets of skills, and these skills in turn determine the value of coalitions [15] .
3-21:There are two major differences between their work and ours .
3-22:Firstly, Yokoo et al .
3-23:assume that each skill is fundamentally different from another, hence no two agents may possess the same skill .
3-24:Also, they focus on developing new solution concepts that are robust with respect to manipulation by agents .
3-25:Our focus is on reasoning about traditional solution concepts .
3-26:1 We acknowledge that random instances may not be typical of what happens in practice, but given the generality of our model, it provides the most unbiased view .
3-27:Our work is also related to the study of cooperative games with committee control [4] .
3-28:In these games, there is usually an underlying set of resources each controlled by a (possibly overlapping) set of players known as the committee, engaged in a simple game (defined in Section 3) .
3-29:multiattribute coalitional games generalize these by considering relationship between the committee and the resources beyond simple games .
3-30:We note that when restricted to simple games, we derive similar results to that in [4]. .
4 PRELIMINARIES :
4-1:In this section, we will review the relevant concepts of coalitional game theory and its two most important solution concepts the Shapley value and the core .
4-2:We will then define the computational questions that will be studied in the second half of the paper .
4-3:3.1 Coalitional Games Throughout this paper, we assume that payoffs to groups of agents can be freely distributed among its members .
4-4:This transferable utility assumption is commonly made in coalitional game theory .
4-5:The canonical representation of a coalitional game with transferable utility is its characteristic form .
4-6:Definition 1 .
4-7:A coalition game with transferable utility in characteristic form is denoted by the pair N, v , where • N is the set of agents; and • v : 2N → R is a function that maps each group of agents S ⊆ N to a real valued payoff .
4-8:A group of agents in a game is known as a coalition, and the entire set of agents is known as the grand coalition .
4-9:An important class of coalitional games is the class of monotonic games .
4-10:Definition 2 .
4-11:A coalitional game is monotonic if for all S ⊂ T ⊆ N, v(S) ≤ v(T) .
4-12:Another important class of coalitional games is the class of simple games .
4-13:In a simple game, a coalition either wins, in which case it has a value of 1, or loses, in which case it has a value of 0 .
4-14:It is often used to model voting situations .
4-15:Simple games are often assumed to be monotonic, i.e., if S wins, then for all T ⊇ S, T also wins .
4-16:This coincides with the notion of using simple games as a model for voting .
4-17:If a simple game is monotonic, then it is fully described by the set of minimal winning coalitions, i.e., coalitions S for which v(S) = 1 but for all coalitions T ⊂ S, v(T) = 0 .
4-18:An outcome in a coalitional game specifies the utilities the agents receive .
4-19:A solution concept assigns to each coalitional game a set of reasonable outcomes .
4-20:Different solution concepts attempt to capture in some way outcomes that are stable and or fair .
4-21:Two of the best known solution concepts are the Shapley value and the core .
4-22:The Shapley value is a normative solution concept that prescribes a fair way to divide the gains from cooperation when the grand coalition is formed .
4-23:The division of payoff to agent i is the average marginal contribution of agent i over all possible permutations of the agents .
4-24:Formally, Definition 3 .
4-25:The Shapley value of agent i, φi(v), in game N, v is given by the following formula φi(v) = S⊆N\{i} |S|!(|N| − |S| − 1)! |N|! (v(S ∪ {i}) − v(S)) 171 The core is a descriptive solution concept that focuses on outcomes that are stable .
4-26:Stability under core means that no set of players can jointly deviate to improve their payoffs .
4-27:Definition 4 .
4-28:An outcome x ∈ R|N| is in the core of the game N, v if for all S ⊆ N, i∈S xi ≥ v(S) Note that the core of a game may be empty, i.e., there may not exist any payoff vector that satisfies the stability requirement for the given game .
4-29:3.2 Computational Problems We will study the following three problems related to solution concepts in coalitional games .
4-30:Problem 1 .
4-31:(Shapley Value) Given a description of the coalitional game and an agent i, compute the Shapley value of agent i .
4-32:Problem 2 .
4-33:(Core Membership) Given a description of the coalitional game and a payoff vector x such that È i∈N xi = v(N), determine if È i∈S xi ≥ v(S) for all S ⊆ N .
4-34:Problem 3 .
4-35:(Core Non emptiness) Given a description of the coalitional game, determine if there exists any payoff vector x such that È i∈S xi ≥ V for all S ⊆ N, andÈ i∈N xi = v(N) .
4-36:Note that the complexity of the above problems depends on the how the game is described .
4-37:All these problems will be easy if the game is described by its characteristic form, but only so because the description takes space exponential in the number of agents, and hence simple brute force approach takes time polynomial to the input description .
4-38:To properly understand the computational complexity questions, we have to look at compact representation. .
5 FORMAL MODEL :
5-1:In this section, we will give a formal definition of multiattribute coalitional games, and show how it is related to some of the representations discussed in the literature .
5-2:We will also discuss some limitations to our proposed approach .
5-3:4.1 Multi Attribute Coalitional Games A multi attribute coalitional game consists of two parts: a description of the attributes of the agents, which we termed an attribute model, and a function that assigns values to combination of attributes .
5-4:Together, they induce a coalitional game over the agents .
5-5:We first define the attribute model .
5-6:Definition 5 .
5-7:An attribute model is a tuple N, M, A , where • N denotes the set of agents, of size n; • M denotes the set of attributes, of size m; • A ∈ Rm×n , the attribute matrix, describes the values of the attributes of the agents, with Aij denoting the value of attribute i for agent j .
5-8:We can directly define a function that maps combinations of attributes to real values .
5-9:However, for many problems, we can describe the function more compactly by computing it in two steps: we first compute an aggregate value for each attribute, then compute the values of combination of attributes using only the aggregated information .
5-10:Formally, Definition 6 .
5-11:An aggregating function (or aggregator) takes as input a row of the attribute matrix and a coalition S, and summarizes the attributes of the agents in S with a single number .
5-12:We can treat it as a mapping from Rn × 2N → R .
5-13:Aggregators often perform basic arithmetic or logical operations .
5-14:For example, it may compute the sum of the attributes, or evaluate a Boolean expression by treating the agents i ∈ S as true and j ∈ S as false .
5-15:Analogous to the notion of simple games, we call an aggregator simple if its range is {0, 1} .
5-16:For any aggregator, there is a set of relevant agents, and a set of irrelevant agents .
5-17:An agent i is irrelevant to aggregator aj if aj (S ∪ {i}) = aj for all S ⊆ N .
5-18:A relevant agent is one not irrelevant .
5-19:Given the attribute matrix, an aggregator assigns a value to each coalition S ⊆ N .
5-20:Thus, each aggregator defines a game over N .
5-21:For aggregator aj , we refer to this induced game as the game of attribute j, and denote it with aj .
5-22:When the attribute matrix is clear from the context, we may drop A and simply denote the game as aj .
5-23:We may refer to the game as the aggregator when no ambiguities arise .
5-24:We now define the second step of the computation with the help of aggregators .
5-25:Definition 7 .
5-26:An aggregate value function takes as input the values of the aggregators and maps these to a real value .
5-27:In this paper, we will focus on having one aggregator per attribute .
5-28:Therefore, in what follows, we will refer to the aggregate value function as a function over the attributes .
5-29:Note that when all aggregators are simple, the aggregate value function implicitly defines a game over the attributes, as it assigns a value to each set of attributes T ⊆ M .
5-30:We refer to this as the game among attributes .
5-31:We now define multi attribute coalitional game .
5-32:Definition 8 .
5-33:A multi attribute coalitional game is defined by the tuple N, M, A, a, w , where • N, M, A is an attribute model; • a is a set of aggregators, one for each attribute; we can treat the set together as a vector function, mapping Rm×n × 2N → Rm • w : Rm → R is an aggregate value function .
5-34:This induces a coalitional game with transferable payoffs N, v with players N and the value function defined by v(S) = w(a(A, S)) Note that MACG as defined is fully capable of representing any coalitional game N, v .
5-35:We can simply take the set of attributes as equal to the set of agents, i.e., M = N, an identity matrix for A, aggregators of sums, and the aggregate value function w to be v .
5-36:172 4.2 An Example Let us illustrate how MACG can be used to represent a game with a simple example .
5-37:Suppose there are four types of resources in the world: gold, silver, copper, and iron, that each agent is endowed with some amount of these resources, and there is a fixed price for each of the resources in the market .
5-38:This game can be described using MACG with an attribute matrix A, where Aij denote the amount of resource i that agent j is endowed .
5-39:For each resource, the aggregator sums together the amount of resources the agents have .
5-40:Finally, the aggregate value function takes the dot product between the market price vector and the aggregate vector .
5-41:Note the inherent flexibility in the model: only limited work would be required to update the game as the market price changes, or when a new agent arrives .
5-42:4.3 Relationship with Other Representations As briefly discussed in Section 2, MACG is closely related to two other representations in the literature, the multiissue representation of Conitzer and Sandholm [3], and our work on marginal contribution nets [7] .
5-43:To make their relationships clear, we first review these two representations .
5-44:We have changed the notations from the original papers to highlight their similarities .
5-45:Definition 9 .
5-46:A multi issue representation is given as a vector of coalitional games, (v1, v2, .
5-47:.
5-48:.
5-49:vm), each possibly with a varying set of agents, say N1, .
5-50:.
5-51:.
5-52:, Nm .
5-53:The coalitional game N, v induced by multi issue representation has player set N = Ëm i=1 Ni, and for each coalition S ⊆ N, v(S) = Èm i=1 v(S ∩ Ni) .
5-54:The games vi are assumed to be represented in characteristic form .
5-55:Definition 10 .
5-56:A marginal contribution net is given as a set of rules (r1, r2, .
5-57:.
5-58:.
5-59:, rm), where rule ri has a weight wi, and a pattern pi that is a conjunction over literals (positive or negative) .
5-60:The agents are represented as literals .
5-61:A coalition S is said to satisfy the pattern pi, if we treat the agents i ∈ S as true, an agent j ∈ S as false, pi(S) evaluates to true .
5-62:Denote the set of literals involved in rule i by Ni .
5-63:The coalitional game N, v induced by a marginal contribution net has player set N = Ëm i=1 Ni, and for each coalition S ⊆ N, v(S) = È i:pi(S)=true wi .
5-64:From these definitions, we can see the relationships among these three representations clearly .
5-65:An issue of a multi issue representation corresponds to an attribute in MACG .
5-66:Similarly, a rule of a marginal contribution net corresponds to an attribute in MACG .
5-67:The aggregate value functions are simple sums and weighted sums for the respective representations .
5-68:Therefore, it is clear that MACG will be no less succinct than either representation .
5-69:However, MACG differs in two important way .
5-70:Firstly, there is no restriction on the operations performed by the aggregate value function over the attributes .
5-71:This is an important generalization over the linear combination of issues or rules in the other two approaches .
5-72:In particular, there are games for which MACG can be exponentially more compact .
5-73:The proof of the following proposition can be found in the Appendix .
5-74:Proposition 1 .
5-75:Consider the parity game N, v where coalition S ⊆ N has value v(S) = 1 if |S| is odd, and v(S) = 0 otherwise .
5-76:MACG can represent the game in O(n) space .
5-77:Both multi issue representation and marginal contribution nets requires O(2n ) space .
5-78:A second important difference of MACG is that the attribute model and the value function is cleanly separated .
5-79:As suggested in the example in Section 4.2, this often allows us more efficient update of the values of the game as it changes .
5-80:Also, the same attribute model can be evaluated using different value functions, and the same value function can be used to evaluate different attribute model .
5-81:Therefore, MACG is very suitable for representing multiple games .
5-82:We believe the problems of updating games and representing multiple games are interesting future directions to explore .
5-83:4.4 Limitation of One Aggregator per Attribute Before focusing on one aggregator per attribute for the rest of the paper, it is natural to wonder if any is lost per such restriction .
5-84:The unfortunate answer is yes, best illustrated by the following .
5-85:Consider again the problem of forming a soccer team discussed in the introduction, where we model the attributes of the agents as their ability to take the four positions of the field, and the value of a team depends on the positions covered .
5-86:If we first aggregate each of the attribute individually, we will lose the distributional information of the attributes .
5-87:In other words, we will not be able to distinguish between two teams, one of which has a player for each position, the other has one player who can play all positions, but the rest can only play the same one position .
5-88:This loss of distributional information can be recovered by using aggregators that take as input multiple rows of the attribute matrix rather than just a single row .
5-89:Alternatively, if we leave such attributes untouched, we can leave the burden of correctly evaluating these attributes to the aggregate value function .
5-90:However, for many problems that we found in the literature, such as the transportation domain of [12] and the flow game setting of [4], the distribution of attributes does not affect the value of the coalitions .
5-91:In addition, the problem may become unmanageably complex as we introduce more complicated aggregators .
5-92:Therefore, we will focus on the representation as defined in Definition 8. .
6 SHAPLEY VALUE :
6-1:In this section, we focus on computational issues of finding the Shapley value of a player in MACG .
6-2:We first set up the problem with the use of oracles to avoid complexities arising from the aggregators .
6-3:We then show that when attributes are linearly separable, the Shapley value can be efficiently computed .
6-4:This generalizes the proofs of related results in the literature .
6-5:For the non linearly separable case, we consider a natural heuristic for estimating the Shapley value, and study the heuristic theoretically and empirically .
6-6:5.1 Problem Setup We start by noting that computing the Shapley value for simple aggregators can be hard in general .
6-7:In particular, we can define aggregators to compute weighted majority over its input set of agents .
6-8:As noted in [6], finding the Shapley value of a weighted majority game is #P hard .
6-9:Therefore, discussion of complexity of Shapley value for MACG with unrestricted aggregators is moot .
6-10:Instead of placing explicit restriction on the aggregator, we assume that the Shapley value of the aggregator can be 173 answered by an oracle .
6-11:For notation, let φi(u) denote the Shapley value for some game u .
6-12:We make the following assumption: Assumption 1 .
6-13:For each aggregator aj in a MACG, there is an associated oracle that answers the Shapley value of the game of attribute j .
6-14:In other words, φi(aj ) is known .
6-15:For many aggregators that perform basic operations over its input, polynomial time oracle for Shapley value exists .
6-16:This include operations such as sum, and symmetric functions when the attributes are restricted to {0, 1} .
6-17:Also, when only few agents have an effect on the aggregator, brute force computation for Shapley value is feasible .
6-18:Therefore, the above assumption is reasonable for many settings .
6-19:In any case, such abstraction allows us to focus on the aggregate value function .
6-20:5.2 Linearly Separable Attributes When the aggregate value function can be written as a linear function of the attributes, the Shapley value of the game can be efficiently computed .
6-21:Theorem 1 .
6-22:Given a game N, v represented as a MACG N, M, A, a, w , if the aggregate value function can be written as a linear function of its attributes, i.e., w(a(A, S)) = m j=1 cj aj (A, S) The Shapley value of agent i in N, v is given by φi(v) = m j=1 cj φi(aj ) (1) Proof .
6-23:First, we note that Shapley value satisfies an additivity axiom [11] .
6-24:The Shapley value satisfies additivity, namely, φi(a + b) = φi(a) + φi(b), where N, a + b is a game defined to be (a + b)(S) = a(S) + b(S) for all S ⊆ N .
6-25:It is also clear that Shapley value satisfies scaling, namely φi(αv) = αφi(v) where (αv)(S) = αv(S) for all S ⊆ N .
6-26:Since the aggregate value function can be expressed as a weighted sum of games of attributes, φi(v) = φi(w(a)) = φi( m j=1 cjaj ) = m j=1 cjφi(aj ) Many positive results regarding efficient computation of Shapley value in the literature depends on some form of linearity .
6-27:Examples include the edge spanning game on graphs by Deng and Papadimitriou [5], the multi issue representation of [3], and the marginal contribution nets of [7] .
6-28:The key to determine if the Shapley value can be efficiently computed depends on the linear separability of attributes .
6-29:Once this is satisfied, as long as the Shapley value of the game of attributes can be efficiently determined, the Shapley value of the entire game can be efficiently computed .
6-30:Corollary 1 .
6-31:The Shapley value for the edge spanning game of [5], games in multi issue representation [3], and games in marginal contribution nets [7], can be computed in polynomial time .
6-32:5.3 Polynomial Combination of Attributes When the aggregate value function cannot be expressed as a linear function of its attributes, computing the Shapley value exactly is difficult .
6-33:Here, we will focus on aggregate value function that can be expressed as some polynomial of its attributes .
6-34:If we do not place a limit on the degree of the polynomial, and the game N, v is not necessarily monotonic, the problem is #P hard .
6-35:Theorem 2 .
6-36:Computing the Shapley value of a MACG N, M, A, a, w , when w can be an arbitrary polynomial of the aggregates a, is #P hard, even when the Shapley value of each aggregator can be efficiently computed .
6-37:The proof is via reduction from three dimensional matching, and details can be found in the Appendix .
6-38:Even if we restrict ourselves to monotonic games, and non negative coefficients for the polynomial aggregate value function, computing the exact Shapley value can still be hard .
6-39:For example, suppose there are two attributes .
6-40:All agents in some set B ⊆ N possess the first attribute, and all agents in some set C ⊆ N possess the second, and B and C are disjoint .
6-41:For a coalition S ⊆ N, the aggregator for the first evaluates to 1 if and only if |S ∩ B| ≥ b , and similarly, the aggregator for the second evaluates to 1 if and only if |S ∩ C| ≥ c .
6-42:Let the cardinality of the sets B and C be b and c .
6-43:We can verify that the Shapley value of an agent i in B equals φi = 1 b b −1 i=0  b i ¡  c c −1 ¡   b+c c +i−1 ¡ c − c + 1 b + c − c − i + 1 The equation corresponds to a weighted sum of probability values of hypergeometric random variables .
6-44:The correspondence with hypergeometric distribution is due to sampling without replacement nature of Shapley value .
6-45:As far as we know, there is no close form formula to evaluate the sum above .
6-46:In addition, as the number of attributes involved increases, we move to multi variate hypergeometric random variables, and the number of summands grow exponentially in the number of attributes .
6-47:Therefore, it is highly unlikely that the exact Shapley value can be determined efficiently .
6-48:Therefore, we look for approximation .
6-49:5.3.1 Approximation First, we need a criteria for evaluating how well an estimate, ˆφ, approximates the true Shapley value, φ .
6-50:We consider the following three natural criteria: • Maximum underestimate: maxi φi ˆφi • Maximum overestimate: maxi ˆφi φi • Total variation: 1 2 È i |φi − ˆφi|, or alternatively maxS | È i∈S φi − È i∈S ˆφi| The total variation criterion is more meaningful when we normalize the game to having a value of 1 for the grand coalition, i.e., v(N) = 1 .
6-51:We can also define additive analogues of the under and overestimates, especially when the games are normalized .
6-52:174 We will assume for now that the aggregate value function is a polynomial over the attributes with non negative coefficients .
6-53:We will also assume that the aggregators are simple .
6-54:We will evaluate a specific heuristic that is analogous to Equation (1) .
6-55:Suppose the aggregate function can be written as a polynomial with p terms w(a(A, S)) = p j=1 cj aj(1) (A, S)aj(2) (A, S) · · · aj(kj ) (A, S) (2) For term j, the coefficient of the term is cj , its degree kj , and the attributes involved in the term are j(1), .
6-56:.
6-57:.
6-58:, j(kj ) .
6-59:We compute an estimate ˆφ to the Shapley value as ˆφi = p j=1 kj l=1 cj kj φi(aj(l) ) (3) The idea behind the estimate is that for each term, we divide the value of the term equally among all its attributes .
6-60:This is represented by the factor cj kj .
6-61:Then for for each attribute of an agent, we assign the player a share of value from the attribute .
6-62:This share is determined by the Shapley value of the simple game of that attribute .
6-63:Without considering the details of the simple games, this constitutes a fair (but blind) rule of sharing .
6-64:5.3.2 Theoretical analysis of heuristic We can derive a simple and tight bound for the maximum (multiplicative) underestimate of the heuristic estimate .
6-65:Theorem 3 .
6-66:Given a game N, v represented as a MACG N, M, A, a, w , suppose w can be expressed as a polynomial function of its attributes (cf Equation (2)) .
6-67:Let K = maxjkj, i.e., the maximum degree of the polynomial .
6-68:Let ˆφ denote the estimated Shapley value using Equation (3), and φ denote the true Shapley value .
6-69:For all i ∈ N, φi ≥ K ˆφi .
6-70:Proof .
6-71:We bound the maximum underestimate term byterm .
6-72:Let tj be the j th term of the polynomial .
6-73:We note that the term can be treated as a game among attributes, as it assigns a value to each coalition S ⊆ N .
6-74:Without loss of generality, renumber attributes j(1) through j(kj ) as 1 through kj .
6-75:tj = cj kj l=1 al (A, S) To make the equations less cluttered, let B(N, S) = |S|!(|N| − |S| − 1)! |N|! and for a game a, contribution of agent i to group S : i ∈ S, ∆i(a, S) = a(S ∪ {i}) − a(S) The true Shapley value of the game tj is φi(tj) = cj S⊆N\{i} B(N, S)∆i(tj, S) For each coalition S, i ∈ S, ∆i(tj , S) = 1 if and only if for at least one attribute, say l∗ , ∆i(al∗ , S) = 1 .
6-76:Therefore, if we sum over all the attributes, we would have included l∗ for sure .
6-77:φi(tj) ≤ cj kj j=1 S⊆N\{i} B(N, S)∆i(aj , S) = kj kj j=1 cj kj φi(aj ) = kj ˆφi(T) Summing over the terms, we see that the worst case underestimate is by the maximum degree .
6-78:Without loss of generality, since the bound is multiplicative, we can normalize the game to having v(N) = 1 .
6-79:As a corollary, because we cannot overestimate any set by more than K times, we obtain a bound on the total variation: Corollary 2 .
6-80:The total variation between the estimated Shapley value and the true Shapley value, for K degree bounded polynomial aggregate value function, is K−1 K .
6-81:We can show that this bound is tight .
6-82:Example 1 .
6-83:Consider a game with n players and K attributes .
6-84:Let the first (n−1) agents be a member of the first (K − 1) attributes, and that the corresponding aggregator returns 1 if any one of the first (K − 1) agents is present .
6-85:Let the n th agent be the sole member of the K th attribute .
6-86:The estimated Shapley will assign a value of K−1 K 1 n−1 to the first (n − 1) agents and 1 K to the n th agent .
6-87:However, the true Shapley value of the n th agent tends to 1 as n → ∞, and the total variation approaches K−1 K .
6-88:In general, we cannot bound how much ˆφ may overestimate the true Shapley value .
6-89:The problem is that ˆφi may be non zero for agent i even though may have no influence over the outcome of a game when attributes are multiplied together, as illustrated by the following example .
6-90:Example 2 .
6-91:Consider a game with 2 players and 2 attributes, and let the first agent be a member of both attributes, and the other agent a member of the second attribute .
6-92:For a coalition S, the first aggregator evaluates to 1 if agent 1 ∈ S, and the second aggregator evaluates to 1 if both agents are in S .
6-93:While agent 2 is not a dummy with respect to the second attribute, it is a dummy with respect to the product of the attributes .
6-94:Agent 2 will be assigned a value of 1 4 by the estimate .
6-95:As mentioned, for simple monotonic games, a game is fully described by its set of minimal winning coalitions .
6-96:When the simple aggregators are represented as such, it is possible to check, in polynomial time, for agents turning dummies after attributes are multiplied together .
6-97:Therefore, we can improve the heuristic estimate in this special case .
6-98:5.3.3 Empirical evaluation Due to a lack of benchmark problems for coalitional games, we have tested the heuristic on random instances .
6-99:We believe more meaningful results can be obtained when we have real instances to test this heuristic on .
6-100:Our experiment is set up as follows .
6-101:We control three parameters of the experiment: the number of players (6 − 10), 175 0 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 6 7 8 9 10 No .
6-102:of Players TotalVariationDistance 2 3 4 5 (a) Effect of Max Degree 0 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 6 7 8 9 10 No .
6-103:of Players TotalVariationDistance 4 5 6 (b) Effect of Number of Attributes Figure 1: Experimental results the number of attributes (3 − 8), and the maximum degree of the polynomial (2 − 5) .
6-104:For each attribute, we randomly sample one to three minimal winning coalitions .
6-105:We then randomly generate a polynomial of the desired maximum degree with a random number (3 − 12) of terms, each with a random positive weight .
6-106:We normalize each game to have v(N) = 1 .
6-107:The results of the experiments are shown in Figure 1 .
6-108:The y axis of the graphs shows the total variation, and the x axis the number of players .
6-109:Each datapoint is an average of approximately 700 random samples .
6-110:Figure 1(a) explores the effect of the maximum degree and the number of players when the number of attributes is fixed (at six) .
6-111:As expected, the total variation increases as the maximum degree increases .
6-112:On the other hand, there is only a very small increase in error as the number of players increases .
6-113:The error is nowhere near the theoretical worstcase bound of 1 2 to 4 5 for polynomials of degrees 2 to 5 .
6-114:Figure 1(b) explores the effect of the number of attributes and the number of players when the maximum degree of the polynomial is fixed (at three) .
6-115:We first note that these three lines are quite tightly clustered together, suggesting that the number of attributes has relatively little effect on the error of the estimate .
6-116:As the number of attributes increases, the total variation decreases .
6-117:We think this is an interesting phenomenon .
6-118:This is probably due to the precise construct required for the worst case bound, and so as more attributes are available, we have more diverse terms in the polynomial, and the diversity pushes away from the worst case bound. .
7 CORE RELATED QUESTIONS :
7-1:In this section, we look at the complexity of the two computational problems related to the core: Core Nonemptiness and Core Membership .
7-2:We show that the nonemptiness of core of the game among attributes and the cores of the aggregators imply non emptiness of the core of the game induced by the MACG .
7-3:We also show that there appears to be no such general relationship that relates the core memberships of the game among attributes, games of attributes, and game induced by MACG .
7-4:6.1 Problem Setup There are many problems in the literature for which the questions of Core Non emptiness and Core Membership are known to be hard [1] .
7-5:For example, for the edgespanning game that Deng and Papadimitriou studied [5], both of these questions are coNP complete .
7-6:As MACG can model the edge spanning game in the same amount of space, these hardness results hold for MACG as well .
7-7:As in the case for computing Shapley value, we attempt to find a way around the hardness barrier by assuming the existence of oracles, and try to build algorithms with these oracles .
7-8:First, we consider the aggregate value function .
7-9:Assumption 2 .
7-10:For a MACG N, M, A, a, w , we assume there are oracles that answers the questions of Core Nonemptiness, and Core Membership for the aggregate value function w .
7-11:When the aggregate value function is a non negative linear function of its attributes, the core is always non empty, and core membership can be determined efficiently .
7-12:The concept of core for the game among attributes makes the most sense when the aggregators are simple games .
7-13:We will further assume that these simple games are monotonic .
7-14:Assumption 3 .
7-15:For a MACG N, M, A, a, w , we assume all aggregators are monotonic and simple .
7-16:We also assume there are oracles that answers the questions of Core Nonemptiness, and Core Membership for the aggregators .
7-17:We consider this a mild assumption .
7-18:Recall that monotonic simple games are fully described by their set of minimal winning coalitions (cf Section 3) .
7-19:If the aggregators are represented as such, Core Non emptiness and Core Membership can be checked in polynomial time .
7-20:This is due to the following well known result regarding simple games: Lemma 1 .
7-21:A simple game N, v has a non empty core if and only if it has a set of veto players, say V , such that v(S) = 0 for all S ⊇ V .
7-22:Further, A payoff vector x is in the core if and only if xi = 0 for all i ∈ V .
7-23:6.2 Core Non emptiness There is a strong connection between the non emptiness of the cores of the games among attributes, games of the attributes, and the game induced by a MACG .
7-24:Theorem 4 .
7-25:Given a game N, v represented as a MACG N, M, A, a, w , if the core of the game among attributes, 176 M, w , is non empty, and the cores of the games of attributes are non empty, then the core of N, v is non empty .
7-26:Proof .
7-27:Let u be an arbitrary payoff vector in the core of the game among attributes, M, w .
7-28:For each attribute j, let θj be an arbitrary payoff vector in the core of the game of attribute j .
7-29:By Lemma 1, each attribute j must have a set of veto players; let this set be denoted by Pj .
7-30:For each agent i ∈ N, let yi = È j ujθj i .
7-31:We claim that this vector y is in the core of N, v .
7-32:Consider any coalition S ⊆ N, v(S) = w(a(A, S)) ≤ j:S⊇P j uj (4) This is true because an aggregator cannot evaluate to 1 without all members of the veto set .
7-33:For any attribute j, by Lemma 1, È i∈P j θj i = 1 .
7-34:Therefore, j:S⊇P j uj = j:S⊇P j uj i∈P j θj i = i∈S j:S⊇P j ujθj i ≤ i∈S yi Note that the proof is constructive, and hence if we are given an element in the core of the game among attributes, we can construct an element of the core of the coalitional game .
7-35:From Theorem 4, we can obtain the following corollaries that have been previously shown in the literature .
7-36:Corollary 3 .
7-37:The core of the edge spanning game of [5] is non empty when the edge weights are non negative .
7-38:Proof .
7-39:Let the players be the vertices, and their attributes the edges incident on them .
7-40:For each attribute, there is a veto set namely, both endpoints of the edges .
7-41:As previously observed, an aggregate value function that is a non negative linear function of its aggregates has non empty core .
7-42:Therefore, the precondition of Theorem 4 is satisfied, and the edge spanning game with non negative edge weights has a non empty core .
7-43:Corollary 4 (Theorem 1 of [4]) .
7-44:The core of a flow game with committee control, where each edge is controlled by a simple game with a veto set of players, is non empty .
7-45:Proof .
7-46:We treat each edge of the flow game as an attribute, and so each attribute has a veto set of players .
7-47:The core of a flow game (without committee) has been shown to be non empty in [8] .
7-48:We can again invoke Theorem 4 to show the non emptiness of core for flow games with committee control .
7-49:However, the core of the game induced by a MACG may be non empty even when the core of the game among attributes is empty, as illustrated by the following example .
7-50:Example 3 .
7-51:Suppose the minimal winning coalition of all aggregators in a MACG N, M, A, a, w is N, then v(S) = 0 for all coalitions S ⊂ N .
7-52:As long as v(N) ≥ 0, any nonnegative vector x that satisfies È i∈N xi = v(N) is in the core of N, v .
7-53:Complementary to the example above, when all the aggregators have empty cores, the core of N, v is also empty .
7-54:Theorem 5 .
7-55:Given a game N, v represented as a MACG N, M, A, a, w , if the cores of all aggregators are empty, v(N) > 0, and for each i ∈ N, v({i}) ≥ 0, then the core of N, v is empty .
7-56:Proof .
7-57:Suppose the core of N, v is non empty .
7-58:Let x be a member of the core, and pick an agent i such that xi > Lemma 1, there are at least two disjoint winning coalitions .
7-59:Pick the winning coalition Sj that does not include i for each attribute j .
7-60:Let S∗ = Ë j Sj .
7-61:Because S∗ is winning for all coalitions, v(S∗ ) = v(N) .
7-62:However, v(N) = j∈N xj = xi + j ∈N xj ≥ xi + j∈S∗ xj > j∈S∗ xj Therefore, v(S∗ ) > È j∈S∗ xj, contradicting the fact that x is in the core of N, v .
7-63:We do not have general results regarding the problem of Core Non emptiness when some of the aggregators have non empty cores while others have empty cores .
7-64:We suspect knowledge about the status of the cores of the aggregators alone is insufficient to decide this problem .
7-65:6.3 Core Membership Since it is possible for the game induced by the MACG to have a non empty core when the core of the aggregate value function is empty (Example 3), we try to explore the problem of Core Membership assuming that the core of both the game among attributes, M, w , and the underlying game, N, v , is known to be non empty, and see if there is any relationship between their members .
7-66:One reasonable requirement is whether a payoff vector x in the core of N, v can be decomposed and re aggregated to a payoff vector y in the core of M, w .
7-67:Formally, Definition 11 .
7-68:We say that a vector x ∈ Rn ≥0 can be decomposed and re aggregated into a vector y ∈ Rm ≥0 if there exists Z ∈ Rm×n ≥0 , such that yi = n j=1 Zij for all i xj = m i=1 Zij for all j We may refer Z as shares .
7-69:When there is no restriction on the entries of Z, it is always possible to decompose a payoff vector x in the core of N, v to a payoff vector y in the core of M, w .
7-70:However, it seems reasonable to restrict that if an agent j is irrelevant to the aggregator i, i.e., i never changes the outcome of aggregator j, then Zij should be restricted to be 0 .
7-71:Unfortunately, this restriction is already too strong .
7-72:Example 4 .
7-73:Consider a MACG N, M, A, a, w with two players and three attributes .
7-74:Suppose agent 1 is irrelevant to attribute 1, and agent 2 is irrelevant to attributes 2 and w(T) = 0 if |T| = 0 or 1 6 if |T| = 2 10 if |T| = 3 177 Since the core of a game with a finite number of players forms a polytope, we can verify that the set of vectors (4, 4, 2), (4, 2, 4), and (2, 4, 4), fully characterize the core C of M, w .
7-75:On the other hand, the vector (10, 0) is in the core of N, v .
7-76:This vector cannot be decomposed and re aggregated to a vector in C under the stated restriction .
7-77:Because of the apparent lack of relationship among members of the core of N, v and that of M, w , we believe an algorithm for testing Core Membership will require more input than just the veto sets of the aggregators and the oracle of Core Membership for the aggregate value function. .
8-1:Multi attribute coalitional games constitute a very natural way of modeling problems of interest
8-2:Its space requirement compares favorably with other representations discussed in the literature, and hence it serves well as a prototype to study computational complexity of coalitional game theory for a variety of problems
8-3:Positive results obtained under this representation can easily be translated to results about other representations
8-4:Some of these corollary results have been discussed in Sections 5 and 6
8-5:An important direction to explore in the future is the question of efficiency in updating a game, and how to evaluate the solution concepts without starting from scratch
8-6:As pointed out at the end of Section 4.3, MACG is very naturally suited for updates
8-7:Representation results regarding efficiency of updates, and algorithmic results regarding how to compute the different solution concepts from updates, will both be very interesting
8-8:Our work on approximating the Shapley value when the aggregate value function is a non linear function of the attributes suggests more work to be done there as well
8-9:Given the natural probabilistic interpretation of the Shapley value, we believe that a random sampling approach may have significantly better theoretical guarantees.
9-1:J
9-2:M
9-3:Bilbao, J
9-4:R
9-5:Fern´andez, and J
9-6:J
9-7:L´opez
9-8:Complexity in cooperative game theory
9-9:http:  www.esi.us.es ~mbilbao
9-10:V
9-11:Conitzer and T
9-12:Sandholm
9-13:Complexity of determining nonemptiness of the core
9-14:In Proc
9-15:18th Int
9-16:Joint Conf
9-17:on Artificial Intelligence, pages 613 618, 2003
9-18:V
9-19:Conitzer and T
9-20:Sandholm
9-21:Computing Shapley values, manipulating value division schemes, and checking core membership in multi issue domains
9-22:In Proc
9-23:19th Nat
9-24:Conf
9-25:on Artificial Intelligence, pages 219 225, 2004
9-26:I
9-27:J
9-28:Curiel, J
9-29:J
9-30:Derks, and S
9-31:H
9-32:Tijs
9-33:On balanced games and games with committee control
9-34:OR Spectrum, 11:83 88, 1989
9-35:X
9-36:Deng and C
9-37:H
9-38:Papadimitriou
9-39:On the complexity of cooperative solution concepts
9-40:Math
9-41:Oper
9-42:Res., 19:257 266, May 1994
9-43:M
9-44:R
9-45:Garey and D
9-46:S
9-47:Johnson
9-48:Computers and Intractability: A Guide to the Theory of NP Completeness
9-49:W
9-50:H
9-51:Freeman, New York, 1979
9-52:S
9-53:Ieong and Y
9-54:Shoham
9-55:Marginal contribution nets: A compact representation scheme for coalitional games
9-56:In Proc
9-57:6th ACM Conf
9-58:on Electronic Commerce, pages 193 202, 2005
9-59:E
9-60:Kalai and E
9-61:Zemel
9-62:Totally balanced games and games of flow
9-63:Math
9-64:Oper
9-65:Res., 7:476 478, 1982
9-66:A
9-67:Mas Colell, M
9-68:D
9-69:Whinston, and J
9-70:R
9-71:Green
9-72:Microeconomic Theory
9-73:Oxford University Press, New York, 1995
9-74:M
9-75:J
9-76:Osborne and A
9-77:Rubinstein
9-78:A Course in Game Theory
9-79:The MIT Press, Cambridge, Massachusetts, 1994
9-80:L
9-81:S
9-82:Shapley
9-83:A value for n person games
9-84:In H
9-85:W
9-86:Kuhn and A
9-87:W
9-88:Tucker, editors, Contributions to the Theory of Games II, number 28 in Annals of Mathematical Studies, pages 307 317
9-89:Princeton University Press, 1953
9-90:O
9-91:Shehory and S
9-92:Kraus
9-93:Task allocation via coalition formation among autonomous agents
9-94:In Proc
9-95:14th Int
9-96:Joint Conf
9-97:on Artificial Intelligence, pages 31 45, 1995
9-98:O
9-99:Shehory and S
9-100:Kraus
9-101:A kernel oriented model for autonomous agent coalition formation in general environments: Implentation and results
9-102:In Proc
9-103:13th Nat
9-104:Conf
9-105:on Artificial Intelligence, pages 134 140, 1996
9-106:J
9-107:von Neumann and O
9-108:Morgenstern
9-109:Theory of Games and Economic Behvaior
9-110:Princeton University Press, 1953
9-111:M
9-112:Yokoo, V
9-113:Conitzer, T
9-114:Sandholm, N
9-115:Ohta, and A
9-116:Iwasaki
9-117:Coalitional games in open anonymous environments
9-118:In Proc
9-119:20th Nat
9-120:Conf
9-121:on Artificial Intelligence, pages 509 515, 2005
9-122:Appendix We complete the missing proofs from the main text here
9-123:To prove Proposition 1, we need the following lemma
9-124:Lemma 2
9-125:Marginal contribution nets when all coalitions are restricted to have values 0 or 1 have the same representation power as an AND OR circuit with negation at the literal level (i.e., AC0 circuit) of depth two
9-126:Proof
9-127:If a rule assigns a negative value in the marginal contribution nets, we can write the rule by a corresponding set of at most n rules, where n is the number of agents, such that each of which has positive values through application of De Morgan"s Law
9-128:With all values of the rules non negative, we can treat the weighted summation step of marginal contribution nets can be viewed as an OR, and each rule as a conjunction over literals, possibly negated
9-129:This exactly match up with an AND OR circuit of depth two
9-130:Proof (Proposition 1)
9-131:The parity game can be represented with a MACG using a single attribute, aggregator of sum, and an aggregate value function that evaluates that sum modulus two
9-132:As a Boolean function, parity is known to require an exponential number of prime implicants
9-133:By Lemma 2, a prime implicant is the exact analogue of a pattern in a rule of marginal contribution nets
9-134:Therefore, to represent the parity function, a marginal contribution nets must be an exponential number of rules
9-135:, a marginal contribution net is at worst a factor of O(n) less compact than multi issue representation
9-136:Therefore, multi issue representation will also 178 take exponential space to represent the parity game
9-137:This is assuming that each issue in the game is represented in characteristic form
9-138:Proof (Theorem 2)
9-139:An instance of three dimensional : Given set P ⊆ W × X × Y , where W , X, Y are disjoint sets having the same number q of elements, does there exist a matching P ⊆ P such that |P | = q and no two elements of P agree in any coordinate
9-140:For notation, let P = {p1, p2,
9-141:
9-142:
9-143:, pK}
9-144:We construct a MACG N, M, A, a, w as follows: • M: Let attributes 1 to q correspond to elements in W , (q+1) to 2q correspond to elements in X, (2q+1) to 3q corresponds to element in Y , and let there be a special attribute (3q + 1)
9-145:• N: Let player i corresponds to pi, and let there be a special player
9-146:• A: Let Aji = 1 if the element corresponding to attribute j is in pi
9-147:Thus, for the first K columns, there are exactly three non zero entries
9-148:We also set A(3q+1) = 1
9-149:• a: for each aggregator j, aj (A(S)) = 1 if and only if sum of row j of A(S) equals 1
9-150:• w: product over all aj
9-151:In the game N, v that corresponds to this construction, v(S) = 1 if and only if all attributes are covered exactly once
9-152:Therefore, for  ∈ T ⊆ N, v(T ∪ { }) − v(T) = 1 if and only if T covers attributes 1 to 3q exactly once
9-153:Since all such T, if exists, must be of size q, the number of threedimensional matchings is given by φ (v) (K + 1)! q!(K − q)! 179
picture:
