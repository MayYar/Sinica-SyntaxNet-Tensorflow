Competitive Algorithms for VWAP 
content:
1 ABSTRACT :
1-1:We introduce new online models for two important aspects of modern financial markets: Volume Weighted Average Price trading and limit order books .
1-2:We provide an extensive study of competitive algorithms in these models and relate them to earlier online algorithms for stock trading .
1-3:F.2 [Analysis of Algorithms and Problem .
2 INTRODUCTION :
2-1:While popular images of Wall Street often depict swashbuckling traders boldly making large gambles on just their market intuitions, the vast majority of trading is actually considerably more technical and constrained .
2-2:The constraints often derive from a complex combination of business, regulatory and institutional issues, and result in certain kinds of standard trading strategies or criteria that invite algorithmic analysis .
2-3:One of the most common activities in modern financial markets is known as Volume Weighted Average Price, or VWAP, trading .
2-4:Informally, the VWAP of a stock over a specified market period is simply the average price paid per share during that period, so the price of each transaction in the market is weighted by its volume .
2-5:In VWAP trading, one attempts to buy or sell a fixed number of shares at a price that closely tracks the VWAP .
2-6:Very large institutional trades constitute one of the main motivations behind VWAP activity .
2-7:A typical scenario goes as follows .
2-8:Suppose a very large mutual fund holds 3% of the outstanding shares of a large, publicly traded company a huge fraction of the shares and that this fund"s manager decides he would like to reduce this holding to 2% over a 1 month period .
2-9:(Such a decision might be forced by the fund"s own regulations or other considerations.) Typically, such a fund manager would be unqualified to sell such a large number of shares in the open market it requires a professional broker to intelligently break the trade up over time, and possibly over multiple exchanges, in order to minimize the market impact of such a sizable transaction .
2-10:Thus, the fund manager would approach brokerages for help in selling the 1% .
2-11:The brokerage will typically alleviate the fund manager"s problem immediately by simply buying the shares directly from the fund manager, and then selling them off laterbut what price should the brokerage pay the fund manager? Paying the price on the day of the sale is too risky for the brokerage, as they need to sell the shares themselves over an extended period, and events beyond their control (such as wars) could cause the price to fall dramatically .
2-12:The usual answer is that the brokerage offers to buy the shares from the fund manager at a per share price tied to the VWAP over some future period in our example, the brokerage might offer to buy the 1% at a per share price of the coming month"s VWAP minus 1 cent .
2-13:The brokerage now has a very clean challenge: by selling the shares themselves over the next month in a way that exactly matches the VWAP, a penny per share is earned in profits .
2-14:If they can beat the VWAP by a penny, they make two cents per share .
2-15:Such small margin, high volume profits can be extremely lucrative for a large brokerage .
2-16:The importance of the VWAP has led to many automated VWAP trading algorithms indeed, every major brokerage has at least one VWAP box, 189 Price Volume Model Order Book Model Macroscopic Distribution Model OWT Θ(log(R)) (From[3]) O(log(R) log(N)) 2E(Pbins maxprice ) 2(1 + )E(Pbins maxprice ) for approx of Pbins maxprice Θ(log(Q)) (same as above plus...) VWAP Θ(log(R)) O(log(R) log(N)) (from above) 2E(Pbins vol ) Ω(Q) fixed schedule O(log(Q)) for large N (1 + )2E(Pbins vol ) for approx .
2-17:of Pbins vol 1 for volume in [N, QN] Figure 1: The table summarizes the results presented in this paper .
2-18:The rows represent results for either the OWT or VWAP criterion .
2-19:The columns represent which model we are working in .
2-20:The entry in the table is the competitive ratio between our algorithm and an optimal algorithm, and the closer the ratio is to 1 the better .
2-21:The parameter R represents a bound on the maximum to the minimum price fluctuation and the parameter Q represents a bound on the maximum to minimum volume fluctuation in the respective model .
2-22:(See Section 4 for a description of the Macroscopic Distribution Model.) All the results for the OWT trading criterion (which is a stronger criterion) directly translate to the VWAP criterion .
2-23:However, in the VWAP setting, considering a restriction on the maximum to the minimum volume fluctuation Q, leads to an additional class of results which depends on Q .
2-24:and some small companies focus exclusively on proprietary VWAP trading technology .
2-25:In this paper, we provide the first study of VWAP trading algorithms in an online, competitive ratio setting .
2-26:We first formalize the VWAP trading problem in a basic online model we call the price volume model, which can be viewed as a generalization of previous theoretical online trading models incorporating market volume information .
2-27:In this model, we provide VWAP algorithms and competitive ratios, and compare this setting with the one way trading problem studied in [3] .
2-28:Our most interesting results, however, examine the VWAP trading problem in a new online trading model capturing the important recent phenomenon of limit order books in financial markets .
2-29:Briefly, a limit buy or sell order specifies both the number of shares and the desired price, and will only be executed if there is a matching party on the opposing side, according to a well defined matching procedure used by all the major exchanges .
2-30:While limit order books (the list of limit orders awaiting possible future execution) have existed since the dawn of equity exchanges, only very recently have these books become visible to traders in real time, thus opening the way to trading algorithms of all varieties that attempt to exploit this rich market microstructure data .
2-31:Such data and algorithms are a topic of great current interest on Wall Street [4] .
2-32:We thus introduce a new online trading model incorporating limit order books, and examine both the one way and VWAP trading problems in it .
2-33:Our results are summarized in Figure 1 (see the caption for a summary). .
3 THEPRICE VOLUMETRADINGMODEL :
3-1:We now present a trading model which includes both price and volume information about the sequence of trades .
3-2:While this model is a generalization of previous formalisms for online trading, it makes an infinite liquidity assumption which fails to model the negative market impact that trading a large number of shares typically has .
3-3:This will be addressed in the order book model studied in the next section .
3-4:A note on terminology: throughout the paper (unless otherwise specified), we shall use the term market to describe all activity or orders other than those of the algorithm under consideration .
3-5:The setting we consider can be viewed as a game between our algorithm and the market .
3-6:2.1 The Model In the price volume trading model, we assume that the intraday trading activity in a given stock is summarized by a discrete sequence of price and volume pairs (pt, vt) for t = 1, .
3-7:.
3-8:.
3-9:, T .
3-10:Here t = 0 corresponds to the day"s market open, and t = T to the close .
3-11:While there is nothing technically special about the time horizon of a single day, it is particularly consistent with limit order book trading on Wall Street .
3-12:The pair (pt, vt) represents the fact that a total of vt shares were traded at an (average) price per share pt in the market between time t − 1 and t .
3-13:Realistically, we should imagine the number of intervals T being reasonably large, so that it is sensible to assign a common approximate price to all shares traded within an interval .
3-14:In the price volume model, we shall make an infinite liquidity assumption for our trading algorithms .
3-15:More precisely, in this online model, we see the price volume sequence one pair at a time .
3-16:Following the observation of (pt, vt), we are permitted to sell any (possibly fractional) number of shares nt at the price pt .
3-17:Let us assume that our goal is to sell N shares over the course of the day .
3-18:Hence, at each time, we must select a (possibly fractional) number of shares nt to sell at price pt, subject to the global constraint T t=1 nt = N .
3-19:It is thus assumed that if we have left over shares to sell after time T − 1, we are forced to sell them at the closing price of the market that is, nT = N − T −1 t=1 nt is sold at pT .
3-20:In this way we are certain to sell exactly N shares over the course of the day; the only thing an algorithm must do is determine the schedule of selling based on the incoming market price volume stream .
3-21:Any algorithm which sells fractional volumes can be converted to a randomized algorithm which only sells integral volumes with the same expected number of shares sold .
3-22:If we keep the hard constraint of selling exactly N shares, we might incur an additional slight loss in the conversion .
3-23:(Note that we only allow fractional volumes in the price volume model, where liquidity is not an issue .
3-24:In the order book model to follow, we do not allow fractional volumes.) In VWAP trading, the goal of an online algorithm A which sells exactly N shares is not to maximize profits per se, but to track the market VWAP .
3-25:The market VWAP for an intraday trading sequence S = (p1, v1), .
3-26:.
3-27:.
3-28:, (pT , vT ) is simply the average price paid per share over the course of the trading 190 day, ie VWAPM = T t=1 ptvt V where V is the total daily volume, i.e., V = T t=1 vt .
3-29:If on the sequence S, the algorithm A sells its N stocks using the volume sequence n1, .
3-30:.
3-31:.
3-32:nT , then we analogously define the VWAP of A on market sequence S by VWAPA(S) = T t=1 ptnt N .
3-33:Note that the market VWAP does not include the shares that the algorithm sells .
3-34:The VWAP competitive ratio of A with respect to a set of sequences Σ is then RVWAP(A) = max S∈Σ {VWAPM VWAPA(S)} In the case that A is randomized, we generalize the definition above by taking an expectation over VWAPA(S) inside the max .
3-35:We note that unlike on Wall Street, our definition of VWAPM does not take our own trading into account .
3-36:It is easy to see that this makes it a more challenging criterion to track .
3-37:In contrast to the VWAP, another common measure of the performance of an online selling algorithm would be its one way trading competitive ratio [3] with respect to a set of sequences Σ: ROWT(A) = max S∈Σ max 1≤t≤T {pt VWAPA(S)} where the algorithms performance is compared to the largest individual price appearing in the sequence S .
3-38:In both VWAP and OWT, we are comparing the average price per share received by a selling algorithm to some measure of market performance .
3-39:In the case of OWT, we compare to the rather ambitious benchmark of the high price of the day, ignoring volumes entirely .
3-40:In VWAP trading, we have the more modest goal of comparing favorably to the overall market average of the day .
3-41:As we shall see, there are some important commonalities and differences to these two approaches .
3-42:For now we note one simple fact: on any specific sequence S, VWAPA(S) may be larger that VWAPM .
3-43:However, RVWAP(A) cannot be smaller than 1, since on any sequence S in which all price pt are identical, it is impossible to get a better average share per price .
3-44:Thus, for all algorithms A, both RVWAP(A) and ROWT(A) are larger than 1, and the closer to 1 they are, the better A is tracking its respective performance measure .
3-45:2.2 VWAP Results in the Price Volume Model As in previous work on online trading, it is generally not possible to obtain finite bounds on competitive ratios with absolutely no assumptions on the set of sequences Σbounds on the maximum variation in price or volume are required, depending on the exact setting .
3-46:We thus introduce the following two assumptions .
3-47:2.2.0.1 Volume Variability Assumption. .
3-48:Let 0 < Vmin ≤ Vmax be known positive constants, and define Q = Vmax Vmin .
3-49:For all intraday trading sequences S ∈ Σ, the total daily volume V ∈ [Vmin , Vmax ] .
3-50:2.2.0.2 Price Variability Assumption. .
3-51:Let 0 < pmin ≤ pmax be known positive constants, and define R = pmax pmin .
3-52:For all intraday trading sequences S ∈ Σ, the prices satisfy pt ∈ [pmin, pmax], for all t = 1, .
3-53:.
3-54:.
3-55:, T .
3-56:Competitive ratios are generally taken over all sets Σ consistent with at least one of these assumptions .
3-57:To gain some intuition consider the two trivial cases of R = 1 and Q = 1 .
3-58:In the case of R = 1 (where there is no fluctuation in price), any schedule is optimal .
3-59:In the case of Q = 1 (where the total volume V over the trading period is known), we can gain a competitive ratio of 1 by selling vt V N shares after each time period .
3-60:For the OWT problem in the price volume model, volumes are irrelevant for the performance criterion, but for the VWAP criterion they are central .
3-61:For the OWT problem under the price variability assumption, the results of [3] established that the optimal competitive ratio was Θ(log(R)) .
3-62:Our first result establishes that the optimal competitive ratio for VWAP under the volume variability assumption is Θ(log(Q)) and is achieved by an algorithm that ignores the price data .
3-63:Theorem 1 .
3-64:In the price volume model under the volume variability assumption, there exists an online algorithm A for selling N shares achieving competitive ratio RVWAP(A) ≤ 2 log(Q) .
3-65:In addition, if only the volume variability (and not the price variability) assumption holds, any online algorithm A for selling N shares has RVWAP(A) = Ω(log(Q)) .
3-66:Proof .
3-67:(Sketch) For the upper bound, the idea is similar to the price reservation algorithm of [3] for the OWT problem, and similar in spirit to the general technique of classify and select [1] .
3-68:Consider algorithms which use a parameter ˆV , which is interpreted as an estimate for the total volume for the day .
3-69:Then at each time t, if the market price and volume is (pt, vt), the algorithm sells a fraction vt ˆV of its shares .
3-70:We consider a family of log(Q) such algorithms, where algorithm Ai uses ˆV = Vmin 2i−1 .
3-71:Clearly, one of the Ai has a competitive ratio of 2 .
3-72:We can derive an O(log(Q)) VWAP competitive ratio by running these algorithms in parallel, and letting each algorithm sell N log(Q) shares .
3-73:(Alternatively, we can randomly select one Ai and guarantee the same expected competitive ratio.) We now sketch the proof of the lower bound, which relates performance in the VWAP and OWT problems .
3-74:Any algorithm that is c competitive in the VWAP setting (under fixed Q) is 3c competitive in the OWT setting with R = Q 2 .
3-75:To show this, we take any sequence S of prices for the OWT problem, and convert it into a price volume sequence for the VWAP problem .
3-76:The prices in the VWAP sequence are the same as in S .
3-77:To construct the volumes in the VWAP sequence, we segment the prices in S into log(R) intervals [2i−1 pmin , 2i pmin ) .
3-78:Suppose pt ∈ [2i−1 pmin , 2i pmin ), and this is the first time in S that a price has fallen in this interval .
3-79:Then in the VWAP sequence we set the volume vt = 2i−1 .
3-80:If this is not the first visit to the interval containing pt, we set vt = 0 .
3-81:Assume that the maximum price in S is pmax .
3-82:The VWAP of our sequence is at least pmax 3 .
3-83:Since we had a c competitive algorithm, its average sell is at least pmax 3c .
3-84:The lower bound now follows using the lower bound in [3] .
3-85:An alternative approach to VWAP is to ignore the volumes in favor of prices, and apply an algorithm for the OWT problem .
3-86:Note that the lower bound in this theorem, unlike in the previous one, only assumes a price variation bound .
3-87:191 Theorem 2 .
3-88:In the price volume model under the price variability assumption, there exists an online algorithm A for selling N shares achieving competitive ratio RVWAP(A) = O(log(R)) .
3-89:In addition, if only the price variability (and not the volume variability) assumption holds, any online A for selling N shares has RVWAP(A) = Ω(log(R)) .
3-90:Proof .
3-91:(Sketch) Follows immediately from the results of [3] for OWT: the upper bound from the simple fact that for any sequence S, VWAPA(S) is less than max1≤t≤T {pt}, and the lower bound from a reduction to OWT .
3-92:Theorems 1 and 2 demonstrate that one can achieve logarithmic VWAP competitive ratios under the assumption of either bounded variability of total volume or bounded variability of maximum price .
3-93:If both assumptions hold, it is possible to give an algorithm accomplishing the minimum of log(Q) and log(R) .
3-94:This flexibility of approach derives from the fact that the VWAP is a quantity in which both prices and volumes matter, as opposed to OWT .
3-95:2.3 RelatedResultsinthePrice VolumeModel All of the VWAP algorithms we have discussed so far make some use of the daily data (pt, vt) as it unfolds, using either the price or volume information .
3-96:In contrast, a fixed schedule VWAP algorithm has a predetermined distribution {f1, f2, .
3-97:.
3-98:.
3-99:fT }, and simply sells ftN shares at time t, independent of (pt, vt) .
3-100:Fixed schedule VWAP algorithms, or slight variants of them, are surprisingly common on Wall Street, and the schedule is usually derived from historical intraday volume data .
3-101:Our next result demonstrates that such algorithms can perform considerably worse than dynamically adaptive algorithms in terms of the worst case competitive ratio .
3-102:Theorem 3 .
3-103:In the price volume model under both the volume and price variability assumptions, any fixed schedule VWAP algorithm A for selling N shares has sell VWAP competitive ratio RVWAP(A) = Ω(min(T, R)) .
3-104:The proofs of all the results in this subsection are in the Appendix .
3-105:So far our emphasis has been on VWAP algorithms that must sell exactly N shares .
3-106:In many realistic circumstances, however, there is actually some flexibility in the precise number of shares to be sold .
3-107:For instance, this is true at large brokerages, where many separate VWAP trades may be pooled and executed by a common algorithm, and the firm would be quite willing to carry a small position of unsold shares overnight if it resulted in better execution prices .
3-108:The following theorem (which interestingly has no analogue for the OWT problem) demonstrates that this trade off in shares sold and performance can be realized dramatically in our model .
3-109:It states that if we are willing to let the number of shares sold vary with Q, we can in fact achieve a VWAP competitive ratio of 1 .
3-110:Theorem 4 .
3-111:In the price volume model under the volume variability assumption, there exists an algorithm A that always sells between N and QN shares and that the average price per sold share is exactly VWAPM .
3-112:In many online problems, there is a clear distinction between benefit problems and cost problems [2] .
3-113:In the VWAP setting, selling shares is a benefit problem, and buying shares is a cost problem .
3-114:The definitions of the competitive ratios, Rbuy VWAP(A) and Rbuy OWT(A), for algorithms which Figure 2: Sample Island order books for MSFT .
3-115:buy exactly N shares are maxS∈Σ{VWAPA(S) VWAPM (S)} and maxS∈Σ maxt{VWAPA(S) pt} respectively .
3-116:Eventhough Theorem 4 also holds for buying, in general, the competitive ratio of the buy (cost) problem is much higher, as stated in the following theorem .
3-117:Theorem 5 .
3-118:In the price volume model under the volume and price variability assumptions, there exists an online algorithm A for buying N shares achieving buy VWAP competitive ratio Rbuy VWAP(A) = O(min{Q, √ R}) .
3-119:In addition any online algorithm A for buying N shares has buy VWAP competitive ratio Rbuy VWAP(A) = Ω(min{Q, √ R}). .
4 A LIMIT ORDER BOOK TRADING MODEL :
4-1:MODEL Before we can define our online trading model based on limit order books, we give some necessary background on the detailed mechanics of financial markets, which are sometimes referred to as market microstructure .
4-2:We then provide results and algorithms for both the OWT and VWAP problems .
4-3:192 3.1 Background on Limit Order Books and Market Microstructure A fundamental distinction in stock trading is that between a limit order and a market order .
4-4:Suppose we wish to purchase 1000 shares of Microsoft stock .
4-5:In a limit order, we specify not only the desired volume (1000 shares), but also the desired price .
4-6:Suppose that MSFT is currently trading at roughly $24.07 a share (see Figure 2, which shows an actual snapshot of a recent MSFT order book on Island (www.island.com), a well known electronic exchange for NASDAQ stocks), but we are only willing to buy the 1000 shares at $24.04 a share or lower .
4-7:We can choose to submit a limit order with this specification, and our order will be placed in a queue called the buy order book, which is ordered by price, with the highest offered unexecuted buy price at the top (often referred to as the bid) .
4-8:If there are multiple limit orders at the same price, they are ordered by time of arrival (with older orders higher in the book) .
4-9:In the example provided by Figure 2, our order would be placed immediately after the extant order for 5,503 shares at $24.04; though we offer the same price, this order has arrived before ours .
4-10:Similarly, a sell order book for sell limit orders (for instance, we might want to sell 500 shares of MSFT at $24.10 or higher) is maintained, this time with the lowest sell price offered (often referred to as the ask) .
4-11:Thus, the order books are sorted from the most competitive limit orders at the top (high buy prices and low sell prices) down to less competitive limit orders .
4-12:The bid and ask prices (which again, are simply the prices in the limit orders at the top of the buy and sell books, respectively) together are sometimes referred to as the inside market, and the difference between them as the spread .
4-13:By definition, the order books always consist exclusively of unexecuted orders they are queues of orders hopefully waiting for the price to move in their direction .
4-14:How then do orders get executed? There are two methods .
4-15:First, any time a market order arrives, it is immediately matched with the most competitive limit orders on the opposing book .
4-16:Thus, a market order to buy 2000 shares is matched with enough volume on the sell order book to fill the 2000 shares .
4-17:For instance, in the example of Figure 2, such an order would be filled by the two limit sell orders for 500 shares at $24.069, the 500 shares at $24.07, the 200 shares at $24.08, and then 300 of the 1981 shares at $24.09 .
4-18:The remaining 1681 shares of this last limit order would remain as the new top of the sell limit order book .
4-19:Second, if a buy (sell, respectively) limit order comes in above the ask (below the bid, respectively) price, then the order is matched with orders on the opposing books .
4-20:It is important to note that the prices of executions are the prices specified in the limit orders already in the books, not the prices of the incoming order that is immediately executed .
4-21:Every market or limit order arrives atomically and instantaneously there is a strict temporal sequence in which orders arrive, and two orders can never arrive simultaneously .
4-22:This gives rise to the definition of the last price of the exchange, which is simply the last price at which the exchange executed an order .
4-23:It is this quantity that is usually meant when people casually refer to the (ticker) price of a stock .
4-24:Note that a limit buy (sell, respectively) order with a price of infinity (0, respectively) is effectively a market order .
4-25:We shall thus assume without loss of generality that all orders are placed as limit order .
4-26:Although limit orders which are unexecuted may be removed by the party which placed them, for simplicity, we assume that limit orders are never removed from the books .
4-27:We refer the reader to [4] for further discussion of modern electronic exchanges and market microstructure .
4-28:3.2 The Model The online order book trading model is intended to capture the realistic details of market microstructure just discussed in a competitive ratio setting .
4-29:In this refined model, a day"s market activity is described by a sequence of limit orders (pt, vt, bt) .
4-30:Here bt is a bit indicating whether the order is a buy or sell order, while pt is the limit order price and vt the number of shares desired .
4-31:Following the arrival of each such limit order, an online trading algorithm is permitted to place its own limit order .
4-32:These two interleaved sources (market and algorithm) of limit orders are then simply operated on according to the matching process described in Section 3.1 .
4-33:Any limit order that is not immediately executable according to this process is placed in the appropriate (buy or sell) book for possible future execution; arriving orders that can be partially or fully executed are so executed, with any residual shares remaining on the respective book .
4-34:The goal of a VWAP or OWT selling algorithm is essentially the same as in the price volume model, but the context has changed in the following two fundamental ways .
4-35:First, the assumption of infinite liquidity in the price volume model is eliminated entirely .
4-36:The number of shares available at any given price is restricted to the total volume of limit orders offering that price .
4-37:Second, all incoming orders, and therefore the complete limit order books, are assumed to be visible to the algorithm .
4-38:This is consistent with modern electronic financial exchanges, and indeed is the source of much current interest on Wall Street [4] .
4-39:In general, the definition of competitive ratios in the order book model is complicated by the fact that now our algorithm"s activity influences the sequence of executed prices and volumes .
4-40:We thus first define the execution sequence determined by a limit order sequence (placed by the market and our algorithm) .
4-41:Let S = (p1, v1, b1), .
4-42:.
4-43:.
4-44:, (pT , vT , bT ) be a limit order sequence placed by the market, and let S = (p1, v1, b1), .
4-45:.
4-46:.
4-47:, (pT , vT , bT ) be a limit order sequence placed by our algorithm (unless otherwise specified, all bt are of the sell type) .
4-48:Let merge(S, S ) be the merged sequence (p1, v1, b1), (p1, v1, b1), .
4-49:.
4-50:.
4-51:, (pT , vT , bT ), (pT , vT , bT ), which is the time sequence of orders placed by the market and algorithm .
4-52:Note that the algorithm has the option of not placing an order, which we can view as a zero volume order .
4-53:If we conducted the order book maintenance and order execution process described in Section 3.1 on the sequence merge(S, S ), at irregular intervals a trade occurs for some number of shares and some price .
4-54:In each executed trade, the selling party is either the market or the algorithm .
4-55:Let execM (S, S ) = (q1, w1), .
4-56:.
4-57:.
4-58:, (qT , wT ) be the sequence of executions where the market (that is, a party other than the algorithm) was the selling party, where the qt are the execution prices and wt the execution volumes .
4-59:Similarly, we define execA(S, S ) = (r1, x1), .
4-60:.
4-61:.
4-62:, (rT , xT ) to be the sequence of executions in which the algorithm was the selling party .
4-63:Thus, execA(S, S ) ∪ execM (S, S ) is the set of all executions .
4-64:We generally expect T to be (possibly much) smaller than T .
4-65:The revenue of the algorithm and the market are defined 193 as: REVM (S, S ) ≡ T t=1 qtwt , REVA(S, S ) ≡ T t=1 rtxt Note that both these quantities are solely determined by the execution sequences execM (S, S ) and execA(S, S ), respectively .
4-66:For an algorithm A which is constrained to sell exactly N shares, we define the OWT competitive ratio of A, ROWT(A), as the maximum ratio (under any S ∈ Σ) of the revenue obtained by A, as compared to the revenue obtained by an optimal oﬄine algorithm A∗ .
4-67:More formally, for A∗ which is constrained to sell exactly N shares, we define ROWT(A) = max S∈Σ max A∗ REVA∗ (S S∗ ) REVA(S, S ) where S∗ is the limit order sequence placed by A∗ on S .
4-68:If the algorithm A is randomized then we take the appropriate expectation with respect to S ∼ A .
4-69:We define the VWAP competitive ratio, RVWAP(A), as the maximum ratio (under any S ∈ Σ) between the market and algorithm VWAPs .
4-70:More formally, define VWAPM (S, S ) as REVM (S, S ) T t=1 wt, where the denominator is just the total executed volume of orders placed by the market .
4-71:Similarly, we define VWAPA(S, S ) as REVA(S, S ) N, since we assume the algorithm sells no more than N shares (this definition implicitly assumes that A gets a 0 price for unsold shares) .
4-72:The VWAP competitive ratio of A is then: RVWAP(A) = max S∈Σ {VWAPM (S, S ) VWAPA(S, S )} where S is the online sequence of limit orders generated by A in response to the sequence S .
4-73:3.3 OWT Results in the Order Book Model For the OWT problem in the order book model, we introduce a more subtle version of the price variability assumption .
4-74:This is due to the fact that our algorithm"s trading can impact the high and low prices of the day .
4-75:For the assumption below, note that execM (S, ∅) is the sequence of executions without the interaction of our algorithm .
4-76:3.3.0.3 Order Book Price Variability Assumption. .
4-77:Let 0 < pmin ≤ pmax be known positive constants, and define R = pmax pmin .
4-78:For all intraday trading sequences S ∈ Σ, the prices pt in the sequence execM (S, ∅) satisfy pt ∈ [pmin, pmax], for all t = 1, .
4-79:.
4-80:.
4-81:, T .
4-82:Note that this assumption does not imply that the ratios of high to low prices under the sequences execM (S, S ) or execA(S, S ) are bounded by R .
4-83:In fact, the ratio in the sequence execA(S, S ) could be infinite if the algorithm ends up selling some stocks at a 0 price .
4-84:Theorem 6 .
4-85:In the order book model under the order book price variability assumption, there exists an online algorithm A for selling N shares achieving sell OWT competitive ratio ROWT(A) = 2 log(R) log(N) .
4-86:Proof .
4-87:The algorithm A works by guessing a price p in the set {pmin2i : 1 ≤ i ≤ log(R)} and placing a sell limit order for all N shares at the price p at the beginning of the day .
4-88:(Alternatively, algorithm A can place log(R) sell limit orders, where the i th one has price 2i pmin and volume N log(R).) By placing an order at the beginning of the day, the algorithm undercuts all sell orders that will be placed during the day for a price of p or higher, meaning the algorithm"s N shares must be filled first at this price .
4-89:Hence, if there were k shares that would have been sold at price p or higher without our activity, then A would sell at least kp shares .
4-90:We define {pj} to be the multiset of prices of individual shares that are either executed or are buy limit order shares that remained unexecuted, excluding the activity of our algorithm (that is, assuming our algorithm places no orders) .
4-91:Assume without loss of generality that p1 ≥ p2 ≥ .
4-92:.
4-93:. .
4-94:Consider guessing the kth highest such price, pk .
4-95:If an order for N shares is placed at the day"s start at price pk, then we are guaranteed to obtain a return of kpk .
4-96:Let k∗ = argmaxk{kpk} .
4-97:We can view our algorithm as attempting to guess pk∗ , and succeeding if the guess p satisfies p ∈ [pk∗ 2, pk∗ ] .
4-98:Hence, we are 2 log(R) competitive with the quantity max1≤k≤N kpk .
4-99:Note that ρ ≡ N i=1 pi = N i=1 1 i ipi ≤ max 1≤k≤N kpk N i=1 1 i ≤ log(N) max 1≤k≤N kpk where ρ is defined as the sum of the top N prices pi without A"s involvement .
4-100:Similarly, let {pj} be the multiset of prices of individual executed shares, or the prices of unexecuted buy order shares, but now including the orders placed by some selling algorithm A .
4-101:We now wish to show that for all algorithms A which sell N shares, REVA ≤ N i=1 pi ≤ ρ .
4-102:Essentially, this inequality states the intuitive idea that a selling algorithm can only lower executed or unmatched buy order share prices .
4-103:To prove this, we use induction to show that the removal of the activity of a selling algorithm causes these prices to increase .
4-104:First, remove the last share in the last sell order placed by either A or the market on an arbitrary sequence merge(S, S ) by this we mean, take the last sell order placed by A or the market and decrease its volume by one share .
4-105:After this modification, the top N prices p1 .
4-106:.
4-107:.
4-108:pN will not decrease .
4-109:This is because either this sell order share was not executed, in which case the claim is trivially true, or, if it was executed, the removal of this sell order share leaves an additional unexecuted buy order share of equal or higher price .
4-110:For induction, assume that if we remove a share from any sell order that was placed, by A or the market, at or after time t then the top N prices do not decrease .
4-111:We now show that if we remove a share from the last sell order that was placed by A or the market before time t, then the top N prices do not decrease .
4-112:If this sell order share was not executed, then the claim is trivially true .
4-113:Else, if the sell order share was executed, then claim is true because by removing this executed share from the sell order either: i) the corresponding buy order share (of equal or higher value) is unmatched on the remainder of the sequence, in which case the claim is true; or ii) this buy 194 order matches some sell order share at an equal or higher price, which has the effect of removing a share from a sell order on the remainder of the sequence, and, by the inductive assumption, this can only increase prices .
4-114:Hence, we have proven that for all A which sell N shares REVA ≤ ρ .
4-115:We have now established that our revenue satisfies 2 log(R)ES ∼A[REVA(S, S )] ≥ max 1≤k≤N {kpk} ≥ ρ log(N) ≥ max A {REVA } log(N), where A performs an arbitrary sequence of N sell limit orders .
4-116:3.4 VWAP Results in the Order Book Model The OWT algorithm from Theorem 6 can be applied to obtain the following VWAP result: Corollary 7 .
4-117:In the order book model under the order book price variability assumption, there exists an online algorithm A for selling N shares achieving sell VWAP competitive ratio RVWAP(A) = O(log(R) log(N)) .
4-118:We now make a rather different assumption on the sequences S .
4-119:3.4.0.4 Bounded Order Volume and Max Price Assumption .
4-120:The set of sequences Σ satisfies the following two properties .
4-121:First, we assume that each order placed by the market is of volume less than γ, which we view as a mild assumption since typically single orders on the market are not of high volume (due to liquidity issues) .
4-122:This assumption allows our algorithm to place at least one limit order at a time interleaved with approximately γ market executions .
4-123:Second, we assume that there is large volume in the sell order books below the price pmax , which means that no orders placed by the market will be executed above the price pmax .
4-124:The simplest way to instantiate this latter assumption in the order book model is to assume that each sequence S ∈ Σ starts by placing a huge number of sell orders (more than Vmax ) at price pmax .
4-125:Although this assumption has a maximum price parameter, it does not imply that the price ratio R is finite, since it does not imply any lower bound on the prices of buy or executed shares (aside from the trivial one of 0) .
4-126:Theorem 8 .
4-127:Consider the order book model under the bounded order volume and max price assumption .
4-128:There exists an algorithm A in which after exactly γN market executions have occurred, then A has sold at most N shares and REVA(S, S ) N = VWAPA(S, S ) ≥ (1 − )VWAPM (S, S ) − pmax N where S is a sequence of N sell limit orders generated by A when observing S .
4-129:Proof .
4-130:The algorithm divides the trading day into volume intervals whose real time duration may vary .
4-131:For each period i in which γ shares have been executed in the market, the algorithm computes the market VWAP of only those shares traded in period i; let us denote this by VWAPi .
4-132:Following this ith volume interval, the algorithm places a limit order to sell exactly one share at a price close to VWAPi .
4-133:More precisely, the algorithm only places orders at the discrete prices (1− )pmax , (1− )2 pmax , .
4-134:.
4-135:. .
4-136:Following volume interval i, the algorithm places a limit order to sell one share at the discretized price that is closest to VWAPi, but which is strictly smaller .
4-137:For the analysis, we begin by noting that if all of the algorithm"s limit orders are executed during the day, the total revenue received by the algorithm would be at least (1 − )VWAPM (S, S )N .
4-138:To see this, it suffices to note that VWAPM (S, S ) is a uniform mixture of the VWAPi (since by definition they each cover the same amount of market volume); and if all the algorithm"s limit orders were executed, they each received more than (1 − )VWAPi dollars for the interval i they followed .
4-139:We now count the potential lost revenue of the algorithm due to unexecuted limit orders .
4-140:By the assumption that individual orders are placed with volume less than γ, then our algorithm is able to place a limit order during every block of γ shares have been traded .
4-141:Hence, after γN market orders have been executed, A has placed N orders in the market .
4-142:Note that there can be at most one limit order (and thus, at most one share) left unexecuted at each level of the discretized price ladder defined above .
4-143:This is because following interval i, the algorithm places its limit order strictly below VWAPi, so if VWAPj ≥ VWAPi for j > i, this limit order must have been executed .
4-144:Thus unexecuted limit orders bound the VWAPs of the remainder of the day, resulting in at most one unexecuted order per price level .
4-145:A bound on the lost revenue is thus the sum of the discretized prices: ∞ i=1(1 − )i pmax ≤ pmax .
4-146:Clearly our algorithm has sold at most N shares .
4-147:Note that as N becomes large, VWAPA approaches 1 − times the market VWAP .
4-148:If we knew that the final total volume of the market executions is V , then we can set γ = V N, assuming that γ >> 1 .
4-149:If we have only an upper and lower bound on V we should be able to guess and incur a logarithmic loss .
4-150:The following assumption tries to capture the market volume variability .
4-151:3.4.0.5 Order Book Volume Variability Assumption .
4-152:We now assume that the total volume (which includes the shares executed by both our algorithm and the market) is variable within some known region and that the market volume will be greater than our algorithms volume .
4-153:More formally, for all S ∈ Σ, assume that the total volume V of shares traded in execM (S, S ), for any sequence S of N sell limit orders, satisfies 2N ≤ Vmin ≤ V ≤ Vmax .
4-154:Let Q = Vmax Vmin .
4-155:The following corollary is derived using a constant = 1 2 and observing that if we set γ such that V ≤ γN ≤ 2V then our algorithm will place between N and N 2 limit orders .
4-156:Corollary 9 .
4-157:In the order book model, if the bounded order volume and max price assumption, and the order book volume variability assumption hold, there exists an online algorithm A for selling at most N shares such that VWAPA(S, S ) ≥ 1 4 log(Q) VWAPM (S, S ) − 2pmax N 195 0 2 4 6 8 x 10 7 0 20 40 60 80 100 QQQ: log(Q)=4.71, E=3.77 0 2 4 6 8 10 x 10 6 0 20 40 60 80 JNPR: log(Q)=5.66, E=3.97 0 0.5 1 1.5 2 x 10 6 0 10 20 30 40 50 60 70 MCHP: log(Q)=5.28, E=3.86 0 2 4 6 8 10 x 10 6 0 50 100 150 200 250 CHKP: log(Q)=6.56, E=4.50 Figure 3: Here we present bounds from Section 4 based on the empirical volume distributions for four real stocks: QQQ, MCHP, JNPR, and CHKP .
4-158:The plots show histograms for the total daily volumes transacted on Island for these stocks, in the last year and a half, along with the corresponding values of log(Q) and E(Pbins vol ) (denoted by "E") .
4-159:We assume that the minimum and maximum daily volumes in the data correspond to Vmin and Vmax , respectively .
4-160:The worst case competitive ratio bounds (which are twice log(Q)) of our algorithm for those stocks are 9.42, 10.56, 11.32, and 13.20, respectively .
4-161:The corresponding bounds on the competitive ratio performance of our algorithm under the volume distribution model (which are twice E(Pbins vol )) are better: 7.54, 7.72, 7.94, and 9.00, respectively (a 20−40% relative improvement) .
4-162:Using a finer volume binning along with a slightly more refined bound on the competitive ratio, we can construct algorithms that, using the empirical volume distribution given as correct, guarantee even better competitive ratios of 2.76, 2.73, 2.75, and 3.17, respectively for those stocks (details omitted). .
5-1:MODELS We conclude our results with a return to the price volume model, where we shall introduce some refined methods of analysis for online trading algorithms
5-2:We leave the generalization of these methods to the order book model for future work
5-3:The competitive ratios defined so far measure performance relative to some baseline criterion in the worst case over all market sequences S ∈ Σ
5-4:It has been observed in many online settings that such worst case metrics can yield pessimistic results, and various relaxations have been considered, such as permitting a probability distribution over the input sequence
5-5:We now consider distributional models that are considerably weaker than assuming a distribution over complete market sequences S ∈ Σ
5-6:In the volume distribution model, we assume only that there exists a distribution Pvol over the total volume V traded in the market for the day, and then examine the worst case competitive ratio over sequences consistent with the randomly chosen volume
5-7:More precisely, we define RVWAP(A, Pvol ) = EV ∼Pvol max S∈seq(V ) VWAPM (S) VWAPA(S)
5-8:Here V ∼ Pvol denotes that V is chosen with respect to distribution Pvol , and seq(V ) ⊂ Σ is the set of all market sequences (p1, v1),
5-9:
5-10:
5-11:, (pT , vT ) satisfying T t=1 vt = V
5-12:Similarly, for OWT, we can define ROWT(A, Pmaxprice ) = Ep∼Pmaxprice max S∈seq(p) p VWAPA(S)
5-13:Here Pmaxprice is a distribution over just the maximum price of the day, and we then examine worst case sequences consistent with this price (seq(p) ⊂ Σ is the set of all market sequences satisfying max1≤t≤T pt = p)
5-14:Analogous buy side definitions can be given
5-15:We emphasize that in these models, only the distribution of maximum volume and price is known to the algorithm
5-16:We also note that our probabilistic assumptions on S are considerably weaker than typical statistical finance models, which would posit a detailed stochastic model for the step by step evolution of (pt, vt)
5-17:Here we instead permit only a distribution over crude, macroscopic measures of the entire day"s market activity, such as the total volume and high price, and analyze the worst case performance consistent with these crude measures
5-18:For this reason, we refer to such settings as the macroscopic distribution model
5-19:The work of El Yaniv et al
5-20:[3] examines distributional assumptions similar to ours, but they emphasize the worst196 case choices for the distributions as well, and show that this leads to results no better than the original worst case analysis over all sequences
5-21:In contrast, we feel that the analysis of specific distributions Pvol and Pmaxprice is natural in many financial contexts and our preliminary experimental results show significant improvements when this rather crude distributional information is taken into account (see Figure 3)
5-22:Our results in the VWAP setting examine the cases where these distributions are known exactly or only approximately
5-23:Similar results can be obtained for macroscopic distributions of maximum daily price for the one way trading setting
5-24:4.1 Results in the Macroscopic Distribution Model We begin by noting that the algorithms examined so far work by binning total volumes or maximum prices into bins of exponentially increasing size, and then guessing the index of the bin in which the actual quantity falls
5-25:It is thus natural that the macroscopic distribution model performance of such algorithms (which are common in competitive analysis) might depend on the distribution of the true bin index
5-26:In the remaining, we assume that Q is a power of 2 and the base of the logarithm is 2
5-27:Let Pvol denote the distribution of total daily market volume
5-28:We define the related distribution Pbins vol over bin indices i as follows: for all i = 1,
5-29:
5-30:
5-31:, log(Q) − 1, Pbins vol (i) is equal to the probability, under Pvol , that the daily volume falls in the interval [Vmin 2i−1 , Vmin 2i ), and Pbins vol (log(Q)) is for the last interval [Vmax  2, Vmax ]
5-32:We define E as E(Pbins vol ) ≡ Ei∼P bins vol 1 Pbins vol (i) 2 =   log(Q) i=1 Pbins vol (i)   2
5-33:Since the support of Pbins vol has only log(Q) elements, E(Pbins vol ) can vary from 1 (for distributions Pvol that place all of their weight in only one of the log(Q) intervals between Vmin , Vmin 2, Vmin 4,
5-34:
5-35:
5-36:, Vmax ) to log(Q) (for distributions Pvol in which the total daily volume is equally likely to fall in any one of these intervals)
5-37:Note that distributions Pvol of this latter type are far from uniform over the entire range [Vmin , Vmax ]
5-38:Theorem 10
5-39:In the volume distribution model under the volume variability assumption, there exists an online algorithm A for selling N shares that, using only knowledge of the total volume distribution Pvol , achieves RVWAP(A, Pvol ) ≤ 2E(Pbins vol )
5-40:All proofs in this section are provided in the appendix
5-41:As a concrete example, consider the case in which Pvol is the uniform distribution over [Vmin , Vmax ]
5-42:In that case, Pbins vol is exponentially increasing and peaks at the last bin, which, having the largest width, also has the largest weight
5-43:In this case E(Pbins vol ) is a constant (i.e., independent of Q), leading to a constant competitive ratio
5-44:On the other hand, if Pvol is exponential, then Pbins vol is uniform, leading to an O(log(Q)) competitive ratio, just as in the more adversarial price volume setting discussed earlier
5-45:In Figure 3, we provide additional specific bounds obtained for empirical total daily volume distributions computed for some real stocks
5-46:We now examine the setting in which Pvol is unknown, but an approximation ˜Pvol is available
5-47:Let us define C(Pbins vol , ˜Pbins vol ) = log(Q) j=1 ˜Pbins vol (j) log(Q) i=1 P bins vol (i) √ ˜P bins vol (i)
5-48:C is minimized at C(Pbins vol , Pbins vol ) = E(Pbins vol ), and C may be infinite if ˜Pbins vol (i) is 0 when Pbins vol (i) > 0
5-49:Theorem 11
5-50:In the volume distribution model under the volume variability assumption, there exists an online algorithm A for selling N shares that using only knowledge of an approximation ˜Pvol of Pvol achieves RVWAP(A, Pvol ) ≤ 2C(Pbins vol , ˜Pbins vol )
5-51:As an example of this result, suppose our approximation obeys (1 α)Pbins vol (i) ≤ ˜Pbins vol (i) ≤ αPbins vol (i) for all i, for some α > 1
5-52:Thus our estimated bin index probabilities are all within a factor of α of the truth
5-53:Then it is easy to show that C(Pbins vol , ˜Pbins vol ) ≤ αE(Pbins vol ), so according to Theorems 10 and 11 our penalty for using the approximate distribution is a factor of α in competitive ratio
5-54:6.1 Proofs from Subsection 2.3 Proof
5-55:(Sketch of Theorem 3) W.l.o.g., assume that Q = 1 and the total volume is V
5-56:Consider the time t where the fixed schedule f sells the least, then ft ≤ N T
5-57:Consider the sequences where at time t we have pt = pmax , vt = V , and for times t = t we have pt = pmin and vt = 0
5-58:The VWAP is pmax and the fixed schedule average is (N T)pmax + (N − N T)pmin
5-59:Proof
5-60:(Sketch of Theorem 4) The algorithm simply sells ut = (vt Vmin )N shares at time t
5-61:The total number of shares sold U is clearly more than N and U = t ut = t (vt Vmin )N = (V Vmin )N ≤ QN The average price is V WAPA(S) = ( t ptut) U = t pt(vt V ) = V WAPM (S), where we used the fact that ut U = vt V
5-62:197 Proof
5-63:(of Theorem 5) We start with the proof of the lower bound
5-64:Consider the following scenario
5-65:For the first T time units we have a price of √ Rpmin , and a total volume of Vmin
5-66:We observe how many shares the online algorithm has bought
5-67:If it has bought more than half of the shares, the remaining time steps have price pmin and volume Vmax − Vmin
5-68:Otherwise, the remaining time steps have price pmax and negligible volume
5-69:In the first case the online has paid at least √ Rpmin  2 while the VWAP is at most √ Rpmin  Q + pmin
5-70:Therefore, in this case the competitive ratio is Ω(Q)
5-71:In the second case the online has to buy at least half of the shares at pmax , so its average cost is at least pmax  2
5-72:The market VWAP is√ Rpmin = pmax   √ R, hence the competitive ratio is Ω( √ R)
5-73:For the upper bound, we can get a √ R competitive ratio, by buying all the shares once the price drops below √ Rpmin
5-74:The Q upper bound is derive by running an algorithm that assumes the volume is Vmin
5-75:The online pays a cost of p, while the VWAP will be at least p Q
5-76:6.2 Proofs from Section 4 Proof
5-77:(Sketch of Theorem 10) We use the idea of guessing the total volume from Theorem 1, but now allow for the possibility of an arbitrary (but known) distribution over the total volume
5-78:In particular, consider constructing a distribution Gbins vol over a set of volume values using Pvol and use it to guess the total volume V
5-79:Let the algorithm guess ˆV = Vmin 2i with probability Gbins vol (i)
5-80:Then note that, for any price volume sequence S, if V ∈ [Vmin 2i−1 , Vmin 2i ], VWAPA(S) ≥ Gbins vol (i)VWAPM (S) 2
5-81:This implies an upper bound on RVWAP(A, Pvol ) in terms of Gbins vol
5-82:We then get that Gbins vol (i) ∝ Pbins vol (i) minimizes the upper bound, which leads to the upper bound stated in the theorem
5-83:Proof
5-84:(Sketch of Theorem 11) Replace Pvol with ˜Pvol in the expression for Gbins vol in the proof sketch for the last result
5-85:198
6-1:B
6-2:Awerbuch, Y
6-3:Bartal, A
6-4:Fiat, and A
6-5:Ros´en
6-6:Competitive non preemptive call control
6-7:In Proc
6-8:5"th ACM SIAM Symp
6-9:on Discrete Algorithms, pages 312 320, 1994
6-10:A
6-11:Borodin and R
6-12:El Yaniv
6-13:Online Computation and Competitive Analysis
6-14:Cambridge University Press, 1998
6-15:R
6-16:El Yaniv, A
6-17:Fiat, R
6-18:M
6-19:Karp, and G
6-20:Turpin
6-21:Optimal search and one way trading online algorithms
6-22:Algorithmica, 30:101 139, 2001
6-23:M
6-24:Kearns and L
6-25:Ortiz
6-26:The Penn Lehman automated trading project
6-27:IEEE Intelligent Systems, 2003
6-28:To appear
picture:
