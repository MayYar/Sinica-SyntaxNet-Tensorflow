Composition of a DIDS by Integrating Heterogeneous IDSs 
content:
1 ABSTRACT :
1-1:This paper considers the composition of a DIDS (Distributed Intrusion Detection System) by integrating heterogeneous IDSs (Intrusion Detection Systems) .
1-2:A Grid middleware is used for this integration .
1-3:In addition, an architecture for this integration is proposed and validated through simulation. .
2 INTRODUCTION :
2-1:C.2.4 [Distributed Systes]: Client Server, Distributed Solutions for integrating heterogeneous IDSs (Intrusion Detection Systems) have been proposed by several groups [6],[7],[11],[2] .
2-2:Some reasons for integrating IDSs are described by the IDWG (Intrusion Detection Working Group) from the IETF (Internet Engineering Task Force) [12] as follows: • Many IDSs available in the market have strong and weak points, which generally make necessary the deployment of more than one IDS to provided an adequate solution .
2-3:• Attacks and intrusions generally originate from multiple networks spanning several administrative domains; these domains usually utilize different IDSs .
2-4:The integration of IDSs is then needed to correlate information from multiple networks to allow the identification of distributed attacks and or intrusions .
2-5:• The interoperability integration of different IDS components would benefit the research on intrusion detection and speed up the deployment of IDSs as commercial products .
2-6:DIDSs (Distributed Intrusion Detection Systems) therefore started to emerge in early 90s [9] to allow the correlation of intrusion information from multiple hosts, networks or domains to detect distributed attacks .
2-7:Research on DIDSs has then received much interest, mainly because centralised IDSs are not able to provide the information needed to prevent such attacks [13] .
2-8:However, the realization of a DIDS requires a high degree of coordination .
2-9:Computational Grids are appealing as they enable the development of distributed application and coordination in a distributed environment .
2-10:Grid computing aims to enable coordinate resource sharing in dynamic groups of individuals and or organizations .
2-11:Moreover, Grid middleware provides means for secure access, management and allocation of remote resources; resource information services; and protocols and mechanisms for transfer of data [4] .
2-12:According to Foster et al .
2-13:[4], Grids can be viewed as a set of aggregate services defined by the resources that they share .
2-14:OGSA (Open Grid Service Architecture) provides the foundation for this service orientation in computational Grids .
2-15:The services in OGSA are specified through well defined, open, extensible and platformindependent interfaces, which enable the development of interoperable applications .
2-16:This article proposes a model for integration of IDSs by using computational Grids .
2-17:The proposed model enables heterogeneous IDSs to work in a cooperative way; this integration is termed DIDSoG (Distributed Intrusion Detection System on Grid) .
2-18:Each of the integrated IDSs is viewed by others as a resource accessed through the services that it exposes .
2-19:A Grid middleware provides several features for the realization of a DIDSoG, including [3]: decentralized coordination of resources; use of standard protocols and interfaces; and the delivery of optimized QoS (Quality of Service) .
2-20:The service oriented architecture followed by Grids allows the definition of interfaces that are adaptable to different platforms .
2-21:Different implementations can be encapsulated by a service interface; this virtualisation allows the consistent access to resources in heterogeneous environments [3] .
2-22:The virtualisation of the environment through service interfaces allows the use of services without the knowledge of how they are actually implemented .
2-23:This characteristic is important for the integration of IDSs as the same service interfaces can be exposed by different IDSs .
2-24:Grid middleware can thus be used to implement a great variety of services .
2-25:Some functions provided by Grid middleware are [3]: (i) data management services, including access services, replication, and localisation; (ii) workflow services that implement coordinate execution of multiple applications on multiple resources; (iii) auditing services that perform the detection of frauds or intrusions; (iv) monitoring services which implement the discovery of sensors in a distributed environment and generate alerts under determined conditions; (v) services for identification of problems in a distributed environment, which implement the correlation of information from disparate and distributed logs .
2-26:These services are important for the implementation of a DIDSoG .
2-27:A DIDS needs services for the location of and access to distributed data from different IDSs .
2-28:Auditing and monitoring services take care of the proper needs of the DIDSs such as: secure storage, data analysis to detect intrusions, discovery of distributed sensors, and sending of alerts .
2-29:The correlation of distributed logs is also relevant because the detection of distributed attacks depends on the correlation of the alert information generated by the different IDSs that compose the DIDSoG .
2-30:The next sections of this article are organized as follows .
2-31:Section 2 presents related work .
2-32:The proposed model is presented in Section 3 .
2-33:Section 4 describes the development and a case study .
2-34:Results and discussion are presented in Section 5 .
2-35:Conclusions and future work are discussed in Section 6. .
3 RELATED WORK :
3-1:DIDMA [5] is a flexible, scalable, reliable, and platformindependent DIDS .
3-2:DIDMA architecture allows distributed analysis of events and can be easily extended by developing new agents .
3-3:However, the integration with existing IDSs and the development of security components are presented as future work [5] .
3-4:The extensibility of DIDS DIDMA and the integration with other IDSs are goals pursued by DIDSoG .
3-5:The flexibility, scalability, platform independence, reliability and security components discussed in [5] are achieved in DIDSoG by using a Grid platform .
3-6:More efficient techniques for analysis of great amounts of data in wide scale networks based on clustering and applicable to DIDSs are presented in [13] .
3-7:The integration of heterogeneous IDSs to increase the variety of intrusion detection techniques in the environment is mentioned as future work [13] DIDSoG thus aims at integrating heterogeneous IDSs [13] .
3-8:Ref .
3-9:[10] presents a hierarchical architecture for a DIDS; information is collected, aggregated, correlated and analysed as it is sent up in the hierarchy .
3-10:The architecture comprises of several components for: monitoring, correlation, intrusion detection by statistics, detection by signatures and answers .
3-11:Components in the same level of the hierarchy cooperate with one another .
3-12:The integration proposed by DIDSoG also follows a hierarchical architecture .
3-13:Each IDS integrated to the DIDSoG offers functionalities at a given level of the hierarchy and requests functionalities from IDSs from another level .
3-14:The hierarchy presented in [10] integrates homogeneous IDSs whereas the hierarchical architecture of DIDSoG integrates heterogeneous IDSs .
3-15:There are proposals on integrating computational Grids and IDSs [6],[7],[11],[2] .
3-16:Ref .
3-17:[6] and [7] propose the use of Globus Toolkit for intrusion detection, especially for DoS (Denial of Service) and DDoS (Distributed Denial of Service) attacks; Globus is used due to the need to process great amounts of data to detect these kinds of attack .
3-18:A two phase processing architecture is presented .
3-19:The first phase aims at the detection of momentary attacks, while the second phase is concerned with chronic or perennial attacks .
3-20:Traditional IDSs or DIDSs are generally coordinated by a central point; a characteristic that leaves them prone to attacks .
3-21:Leu et al .
3-22:[6] point out that IDSs developed upon Grids platforms are less vulnerable to attacks because of the distribution provided for such platforms .
3-23:Leu et al .
3-24:[6],[7] have used tools to generate several types of attacks including TCP, ICMP and UDP flooding and have demonstrated through experimental results the advantages of applying computational Grids to IDSs .
3-25:This work proposes the development of a DIDS upon a Grid platform .
3-26:However, the resulting DIDS integrates heterogeneous IDSs whereas the DIDSs upon Grids presented by Leu et al .
3-27:[6][7] do not consider the integration of heterogeneous IDSs .
3-28:The processing in phases [6][7] is also contemplated by DIDSoG, which is enabled by the specification of several levels of processing allowed by the integration of heterogeneous IDSs .
3-29:The DIDS GIDA (Grid Intrusion Detection Architecture) targets at the detection of intrusions in a Grid environment [11] .
3-30:GridSim Grid simulator was used for the validation of DIDS GIDA .
3-31:Homogeneous resources were used to simplify the development [11] .
3-32:However, the possibility of applying heterogeneous detection systems is left for future work Another DIDS for Grids is presented by Choon and Samsudim [2] .
3-33:Scenarios demonstrating how a DIDS can execute on a Grid environment are presented .
3-34:DIDSoG does not aim at detecting intrusions in a Grid environment .
3-35:In contrast, DIDSoG uses the Grid to compose a DIDS by integrating specific IDSs; the resulting DIDS could however be used to identify attacks in a Grid environment .
3-36:Local and distributed attacks can be detected through the integration of traditional IDSs while attacks particular to Grids can be detected through the integration of Grid IDSs. .
4 THE PROPOSED MODEL :
4-1:DIDSoG presents a hierarchy of intrusion detection services; this hierarchy is organized through a two dimensional vector defined by Scope:Complexity .
4-2:The IDSs composing DIDSoG can be organized in different levels of scope or complexity, depending on its functionalities, the topology of the target environment and expected results .
4-3:Figure 1 presents a DIDSoG composed by different intrusion detection services (i.e .
4-4:data gathering, data aggregation, data correlation, analysis, intrusion response and management) provided by different IDSs .
4-5:The information flow and the relationship between the levels of scope and complexity are presented in this figure .
4-6:Information about the environment (host, network or application) is collected by Sensors located both in user 1"s and user 2"s computers in domain 1 .
4-7:The information is sent to both simple Analysers that act on the information from a single host (level 1:1), and to aggregation and correlation services that act on information from multiple hosts from the same domain (level 2:1) .
4-8:Simple Analysers in the first scope level send the information to more complex Analysers in the next levels of complexity (level 1: N) .
4-9:When an Analyser detects an intrusion, it communicates with Countermeasure and Monitoring services registered to its scope .
4-10:An Analyser can invoke a Countermeasure service that replies to a detected attack, or informs a Monitoring service about the ongoing attack, so the administrator can act accordingly .
4-11:Aggregation and correlation resources in the second scope receive information from Sensors from different users" computers (user 1"s and user 2"s) in the domain 1 .
4-12:These resources process the received information and send it to the analysis resources registered to the first level of complexity in the second scope (level 2:1) .
4-13:The information is also sent to the aggregation and correlation resources registered in the first level of complexity in the next scope (level 3:1) .
4-14:User 1 Domain 1 Analysers Level 1:1 Local Sensors Analysers Level 1:N Aggreg .
4-15:Correlation Level 2:1 User 2 Domain 1 Local Sensors Analysers Level 2:1 Analysers Level 2:N Aggreg .
4-16:Correlation Level 3:1 Domain 2 Monitor Level 1 Monitor Level 2 Analysers Level 3:1 Analysers Level 3:N Monitor Level 3 Response Level 1 Response Level 2 Response Level 3 Fig .
4-17:1 .
4-18:How DIDSoG works .
4-19:The analysis resources in the second scope act like the analysis resources in the first scope, directing the information to a more complex analysis resource and putting the Countermeasure and Monitoring resources in action in case of detected attacks .
4-20:Aggregation and correlation resources in the third scope receive information from domains 1 and 2 .
4-21:These resources then carry out the aggregation and correlation of the information from different domains and send it to the analysis resources in the first level of complexity in the third scope (level 3:1) .
4-22:The information could also be sent to the aggregate service in the next scope in case of any resources registered to such level .
4-23:The analysis resources in the third scope act similar to the analysis resources in the first and second scopes, except that the analysis resources in the third scope act on information from multiple domains .
4-24:The functionalities of the registered resources in each of the scopes and complexity level can vary from one environment to another .
4-25:The model allows the development of N levels of scope and complexity .
4-26:Figure 2 presents the architecture of a resource participating in the DIDSoG .
4-27:Initially, the resource registers itself to GIS (Grid Information Service) so other participating resources can query the services provided .
4-28:After registering itself, the resource requests information about other intrusion detection resources registered to the GIS .
4-29:A given resource of DIDSoG interacts with other resources, by receiving data from the Source Resources, processing it, and sending the results to the Destination Resources, therefore forming a grid of intrusion detection resources .
4-30:Grid Resource BaseNative IDS Grid Origin Resources Grid Destination Resources Grid Information Service Descri ptor Connec tor Fig .
4-31:2 .
4-32:Architecture of a resource participating of the DIDSoG .
4-33:A resource is made up of four components: Base, Connector, Descriptor and Native IDS .
4-34:Native IDS corresponds to the IDS being integrated to the DIDSoG .
4-35:This component process the data received from the Origin Resources and generates new data to be sent to the Destination Resources .
4-36:A Native IDS component can be any tool processes information related to intrusion detection, including analysis, data gathering, data aggregation, data correlation, intrusion response or management .
4-37:The Descriptor is responsible for the information that identifies a resource and its respective Destination Resources in the DIDSoG .
4-38:Figure 3 presents the class diagram of the stored information by the Descriptor .
4-39:The ResourceDescriptor class has Feature, Level, DataType and Target Resources type members .
4-40:Feature class represents the functionalities that a resource has .
4-41:Type, name and version attributes refer to the functions offered by the Native IDS component, its name and version, respectively .
4-42:Level class identifies the level of target and complexity in which the resource acts .
4-43:DataType class represents the data format that the resource accepts to receive .
4-44:DataType class is specialized by classes Text, XML and Binary .
4-45:Class XML contains the DTDFile attribute to specify the DTD file that validates the received XML .
4-46:ident version description ResourceDescriptor featureType name version Feature 1 1 type version DataType escope complex Level 1 1 Text Binary DTDFile XML 1 1 TargetResources 1 1 10..* featureType Resource11 1 1 Fig .
4-47:3 .
4-48:Class Diagram of the Descriptor component .
4-49:TargetResources class represents the features of the Destination Resources of a determined resource .
4-50:This class aggregates Resource .
4-51:The Resource class identifies the characteristics of a Destination Resource .
4-52:This identification is made through the featureType attribute and the Level and DataType classes .
4-53:A given resource analyses the information from Descriptors from other resources, and compares this information with the information specified in TargetResources to know to which resources to send the results of its processing .
4-54:The Base component is responsible for the communication of a resource with other resources of the DIDSoG and with the Grid Information Service .
4-55:It is this component that registers the resource and the queries other resources in the GIS .
4-56:The Connector component is the link between Base and Native IDS .
4-57:The information that Base receives from Origin Resources is passed to Connector component .
4-58:The Connector component performs the necessary changes in the data so that it is understood by Native IDS, and sends this data to Native IDS for processing .
4-59:The Connector component also has the responsibility of collecting the information processed by Native IDS, and making the necessary changes so the information can pass through the DIDSoG again .
4-60:After these changes, Connector sends the information to the Base, which in turn sends it to the Destination Resources in accordance with the specifications of the Descriptor component. .
5 IMPLEMENTATION :
5-1:We have used GridSim Toolkit 3 [1] for development and evaluation of the proposed model .
5-2:We have used and extended GridSim features to model and simulate the resources and components of DIDSoG .
5-3:Figure 4 presents the Class diagram of the simulated DIDSoG .
5-4:The Simulation_DIDSoG class starts the simulation components .
5-5:The Simulation_User class represents a user of DIDSoG .
5-6:This class" function is to initiate the processing of a resource Sensor, from where the gathered information will be sent to other resources .
5-7:DIDSoG_GIS keeps a registry of the DIDSoG resources.The DIDSoG_BaseResource class implements the Base component (see Figure 2) .
5-8:DIDSoG_BaseResource interacts with DIDSoG_Descriptor class, which represents the Descriptor component .
5-9:The DIDSoG_Descriptor class is created from an XML file that specifies a resource descriptor (see Figure 3) .
5-10:DIDSoG_BaseResource DIDSoG_Descriptor 11 DIDSoG_GIS Simulation_User Simulation_DIDSoG 1 *1* 1 1 GridInformationService GridSim GridResource Fig .
5-11:4 .
5-12:Class Diagram of the simulatated DIDSoG .
5-13:A Connector component must be developed for each Native IDS integrated to DIDSoG .
5-14:The Connector component is implemented by creating a class derived from DIDSoG_BaseResource .
5-15:The new class will implement new functionalities in accordance with the needs of the corresponding Native IDS .
5-16:In the simulation environment, data collection resources, analysis, aggregation correlation and generation of answers were integrated .
5-17:Classes were developed to simulate the processing of each Native IDS components associated to the resources .
5-18:For each simulated Native IDS a class derived from DIDSoG_BaseResource was developed .
5-19:This class corresponds to the Connector component of the Native IDS and aims at the integrating the IDS to DIDSoG .
5-20:A XML file describing each of the integrated resources is chosen by using the Connector component .
5-21:The resulting relationship between the resources integrated to the DIDSoG, in accordance with the specification of its respective descriptors, is presented in Figure 5 .
5-22:The Sensor_1 and Sensor_2 resources generate simulated data in the TCPDump [8] format .
5-23:The generated data is directed to Analyser_1 and Aggreg_Corr_1 resources, in the case of Sensor_1, and to Aggreg_Corr_1 in the case of Sensor_2, according to the specification of their descriptors .
5-24:User_1 Analyser_ 1 Level 1:1 Sensor_1 Aggreg_ Corr_1 Level 2:1 User_2 Sensor_2 Analyser_2 Level 2:1 Analyser_3 Level 2:2 TCPDump TCPDump TCPDumpAg TCPDumpAg IDMEF IDMEF IDMEF TCPDump Countermeasure_1 Level 1 Countermeasure_2 Level 2 Fig .
5-25:5 .
5-26:Flow of the execution of the simulation .
5-27:The Native IDS of Analyser_1 generates alerts for any attempt of connection to port 23 .
5-28:The data received from Analyser_1 had presented such features, generating an IDMEF (Intrusion Detection Message Exchange Format) alert [14] .
5-29:The generated alert was sent to Countermeasure_1 resource, where a warning was dispatched to the administrator informing him of the alert received .
5-30:The Aggreg_Corr_1 resource received the information generated by sensors 1 and 2 .
5-31:Its processing activities consist in correlating the source IP addresses with the received data .
5-32:The resultant information of the processing of Aggreg_Corr_1 was directed to the Analyser_2 resource .
5-33:The Native IDS component of the Analyser_2 generates alerts when a source tries to connect to the same port number of multiple destinations .
5-34:This situation is identified by the Analyser_2 in the data received from Aggreg_Corr_1 and an alert in IDMEF format is then sent to the Countermeasures_2 resource .
5-35:In addition to generating alerts in IDMEF format, Analyser_2 also directs the received data to the Analyser_3, in the level of complexity 2 .
5-36:The Native IDS component of Analyser_3 generates alerts when the transmission of ICMP messages from a given source to multiple destinations is detected .
5-37:This situation is detected in the data received from Analyser_2, and an IDMEF alert is then sent to the Countermeasure_2 resource .
5-38:The Countermeasure_2 resource receives the alerts generated by analysers 3 and 2, in accordance with the implementation of its Native IDS component .
5-39:Warnings on alerts received are dispatched to the administrator .
5-40:The simulation carried out demonstrates how DIDSoG works .
5-41:Simulated data was generated to be the input for a grid of intrusion detection systems composed by several distinct resources .
5-42:The resources carry out tasks such as data collection, aggregation and analysis, and generation of alerts and warnings in an integrated manner. .
6 EXPERIMENT RESULTS :
6-1:The hierarchic organization of scope and complexity provides a high degree of flexibility to the model .
6-2:The DIDSoG can be modelled in accordance with the needs of each environment .
6-3:The descriptors define data flow desired for the resulting DIDS .
6-4:Each Native IDS is integrated to the DIDSoG through a Connector component .
6-5:The Connector component is also flexible in the DIDSoG .
6-6:Adaptations, conversions of data types and auxiliary processes that Native IDSs need are provided by the Connector .
6-7:Filters and generation of Specific logs for each Native IDS or environment can also be incorporated to the Connector .
6-8:If the integration of a new IDS to an environment already configured is desired, it is enough to develop the Connector for the desired IDS and to specify the resource Descriptor .
6-9:After the specification of the Connector and the Descriptor the new IDS is integrated to the DIDSoG .
6-10:Through the definition of scopes, resources can act on data of different source groups .
6-11:For example, scope 1 can be related to a given set of hosts, scope 2 to another set of hosts, while scope 3 can be related to hosts from scopes 1 and 2 .
6-12:Scopes can be defined according to the needs of each environment .
6-13:The complexity levels allow the distribution of the processing between several resources inside the same scope .
6-14:In an analysis task, for example, the search for simple attacks can be made by resources of complexity 1, whereas the search for more complex attacks, that demands more time, can be performed by resources of complexity 2 .
6-15:With this, the analysis of the data is made by two resources .
6-16:The distinction between complexity levels can also be organized in order to integrate different techniques of intrusion detection .
6-17:The complexity level 1 could be defined for analyses based on signatures, which are simpler techniques; the complexity level 2 for techniques based on behaviour, that require greater computational power; and the complexity level 3 for intrusion detection in applications, where the techniques are more specific and depend on more data .
6-18:The division of scopes and the complexity levels make the processing of the data to be carried out in phases .
6-19:No resource has full knowledge about the complete data processing flow .
6-20:Each resource only knows the results of its processing and the destination to which it sends the results .
6-21:Resources of higher complexity must be linked to resources of lower complexity .
6-22:Therefore, the hierarchic structure of the DIDSoG is maintained, facilitating its extension and integration with other domains of intrusion detection .
6-23:By carrying out a hierarchic relationship between the several chosen analysers for an environment, the sensor resource is not overloaded with the task to send the data to all the analysers .
6-24:An initial analyser will exist (complexity level 1) to which the sensor will send its data, and this analyser will then direct the data to the next step of the processing flow .
6-25:Another feature of the hierarchical organization is the easy extension and integration with other domains .
6-26:If it is necessary to add a new host (sensor) to the DIDSoG, it is enough to plug it to the first hierarchy of resources .
6-27:If it is necessary to add a new analyser, it will be in the scope of several domains, it is enough to relate it to another resource of same scope .
6-28:The DIDSoG allows different levels to be managed by different entities .
6-29:For example, the first scope can be managed by the local user of a host .
6-30:The second scope, comprising several hosts of a domain can be managed by the administrator of the domain .
6-31:A third entity can be responsible for managing the security of several domains in a joint way .
6-32:This entity can act in the scope 3 independently from others .
6-33:With the proposed model for integration of IDSs in Grids, the different IDSs of an environment (or multiple IDSs integrated) act in a cooperative manner improving the intrusion detection services, mainly in two aspects .
6-34:First, the information from multiple sources are analysed in an integrated way to search for distributed attacks .
6-35:This integration can be made under several scopes .
6-36:Second, there is a great diversity of data aggregation techniques, data correlation and analysis, and intrusion response that can be applied to the same environment; these techniques can be organized under several levels of complexity. .
7-1:The integration of heterogeneous IDSs is important
7-2:However, the incompatibility and diversity of IDS solutions make such integration extremely difficult
7-3:This work thus proposed a model for composition of DIDS by integrating existing IDSs on a computational Grid platform (DIDSoG)
7-4:IDSs in DIDSoG are encapsulated as Grid services for intrusion detection
7-5:A computational Grid platform is used for the integration by providing the basic requirements for communication, localization, resource sharing and security mechanisms
7-6:The components of the architecture of the DIDSoG were developed and evaluated using the GridSim Grid simulator
7-7:Services for communication and localization were used to carry out the integration between components of different resources
7-8:Based on the components of the architecture, several resources were modelled forming a grid of intrusion detection
7-9:The simulation demonstrated the usefulness of the proposed model
7-10:Data from the sensor resources was read and this data was used to feed other resources of DIDSoG
7-11:The integration of distinct IDSs could be observed through the simulated environment
7-12:Resources providing different intrusion detection services were integrated (e.g
7-13:analysis, correlation, aggregation and alert)
7-14:The communication and localization services provided by GridSim were used to integrate components of different resources
7-15:Various resources were modelled following the architecture components forming a grid of intrusion detection
7-16:The components of DIDSoG architecture have served as base for the integration of the resources presented in the simulation
7-17:During the simulation, the different IDSs cooperated with one another in a distributed manner; however, in a coordinated way with an integrated view of the events, having, thus, the capability to detect distributed attacks
7-18:This capability demonstrates that the IDSs integrated have resulted in a DIDS
7-19:Related work presents cooperation between components of a specific DIDS
7-20:Some work focus on either the development of DIDSs on computational Grids or the application of IDSs to computational Grids
7-21:However, none deals with the integration of heterogeneous IDSs
7-22:In contrast, the proposed model developed and simulated in this work, can shed some light into the question of integration of heterogeneous IDSs
7-23:DIDSoG presents new research opportunities that we would like to pursue, including: deployment of the model in a more realistic environment such as a Grid; incorporation of new security services; parallel analysis of data by Native IDSs in multiple hosts
7-24:In addition to the integration of IDSs enabled by a grid middleware, the cooperation of heterogeneous IDSs can be viewed as an economic problem
7-25:IDSs from different organizations or administrative domains need incentives for joining a grid of intrusion detection services and for collaborating with other IDSs
7-26:The development of distributed strategy proof mechanisms for integration of IDSs is a challenge that we would like to tackle.
8-1:Sulistio, A.; Poduvaly, G.; Buyya, R; and Tham, CK, Constructing A Grid Simulation with Differentiated Network Service Using GridSim, Proc
8-2:of the 6th International Conference on Internet Computing (ICOMP'05), June 27 30, 2005, Las Vegas, USA
8-3:Choon, O
8-4:T.; Samsudim, A
8-5:Grid based Intrusion Detection System
8-6:The 9th IEEE Asia Pacific Conference Communications, September 2003
8-7:Foster, I.; Kesselman, C.; Tuecke, S
8-8:The Physiology of the Grid: An Open Grid Service Architecture for Distributed System Integration
8-9:Draft June 2002
8-10:Available at http:  www.globus.org research papers ogsa.pdf
8-11:Access Feb
8-12:2006
8-13:Foster, Ian; Kesselman, Carl; Tuecke, Steven
8-14:The anatomy of the Grid: enabling scalable virtual organizations
8-15:International Journal of Supercomputer Applications, 2001
8-16:Kannadiga, P.; Zulkernine, M
8-17:DIDMA: A Distributed Intrusion Detection System Using Mobile Agents
8-18:Proceedings of the IEEE Sixth International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel Distributed Computing, May 2005
8-19:Leu, Fang Yie, et al
8-20:Integrating Grid with Intrusion Detection
8-21:Proceedings of 19th IEEE AINA"05, March 2005
8-22:Leu, Fang Yie, et al
8-23:A Performance Based Grid Intrusion Detection System
8-24:Proceedings of the 29th IEEE COMPSAC"05, July 2005
8-25:McCanne, S.; Leres, C.; Jacobson, V.; TCPdump Libpcap, http:  www.tcpdump.org , 1994
8-26:Snapp, S
8-27:R
8-28:et al
8-29:DIDS (Distributed Intrusion Detection System)  Motivation, Architecture and An Early Prototype
8-30:Proceeding of the Fifteenth IEEE National Computer Security Conference
8-31:Baltimore, MD, October 1992
8-32:Sterne, D.; et al
8-33:A General Cooperative Intrusion Detection Architecture for MANETs
8-34:Proceedings of the Third IEEE IWIA"05, March 2005
8-35:Tolba, M
8-36:F
8-37:; et al
8-38:GIDA: Toward Enabling Grid Intrusion Detection Systems
8-39:5th IEEE International Symposium on Cluster Computing and the Grid, May 2005
8-40:Wood, M
8-41:Intrusion Detection message exchange requirements
8-42:Draft ietf idwg requirements 10, October 2002
8-43:Available at http:  www.ietf.org internet drafts draftietf idwg requirements 10.txt
8-44:Access March 2006
8-45:Zhang, Yu Fang; Xiong, Z.; Wang, X
8-46:Distributed Intrusion Detection Based on Clustering
8-47:Proceedings of IEEE International Conference Machine Learning and Cybernetics, August 2005
8-48:Curry, D.; Debar, H
8-49:Intrusion Detection Message exchange format data model and Extensible Markup Language (XML) Document Type Definition
8-50:Draft ietf idwg idmef xml 10, March 2006
8-51:Available at http:  www.ietf.org internetdrafts draft ietf idwg idmef xml 16.txt
picture:
